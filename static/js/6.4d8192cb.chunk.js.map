{"version":3,"sources":["../node_modules/redux-logger/node_modules/deep-diff/index.es.js","Components/Home/ItemsGrid.js","Components/Common/LoadingMain.js","Components/Home/LeaguesList.js","Components/Home/Match.js","Components/Home/Matches.js","Components/Home/League.js","Components/Casino/SingleGame.js","Components/Home/Bhome/Bhome.js","Components/Home/index.js","Components/Casino/index.js","Components/P-casino/Banner.js","Components/P-casino/Categories.js","Components/P-casino/Games.js","Components/P-casino/GameList.js","Components/P-casino/index.js","Components/Inplay/Locations.js","Components/Inplay/Match.js","Components/Inplay/Matches.js","Components/Inplay/ExtraOddsModal.js","Components/Inplay/SportsLive.js","Components/Today/Sports.js","Components/Today/Locations.js","Components/Today/Match.js","Components/Today/Matches.js","Components/Today/Events.js","Components/Today/SportsLivePage.js","Components/Today/index.js","Components/Inplay/Events.js","Components/Inplay/index.js","Components/Shared/SearchBar.js","Components/Inplay/Search.js","Components/Prematch/Search.js","Components/Results/Sports.js","Components/Results/Match.js","Components/Results/Matches.js","Components/Results/Events.js","Components/Results/Locations.js","Components/Results/index.js","Components/Results/Search.js","Components/Today/Search.js","store/actions/tomorrowActions/lsports.tomorrow.general.actions.js","store/actions/tomorrowActions/lsports.tomorrow.location.actions.js","../node_modules/date-fns/esm/startOfTomorrow/index.js","store/actions/tomorrowActions/lsports.tomorrow.sport.actions.js","dynamo/tomorrowsParam/getAllSportFixture.js","dynamo/tomorrowsParam/getTomorrowEventsParams.js","store/actions/tomorrowActions/lsports.tomorrow.search.actions.js","Components/Tomorrow/Sports.js","Components/Tomorrow/Locations.js","Components/Tomorrow/Match.js","Components/Tomorrow/Matches.js","Components/Tomorrow/Events.js","store/actions/tomorrowActions/lsports.tomorrow.league.actions.js","Components/Tomorrow/index.js","Components/Tomorrow/Search.js","Components/Favorites/Match.js","Components/Favorites/Matches.js","Components/Favorites/index.js","Components/Ggslot/Categories.js","Components/Ggslot/GameList.js","Components/Ggslot/index.js","Components/Jackpot/index.js","Components/Casino/LobbyCasino.js","Routes/mobileRoutes.js"],"names":["$scope","conflict","conflictResolution","inherits","ctor","superCtor","super_","prototype","Object","create","constructor","value","enumerable","writable","configurable","Diff","kind","path","defineProperty","this","length","DiffEdit","origin","call","DiffNew","DiffDeleted","DiffArray","index","item","arrayRemove","arr","from","to","rest","slice","push","apply","realTypeOf","subject","type","Math","Array","isArray","toString","test","deepDiff","lhs","rhs","changes","prefilter","key","stack","currentPath","normalize","alt","ltype","rtype","ldefined","hasOwnProperty","rdefined","filter","x","i","undefined","akeys","keys","pkeys","forEach","k","other","indexOf","isNaN","accumulateDiff","accum","diff","applyChange","target","source","change","it","last","applyArrayChange","u","global","window","DeepDiff","defineProperties","observableDiff","applyDiff","revertChange","revertArrayChange","isConflict","noConflict","ItemsGrid","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","showLogin","Util","isLoggedIn","setState","history","redirectLink","hideLogin","state","userData","_createClass","_this2","_this$props","isLastMinuteActive","favorites","favoritesLiveMatches","favoritesClass","concat","_toConsumableArray","casinoClass","is_live_casino_enabled","is_casino_enabled","Link","Translate","React","createElement","className","src","sports","live","today","is_pcasino_enabled","onClick","pCasino","is_gg_slot_casino_enabled","casino","is_ezugi_casino_enabled","ezugiCasino","evoCasino","results","login","Login","Component","connect","user","data","language","general","isShowCasino","dispatch","getFavorites","loading","customStyle","leagues","home","selectedLeague","selectHomeActiveLeague","leagueId","removeHomeActiveLeague","getHomeActiveLeagueEventsMobile","leagues_list","homePageLeagues","map","league","league_id","leagueName","league_name_en","isSelected","totalSegments","setActiveLeague","LoadingMain","mainSelectedMarket","statsData","event","Name","sortedMarkets","market","mainMarketEvent","find","m","Id","values","sortedMarketsLength","has_live_statistics","has_prematch_statistics","fixture_id","Favorite","fixture","MatchDateTime","showDate","Grid","container","Participants","participants","ExtraMarkets","extraMarketsNumber","e","count","setExtraMarkets","selectExtraMarket","openMarketsModal","toastr","info","openExtraOddsModal","MainMarket","sportEventInterval","events","openStatisticsModal","lastLeagueId","drawMatches","groupInfo","divider","LeagueHeader","showStripe","remove","Match","League","getEventMarkets","startIndex","nextIndex","partialAllEvents","getMarketData","showExtraOddsModal","setCurrentEvent","closeExtraOddsModal","showStatisticsModal","setStatistics","closeStatisticsModal","clearStatistics","fetchMoreData","hasNextPage","setInterval","mainEvents","intervalTime","prevProps","_this3","extraMarketEvent","fetchedAll","clearHomeActiveLeagueEvents","clearInterval","_this4","_this$state","selectMainMarket","noEvents","groupedEvents","sport_id","groupBy","matches","group","sportId","groupLeagueId","groupSportId","marketSelector","MainMarketSelector","mainMarket","MARKET_FOR_OUTER_SLIDER_PREMATCH","groupMatches","Matches","drawContent","InfiniteScroll","dataLength","next","hasMore","loader","LoadingIcon","theme","scrollThreshold","ExtraOddsModal","closeModal","Loading","statisticsType","lsportsGlobal","marketId","getHomeActiveLeagueEvents","setHomeResetPage","fixtureId","statsType","statsTemplateType","marketName","heartBeatTimout","Bhome","arguments","id","role","href","data-id","title","Home","setHomeActive","setHomeLeaguesActive","isHomeLeagueActive","isHomeActive","homeClass","lastMinCountObj","location","pathname","isLastMinAvailable","lastMinuteSports","lastMinute","setHomeLeagues","getTodaySports","selectSportMobile","selectPreSport","getLastMinuteSports","checkLastMin","getStatsData","Casino","getLobbyURL","getUser","setCasinoLobby","Fragment","Button","variant","casinoLobbyURL","Lobby","SingleGame","postHeartBeat","clearTimeout","currentGameData","game_url","GAME_URL","game","hash","api_id","exiturl","allowFullScreen","withRouter","Banner","timer","Categories","showSearchBar","activeCategoryLive","isSearchOpen","setLiveSearchStarted","setLiveCasinoActiveCategory","hideSearchBar","searchVal","searchPCasino","changeCategory","category","handleSearch","setTimeout","getpCasinoGames","clearLiveCasinoGames","liveCasinoCategories","categories","activeClass","autoFocus","placeholder","searchHere","onChange","Games","games","playGame","rows","list","list_1","list_2","singleGame","LazyBackgroundImage","image","imgURL","fallbackImage","propTypes","PropTypes","array","func","number","GameList","getpCasinoGameData","showLoginForm","sessionStorage","getItem","setItem","reload","liveCasinoGames","filteredLiveCasinoGames","loadingLiveCasinoGames","liveCasinoGamesList","noSearchResults","groupedByCategory","Vendor","groupedByCategoryAndCompany","gamesGroup","gameList","company","groupClassname","rowsNumber","gamesList","LoaderLiveCasino","LiveCasino","todayLocations","locations","selectTodayLocation","locationId","selectLocation","_useState","useState","_useState2","_slicedToArray","showSearch","setShowSearch","handleClick","preventDefault","currentTarget","locationsObj","currentSelectedLeague","fromLivePage","lang","toLowerCase","isAllActive","Locations","l","_objectSpread","name","name_en","uniqBy","isInternationalPresent","locationsList","locationName","contains","internationalLocationIds","country","substring","resetSelectedLocations","all","inplay","memo","_event$sport","_event$Livescore","_event$Livescore2","liveStreamAvailable","setLiveStreamAvailable","_useState3","_useState4","setStreamingURL","_useState5","_useState6","setStreamUrlData","liveStreamData","useEffect","selectedEvents","matchId","iframe","isLive","fixture_status","lSportsConfig","statuses","Markets","sport","MARKET_FOR_OUTER_SLIDER","mixedMainMarket","MarketsCount","status_type","statistics","Livescore","cards","football","getRedCards","xs","isFirstHalf","match_status","isInplay","MatchResult","livescore","areBetsAllSettled","checkBets","Bets","hybridMarketHelperArray","removeLeague","openLiveStreamModal","orderBy","extraMarkets","toggleLiveStream","showLiveStream","openStatistics","closeStatistics","marketsUpdated","liveStreamGameId","getExtraMarketName","extraMarketNames","getExtraMarkets","liveMatch","pp","_this$props2","isEqual","clearExtraMarkets","_this$props3","extraSelectedMarket","prematch","Scoreboard","Results","currentDate","start_date","convertToLocalTimezone","timeString","matchInfo","Value","drawEventHeader","currentlySelectedMarket","extraMarketEventsList","checkSettledBets","drawMarkets","markets","Dialog","onClose","aria-labelledby","open","scroll","DialogTitle","disableTypography","ExtraMarketSelector","IconButton","aria-label","DialogContent","extraMarketsLoading","statisticsEventId","eventId","SportsLive","handleSearchToggle","handleChange","selectSport","resetSelectMainMarket","grtTranslatedName","basketball","iceHockey","tennis","volleyball","boxing","americanFootball","baseball","hockey","badminton","cricket","futsal","golf","handball","rugbyLeagues","tableTennis","_find","selectedSport","Count","isDisable","sportList","sportName","icon","disabledClass","type_sport","Sports","_len","args","_key","currentSelectedSport","getTodaySportsMobile","clearSportEvents","noSport","sportCountObj","SportsList","staticPrematchSports","sportsObj","searchPath","sort","dontFetch","setTodaySports","selectedLocation","searchStarted","locationsLoading","getSportEvents","getTodayLocations","Date","endOfToday","Events","search","searchValue","setLocationLoading","_this2$props","getFormattedDate","splice","currentSelectedMarket","clearLocations","searchTodayEvents","filteredTodayEvents","filteredMainEvents","assign","setTodayResetPage","val","setTodaySportsMobile","dontClearMainEvents","Today","SportsLivePage","noSports","_regeneratorRuntime","t","r","n","o","Symbol","a","iterator","c","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","liveMatchSub","marketSubscription","liveEventsCount","liveMarketCount","liveScoreCount","unsubscribe","timerAddDel","websocket","liveMatchSubAppSync","liveMatches","liveEvents","liveMarkets","livescores","liveMatchesCheck","sportsCount","getDataFromDB","websocketConnectionAttempts","liveMatchSubConnectionAttempts","startTimer","getLiveMatchCount","checkLiveMatches","getLiveMatches","nextToken","dynamoClient","scan","getAllLiveMatches","err","console","log","Items","setSportsAndLocations","LastEvaluatedKey","liveMatchesObj","getAllLiveFixtureDevents","_asyncToGenerator","_callee","_loop","_context2","counter","objSize","totalCount","segments","j","fixtureIds","promise_1","_fixtureIds","_promise_","_context","ceil","element","batchGet","getLiveCount","promise","res","LiveMarkets","Responses","t0","t1","sportsCountObj","getLiveMatchesMarkets","clear","partialEvents","isEmpty","getSingleMatchMarkets","getSingleLiveMatchMarket","_ref2","_callee2","isLiveScore","totalLiveScore","_this$state2","finalMatches","_context3","query","getSingleMarketOfEvent","JSON","parse","match_id","newMrkt","_defineProperty","isLoading","runningFetch","startListener","_x","_x2","_x3","_x4","close","WebSocket","process","REACT_APP_WEBSOCKET_CHANNEL","addEventListener","handleFirebaseUpdates","error","warn","isDisconnected","maxWebsocketRetryCount","disbleSportsSwitch","startListenerAppSync","unsub","API","graphql","graphqlOperation","onUpdateLiveDeventMarkets","subscribe","handleConnectionChange","navigator","onLine","webPing","fetch","mode","fetchLiveStreamMatches","_callee3","_context4","jwtService","getLiveStreamData","response","status","handleRepeatedLogin","_this$state3","match","getSingleMatchPartialEvent","_ref4","_callee4","_this$state4","_context5","getSingleLivePartialEvent","_e$Items$0$location_i","participant_one_full","participant_two_full","location_id","_x5","sortedSports","_this$state5","sportAndLocationData","locationAndSportsObj","_i","_Object$values","getSortedLocations","elem","sortLogic","sortingOrder","locationSortingOrder","preSortedList","_loop2","b","compareStrings","groupMatchesByStatus","fixedData","matchesByStatus","Fixture","Status","FixtureId","subscribeExtraMarket","handleExtraMarketUpdates","unsubscribeEvents","subscribeExtraMarketAppSync","onUpdateMatchMarkets","marketDifference","prevMarkets","oldMarket","mar","updatedBetsWithDiff","bet","Price","betId","oldBet","oldPriceStr","price","parseFloat","_ref5","updatedMatch","onUpdateLiveMarkets","newFixture","outcomes","_updatedMatch","_event$market","updatedMarket","marketFormatter","marketValue","currBets","newBet","sport_event_status","marketWithDiff2","_ref6","_marketId","split","liveMarketOnMain","oldMatches","marketWithDiff","_oldMarket$Bets","temp","liveScore","newLiveMatches","_ref7","_callee5","_this$state7","_currentSelectedSport2","_context6","getLiveMatchMarkets","mktItems","mrktData","_this$state6","_x6","_x7","streamURL","liveStreamUrl","closeLiveStreamModal","groupBySport","sportWiseMatch","renderMarketAndMatches","elems","todayMatches","fixturesLoaded","marketsLoaded","showToday","prevState","_this$state8","liveMatchesArray","removeEventListener","_this$state9","filteredLiveMatches","liveMatchesFilteredBySports","_e$sport","Number","parseInt","_o$participants$","_o$participants$2","searchParam","includes","groupedLiveEvents","groupedTodayEvents","noLoading","totalEventCount","lastIndex","getInplayLocations","setInplayResetPage","selectTodaySport","setCurrentEventCount","setTotalEventCount","resetLiveMatches","payload","Inplay","SearchBar","handleChanged","parentPath","Search","clearSearch","setSearchStarted","clearLeagueEvents","searchEvents","setLocationsActive","setResultsActive","_event$sport_event_st","_event$sport_event_st2","home_score","away_score","periodWidth","periods","period_scores","period_score","drawPeriods","getSportPeriods","dateString","dateTime","getSportCards","score","clearLocationEvents","isLocationLoading","getResultsLocationEvents","setResultsResetPage","setResultsLocationEvents","locationLength","fixtures_count","getResultsLocations","resultTotalSegments","getResultsLocationsCountMobile","isLocationsActive","isResultsActive","getResultsLocationsCount","setTomorrowResetPage","Actions","getTomorrowLocations","getState","lSportsService","setTomorrowLocations","message","setTomorrowSelectedLocations","tomorrow","locationEvent","eventCount","marketsArray","defaultMkt","defaultMktObj","mkt","paramsMarketData","_data$Items$","allData","reduce","ac","idx","mktData","setTomorrowLocationEvents","startOfTomorrow","now","year","getFullYear","month","getMonth","day","getDate","date","setFullYear","setHours","sportEventCount","setTomorrowSports","sportObj","dateRange","toISOString","endOfTomorrow","sportIds","TableName","ProjectionExpression","FilterExpression","ExclusiveStartKey","ExpressionAttributeValues","getAllSportsEventsCount","_sportEventCount","fetchMore","sportGrp","_sportGrp$sport","page","currentPage","ExpressionAttributeNames","getTomorrowEventsParams","_Items$","market_count","setSportEvents","locationArr","sortedLocations","action","token","params","setTomorrowSearchLoadMore","selectedLocations","tomorrowSearchEvents","selected_locations","selectedLocationsList","setTomorrowSearch","searchTomorrowEvents","filteredTomorrowEvents","_res$Items$","Tomorrow","_event$league","unsubscribeSingleEvents","selectedEvent","fixtureStatus","fixMarketForLive","Market","Statistics","removeFavorite","event_id","unSub","Favorites","subscribeEvents","subscribeEventsAppSync","_ref","_market","openExtraOddsModalLiveMatch","showLiveExtraOddsModal","_ref3","_updatedMatch2","liveStatus","showNonLiveExtraOddsModal","showStatisticsModalForLive","showStatisticsModalForNonLive","nonLiveMatches","liveStreamFixtureId","preFav","loadingFavorites","favoritesList","liveFavoritesList","liveMatchesLength","nonLiveMatchesLength","items","LiveExtraOddsModal","liveMatchURL","drawFavorites","activeCategory","setCasinoActiveCategory","searchCasino","getGGCasinoGames","clearCasinoGames","style","marginTop","casinoCategories","getSlotGameData","allCasinoGames","casinoGamesList","CASINO_PER_PAGE","showAm","showNovo","showWazda","showNetent","showBomba","showAristocratt","showEgt","showRacing","casinoGames","filteredCasinoGames","loadingCasinoGames","amaticGames","novomaticGames","wazdaGames","netentGames","bombaGames","aristocratGames","egtGames","racingGames","novomaticClass","theGame","wazdaClass","amaticClass","netentClass","bombaClass","aristocratClass","egtClass","data-role","data-collapsed","showCategory","aria-hidden","padding","document","body","classList","setLoadingSlot","initGgSlotUser","Jackpot","stars","amount","jack","lobbyName","MobileRoutes","isMobileOnly","Auth","Switch","PublicRoute","exact","component","PrivateRoute","headerClass","PCasino","LobbyCasino","FullLayoutRoute","CasinoGame","MyAccount","MyBets","Betslip","Transactions","InplaySearch","Prematch","PrematchSearch","ResultsSearch","Upcoming","UpcomingSearch","TomorrowSearch","TermsAndCondition","Ggslot","DefaultRoute"],"mappings":"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","file":"static/js/6.4d8192cb.chunk.js","sourcesContent":["'use strict';\nvar $scope, conflict, conflictResolution = [];\nif (typeof global === 'object' && global) {\n  $scope = global;\n} else if (typeof window !== 'undefined') {\n  $scope = window;\n} else {\n  $scope = {};\n}\nconflict = $scope.DeepDiff;\nif (conflict) {\n  conflictResolution.push(\n    function() {\n      if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n        $scope.DeepDiff = conflict;\n        conflict = undefined;\n      }\n    });\n}\n\n// nodejs compatible on server side and in the browser.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nfunction Diff(kind, path) {\n  Object.defineProperty(this, 'kind', {\n    value: kind,\n    enumerable: true\n  });\n  if (path && path.length) {\n    Object.defineProperty(this, 'path', {\n      value: path,\n      enumerable: true\n    });\n  }\n}\n\nfunction DiffEdit(path, origin, value) {\n  DiffEdit.super_.call(this, 'E', path);\n  Object.defineProperty(this, 'lhs', {\n    value: origin,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffEdit, Diff);\n\nfunction DiffNew(path, value) {\n  DiffNew.super_.call(this, 'N', path);\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffNew, Diff);\n\nfunction DiffDeleted(path, value) {\n  DiffDeleted.super_.call(this, 'D', path);\n  Object.defineProperty(this, 'lhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffDeleted, Diff);\n\nfunction DiffArray(path, index, item) {\n  DiffArray.super_.call(this, 'A', path);\n  Object.defineProperty(this, 'index', {\n    value: index,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'item', {\n    value: item,\n    enumerable: true\n  });\n}\ninherits(DiffArray, Diff);\n\nfunction arrayRemove(arr, from, to) {\n  var rest = arr.slice((to || from) + 1 || arr.length);\n  arr.length = from < 0 ? arr.length + from : from;\n  arr.push.apply(arr, rest);\n  return arr;\n}\n\nfunction realTypeOf(subject) {\n  var type = typeof subject;\n  if (type !== 'object') {\n    return type;\n  }\n\n  if (subject === Math) {\n    return 'math';\n  } else if (subject === null) {\n    return 'null';\n  } else if (Array.isArray(subject)) {\n    return 'array';\n  } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n    return 'date';\n  } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n    return 'regexp';\n  }\n  return 'object';\n}\n\nfunction deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n  path = path || [];\n  stack = stack || [];\n  var currentPath = path.slice(0);\n  if (typeof key !== 'undefined') {\n    if (prefilter) {\n      if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) {\n        return; } else if (typeof(prefilter) === 'object') {\n        if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n          return; }\n        if (prefilter.normalize) {\n          var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n          if (alt) {\n            lhs = alt[0];\n            rhs = alt[1];\n          }\n        }\n      }\n    }\n    currentPath.push(key);\n  }\n\n  // Use string comparison for regexes\n  if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n    lhs = lhs.toString();\n    rhs = rhs.toString();\n  }\n\n  var ltype = typeof lhs;\n  var rtype = typeof rhs;\n\n  var ldefined = ltype !== 'undefined' || (stack && stack[stack.length - 1].lhs && stack[stack.length - 1].lhs.hasOwnProperty(key));\n  var rdefined = rtype !== 'undefined' || (stack && stack[stack.length - 1].rhs && stack[stack.length - 1].rhs.hasOwnProperty(key));\n\n  if (!ldefined && rdefined) {\n    changes(new DiffNew(currentPath, rhs));\n  } else if (!rdefined && ldefined) {\n    changes(new DiffDeleted(currentPath, lhs));\n  } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n    if (!stack.filter(function(x) {\n        return x.lhs === lhs; }).length) {\n      stack.push({ lhs: lhs, rhs: rhs });\n      if (Array.isArray(lhs)) {\n        var i, len = lhs.length;\n        for (i = 0; i < lhs.length; i++) {\n          if (i >= rhs.length) {\n            changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n          } else {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n          }\n        }\n        while (i < rhs.length) {\n          changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n        }\n      } else {\n        var akeys = Object.keys(lhs);\n        var pkeys = Object.keys(rhs);\n        akeys.forEach(function(k, i) {\n          var other = pkeys.indexOf(k);\n          if (other >= 0) {\n            deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n            pkeys = arrayRemove(pkeys, other);\n          } else {\n            deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n          }\n        });\n        pkeys.forEach(function(k) {\n          deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n        });\n      }\n      stack.length = stack.length - 1;\n    } else if (lhs !== rhs) {\n      // lhs is contains a cycle at this element and it differs from rhs\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  } else if (lhs !== rhs) {\n    if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  }\n}\n\nfunction accumulateDiff(lhs, rhs, prefilter, accum) {\n  accum = accum || [];\n  deepDiff(lhs, rhs,\n    function(diff) {\n      if (diff) {\n        accum.push(diff);\n      }\n    },\n    prefilter);\n  return (accum.length) ? accum : undefined;\n}\n\nfunction applyArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  } else {\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr = arrayRemove(arr, index);\n        break;\n      case 'E':\n      case 'N':\n        arr[index] = change.rhs;\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction applyChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i = -1,\n      last = change.path ? change.path.length - 1 : 0;\n    while (++i < last) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  }\n}\n\nfunction revertArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    // the structure of the object at the index has changed...\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        delete it[change.path[i]];\n        break;\n    }\n  } else {\n    // the array item is different...\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr[index] = change.lhs;\n        break;\n      case 'E':\n        arr[index] = change.lhs;\n        break;\n      case 'N':\n        arr = arrayRemove(arr, index);\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction revertChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i, u;\n    u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        // Array was modified...\n        // it will be an array...\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        // Item was deleted...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        // Item was edited...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        // Item is new...\n        delete it[change.path[i]];\n        break;\n    }\n  }\n}\n\nfunction applyDiff(target, source, filter) {\n  if (target && source) {\n    var onChange = function(change) {\n      if (!filter || filter(target, source, change)) {\n        applyChange(target, source, change);\n      }\n    };\n    deepDiff(target, source, onChange);\n  }\n}\n\nObject.defineProperties(accumulateDiff, {\n\n  diff: {\n    value: accumulateDiff,\n    enumerable: true\n  },\n  observableDiff: {\n    value: deepDiff,\n    enumerable: true\n  },\n  applyDiff: {\n    value: applyDiff,\n    enumerable: true\n  },\n  applyChange: {\n    value: applyChange,\n    enumerable: true\n  },\n  revertChange: {\n    value: revertChange,\n    enumerable: true\n  },\n  isConflict: {\n    value: function() {\n      return 'undefined' !== typeof conflict;\n    },\n    enumerable: true\n  },\n  noConflict: {\n    value: function() {\n      if (conflictResolution) {\n        conflictResolution.forEach(function(it) {\n          it();\n        });\n        conflictResolution = null;\n      }\n      return accumulateDiff;\n    },\n    enumerable: true\n  }\n});\n\nexport default accumulateDiff;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from '../../localization';\r\nimport { Link } from 'react-router-dom';\r\nimport Login from '../Login';\r\nimport { getFavorites } from '../../store/actions/favorites.actions';\r\nimport Util from '../../helper/Util';\r\n\r\nclass ItemsGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n\r\n            redirectLink: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.isLoggedIn()) {\r\n            // this.props.getFavorites();\r\n        }\r\n    }\r\n    showLogin = (path) => {\r\n        if (Util.isLoggedIn()) {\r\n            this.setState({ showLogin: false });\r\n            this.props.history.push(path);\r\n        } else {\r\n            this.setState({ showLogin: true, redirectLink: path });\r\n        }\r\n    };\r\n\r\n    hideLogin = () => {\r\n        if (Util.isLoggedIn()) {\r\n            this.setState({ showLogin: false });\r\n            this.props.history.push(this.state.redirectLink);\r\n        } else {\r\n            this.setState({ showLogin: false });\r\n        }\r\n    };\r\n\r\n    // showLoginForm = (e) => {\r\n    //     this.setState({ showLogin: true });\r\n    // };\r\n\r\n    // hideLogin = () => {\r\n    //     this.setState({ showLogin: false });\r\n    // };\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    render() {\r\n        let { isLastMinuteActive, userData, favorites, favoritesLiveMatches } = this.props;\r\n        favorites = [...favorites, ...favoritesLiveMatches];\r\n        let favoritesClass = favorites.length > 0 ? 'text-yellow' : '';\r\n        let liveCasinoClass = '';\r\n        let casinoClass = '';\r\n\r\n        if (userData) {\r\n            liveCasinoClass = userData.is_live_casino_enabled ? '' : 'disabled';\r\n            casinoClass = userData.is_casino_enabled ? '' : 'disabled';\r\n        }\r\n\r\n        let favoritesList = this.isLoggedIn() ? (\r\n            <Link to=\"/favorites\" className=\"square ripple\">\r\n                <div className=\"square__content\">\r\n                    <i className={`icon-color icon-favorites lh-0 ${favoritesClass}`}></i>\r\n                    <div className=\"square__text\">{Translate.favorites}</div>\r\n                </div>\r\n            </Link>\r\n        ) : (\r\n            <div className=\"square ripple disabled\">\r\n                <div className=\"square__content\">\r\n                    <i className=\"icon-color icon-favorites lh-0\"></i>\r\n                    <div className=\"square__text\">{Translate.favorites}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"box-list-height\">\r\n                {/*<div className=\"jackpot-home-img-div\">*/}\r\n                {/*    <a href=\"/jackpot\">*/}\r\n                {/*        <img src=\"/images/jackpot_img.png\" className=\"jackpot-home-img\"/>*/}\r\n                {/*    </a>*/}\r\n                {/*</div>*/}\r\n                {/* <div className=\"sports-heading\">\r\n                    <h3>\r\n                        Sports\r\n                    </h3>\r\n                </div> */}\r\n\r\n                <div className=\"box-list clearfix\">\r\n                    <Link to=\"/sports\" className=\"square ripple\">\r\n                        <div className=\"square__content\">\r\n                            {/* <i className=\"icon-color icon-football lh-0\"></i> */}\r\n                            <img src=\"images/sportsf.svg\" />\r\n                            <div className=\"square__text\">{Translate.sports}</div>\r\n                        </div>\r\n                        {/* <div>\r\n                            <i className=\"right-icon right-arrow\"></i>\r\n                        </div> */}\r\n                    </Link>\r\n\r\n                    <Link to=\"/live\" className=\"square ripple\">\r\n                        <div className=\"square__content\">\r\n                            {/* <i className=\"icon-color icon-today lh-0\"></i> */}\r\n                            <img src=\"images/liveF.svg\" />\r\n                            <div className=\"square__text live-text\">{Translate.live}</div>\r\n                        </div>\r\n                        {/* <div>\r\n                            <i className=\"right-icon right-arrow\"></i>\r\n                        </div> */}\r\n                    </Link>\r\n\r\n                    <Link to=\"/upcoming\" className=\"square ripple\">\r\n                        <div className=\"square__content\">\r\n                            {/* <i className=\"icon-color icon-today lh-0\"></i> */}\r\n                            <img src=\"images/todayf.svg\" />\r\n                            <div className=\"square__text\">{Translate.today}</div>\r\n                        </div>\r\n                        {/* <div>\r\n                            <i className=\"right-icon right-arrow\"></i>\r\n                        </div> */}\r\n                    </Link>\r\n\r\n                    {/* {favoritesList} */}\r\n                    {/* <div>\r\n                        <i className=\"right-icon right-arrow padding-r\"></i>\r\n                    </div*/}\r\n\r\n                    {userData && userData.is_pcasino_enabled && (\r\n                        <a onClick={() => this.showLogin('/p-casino')} className={` square ripple`}>\r\n                            <div className=\"square__content\">\r\n                                <img src=\"images/live-casino-img.svg\" />\r\n                                <div className=\"square__text\">{Translate.pCasino}</div>\r\n                            </div>\r\n                        </a>\r\n                    )}\r\n\r\n                    {userData && userData.is_gg_slot_casino_enabled && (\r\n                        <a onClick={() => this.showLogin('/ggslot')} className={`${casinoClass} square ripple`}>\r\n                            <div className=\"square__content\">\r\n                                {/* <i className=\"icon-color icon-score lh-0\"></i> */}\r\n                                <img src=\"images/pragmaticf.png\" />\r\n                                <div className=\"square__text\">{Translate.casino}</div>\r\n                            </div>\r\n                        </a>\r\n                    )}\r\n\r\n                    {/* {this.props.isShowCasino &&<a onClick={ ()=>this.showLogin('/live-casino')}  className={`${liveCasinoClass} square ripple`}>\r\n                        <div className=\"square__content\">\r\n                            <img src=\"images/live-casino-img.png\" />\r\n                            <div className=\"square__text\">{Translate.liveCasino}</div>\r\n                        </div>\r\n                    </a>} */}\r\n                    {/* { this.props.isShowCasino && <a  onClick={ ()=>this.showLogin('/virtual-sports')} className={`${casinoClass} square ripple`}>\r\n                        <div className=\"square__content\">\r\n                            <img src=\"images/live-casino-img.svg\" />\r\n                            <div className=\"square__text\">{Translate.virtualSports}</div>\r\n                        </div>\r\n                    </a>} */}\r\n\r\n                    {/* {userData && userData.is_pcasino_enabled &&<a onClick={ ()=>this.showLogin('/p-casino')}  className={` square ripple`}>\r\n                         <div className=\"square__content\">\r\n                             <img src=\"images/live-casino-img.svg\" />\r\n                             <div className=\"square__text\">{Translate.pCasino}</div>\r\n                         </div>\r\n                     </a>} */}\r\n\r\n                    {userData && userData.is_ezugi_casino_enabled && (\r\n                        <a onClick={() => this.showLogin('/casino/lobby/ezugi')} className={` square ripple`}>\r\n                            <div className=\"square__content\">\r\n                                <img src=\"images/live-casino-img.svg\" />\r\n                                <div className=\"square__text\">{Translate.ezugiCasino}</div>\r\n                            </div>\r\n                        </a>\r\n                    )}\r\n                    {userData && userData.is_ezugi_casino_enabled && (\r\n                        <a onClick={() => this.showLogin('/casino/lobby/evo')} className={` square ripple`}>\r\n                            <div className=\"square__content\">\r\n                                <img src=\"images/live-casino-img.svg\" />\r\n                                <div className=\"square__text\">{Translate.evoCasino}</div>\r\n                            </div>\r\n                        </a>\r\n                    )}\r\n\r\n\r\n                    <Link to=\"/results\" className=\"square ripple\">\r\n                        <div className=\"square__content\">\r\n                            {/* <i className=\"icon-color icon-score lh-0\"></i> */}\r\n                            <img src=\"images/resultf.svg\" />\r\n                            <div className=\"square__text\">{Translate.results}</div>\r\n                        </div>\r\n                        {/* <div>\r\n                            <i className=\"right-icon right-arrow\"></i>\r\n                        </div> */}\r\n                    </Link>\r\n\r\n                    {!this.props.userData && (\r\n                        <a onClick={() => this.showLogin('/')} className={`square ripple`}>\r\n                            <div className=\"square__content\">\r\n                                {/* <i className=\"icon-color icon-score lh-0\"></i> */}\r\n                                <img src=\"images/login-color.svg\" />\r\n                                <div className=\"square__text\">{Translate.login}</div>\r\n                            </div>\r\n                        </a>\r\n                    )}\r\n\r\n                    {this.state.showLogin && <Login hideLogin={this.hideLogin} />}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nItemsGrid.propTypes = {\r\n    userData: PropTypes.object,\r\n    language: PropTypes.string,\r\n    favorites: PropTypes.array,\r\n    favoritesLiveMatches: PropTypes.array,\r\n    getFavorites: PropTypes.func,\r\n    isLastMinuteActive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n        favorites: state.favorites.favorites,\r\n        favoritesLiveMatches: state.favorites.favoritesLiveMatches,\r\n        isShowCasino: state.general.isShowCasino,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getFavorites: () => dispatch(getFavorites()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsGrid);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction LoadingMain(props) {\r\n    let { loading, customStyle } = props;\r\n\r\n    return (\r\n        loading && (\r\n            <div className={`loading-modal-2 ${customStyle}`}>\r\n                 <div className=\"loader loading-modal-2\"></div>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nLoadingMain.propTypes = {\r\n    loading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.general.loading,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoadingMain);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { selectHomeActiveLeague, removeHomeActiveLeague, getHomeActiveLeagueEventsMobile } from '../../store/actions/home.actions';\r\nimport LoadingMain from './../../Components/Common/LoadingMain'\r\nimport { homePageLeagues } from '../../config/sports';\r\nimport {totalSegments} from '../../config';\r\n\r\nfunction LeaguesList(props) {\r\n    const setActiveLeague = (leagueId) => {\r\n        let { selectedLeague } = props;\r\n        if (selectedLeague === leagueId) {\r\n            props.removeHomeActiveLeague();\r\n        } else {\r\n            props.selectHomeActiveLeague(leagueId);\r\n            for (let i =0;i<totalSegments;i++) {\r\n               props.getHomeActiveLeagueEventsMobile(leagueId,i);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    let { selectedLeague, loading } = props;\r\n\r\n    let leagues_list = homePageLeagues.map((league) => {\r\n        let leagueId = league.league_id;\r\n        let leagueName = league.league_name_en;\r\n        let isSelected = selectedLeague === leagueId ? ' leagues__item_selected' : '';\r\n\r\n        return (\r\n            <li className={'leagues__item' + isSelected} key={leagueId}>\r\n                <div className=\"leagues__img-wrap\" onClick={() => setActiveLeague(leagueId)}>\r\n                    <img src={`./images/leagues/${leagueName}.png`} className=\"leagues__img\" alt={leagueName} />\r\n                </div>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return <ul className=\"leagues__list pre-match-wrapper\">{ loading ? <LoadingMain customStyle={'contents'} /> : leagues_list}</ul>;\r\n}\r\n\r\nLeaguesList.propTypes = {\r\n    leagues: PropTypes.array,\r\n    selectedLeague: PropTypes.number,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        leagues: state.home.leagues,\r\n        selectedLeague: state.home.selectedLeague,\r\n        loading: state.general.loading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectHomeActiveLeague: (leagueId) => dispatch(selectHomeActiveLeague(leagueId)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        getHomeActiveLeagueEventsMobile: (leagueId, i) => dispatch(getHomeActiveLeagueEventsMobile(leagueId, i))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaguesList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            props.openMarketsModal(event);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    let { event, mainSelectedMarket, statsData } = props;\r\n    let leagueName = event.league.Name;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = sortedMarkets.length;\r\n    if (mainMarketEvent === undefined) return null;\r\n    let hasStatistics = event.has_live_statistics || event.has_prematch_statistics;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        hasStatistics = true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"match__panel hybrid-tomorrow\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} />\r\n                    <MatchDateTime fixture={event} showDate={true} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                        <Participants participants={event.participants} />\r\n                        {/* {cards}\r\n                        <MatchResult isLive={false} livescore={false} /> */}\r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        <ExtraMarkets extraMarketsNumber={sortedMarketsLength} onClick={(e) => openExtraOddsModal(event, sortedMarketsLength)} />\r\n                    </Grid>\r\n\r\n                    <MainMarket market={mainMarketEvent} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeHomeActiveLeague } from '../../store/actions/home.actions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = () => {\r\n        props.removeHomeActiveLeague();\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, setExtraMarkets, selectExtraMarket } = props;\r\n    let lastLeagueId = null;\r\n\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                let groupInfo = null;\r\n                let divider = null;\r\n                if (lastLeagueId === e.league_id) {\r\n                    divider = <div className=\"match__divider\" />;\r\n                } else {\r\n                    lastLeagueId = e.league_id;\r\n                    divider = null;\r\n                    groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague()} />;\r\n                }\r\n\r\n                return (\r\n                    e && (\r\n                        <div className='my-2' key={'panel_' + e.fixture_id}>\r\n                            {groupInfo}\r\n                            {divider}\r\n                            <Match event={e} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                        </div>\r\n                    )\r\n                );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport { slice } from 'lodash';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../Shared/MainMarketSelector';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport {\r\n    selectMainMarket, getHomeActiveLeagueEvents, setHomeResetPage, clearHomeActiveLeagueEvents,\r\n    getMarketData,\r\n} from '../../store/actions/home.actions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport { intervalTime } from '../../config';\r\nimport find from 'lodash.find';\r\n\r\nlet sportEventInterval;\r\nclass League extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        sportEventInterval = setInterval(() => {\r\n        let { mainEvents } = this.props;\r\n        this.props.getMarketData(mainEvents, 0, mainEvents.length);\r\n        } , intervalTime);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearHomeActiveLeagueEvents();\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            let { nextIndex } = this.props;\r\n            const data = slice(this.props.partialAllEvents, nextIndex, nextIndex + 20);\r\n            this.props.getMarketData(data, nextIndex, data.length);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event } = this.state;\r\n        let { selectMainMarket, mainSelectedMarket, mainEvents, noEvents, setExtraMarkets, selectExtraMarket } = this.props;\r\n\r\n        let groupedEvents =\r\n            mainEvents &&\r\n            mainEvents[0] &&\r\n            mainEvents[0].sport_id &&\r\n            groupBy(mainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];        \r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                let groupLeagueId = group[0].league_id;\r\n                const groupSportId = group[0].sport_id;\r\n                // Hide MainMarketSelector for NBA and UFC\r\n                let marketSelector =\r\n                    groupLeagueId === 64 || groupLeagueId === 14896 ? null : (\r\n                        <MainMarketSelector selectMainMarket={selectMainMarket} mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[groupSportId]} mainSelectedMarket={mainSelectedMarket} />\r\n                    );\r\n\r\n                let groupMatches = <Matches selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={group} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                matches.push(\r\n                    <div key={sportId}>\r\n                        {marketSelector}\r\n                        {groupMatches}\r\n                    </div>,\r\n                );\r\n            }\r\n        });\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <InfiniteScroll\r\n                        dataLength={mainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={this.props.nextIndex < this.props.partialAllEvents.length}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                        scrollThreshold = {0.95}\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {/* {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                </div>\r\n            ) : noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            ) : (\r\n                <Loading />\r\n            );\r\n\r\n        return <div className=\"events__wrap pre-match-wrapper\">{drawContent}</div>;\r\n    }\r\n}\r\n\r\nLeague.propTypes = {\r\n    selectedLeague: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    getHomeActiveLeagueEvents: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    language: PropTypes.string,\r\n    hasNextPage: PropTypes.bool,\r\n    setHomeResetPage: PropTypes.func,\r\n    clearHomeActiveLeagueEvents: PropTypes.func,\r\n    noEvents: PropTypes.bool,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.home.selectedLeague,\r\n        mainEvents: state.home.mainEvents,\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        language: state.general.language,\r\n        hasNextPage: state.home.hasNextPage,\r\n        noEvents: state.home.noEvents,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        fetchedAll: state.home.fetchedAll,\r\n        partialAllEvents: state.home.partialAllEvents,\r\n        nextIndex: state.home.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getHomeActiveLeagueEvents: (leagueId) => dispatch(getHomeActiveLeagueEvents(leagueId)),\r\n        setHomeResetPage: () => dispatch(setHomeResetPage()),\r\n        clearHomeActiveLeagueEvents: () => dispatch(clearHomeActiveLeagueEvents()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(League);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { postHeartBeat } from '../../store/actions/casino.actions';\r\n\r\nlet heartBeatTimout;\r\n\r\nclass SingleGame extends Component {\r\n    componentDidMount() {\r\n        heartBeatTimout = setInterval(() => this.props.postHeartBeat(), 10000);\r\n        // let history = this.props.history;\r\n        // let title = this.props.match.params.gameTitle;\r\n        // this.props.initCasinoUser(title, history, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(heartBeatTimout);\r\n    };\r\n\r\n    render() {\r\n        let { currentGameData } = this.props;\r\n        let  game_url = `${currentGameData.GAME_URL}?game=${currentGameData.game}&hash=${currentGameData.hash}&api_id=${currentGameData.api_id}&lang=en&exit=${currentGameData.exiturl}>`;\r\n\r\n        return (\r\n            <>\r\n                {currentGameData && currentGameData.GAME_URL ? (\r\n                    <iframe\r\n                        className=\"casino__iframe2\"\r\n                        src={game_url}\r\n                        title=\"Casino Game\"\r\n                        allowFullScreen\r\n                    ></iframe>\r\n                ) : (\r\n                    <Loading />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSingleGame.propTypes = {\r\n    // initCasinoUser: PropTypes.func,\r\n    currentGameData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentGameData: state.casino.currentGameData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        postHeartBeat: () => dispatch(postHeartBeat()),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleGame));\r\n","import React, { Component } from 'react';\r\nimport  './stand.css';\r\n\r\nclass Bhome extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container content-main-casino\">\r\n  <div className=\"row\"></div>\r\n  <section id=\"section-games\" className=\"section-games\">\r\n    <nav role=\"navigation\" className=\"nav-game-categories-wrap\">\r\n      <div className=\"container pl-0 pr-0\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mt-2\">\r\n            <ul className=\"nav nav-fill nav-game-categories\">\r\n              <li className=\"nav-item\">\r\n                <a href=\"/ggslot\" className=\"nav-link nav-link-game-category active\">\r\n                  <img\r\n                    src=\"https://www.starsbet365.com/assets/images/icon-game-category-1.svg\"\r\n                    alt=\"Top Games\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Slots</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/casino/lobby/evo\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.maxbet.tn/assets/images/icon-game-category-6.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Evolution</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/p-casino\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.maxbet.tn/assets/images/icon-game-category-3.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Pragmatic</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/casino/lobby/ezugi\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.maxbet.tn/assets/images/icon-game-category-1.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>ezugi</span>\r\n                </a>\r\n              </li>\r\n             \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    <div className=\"wrap-game-listing\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"game-listing-filters\">\r\n             \r\n              <div className=\"game-providers-dropdown col-sm-6 col-md-6 col-12 col-lg-5\">\r\n                {/* <span className=\"filterby-label\">Filter by: </span> */}\r\n                {/* <select id=\"providers-select\" className=\"form-control\">\r\n                  <option selected=\"selected\" value=\"all\">\r\n                    All Game Providers\r\n                  </option>\r\n               \r\n                  <option onclick=\"location.href = '/ggslot';\">AMATIC</option>\r\n                  <option>NOVOMATIC</option>\r\n                  <option onclick=\"location.href='unit_01.htm'\">WAZDAN</option>\r\n                  <option value={160}>NETENT</option>\r\n                  <option value={160}>BOMBA</option>\r\n                  <option value={160}>ARISTOCRAT</option>\r\n                  <option value={160}>EGT</option>\r\n                  <option value={160}>RACING</option>\r\n\r\n                </select> */}\r\n              </div>\r\n              {/* <div className=\"game-filters-search col-lg-3 col-md-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"form-control form-control-round\"\r\n                />\r\n              </div> */}\r\n            </div>\r\n            <div className=\"row row-game-listing\">\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={32} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Zeppelin-Thumbnails_500x500.jpg\"\r\n                        alt=\"Zeppelin\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Zeppelin</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={34} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                    <img src=\"https://www.maxbet.tn/assets/images/hot.svg\" alt=\"hot\" />\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Joker_s-Coins----Hold-and-Win---Playson-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Joker's Coins: Hold and Win\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Joker's Coins: Hold and Win</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={36} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                    <img src=\"https://www.maxbet.tn/assets/images/hot.svg\" alt=\"hot\" />\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Diamond-Fortunator-Hold-and-Win---Playson-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Diamond Fortunator Hold and Win\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Diamond Fortunator Hold and Win</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={39} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                    <img src=\"https://www.maxbet.tn/assets/images/hot.svg\" alt=\"hot\" />\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Burning-Fortunator---Playson-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Burning Fortunator\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Burning Fortunator</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={40} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                    <img src=\"https://www.maxbet.tn/assets/images/hot.svg\" alt=\"hot\" />\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Wolf-Power-Megaways---Playson-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Wolf Power Megaways\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Wolf Power Megaways</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={42} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Megajack---Aztec-Gold-Thumbnails_500x500.jpg\"\r\n                        alt=\"Aztec Gold\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Aztec Gold</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={43} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Banana-King-HD_thumbnails_500x500.jpg\"\r\n                        alt=\"Banana King HD\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Banana King HD</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={44} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Panda-Joy---Inbet-Thumbnails_500x500.jpg\"\r\n                        alt=\"Panda Joy\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Panda Joy</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={45} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Igrosoft---Crazy-Monkey-2-Thumbnails_500x500.jpg\"\r\n                        alt=\"Crazy Monkey 2\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Crazy Monkey 2</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={47} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Diamond-Blitz-40---Fugaso-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Diamond Blitz 40\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Diamond Blitz 40</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={49} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Mining-Madness---Gaming-Corps-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Mining Madness\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Mining Madness</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={50} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Magic-Spinners-Thumbnails_500x500.jpg\"\r\n                        alt=\"Magic Spinners\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Magic Spinners</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={53} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Vegas-Blast---Kalamba-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Vegas Blast\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Vegas Blast</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={54} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/100-Dragons---Inbet-Thumbnails_500x500.jpg\"\r\n                        alt=\"100 Dragons\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">100 Dragons</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={55} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Aristocrat---50-Dragons-Thumbnails_500x500.jpg\"\r\n                        alt=\"50 Dragons\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">50 Dragons</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={56} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Super-Clue-Thumbnails_500x500.jpg\"\r\n                        alt=\"Super Clue\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Super Clue</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={57} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/Jewel-Sea-Pirate-Riches---Fugaso-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Jewel Sea Pirate Riches\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">Jewel Sea Pirate Riches</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={59} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"/ggslot\">\r\n                      <img\r\n                        src=\"https://www.maxbet.tn/remote-casino-assets/The-Mummy-Win-Hunters---Fugaso-Thumbnails_500x5001.jpg\"\r\n                        alt=\"The Mummy Win Hunters\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"/ggslot\">The Mummy Win Hunters</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mt-3\">\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bhome;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { isEmpty }                    from 'lodash';\r\nimport BannerCarousel, {CarouselItem}                                                  from './BannerCarousel';\r\nimport ItemsGrid                                                                       from './ItemsGrid';\r\nimport LeaguesList                                                                     from './LeaguesList';\r\nimport League                                                                          from './League';\r\nimport { setHomeLeagues, setHomeActive, setHomeLeaguesActive, removeHomeActiveLeague } from '../../store/actions/home.actions';\r\nimport { lSportsConfig }                                                               from '../../config';\r\nimport { getTodaySports, selectSportMobile }                                           from '../../store/actions/todayActions';\r\nimport { getStatsData }                                                                from '../../store/actions/general.actions';\r\nimport {  selectPreSport }                                                             from '../../store/actions/prematchActions';\r\nimport { checkLastMin, getLastMinuteSports }                                           from '../../store/actions/lastMinuteActions';\r\nimport Account                                                                         from './Account';\r\nimport {style}                                                                         from 'redux-logger/src/diff';\r\nimport Bhome from './Bhome/Bhome';\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        // this.props.getLastMinuteSports();\r\n        //this.props.getTodaySports();\r\n        //this.props.getPrematchSports();\r\n        // this.props.selectPreSport(lSportsConfig.prematch.selectedSport);\r\n        // this.props.selectSportMobile(lSportsConfig.today.selectedSport);\r\n        // this.props.checkLastMin();\r\n        // const { statsData } = this.props;\r\n        // if (!statsData) this.props.getStatsData();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setHomeActive(true);\r\n        this.props.setHomeLeaguesActive(false);\r\n        this.props.removeHomeActiveLeague();\r\n    }\r\n\r\n    render() {\r\n\r\n        let { isHomeActive, isHomeLeagueActive, lastMinCountObj, location } = this.props;\r\n\r\n        let homeClass = ''\r\n        if (location.pathname === '/' && !isHomeLeagueActive) {\r\n            homeClass = 'bg-gradient';\r\n        }\r\n\r\n        const isLastMinuteActive = this.props.isLastMinAvailable;\r\n        return (\r\n            <div className={`main-container bg-f7 ${homeClass}`}>\r\n                <Bhome ></Bhome>\r\n\t\t\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    isHomeActive: PropTypes.bool,\r\n    isHomeLeagueActive: PropTypes.bool,\r\n    setHomeActive: PropTypes.func,\r\n    setHomeLeaguesActive: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isHomeActive: state.home.isHomeActive,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        lastMinuteSports: state.lastMinute.sports,\r\n        lastMinCountObj: state.lastMinute.lastMinCountObj,\r\n        isLastMinAvailable: state.lastMinute.isLastMinAvailable,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setHomeLeagues: () => dispatch(setHomeLeagues()),\r\n        setHomeActive: (value) => dispatch(setHomeActive(value)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        getTodaySports: () => dispatch(getTodaySports()),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        selectPreSport: (sportId) => dispatch(selectPreSport(sportId)),\r\n        getLastMinuteSports: () => dispatch(getLastMinuteSports()),\r\n        checkLastMin: () => dispatch(checkLastMin()),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Loading from '../Common/Loading';\r\nimport Lobby from './Lobby';\r\nimport Util from '../../helper/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nclass Casino extends Component {\r\n \r\n    componentDidMount() {\r\n        if(Util.isLoggedIn())\r\n        this.props.getLobbyURL();\r\n       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n      this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n      \r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='back_button'>\r\n                    <Button  variant=\"contained\" onClick = {()=>{this.props.history.push('/'); this.props.getUser();}} >Back To Home</Button>\r\n                </div>\r\n                <div className=\"main-container \">  \r\n                    {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <Loading />}\r\n                    {/* <Banner />\r\n                <Categories />\r\n                <GameList /> */}\r\n                </div>\r\n              \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser: () => dispatch(getUser()),\r\n        setCasinoLobby: (value) =>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Casino);\r\n","import React from 'react';\r\n\r\nfunction Banner(props) {\r\n    return (\r\n        <div className=\"casino__banner\">\r\n            <img src=\"./images/live-casino-banner-2.png\" alt=\"Live Casino banner\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport {\r\n  getpCasinoGames,\r\n    setLiveCasinoActiveCategory,\r\n    setLiveSearchStarted,\r\n    searchPCasino,\r\n    clearLiveCasinoGames,\r\n} from '../../store/actions/casino.actions';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nlet timer = 0;\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getpCasinoGames();\r\n        if (this.props.userData !== null) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearLiveCasinoGames();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let { activeCategoryLive } = this.props;\r\n        this.setState({ isSearchOpen: true });\r\n        this.props.setLiveSearchStarted(true);\r\n\r\n        if (activeCategoryLive !== 'All') {\r\n            this.props.setLiveCasinoActiveCategory('All');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setLiveSearchStarted(false);\r\n        // Reset the search while closing the search bar\r\n        this.props.searchPCasino('')\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setLiveCasinoActiveCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchPCasino(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    render() {\r\n        let { isSearchOpen, searchVal } = this.state;\r\n        let { activeCategoryLive, liveCasinoCategories } = this.props;\r\n        //if (userData && !userData.is_live_casino_enabled) window.location.href = '/';\r\n\r\n        let categories = map(liveCasinoCategories, (category) => {\r\n            let activeClass = activeCategoryLive === category ? 'casino__category_active' : '';\r\n\r\n            return (\r\n                <div className={`casino__category ${activeClass}`} onClick={(e) => this.changeCategory(category)} key={category}>\r\n                    <span>\r\n                        {/* <i className={category.icon}></i> */}\r\n                        {category}\r\n                    </span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {isSearchOpen ? (\r\n                    <div className=\"casino__header mb-3 disable-select\">\r\n                        <div className=\"sports__content sports__content_sm\">\r\n                            <div className=\"sports__search-bar\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"ml-2 form-control sports__search-input\"\r\n                                    autoFocus\r\n                                    placeholder={Translate.searchHere}\r\n                                    value={searchVal}\r\n                                    onChange={this.handleSearch}\r\n                                />\r\n                                <i className=\"icon-search\"></i>\r\n                                <div className=\"sports__close-search\">\r\n                                    <i className=\"material-icons casino-close\" onClick={this.hideSearchBar}>\r\n                                        close\r\n                                    </i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"casino__header mb-3\">\r\n                        <div className=\"casino__category casino__category-search\" onClick={this.showSearchBar}>\r\n                            <span>\r\n                                <i className=\"icon-search\"></i>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {categories}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategoryLive: PropTypes.string,\r\n    getLiveCasinoGames: PropTypes.func,\r\n    clearLiveCasinoGames: PropTypes.func,\r\n    setLiveCasinoActiveCategory: PropTypes.func,\r\n    setLiveSearchStarted: PropTypes.func,\r\n    searchPCasino: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    liveCasinoCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeCategoryLive: state.casino.activeCategoryLive,\r\n        liveCasinoCategories: state.casino.liveCasinoCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       getpCasinoGames: () => dispatch(getpCasinoGames()),\r\n        clearLiveCasinoGames: () => dispatch(clearLiveCasinoGames()),\r\n        setLiveCasinoActiveCategory: (category) => dispatch(setLiveCasinoActiveCategory(category)),\r\n        setLiveSearchStarted: (value) => dispatch(setLiveSearchStarted(value)),\r\n        searchPCasino: (value) => dispatch(searchPCasino(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport forEach from 'lodash.foreach';\r\nimport { LazyBackgroundImage } from '../Common/ImgLoading';\r\n\r\nfunction Games(props) {\r\n    let { games, playGame, rows } = props;\r\n\r\n    let list = [];\r\n    let list_1 = [];\r\n    let list_2 = [];\r\n\r\n    forEach(games, (game, i) => {\r\n        let singleGame = (\r\n            <div className=\"casino__item\" key={i} onClick={() => playGame(game)}>\r\n                <LazyBackgroundImage image={game.imgURL} fallbackImage=\"./images/loading-dark.gif\" className=\"casino__img\" />\r\n            </div>\r\n        );\r\n\r\n        if (rows === 1) {\r\n            list.push(singleGame);\r\n        } else {\r\n            if (i % 2 === 0) {\r\n                list_1.push(singleGame);\r\n            } else {\r\n                list_2.push(singleGame);\r\n            }\r\n\r\n            list = (\r\n                <>\r\n                    <div>{list_1}</div>\r\n                    <div>{list_2}</div>\r\n                </>\r\n            );\r\n        }\r\n    });\r\n\r\n    return <>{list}</>;\r\n}\r\n\r\nGames.propTypes = {\r\n    games: PropTypes.array,\r\n    playGame: PropTypes.func,\r\n    rows: PropTypes.number,\r\n};\r\n\r\nexport default Games;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport map from 'lodash.map';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport Loading from '../Common/NewLoading';\r\nimport Login from '../Login';\r\nimport Games from './Games';\r\nimport { getpCasinoGameData } from '../../store/actions/casino.actions';\r\nimport LoaderLiveCasino from '../Common/LoaderLiveCasino';\r\n\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('casino_url') !== '') {\r\n            sessionStorage.setItem('casino_url', '');\r\n            window.location.reload(false)\r\n        }\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     // if(!this.props.isShowCasino) {\r\n    //     //     this.props.history.push('/')\r\n    //     // }\r\n    //     if(this.props.userData && !this.props.userData.is_pcasino_enabled) {\r\n    //         this.props.history.push('/')\r\n    //     }\r\n    // }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    playGame = (game) => {\r\n        if (this.isLoggedIn()) {\r\n            let history = this.props.history;\r\n            this.props.getpCasinoGameData(game, history);\r\n        } else {\r\n            this.setState({ showLogin: true });\r\n        }\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({ showLogin: true });\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n\r\n    render() {\r\n        let { showLogin } = this.state;\r\n        let { liveCasinoGames, filteredLiveCasinoGames, loadingLiveCasinoGames, noSearchResults } = this.props;\r\n        let liveCasinoGamesList = noSearchResults ? [] : filteredLiveCasinoGames.length > 0 ? filteredLiveCasinoGames : liveCasinoGames;\r\n\r\n        let groupedByCategory =\r\n            liveCasinoGamesList &&\r\n            liveCasinoGamesList[0] &&\r\n            groupBy(liveCasinoGamesList, function (game) {\r\n                return `${game.Vendor}`;\r\n            });\r\n\r\n        let groupedByCategoryAndCompany = {};\r\n\r\n        forEach(groupedByCategory, (group, category) => {\r\n            let gamesGroup = groupBy(group, function (game) {\r\n                return `${game.Vendor}`;\r\n            });\r\n\r\n            groupedByCategoryAndCompany[category] = gamesGroup;\r\n        });\r\n\r\n        let gameList =\r\n            liveCasinoGamesList && liveCasinoGamesList.length > 0\r\n                ? map(groupedByCategoryAndCompany, (group, index) => {\r\n                      return map(group, (game, company) => {\r\n                          let groupClassname = company === 'New Evolution' ? 'casino__provider-body_big' : 'casino__provider-body_small';\r\n                          let rowsNumber = 1;\r\n\r\n                          if (company !== 'New Evolution' && game.length > 3) {\r\n                              rowsNumber = 2;\r\n                          }\r\n\r\n                          let gamesList = <Games games={game} playGame={this.playGame} rows={rowsNumber} />;\r\n\r\n                          return (\r\n                              <div className=\"casino__provider-wrap\" key={`${index}_${company}`}>\r\n                                  <div className=\"casino__provider-header\">\r\n                                     \r\n                                      <p className=\"casino__title m-0 font-weight-semibold text-yellow\">{game[0].Vendor}</p>\r\n                                  </div>\r\n                                  <div className={`casino__provider-body ${groupClassname}`}>{gamesList}</div>\r\n                              </div>\r\n                          );\r\n                      });\r\n                  })\r\n                : [];\r\n\r\n        return loadingLiveCasinoGames ? (\r\n            <Loading />\r\n        ) : liveCasinoGamesList.length > 0 ? (\r\n            <>\r\n                <div className=\"casino__list pl-40 pr-40 clearfix mb-2\">{this.props.loading ? <LoaderLiveCasino /> : gameList }</div>\r\n\r\n                {showLogin && <Login hideLogin={this.hideLogin} />}\r\n            </>\r\n        ) : (\r\n            <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n        );\r\n    }\r\n}\r\n\r\nGameList.propTypes = {\r\n    liveCasinoGames: PropTypes.array,\r\n    filteredLiveCasinoGames: PropTypes.array,\r\n    loadingLiveCasinoGames: PropTypes.bool,\r\n    noSearchResults: PropTypes.bool,\r\n    userData: PropTypes.object,\r\n    getLiveGameData: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        liveCasinoGames: state.casino.liveCasinoGames,\r\n        filteredLiveCasinoGames: state.casino.filteredLiveCasinoGames,\r\n        loadingLiveCasinoGames: state.casino.loadingLiveCasinoGames,\r\n        noSearchResults: state.casino.noSearchResults,\r\n        userData: state.user.data,\r\n        loading: state.general.loading,\r\n        isShowCasino:state.general.isShowCasino\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getpCasinoGameData: (id, history) => dispatch(getpCasinoGameData(id, history)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, { Component } from 'react';\r\nimport Banner from './Banner';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nclass LiveCasino extends Component {\r\n\r\n    componentDidMount() {\r\n       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n      this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n      \r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='back_button'>\r\n                    <Button  variant=\"contained\" onClick = {()=>{this.props.history.push('/');this.props.getUser();}} >Back To Home</Button>\r\n                </div>\r\n                <div className=\"main-container \">\r\n                    {/* {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <Loading />} */}\r\n                    <Banner />\r\n                    <Categories />\r\n                    <GameList />\r\n                </div>\r\n               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser: () =>dispatch(getUser()),\r\n        setCasinoLobby: (value)=>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LiveCasino);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Translate } from '../../localization';\r\nimport map from 'lodash.map';\r\nimport { connect } from 'react-redux';\r\nimport uniqBy from 'lodash.uniqby';\r\nimport { selectLocation } from '../../store/actions/todayActions';\r\nimport { internationalLocationIds } from '../../config';\r\n\r\nfunction Locations(props) {\r\n    const resetSelectedLocations = (e) => {\r\n        e.preventDefault();\r\n        props.resetSelectedLocations();\r\n        props.selectTodayLocation();\r\n    };\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        props.selectLocation(e.currentTarget.id);\r\n        props.selectTodayLocation(e.currentTarget.id);\r\n\r\n    };\r\n\r\n    const handleSearchToggle = () => {\r\n        setShowSearch(!showSearch);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        props.handleSearch(e.target.value);\r\n    }\r\n\r\n    const hideSearchBar = () => {\r\n        setShowSearch(false);\r\n        props.handleSearch('');\r\n        \r\n    };\r\n\r\n    let { locationsObj, currentSelectedLeague, searchVal, fromLivePage, todayLocations, language } = props;\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    let isAllActive = currentSelectedLeague === 'all';\r\n    let locations = locationsObj ? Object.values(locationsObj.Locations) : [];\r\n    if (fromLivePage) {\r\n        if (todayLocations.length !== 0) {\r\n            for (let l in todayLocations) {\r\n                locations.push({ ...todayLocations[l], Name: todayLocations[l].Name, name: todayLocations[l][lang] || todayLocations[l].name_en,  Id: todayLocations[l].Id });\r\n            }\r\n            locations = uniqBy(locations, 'Id');\r\n        } \r\n    }\r\n\r\n    let isInternationalPresent = false;\r\n    const locationsList =\r\n            map(locations, (item, i) => {\r\n                let locationId = item.Id;\r\n                let locationName = item[lang] || item.Name || item.name_en || item.name;\r\n                let contains = (currentSelectedLeague === locationId + '');\r\n                if (!isInternationalPresent && internationalLocationIds.indexOf(+locationId) > -1) isInternationalPresent = true;\r\n                else if (isInternationalPresent && internationalLocationIds.indexOf(+locationId) > -1) return null;\r\n\r\n                return (\r\n                    <div className=\"live-locations__item\" id={locationId} onClick={handleClick} key={locationId}>\r\n                        <div className={`live-locations__box ${contains ? 'live-locations__box_active' : ''}`}>\r\n                            <div country={'flag_' + locationId } className=\"live-flag-25 flag\"></div>\r\n                            <span>{locationName.substring(0, 3)}</span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n\r\n    return (\r\n        <div className=\"d-flex sports disable-select\">\r\n            {showSearch ? (\r\n                <div className=\"sports__content sports__content_sm\">\r\n                    <div className=\"sports__search-bar\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ml-2 form-control sports__search-input\"\r\n                            autoFocus\r\n                            placeholder={Translate.searchHere}\r\n                            value={searchVal}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <i className=\"icon-search\" />\r\n                        <div className=\"sports__close-search\">\r\n                            <i className=\"material-icons text-body\" onClick={hideSearchBar}>\r\n                                close\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"livesearch\">\r\n                        <div className=\"live-icn\" onClick={handleSearchToggle}>\r\n                            <i className=\"icon-search live-search-icon d-inline-block\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"live-locations\">\r\n                        <div className=\"live-locations__item\" onClick={resetSelectedLocations}>\r\n                            <div className={`live-locations__box live-locations__box_all ${isAllActive ? 'live-locations__box_active' : ''}`}>\r\n                                <i className=\"icon-all live-locations__icon\" />\r\n                                <span>{Translate.all}</span>\r\n                            </div>\r\n                        </div>\r\n                        {locationsList}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nLocations.propTypes = {\r\n    todayLocations: PropTypes.array,\r\n    selectTodayLocation: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todayLocations: state.today.locations,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectTodayLocation: (locationId) => dispatch(selectLocation(locationId)), \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { lSportsConfig } from '../../config';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport MatchResult from '../Shared/Match/MatchResult';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\nimport { hybridMarketHelperArray, MARKET_FOR_OUTER_SLIDER } from '../../config/markets';\r\nimport Util from '../../helper/Util';\r\nimport map from 'lodash.map';\r\nimport filter from 'lodash.filter';\r\nimport uniqBy from 'lodash.uniqby';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            // console.log('<<<<<<<<<<<<<<<<<', props, event);\r\n            props.openMarketsModal(event, liveStreamAvailable);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    const [ liveStreamAvailable, setLiveStreamAvailable] = useState(false);\r\n    const [ streamURL, setStreamingURL] = useState(null);\r\n    const [ streamUrlData, setStreamUrlData] = useState([]);\r\n\r\n    let { event, mainSelectedMarket, liveStreamData, statsData } = props;\r\n\r\n    useEffect (() => {\r\n            let selectedEvents = filter(liveStreamData, (e) =>  e.matchId == event.fixture_id );\r\n            selectedEvents = uniqBy(selectedEvents, (e) => e.iframe);\r\n            if(selectedEvents.length && selectedEvents[0].live === '1') {\r\n                setStreamUrlData(selectedEvents);\r\n                setStreamingURL(selectedEvents[0].iframe);\r\n                setLiveStreamAvailable(true);\r\n            }\r\n    }, [liveStreamData, event.fixture_id]);\r\n\r\n    let isLive = event.fixture_status === lSportsConfig.statuses.inplay;\r\n    let leagueName = event.league.Name;\r\n    let sortedMarkets = event.Markets ? Object.values(event.Markets) : [];\r\n    let sportId = event.sport?.Id;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id == (mainSelectedMarket ? mainSelectedMarket : MARKET_FOR_OUTER_SLIDER[sportId][0].Id));\r\n    // Next Goal 8\r\n    // Next Goal 1st Half 62\r\n\r\n    let mixedMainMarket = {};\r\n    if (mainSelectedMarket == 8)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[62] = find(sortedMarkets, (m) =>  m.Id == 62 );\r\n    }\r\n\r\n    // Remaining Match 7\r\n    // Remaining Match 1st Half 61\r\n    if (mainSelectedMarket == 7) {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[61] = find(sortedMarkets, (m) =>  m.Id == 61 );\r\n    }\r\n    \r\n    // Under Over 18\r\n    // Under Over 1st Half 68\r\n    if (mainSelectedMarket == 18)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[68] = find(sortedMarkets, (m) =>  m.Id == 68 );\r\n    }\r\n\r\n    // if (!mainMarketEvent) {\r\n    //     mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    // }\r\n   // sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = event.MarketsCount ? event.MarketsCount : (event.Markets ? Object.values(event.Markets).length : 0);\r\n    let hasStatistics = true;\r\n    if (statsData?.[+event.fixture_id] && ['live', 'finished'].indexOf(statsData[+event.fixture_id].status_type) > -1) {\r\n        hasStatistics = true;\r\n    }\r\n    let statistics = event.Livescore && event.Livescore?.statistics ? event.Livescore?.statistics : null;\r\n    let cards = sportId === lSportsConfig.sports.football.id && statistics ? Util.getRedCards(statistics) :  <Grid item xs={2} className=\"results__cards live_cards p-2\"></Grid>;\r\n    let count = 0;\r\n    let isFirstHalf = event.Livescore.match_status === 6; // match status = 6 belongs to first half \r\n    return (\r\n        <div id={event.fixture_id} className=\"match__panel hybrid\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} />\r\n                    <MatchDateTime fixture={event} showDate={false} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                        <Participants isInplay participants={event.participants} onClick={(e) => openExtraOddsModal(event, sortedMarketsLength, liveStreamAvailable)}  />\r\n                        {cards}\r\n                        <MatchResult isLive={isLive} livescore={event.Livescore} />\r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        {/* <Grid item xs={1} className=\"p-1 text-right d-flex align-items-center justify-content-center\">\r\n                            {\r\n                            // liveStreamAvailable &&\r\n                            //     (<IconButton onClick={() => openLiveStreamModal(streamUrlData)}>\r\n                            //         <img className=\"stream-icon\" alt=\"stream-icon\" src=\"./images/smart-tv-live-new.svg\"></img> \r\n                            //     </IconButton> )\r\n                                // :\r\n                                // <IconButton>\r\n                                //     <img className=\"stream-icon stream_disabled\" alt=\"stream-icon\" src=\"./images/smart-tv.svg\"></img> \r\n                                // </IconButton>\r\n                            }\r\n                        </Grid> */}\r\n                        <ExtraMarkets isInplay extraMarketsNumber={sortedMarketsLength} onClick={(e) => openExtraOddsModal(event, sortedMarketsLength, liveStreamAvailable)} />\r\n                    </Grid>\r\n                    {mainMarketEvent ? (\r\n                        isFirstHalf && (mainSelectedMarket === 7 || mainSelectedMarket === 8  || mainSelectedMarket === 18) ? (\r\n                            map(mixedMainMarket, (item) => {\r\n                                if (!item) return null;\r\n                                count++;\r\n                                const areBetsAllSettled = Util.checkBets(item.Bets);\r\n                                return (\r\n                                    <div className='hybrid-market-halftime'>\r\n                                        {areBetsAllSettled && hybridMarketHelperArray[count] !== '' && (\r\n                                            <span className={'pl-1 text-overflow text-gray-darker MuiGrid-item hybrid-halftime'}>{`${hybridMarketHelperArray[count]}`}</span>\r\n                                        )}\r\n                                        <MainMarket market={item} fixture={event} type=\"live\" leagueName={leagueName} areBetsAllSettled={areBetsAllSettled} />\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            \r\n                            <MainMarket market={mainMarketEvent} fixture={event} type=\"live\" leagueName={leagueName} />\r\n                        )\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.string,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.inplay.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(React.memo(Match)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/inplayActions';\r\nimport { orderBy } from 'lodash';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, openLiveStreamModal, liveStreamData } = props;\r\n\r\n    let lastLeagueId = null;\r\n    events = orderBy(events, ['league.Id'], ['desc']);\r\n    let drawMatches =\r\n        events && Object.keys(events).length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n                 \r\n                  if (lastLeagueId === e.league.Id ) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = leagueId;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader isLive event={e} showStripe={true} remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && (\r\n                          <div className='my-2' key={`panel_${e.fixture_id}`}>\r\n                              {groupInfo}\r\n                              {divider}\r\n                              <Match liveStreamData={liveStreamData} openLiveStreamModal={openLiveStreamModal} event={e} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Markets from './Markets';\r\nimport { getExtraMarkets, clearExtraMarkets, selectExtraMarket, setStatistics, clearStatistics } from '../../store/actions/lsports.global.actions';\r\nimport ExtraMarketSelector from '../Shared/ExtraMarketSelector';\r\nimport { isEqual } from 'lodash';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\n\r\nlet extraMarkets = {};\r\nclass ExtraOddsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marketsUpdated: null,\r\n            liveStreamGameId: null,\r\n            showLiveStream: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { extraMarketEvent, liveStreamAvailable } = this.props;\r\n        let sportId = extraMarketEvent.sport_id;\r\n        Util.getExtraMarketName(sportId).extraMarketNames.forEach( e => {\r\n            extraMarkets[e] = {};\r\n        });\r\n        extraMarkets = Util.getExtraMarkets(extraMarkets, this.props.liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        if(liveStreamAvailable) {\r\n            this.setState({showLiveStream: true});\r\n        }\r\n        // let fixtureId = extraMarketEvent.FixtureId;\r\n       \r\n        // this.props.setStatistics(fixtureId, 'forPopup', 'live');\r\n    }\r\n\r\n    componentDidUpdate(pp) {\r\n        const { liveMatch, extraMarketEvent } = this.props;\r\n        let sportId = liveMatch.sport_id;\r\n        if (!isEqual(pp.liveMatch.Markets, liveMatch.Markets)) {\r\n            extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        }\r\n\r\n        if(pp.extraMarketEvent !== extraMarketEvent) {\r\n            extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        extraMarkets = {}; // Reset extra market category while un-mounting\r\n        this.props.clearExtraMarkets();\r\n        this.props.clearStatistics();\r\n    }\r\n\r\n    toggleLiveStream = () => {\r\n        this.setState({ showLiveStream: !this.state.showLiveStream});\r\n    }\r\n\r\n    openStatistics = () => {\r\n        let { extraMarketEvent } = this.props;\r\n        this.props.setStatistics(extraMarketEvent.fixture_id, 'forPopup', 'live');\r\n        this.setState({ showLiveStream : false });\r\n    };\r\n\r\n    closeStatistics = () => {\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    render() {\r\n        const { closeModal, selectExtraMarket, extraSelectedMarket, liveMatch, language, statsData } = this.props;\r\n        let lang = `name_${language.toLowerCase()}`;\r\n        let type =\r\n            liveMatch.fixture_status === lSportsConfig.statuses.inplay\r\n                ? 'live'\r\n                : liveMatch.fixture_status === lSportsConfig.statuses.prematch\r\n                ? 'sports'\r\n                : 'last-minute';\r\n        let leagueName = liveMatch.league && (liveMatch.league[lang] || liveMatch.league.name_en);\r\n        let results =\r\n            liveMatch.Livescore && liveMatch.Livescore.Scoreboard && liveMatch.Livescore.Scoreboard.Results\r\n                ? liveMatch.Livescore.Scoreboard.Results\r\n                : null;\r\n        results = results && Object.values(results);\r\n        let currentDate = liveMatch.start_date && Util.convertToLocalTimezone(liveMatch.start_date);\r\n        let timeString = currentDate?.timeString;\r\n        let hasStatistics = false;\r\n        if (statsData?.[+liveMatch.fixture_id] && ['live', 'finished'].indexOf(statsData[+liveMatch.fixture_id].status_type) > -1) {\r\n            hasStatistics = true;\r\n        }\r\n        let matchInfo = type === 'live' ? results ? results[0].Value + ' : ' + results[1].Value : '' : <time className=\"d-block lh-18\">{timeString}</time>;\r\n\r\n        let drawEventHeader = (\r\n            <div>\r\n                <p className=\"league-name\">{leagueName}</p>\r\n                <div className=\"extra-odd__title\">                \r\n                    <div className=\"team-name\">\r\n                        <span className=\"extra-odd__participant name-one ellipsis\">{liveMatch.participants[0][lang] || liveMatch.participants[0].name_en}</span>\r\n                        <span className=\"extra-odd__score score\"><span className=\"score-num\">{matchInfo}</span><MatchDateTime fixture={liveMatch} showDate={false} /></span>\r\n                        <span className=\"extra-odd__participant ellipsis name-two\">{liveMatch.participants[1][lang] || liveMatch.participants[1].name_en}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        let currentlySelectedMarket = extraSelectedMarket ? extraSelectedMarket : 'All';\r\n        let extraMarketEventsList = extraMarkets[currentlySelectedMarket];\r\n        let sportId = liveMatch.sport_id;\r\n        // check if all bets are settled\r\n        let areBetsAllSettled = Util.checkSettledBets(extraMarketEventsList);\r\n        let drawMarkets =\r\n            extraMarketEventsList && Object.keys(extraMarketEventsList).length > 0 ? (\r\n                areBetsAllSettled ? (\r\n                    <div className=\"no-data fs-15 pt-3 pb-3\">All the Odds are settled for this event.</div>\r\n                 ) : \r\n                (\r\n                    <Markets markets={extraMarketEventsList} fixture={liveMatch} type={type} leagueName={leagueName} currentlySelectedMarket={currentlySelectedMarket}/>\r\n                )\r\n            ) \r\n             : (\r\n                 <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n             );\r\n\r\n        return  (\r\n            <Dialog onClose={closeModal} aria-labelledby=\"extra-odds-dialog-title\" open={true} scroll=\"paper\" className=\"extra-odds__modal\">\r\n                <DialogTitle id=\"extra-odds-dialog-title\" className=\"p-0 dialog-tab\" disableTypography>\r\n                    <div className=\"pr-extra-market-modal line-height-5\">\r\n                        <ExtraMarketSelector\r\n                            selectExtraMarket={selectExtraMarket}\r\n                            extraSelectedMarket={currentlySelectedMarket}\r\n                            extraMarketNames={Util.getExtraMarketName(sportId).extraMarketNames}\r\n                        />\r\n                    </div>\r\n\r\n                    {drawEventHeader}\r\n                    {/* <IconButton className={`data-icon ${disbaledStatClass}`}>\r\n                        { hasStatistics && statisticsType === 'forPopup' ? (\r\n                            <i className={`icon-statistics text-green ${disbaledStatClass}`} onClick={(e) => this.closeStatistics()} />\r\n                        ) : (\r\n                            <i className={`icon-statistics ${disbaledStatClass}`} onClick={(e) => this.openStatistics()} />\r\n                        )}\r\n                    </IconButton> */}\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                        <i className=\" material-icons fs-22\"> close </i>\r\n                    </IconButton>\r\n                    {/* { liveStreamAvailable ?\r\n                        <IconButton className='live-stream' onClick={this.toggleLiveStream}>\r\n                            <img className=\"stream-icon-extra-market\" alt=\"stream-icon\" src=\"./images/smart-tv-live-new.svg\"></img> \r\n                        </IconButton> :\r\n                        <IconButton className='live-stream stream_disabled' onClick={this.toggleLiveStream}>\r\n                            <img className=\"stream-icon-extra-market\" alt=\"stream-icon\" src=\"./images/smart-tv-new.svg\"></img> \r\n                        </IconButton>\r\n                    } */}\r\n                </DialogTitle>\r\n\r\n                <DialogContent className=\"modal-min-height extra-odd__bets p-0\">\r\n                    {/* {liveMatch.Livescore.Statistics && statisticsType === 'forPopup' && !showLiveStream && <Statistics />} */}\r\n                    {/* {liveStreamAvailable && showLiveStream && liveMatchURL && <iframe title='Live Stream' width='100%' height='200vw'  style={{ border:'none'}} src={liveMatchURL}></iframe>} */}\r\n                    {drawMarkets}\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nExtraOddsModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    event: PropTypes.object,\r\n    extraSelectedMarket: PropTypes.string,\r\n    extraMarketsLoading: PropTypes.bool,\r\n    selectExtraMarket: PropTypes.func,\r\n    getExtraMarkets: PropTypes.func,\r\n    clearExtraMarkets: PropTypes.func,\r\n    extraMarketEvent: PropTypes.object,\r\n    setStatistics: PropTypes.func,\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        extraMarketsLoading: state.lsportsGlobal.extraMarketsLoading,\r\n        extraSelectedMarket: state.lsportsGlobal.extraSelectedMarket,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        language: state.general.language,\r\n        statsData: state.general.statsData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getExtraMarkets: (eventId) => dispatch(getExtraMarkets(eventId)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        clearExtraMarkets: () => dispatch(clearExtraMarkets()),\r\n        setStatistics: (eventId, statsType, statsTemplateType) => dispatch(setStatistics(eventId, statsType, statsTemplateType)),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtraOddsModal);\r\n","import React, { Component } from 'react';\r\nimport { Translate } from '../../localization';\r\nimport map from 'lodash.map';\r\nimport Util from '../../helper/Util';\r\nimport find from 'lodash.find';\r\n\r\nclass SportsLive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSearch : false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let {sports, selectedSport, selectSport} = this.props;\r\n\r\n        if(prevProps.sports !== sports){\r\n            let selectedSportCount = find(sports, (sport) => sport.Id === selectedSport)?.Count;\r\n             if(selectedSportCount === 0 && sports[0].Count > 0){\r\n                 selectSport(sports[0].Id);\r\n             }\r\n         }\r\n    }\r\n\r\n    handleSearchToggle = () => {\r\n        this.setState({ showSearch: !this.state.showSearch })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleSearch(e.target.value);\r\n    }\r\n    \r\n    selectSport = (sportId) => {\r\n        this.props.selectSport(sportId);\r\n        this.props.resetSelectedLocations(true);\r\n        this.props.resetSelectMainMarket(null);\r\n    }\r\n    \r\n    grtTranslatedName = (name) => {\r\n        switch(name) {\r\n            case 'Football':\r\n            return Translate.football;\r\n            case 'Basketball':\r\n            return Translate.basketball;\r\n            case 'Ice Hockey':\r\n            return Translate.iceHockey;\r\n            case 'Tennis':\r\n            return Translate.tennis;\r\n            case 'Volleyball':\r\n            return Translate.volleyball;\r\n            case 'Boxing':\r\n            return Translate.boxing;\r\n            case 'American Football':\r\n            return Translate.americanFootball;\r\n            case 'Baseball':\r\n            return Translate.baseball;\r\n            case 'Hockey':\r\n            return Translate.hockey;\r\n            case 'Badminton':\r\n            return Translate.badminton;\r\n            case   'Cricket':\r\n            return Translate.cricket;\r\n            case 'Futsal':\r\n            return Translate.futsal;\r\n            case 'Golf':\r\n            return Translate.golf;\r\n            case 'Handball':\r\n            return Translate.handball;\r\n            case 'Rugby Leagues':\r\n            return Translate.rugbyLeagues;\r\n            case 'Table Tennis':\r\n            return Translate.tableTennis\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { searchVal, sports, selectedSport, isDisable } = this.props;\r\n        let { showSearch } = this.state;\r\n        const sportList = map(sports, (item, i) => {\r\n            let sportId = item.Id;\r\n            let sportName = this.grtTranslatedName(item.Name);\r\n            let count = item.Count;\r\n            \r\n            let icon = item.Name\r\n            if(icon ==='American Football'){\r\n                icon ='AmericanFootball'\r\n            } else if( icon === 'Table Tennis') {\r\n                icon = 'TableTennis'\r\n            } else if(icon === 'Rugby Leagues') {\r\n                icon = 'AmericanFootball'\r\n            }\r\n            let disabledClass = count === 0 ? 'sports__item_disabled' : '';\r\n            let activeClass =  selectedSport === sportId && count !== 0 ? 'sports__box_active' : '';\r\n            let type_sport = selectedSport == sportId && count !== 0 \r\n\r\n            //let activeClass = '';\r\n            return (\r\n                <div className={`sports__item ${disabledClass}`} onClick={ !isDisable ? (e) => this.selectSport(sportId) : null } key={sportId}>\r\n                    <div className={`sports__box ${activeClass}`}>\r\n                        <div className=\"sports__counter\"> {count} </div>\r\n                        <img className ={`${type_sport ? 'd-none ':''} sports_img`}  alt=\"stream-icon\" src={`/images/sports/${icon}-desktop-white.svg`}></img>\r\n                          <img className ={`${!type_sport ? 'd-none ':''} sports_img`}  alt=\"stream-icon\" src={`/images/sports/${icon}-desktop.svg`}></img>\r\n                        <div className=\"mt-1 sports__name\">{sportName}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"main-container\">\r\n                <div className=\"sports__content live-match\">\r\n                    {sportList}\r\n                </div>\r\n                <div className=\"d-flex sports disable-select\">\r\n                    {showSearch ? (\r\n                        <div className=\"sports__content sports__content_sm\">\r\n                            <div className=\"sports__search-bar\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"ml-2 form-control sports__search-input\"\r\n                                    autoFocus\r\n                                    placeholder={Translate.searchHere}\r\n                                    value={searchVal}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <i className=\"icon-search\" />\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default React.memo(SportsLive);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport SportsList from '../Shared/SportsList';\r\nimport { getTodaySportsMobile, selectSportMobile, setTodaySports, clearSportEvents } from '../../store/actions/todayActions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        const { statsData, fromLivePage, currentSelectedSport } = this.props;\r\n        if (!statsData && !fromLivePage) this.props.getStatsData();\r\n        //if (!this.props.mainEvents.length > 0 && !this.props.fromLivePage) { // DOn't reload data If main events are already present. \r\n            //this.props.getTodaySports();\r\n            this.props.getTodaySportsMobile();\r\n            this.props.selectSportMobile(lSportsConfig.today.selectedSport);\r\n\r\n        //}\r\n        if (fromLivePage){\r\n            this.props.clearSportEvents();\r\n            this.props.selectSportMobile(currentSelectedSport);}\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {fromLivePage, currentSelectedSport } = this.props;\r\n        if (fromLivePage) {\r\n            if (prevProps.currentSelectedSport !== currentSelectedSport) {\r\n                this.props.clearSportEvents();\r\n                this.props.selectSportMobile(currentSelectedSport, true);\r\n            }\r\n        }\r\n\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.props.getTodaySports();\r\n        // }\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.props.selectSportMobile(sportId);\r\n    };\r\n\r\n    render() {\r\n        let { sports, selectedSport, language, mainEvents, noSport, sportCountObj } = this.props;\r\n        return (\r\n            !noSport ?\r\n            <div className={`pre-match-wrapper`}>\r\n                <SportsList\r\n                    sports={staticPrematchSports()}\r\n                    sportsObj={sportCountObj}\r\n                    selectedSport={selectedSport}\r\n                    selectSport={this.selectSport}\r\n                    searchPath=\"\"\r\n                    type=\"today\"\r\n                    language={language}\r\n                    isDisable={mainEvents.length === 0}\r\n                    sort\r\n                />\r\n            </div>\r\n            : null\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    // getTodaySports: PropTypes.func,\r\n    selectSport: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.today.sports,\r\n        selectedSport: state.today.selectedSport,\r\n        language: state.general.language,\r\n        mainEvents: state.today.mainEvents,\r\n        sportCountObj: state.today.sportCountObj,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // getTodaySports: () => dispatch(getTodaySports()),\r\n        getTodaySportsMobile: () => dispatch(getTodaySportsMobile()),\r\n        selectSportMobile: (sportId, dontFetch) => dispatch(selectSportMobile(sportId, dontFetch)),\r\n        setTodaySports: () => dispatch(setTodaySports()),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        clearSportEvents: () => dispatch(clearSportEvents())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport includes from 'lodash.includes';\r\nimport Loading from '../Common/NewLoading';\r\nimport { Translate } from '../../localization';\r\nimport { resetSelectedLocations, getSportEvents, getTodayLocations, selectLocation } from '../../store/actions/todayActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Locations(props) {\r\n    const resetSelectedLocations = (e) => {\r\n        e.preventDefault();\r\n        props.resetSelectedLocations();\r\n    };\r\n\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const handleSearchToggle = () => {\r\n        setShowSearch(!showSearch);\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n       props.handleSearch(e.target.value);\r\n    }\r\n\r\n    const hideSearchBar = () => {\r\n        setShowSearch(false);\r\n        props.handleSearch('');\r\n        \r\n    };\r\n    \r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (e.currentTarget.id === props.selectedLocation) props.selectLocation('');\r\n        else props.selectLocation(e.currentTarget.id);\r\n    };\r\n\r\n    let { locations, selectedLocation, noEvents, locationsLoading, language } = props;\r\n    let isAllActive = selectedLocation === '';\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    const locationsList =\r\n        !locationsLoading ? (\r\n            locations.length > 0 ?\r\n            locations.map((item, i) => {\r\n                let locationId = item.Id;\r\n                let locationName = item[lang] || item.name_en;\r\n\r\n                let contains = selectedLocation == locationId;\r\n\r\n                return (\r\n                    <div className=\"live-locations__item\" id={locationId} onClick={handleClick} key={locationId}>\r\n                        <div className={`live-locations__box ${contains ? 'live-locations__box_active' : ''}`}>\r\n                            <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"live-flag-25 flag\"></div>\r\n                            <span>{locationName.substring(0, 3)}</span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }) : null\r\n        ) : <Loading />\r\n    return (\r\n        !props.fromLivePage ?\r\n        <div className={`pre-match-wrapper`}>\r\n            {showSearch ? (\r\n                <div className=\"sports__content sports__content_sm\">\r\n                    <div className=\"sports__search-bar\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ml-2 form-control sports__search-input\"\r\n                            autoFocus\r\n                            placeholder={Translate.searchHere}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <i className=\"icon-search\" />\r\n                        <div className=\"sports__close-search\">\r\n                            <i className=\"material-icons text-body\" onClick={hideSearchBar}>\r\n                                close\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"livesearch\">\r\n                        <div className=\"live-icn\" onClick={handleSearchToggle}>\r\n                            <i className=\"icon-search live-search-icon d-inline-block\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"live-locations\">\r\n                        <div className=\"live-locations__item\" onClick={resetSelectedLocations}>\r\n                            <div className={`live-locations__box live-locations__box_all ${isAllActive ? 'live-locations__box_active' : ''}`}>\r\n                                <i className=\"icon-all live-locations__icon\" />\r\n                                <span>{Translate.all}</span>\r\n                            </div>\r\n                        </div>\r\n                        {locationsList}\r\n                    </div>\r\n                </>\r\n            )}\r\n            {/* <div className=\"live-icn\">\r\n                <i className=\"icon-search live-search-icon d-inline-block\"></i>\r\n            </div> */}\r\n        </div>\r\n        : null\r\n    );\r\n}\r\n\r\nLocations.propTypes = {\r\n    locations: PropTypes.array,\r\n    selectedLocation: PropTypes.array,\r\n    resetSelectedLocations: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    getSportEvents: PropTypes.func,\r\n    getTodayLocations: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n    searchStarted: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    locationsLoading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locations: state.today.locations,\r\n        selectedLocation: state.today.selectedLocation,\r\n        selectedSport: state.today.selectedSport,\r\n        searchStarted: state.today.searchStarted,\r\n        language: state.general.language,\r\n        noEvents: state.today.noEvents,\r\n        locationsLoading: state.today.locationsLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resetSelectedLocations: () => dispatch(resetSelectedLocations()),\r\n        selectLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        getTodayLocations: (sportId) => dispatch(getTodayLocations(sportId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\nimport { endOfToday } from 'date-fns';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            props.openMarketsModal(event);\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    let { event, mainSelectedMarket, statsData, language } = props;\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    let leagueName = event.league[lang] ? event.league[lang] : event.league.name_en;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = {\r\n            Id: mainSelectedMarket,\r\n            Name: '',\r\n            Bets: null,\r\n        };\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = Object.keys(event.market).length;\r\n    if (mainMarketEvent === undefined) return null;\r\n    let hasStatistics = event.has_live_statistics || event.has_prematch_statistics;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        hasStatistics = true;\r\n    }\r\n    let showDate = false;\r\n    if (new Date(event.start_date) > new Date (endOfToday())) {\r\n        showDate = true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"match__panel hybrid-tomorrow\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} />\r\n                    <MatchDateTime fixture={event} showDate={showDate} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                        <Participants participants={event.participants} />\r\n                        {/* {cards}\r\n                        <MatchResult isLive={false} livescore={false} /> */}\r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        <ExtraMarkets extraMarketsNumber={sortedMarketsLength} onClick={(e) => openExtraOddsModal(event, sortedMarketsLength)} />\r\n                    </Grid>\r\n\r\n                    <MainMarket market={mainMarketEvent} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.today.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/todayActions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, selectExtraMarket, setExtraMarkets } = props;\r\n    let lastLeagueId = null;\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n                  if (!e.league) return null;\r\n\r\n                  if (lastLeagueId === e.league.Id) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = e.league.Id;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && (\r\n                          <div className='my-2' key={'panel_' + e.fixture_id}>\r\n                              {groupInfo}\r\n                              {divider}\r\n                              <Match selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} event={e} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { find, slice } from 'lodash';\r\nimport Locations from './Locations';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../Shared/MainMarketSelector';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport {\r\n    selectMainMarket,\r\n    getSportEvents,\r\n    search,\r\n    getTodayLocations,\r\n    setTodayResetPage,\r\n    clearSportEvents,\r\n    clearLocations,\r\n    searchTodayEvents,\r\n    getMarketData,\r\n    getTodaySportsMobile,\r\n\r\n    setLocationLoading\r\n} from '../../store/actions/todayActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport { intervalTime } from '../../config';\r\nimport Util from '../../helper/Util';\r\n\r\nlet sportEventInterval;\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setLocationLoading(true);\r\n        sportEventInterval = setInterval(() => {\r\n        let { mainEvents, partialAllEvents } = this.props;\r\n        partialAllEvents = partialAllEvents.filter(event => Util.getFormattedDate(event.start_date) > new Date());\r\n        mainEvents = partialAllEvents.splice(0, mainEvents.length); \r\n        this.props.getMarketData(mainEvents, 0, mainEvents.length);\r\n        this.props.getTodaySportsMobile();\r\n        } , intervalTime);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setTodayResetPage();\r\n\r\n            if (!this.props.searchStarted) {\r\n                // let sportId = this.props.selectedSport;\r\n                // this.props.getSportEvents(sportId);\r\n                // this.props.getTodayLocations(sportId);\r\n            } else {\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture || {});\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n\r\n        if (this.props.fromLivePage) {\r\n            if (prevProps.currentSelectedMarket !== this.props.currentSelectedMarket) {\r\n                if (this.props.currentSelectedMarket === 8) {\r\n                    this.props.selectMainMarket('8'); // Need to ask market for Next goal in prematch\r\n                } \r\n                else if (this.props.currentSelectedMarket === 7) {\r\n                    this.props.selectMainMarket('1');\r\n                } \r\n                else this.props.selectMainMarket(this.props.currentSelectedMarket);\r\n            }\r\n    }\r\n}\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture || {});\r\n        });\r\n    };\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            if (!this.props.searchStarted) {\r\n                let { nextIndex } = this.props;\r\n                const data = slice(this.props.partialAllEvents, nextIndex, nextIndex + 20);\r\n                this.props.getMarketData(data, nextIndex, data.length);\r\n            } else {\r\n                // if is in search page\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event } = this.state;\r\n        let {\r\n            searchStarted,\r\n            mainEvents,\r\n            selectMainMarket,\r\n            mainSelectedMarket,\r\n            noSearchResults,\r\n            noEvents,\r\n            hasNextPage,\r\n            searchTodayEvents,\r\n            filteredTodayEvents,\r\n            locations,\r\n            locationsLoading,\r\n            setExtraMarkets,\r\n            selectExtraMarket\r\n        } = this.props;\r\n        \r\n        let filteredMainEvents = noSearchResults ? [] : filteredTodayEvents.length > 0 ? filteredTodayEvents : mainEvents;\r\n        \r\n        let groupedEvents =\r\n            filteredMainEvents &&\r\n            filteredMainEvents[0] &&\r\n            filteredMainEvents[0].sport_id &&\r\n            groupBy(filteredMainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];\r\n\r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                const groupSportId = group[0].sport_id;\r\n                let marketSelector = (\r\n                    !this.props.fromLivePage ? \r\n                        <MainMarketSelector selectMainMarket={selectMainMarket} mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[groupSportId]} mainSelectedMarket={mainSelectedMarket} />\r\n                    : null\r\n                );\r\n\r\n                let groupMatches = <Matches selectExtraMarket ={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={group} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                matches.push(\r\n                    <div key={sportId}>\r\n                        {marketSelector}\r\n                        {groupMatches}\r\n                    </div>,\r\n                );\r\n            }\r\n        });\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <InfiniteScroll\r\n                        dataLength={filteredMainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={hasNextPage}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                        scrollThreshold = {0.95}\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {/* {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                </div>\r\n            ) : noSearchResults || noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">\r\n                    {this.props.fromLivePage ? '': 'Nothing Found'}\r\n                </div>\r\n            ) : (\r\n                !searchStarted && <Loading />\r\n            );\r\n\r\n        return (\r\n            <div className=\"events__wrap pre-match-wrapper\">\r\n                <Locations {...this.props} handleSearch={searchTodayEvents} />\r\n                { locations.length > 0 ? drawContent : !locationsLoading ? <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div> : <Loading /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedSport: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    getSportEvents: PropTypes.func,\r\n    getTodayLocations: PropTypes.func,\r\n    setTodayResetPage: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    searchValue: PropTypes.string,\r\n    language: PropTypes.string,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    locationsLoading: PropTypes.bool,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedSport: state.today.selectedSport,\r\n        mainEvents: state.today.mainEvents,\r\n        mainSelectedMarket: state.today.mainSelectedMarket,\r\n        noSearchResults: state.today.noSearchResults,\r\n        noEvents: state.today.noEvents,\r\n        hasNextPage: state.today.hasNextPage,\r\n        searchStarted: state.today.searchStarted,\r\n        searchValue: state.today.searchValue,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        filteredTodayEvents: state.today.filteredTodayEvents,\r\n        locations: state.today.locations,\r\n        locationsLoading: state.today.locationsLoading,\r\n        fetchedAll: state.today.fetchedAll,\r\n        partialAllEvents: state.today.partialAllEvents,\r\n        nextIndex: state.today.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        search: (value) => dispatch(search(value)),\r\n        getTodayLocations: (sportId) => dispatch(getTodayLocations(sportId)),\r\n        setTodayResetPage: () => dispatch(setTodayResetPage()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        searchTodayEvents: (value) => dispatch(searchTodayEvents(value)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n        getTodaySportsMobile: () => dispatch(getTodaySportsMobile()),\r\n        setLocationLoading: (val) => dispatch(setLocationLoading(val))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport SportsList from '../Shared/SportsList';\r\nimport { selectSportMobile, setTodaySportsMobile, clearSportEvents } from '../../store/actions/todayActions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        const { statsData, fromLivePage, currentSelectedSport } = this.props;\r\n        if (!statsData && !fromLivePage) this.props.getStatsData();\r\n        if (!this.props.mainEvents.length > 0 && !this.props.fromLivePage) { // DOn't reload data If main events are already present. \r\n            //this.props.getTodaySports();\r\n            this.props.setTodaySportsMobile();\r\n            this.props.selectSportMobile(lSportsConfig.today.selectedSport);\r\n        }\r\n        if (fromLivePage){\r\n            this.props.clearSportEvents();\r\n            this.props.selectSportMobile(currentSelectedSport);}\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {fromLivePage, currentSelectedSport } = this.props;\r\n        if (fromLivePage) {\r\n            if (prevProps.currentSelectedSport !== currentSelectedSport) {\r\n                this.props.clearSportEvents();\r\n                this.props.selectSportMobile(currentSelectedSport, true);\r\n            }\r\n        }\r\n\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.props.getTodaySports();\r\n        // }\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.props.selectSportMobile(sportId);\r\n    };\r\n\r\n    render() {\r\n        let { selectedSport, language, mainEvents, noSport, sportCountObj } = this.props;\r\n        return (\r\n            !noSport ?\r\n            <div className={`pre-match-wrapper`}>\r\n                <SportsList\r\n                    sports={staticPrematchSports()}\r\n                    sportsObj={sportCountObj}\r\n                    selectedSport={selectedSport}\r\n                    selectSport={this.selectSport}\r\n                    searchPath=\"\"\r\n                    type=\"today\"\r\n                    language={language}\r\n                    isDisable={mainEvents.length === 0}\r\n                    sort\r\n                />\r\n            </div>\r\n            : null\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    // getTodaySports: PropTypes.func,\r\n    selectSportMobile: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.today.sports,\r\n        selectedSport: state.today.selectedSport,\r\n        language: state.general.language,\r\n        mainEvents: state.today.mainEvents,\r\n        sportCountObj: state.today.sportCountObj,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // getTodaySports: () => dispatch(getTodaySports()),\r\n        selectSportMobile: (sportId, dontFetch, dontClearMainEvents) => dispatch(selectSportMobile(sportId, dontFetch, dontClearMainEvents)),\r\n        setTodaySportsMobile: () => dispatch(setTodaySportsMobile()),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        clearSportEvents: () => dispatch(clearSportEvents())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React from 'react';\r\nimport Sports from './Sports';\r\nimport Events from './Events';\r\nimport SportsLivePage from './SportsLivePage';\r\n\r\nfunction Today(props) {\r\n    return (\r\n        <div className=\"main-container\">\r\n            { props.fromLivePage === true ? <SportsLivePage {...props} noSport={props.noSports}/>:<Sports {...props} noSport={props.noSports}/>}\r\n            <Events {...props}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Today;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filter, includes, find, forEach, orderBy, isEmpty, isEqual } from 'lodash';\r\nimport Locations from './Locations';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../Shared/MainMarketSelector';\r\nimport Loading from '../Common/NewLoading';\r\nimport ExtraOddsModal from './ExtraOddsModal';\r\nimport {\r\n    selectMainMarket,\r\n    getSportEvents,\r\n    search,\r\n    getInplayLocations,\r\n    setInplayResetPage,\r\n    clearSportEvents,\r\n    clearLocations,\r\n    setTotalEventCount,\r\n    setCurrentEventCount,\r\n    resetLiveMatches\r\n} from '../../store/actions/inplayActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets } from '../../store/actions/lsports.global.actions';\r\nimport SportsLive from './SportsLive';\r\nimport { locationSortingOrder, sportAndLocationData } from '../../config/sports';\r\nimport { MARKET_FOR_OUTER_SLIDER, liveMarketOnMain } from '../../config/markets';\r\nimport map from 'lodash.map';\r\nimport { remove } from 'lodash';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\nimport Util from '../../helper/Util';\r\nimport Today from '../Today/index';\r\nimport { resetSelectedLocations, selectSportMobile, searchTodayEvents } from '../../store/actions/todayActions';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport LiveStreamModal from '../Shared/LiveStramModal';\r\nimport jwtService from '../../services/jwtService';\r\nimport { onUpdateDeventMarkets }  from '../../graphql/subscriptions';\r\nimport { onUpdateLiveDeventMarkets, onUpdateMatchMarkets, onUpdateExtraMarket, }  from '../../graphql/subscriptions';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { dynamoClient } from '../../App';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { getLivePartialDEvents, getAllLiveFixtureMarkets, getSingleLivePartialEvent, getAllLiveMatches, getSingleLiveMarkets, getSingleMarketOfEvent, getLiveMatchMarkets, getLiveCount } from '../../dynamo/inplayParams';\r\n// List of fixtures for which firebase events have been subscribed.\r\n// let subscribedFixtures = [];\r\nlet unSub = [];\r\nlet allData = [];\r\nlet allLiveEvents = [];\r\nlet liveMatches = {};\r\nlet liveMatchSub;\r\nlet marketSubscription;\r\nlet liveEvents = {};\r\nlet liveEventsCount;\r\nlet liveMarketCount;\r\nlet liveMarkets = {};\r\nlet livescores = {};\r\nlet liveScoreCount;\r\nlet unsubscribe;\r\nlet timerAddDel;\r\nlet liveMatchesCheck = {};\r\nlet sportsCount = {};\r\nlet getDataFromDB = false;\r\nlet websocket;\r\nlet websocketConnectionAttempts = 0;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\n\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n            liveMatches: {},\r\n            todayMatches: {},\r\n            fixedData: {},\r\n            isLoading: true,\r\n            locationAndSportsObj: {},\r\n            currentSelectedLeague: 'all',\r\n            currentSelectedSport: lSportsConfig.inplay.selectedSport, //Football\r\n            searchVal: '',\r\n            liveMatchesObj: {},\r\n            liveStreamAvailable: false,\r\n            liveStreamData: [],\r\n            liveStreamUrl: null,\r\n            showLiveStream: false,\r\n            fixturesLoaded: false,\r\n            marketsLoaded: false,\r\n            isDisconnected: false,\r\n            partialEvents: {},\r\n            showToday: false,\r\n            runningFetch: false,\r\n            disbleSportsSwitch: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: Fetch all the live Matches and there Market data\r\n        //this.loadAllDataForLiveMatches();\r\n        // const { getStatsData } = this.props;\r\n        // getStatsData();\r\n        // this.fetchLiveStreamMatches();\r\n        liveMatches = {};\r\n        this.setState({disbleSportsSwitch: true})\r\n        this.getLiveMatches();\r\n        window.addEventListener('online', this.handleConnectionChange);\r\n        window.addEventListener('offline', this.handleConnectionChange);\r\n        \r\n      \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { fixedData, liveMatchesArray, fixturesLoaded, marketsLoaded, isDisconnected, currentSelectedSport  } = this.state;\r\n        \r\n        if (prevState.isDisconnected !== isDisconnected) {\r\n            if (isDisconnected) { \r\n                this.unsubscribe();\r\n                this.unsubscribeEvents();\r\n            }    else if(!isDisconnected){\r\n                liveMatches = {}\r\n                this.setState({disbleSportsSwitch: true})\r\n                this.getLiveMatches();\r\n            };\r\n        }\r\n\r\n        if(prevState.currentSelectedSport !== currentSelectedSport) {\r\n            this.unsubscribe();\r\n            this.unsubscribeEvents();\r\n            this.setState({isLoading: true, disbleSportsSwitch: true });\r\n            liveMatches = {};\r\n            this.getLiveMatches();\r\n            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        liveMatches = {};\r\n        getDataFromDB = false;\r\n        sportsCount={};\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n        this.unsubscribe();\r\n        this.unsubscribeEvents();\r\n        window.removeEventListener('online', this.handleConnectionChange);\r\n        window.removeEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    startTimer = () => {\r\n        timerAddDel = setInterval(() => {\r\n            liveMatchesCheck={};\r\n            this.getLiveMatchCount();\r\n            this.checkLiveMatches();\r\n        } , 20000);\r\n    }\r\n\r\n    getLiveMatches = ( nextToken ) => {\r\n        dynamoClient.scan(getAllLiveMatches(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                if(!data.Items.length) {\r\n                    this.setSportsAndLocations()\r\n                }\r\n                forEach(data.Items, (item) => {\r\n                    if(item.fixture_status === lSportsConfig.statuses.inplay) {\r\n                        if(!liveMatches[item.sport_id]){\r\n                            liveMatches[item.sport_id] = [];\r\n                        }\r\n                        liveMatches[item.sport_id].push(item.fixture_id);\r\n                    }\r\n                })\r\n                if(data.LastEvaluatedKey) {  \r\n                    this.getLiveMatches( data.LastEvaluatedKey );\r\n                } else {\r\n                    this.setState({liveMatchesObj: liveMatches}, () => \r\n                    {\r\n                        this.getLiveMatchCount();\r\n                        this.getAllLiveFixtureDevents();\r\n                    });\r\n                }\r\n        }\r\n    })\r\n    }\r\n\r\n    checkLiveMatches = (nextToken) => {\r\n        dynamoClient.scan(getAllLiveMatches(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                if(!data.Items.length) {\r\n                    this.setSportsAndLocations()\r\n                }\r\n                forEach(data.Items, (item) => {\r\n                    if(item.fixture_status === lSportsConfig.statuses.inplay) {\r\n                        if(!liveMatchesCheck[item.sport_id]){\r\n                            liveMatchesCheck[item.sport_id] = [];\r\n                        }\r\n                        liveMatchesCheck[item.sport_id].push(item.fixture_id);\r\n                    }\r\n                })\r\n                if(data.LastEvaluatedKey) {  \r\n                    this.checkLiveMatches( data.LastEvaluatedKey );\r\n                } else {\r\n                    if(!isEqual(this.state.liveMatchesObj, liveMatchesCheck)){\r\n                        this.setState({liveMatchesObj: liveMatchesCheck}, () => \r\n                        {\r\n                            this.getAllLiveFixtureDevents();\r\n                            //this.props.getStatsData();\r\n                        });\r\n                    }\r\n                }\r\n        }\r\n    })\r\n    }\r\n\r\n    getLiveMatchCount = async () => {\r\n        const { liveMatchesObj } = this.state;\r\n        for (let id in liveMatchesObj) {\r\n            if (!sportsCount[id]) {\r\n                sportsCount[id]={counter:0};\r\n            } \r\n        }\r\n        for (let sportId in liveMatchesObj) {\r\n            let fixture = Object.values(liveMatchesObj[sportId]);\r\n            let objSize = fixture.length;\r\n            \r\n            try {\r\n                let totalCount = 0;\r\n                //batchGet can fetch max 100 items at a time, therefore spliting the fixtures in segments\r\n                if (objSize > 100) {\r\n                    let segments =  Math.ceil(objSize/100);\r\n                    let j = 0;\r\n                    for (let i = 1; i <= segments; i++){\r\n                        let arr=[]\r\n                        if(i==segments){\r\n                            arr=fixture.slice(j,objSize);\r\n                        }else{\r\n                            arr =fixture.slice(j,i*100);\r\n                        }\r\n                       \r\n                        let fixtureIds = arr.map((element) => {\r\n                            return element = { fixture_id: element.toString() + '^sport_event_status' };\r\n                        })\r\n\r\n                        const promise_1 = dynamoClient.batchGet(getLiveCount(fixtureIds)).promise();\r\n                        await promise_1.then(res => {\r\n                            let { Responses: { LiveMarkets } } = res;\r\n                            if (LiveMarkets?.length) {\r\n                                totalCount = totalCount + LiveMarkets.length;\r\n                            }\r\n                        }).catch(err => {\r\n                        console.log(err);\r\n                        });\r\n                        j = i * 100;\r\n                    }\r\n                    sportsCount[sportId]={counter:totalCount}\r\n                }//If items are less than 100\r\n                else {\r\n                    let fixtureIds = fixture.map((element) => {\r\n                        return element = { fixture_id:element.toString() + '^sport_event_status' };\r\n                     });\r\n                    const promise_1 = dynamoClient.batchGet(getLiveCount(fixtureIds)).promise();\r\n                    await promise_1.then(res => {\r\n                        let { Responses: { LiveMarkets } } = res;\r\n                        if (LiveMarkets?.length) {\r\n                            sportsCount[sportId] = { counter: LiveMarkets.length };\r\n                        }\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.log('err:' ,error);\r\n            } \r\n        }\r\n        this.setState({ sportsCountObj: sportsCount }, () => {\r\n            getDataFromDB = true;\r\n            this.setSportsAndLocations();\r\n        });\r\n    }\r\n\r\n    getLiveMatchesMarkets = (clear) => {\r\n        let {partialEvents, currentSelectedSport, liveMatches} = this.state;\r\n\r\n        let data = !isEmpty(partialEvents[currentSelectedSport]) && Object.values(partialEvents[currentSelectedSport])\r\n            liveMarketCount = 0;\r\n            liveScoreCount = 0;\r\n            if(clear) {\r\n            liveMarkets = {}\r\n        }\r\n\r\n        forEach(data, (e) => {\r\n            liveMarkets[e.fixture_id] = {};\r\n            this.getSingleMatchMarkets(e.fixture_id, data.length);\r\n        });\r\n        return;\r\n        \r\n    }\r\n\r\n    getSingleLiveMatchMarket = async(market, isLiveScore, totalLiveScore, totalCount) => {\r\n        //let {partialEvents} = this.state;\r\n        const { currentSelectedSport, partialEvents } = this.state;\r\n        try {\r\n\r\n        let event =  dynamoClient.query(getSingleMarketOfEvent(market)).promise();\r\n        return await event.then(e => {\r\n            if(isLiveScore) {\r\n                e.Items[0].livescore = JSON.parse(e.Items[0].livescore);\r\n                livescores[e.Items[0].match_id] = e.Items[0].livescore;\r\n                liveScoreCount++;\r\n            }\r\n            let market = {};\r\n            if(liveMarkets[e.Items[0].match_id])\r\n                market = liveMarkets[e.Items[0].match_id];\r\n                if(!isLiveScore) {\r\n            e.Items[0].market = JSON.parse(e.Items[0].market);\r\n            let newMrkt = Object.values(e.Items[0].market)[0];\r\n            liveMarkets[e.Items[0].match_id] = {...market, [newMrkt.Id]: newMrkt}\r\n            liveMarketCount++;\r\n                }\r\n            if(liveMarketCount === totalCount && liveScoreCount === totalLiveScore)\r\n            {\r\n                let finalMatches = {}\r\n                for(let id in liveMarkets) {\r\n                    finalMatches[id] = {...partialEvents[currentSelectedSport][id],Markets: liveMarkets[id], Livescore: livescores[id]};\r\n                }\r\n                this.setState({liveMatches: finalMatches, isLoading: false, runningFetch: false}, ()=> this.startListener());\r\n            }\r\n            \r\n        });\r\n    } catch (err) {\r\n        //reset logic to be added here\r\n        if(!isLiveScore)\r\n        liveMarketCount++;\r\n        if(isLiveScore)\r\n        liveScoreCount++;\r\n        if(liveMarketCount === totalCount)\r\n            {\r\n                let finalMatches = {}\r\n                for(let id in liveMarkets) {\r\n                    finalMatches[id] = {...partialEvents[currentSelectedSport][id],Markets: liveMarkets[id], Livescore: livescores[id]};\r\n                }\r\n\r\n                this.setState({liveMatches: finalMatches, isLoading: false, runningFetch: false}, ()=> this.startListener());\r\n            }\r\n        console.log(err);\r\n    }\r\n    }\r\n\r\n    unsubscribe =() => {\r\n        console.log(\" *******  Unsubscribe live matches **********\")\r\n        if(unsubscribe) {\r\n            unsubscribe.unsubscribe();\r\n        }\r\n        if(websocket) {\r\n            websocket.close();\r\n        }\r\n\r\n        \r\n        clearInterval(timerAddDel);\r\n        unsubscribe = null;\r\n    }\r\n\r\n    \r\n    startListener = () => {\r\n        this.unsubscribe();\r\n        this.startTimer();\r\n\r\n        // // Uncomment this part if websocket should not retry to connect when appsync connection has already been created\r\n        // if (websocketConnectionAttempts >= maxWebsocketRetryCount) {\r\n        //     // Open appsync connection\r\n        //     this.startListenerAppSync();\r\n        //     return;\r\n        // }\r\n\r\n        websocket = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        websocket.addEventListener('open', () => {\r\n            websocketConnectionAttempts = 0;\r\n        });\r\n\r\n        websocket.addEventListener('message', (event) => {\r\n            this.handleFirebaseUpdates({value: event});\r\n        });\r\n\r\n        websocket.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else websocketConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (websocketConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.unsubscribe();\r\n                liveMatches = {};\r\n                this.setState({disbleSportsSwitch: true});\r\n                this.getLiveMatches();\r\n            } else {\r\n                // Open appsync connection\r\n                this.startListenerAppSync();\r\n            }\r\n        });\r\n    }\r\n\r\n    startListenerAppSync = () => {\r\n        let marketSubscription = API.graphql(graphqlOperation(onUpdateLiveDeventMarkets));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below. \r\n        let unsub = marketSubscription.subscribe({\r\n            next: this.handleFirebaseUpdates,\r\n            error: (error) => {\r\n                this.unsubscribe();\r\n                liveMatches = {};\r\n                this.setState({disbleSportsSwitch: true})\r\n                this.getLiveMatches();\r\n            },\r\n        });\r\n        \r\n        unsubscribe = unsub;\r\n    }\r\n\r\n    handleConnectionChange = () => {\r\n        const condition = navigator.onLine ? 'online' : 'offline';\r\n        if (condition === 'online') {\r\n          const webPing = setInterval(\r\n            () => {\r\n              fetch('//google.com', {\r\n                mode: 'no-cors',\r\n                })\r\n              .then(() => {\r\n                this.setState({ isDisconnected: false }, () => {\r\n                  return clearInterval(webPing)\r\n                });\r\n              }).catch(() => this.setState({ isDisconnected: true }) )\r\n            }, 2000);\r\n          return;\r\n        }\r\n  \r\n        return this.setState({ isDisconnected: true });\r\n      }\r\n\r\n    fetchLiveStreamMatches = async () => {\r\n        try {\r\n            let liveStreamData = await jwtService.getLiveStreamData();\r\n            this.setState({ liveStreamData: liveStreamData });\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                // FIXME: Commenting the error temporarily\r\n                //toastr.error('', 'Something went wrong.');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getAllLiveFixtureDevents = () => {\r\n        let {liveMatchesObj, currentSelectedSport} = this.state;\r\n        liveEventsCount = 0;\r\n        liveEvents = {};\r\n\r\n        if(!liveMatchesObj[currentSelectedSport] && !isEmpty(liveMatchesObj)) {\r\n            this.setState({currentSelectedSport: Object.keys(liveMatchesObj)[0]});\r\n            liveMatches = {};\r\n            this.getLiveMatches();\r\n        } else if (isEmpty(liveMatchesObj)) {\r\n            this.setSportsAndLocations();\r\n        }else {\r\n            forEach(liveMatchesObj[currentSelectedSport], (match) => \r\n                this.getSingleMatchPartialEvent(match)\r\n            ) \r\n        }\r\n    }\r\n\r\n    getSingleMatchPartialEvent = async (fixtureId) => {\r\n        \r\n        let {liveMatchesObj, currentSelectedSport, partialEvents} = this.state;\r\n            try {\r\n            let event =  dynamoClient.query(getSingleLivePartialEvent(fixtureId)).promise();\r\n            return await event.then(e => {\r\n                e.Items[0].participant_one_full = JSON.parse(e.Items[0].participant_one_full);\r\n                e.Items[0].participant_two_full = JSON.parse(e.Items[0].participant_two_full);\r\n                e.Items[0].participants = [e.Items[0].participant_one_full, e.Items[0].participant_two_full];\r\n                if(e.Items[0].location && e.Items[0].location_id) {\r\n                    e.Items[0].location = JSON.parse(e.Items[0].location);\r\n                    e.Items[0].location = { ...e.Items[0].location, Id: e.Items[0].location_id?.toString() };\r\n                }\r\n                if(e.Items[0].league && e.Items[0].league_id) {\r\n                    e.Items[0].league = JSON.parse(e.Items[0].league);\r\n                    e.Items[0].league = { ...e.Items[0].league, Id: e.Items[0].league_id };\r\n                }\r\n                if(e.Items[0].sport && e.Items[0].sport_id) {\r\n                    e.Items[0].sport = JSON.parse(e.Items[0].sport);\r\n                    e.Items[0].sport = { ...e.Items[0].sport, Id: e.Items[0].sport_id };\r\n                }\r\n\r\n                liveEvents[fixtureId] = e.Items[0];\r\n                liveEventsCount++;\r\n                if(liveEventsCount === liveMatchesObj[currentSelectedSport].length) {\r\n\r\n                    partialEvents[currentSelectedSport] = liveEvents;\r\n                    this.setState({partialEvents: partialEvents}, () => {\r\n                            this.setSportsAndLocations();\r\n                            this.getLiveMatchesMarkets(true);\r\n                    })\r\n                }\r\n            });\r\n        } catch (err) {\r\n            //reset logic to be added here\r\n            liveEventsCount++;\r\n            if(liveEventsCount === liveMatchesObj[currentSelectedSport].length) {\r\n\r\n                    partialEvents[currentSelectedSport] = liveEvents;\r\n                    this.setState({partialEvents: partialEvents}, () => {\r\n                       \r\n                            this.setSportsAndLocations();\r\n                            this.getLiveMatchesMarkets(true);\r\n            \r\n                    })\r\n            }\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    setSportsAndLocations = () => {\r\n        \r\n        const { partialEvents, currentSelectedSport, liveMatchesObj } = this.state;\r\n        let selectedSport;\r\n        \r\n        let sports = sportAndLocationData();\r\n\r\n        if(isEmpty(partialEvents[currentSelectedSport])) {\r\n            sports = orderBy(sports, ['priority', 'Count'], ['asc','desc']);\r\n            this.setState({ locationAndSportsObj : sports,\r\n                isLoading: false, runningFetch: false\r\n            });\r\n            return;\r\n        }\r\n        \r\n        for (let id in liveMatchesObj) {\r\n            // let sport = liveMatchesObj[id];\r\n            //         sports[id].Count = sport.length;\r\n            if (!getDataFromDB) {\r\n                let sport = liveMatchesObj[id];\r\n                if (sports[id]) sports[id].Count = sport.length;\r\n            }\r\n            else if (getDataFromDB && this.state.sportsCountObj[id]) {\r\n                if (sports[id]) sports[id].Count = this.state.sportsCountObj[id].counter;\r\n            }\r\n        }\r\n\r\n        \r\n        for(let event of Object.values(partialEvents[currentSelectedSport])) {\r\n            sports[event.sport_id].Locations[event.location.Id] = event.location; \r\n        }\r\n\r\n\r\n        this.getSortedLocations(sports);\r\n        let sortedSports;\r\n        if (sports[lSportsConfig.sports.football.id].Count === 0) {\r\n            // If no football matches present sort by counts\r\n            sortedSports = orderBy(sports, ['Count', 'Id'], ['desc', 'asc']);\r\n        }        \r\n        else {\r\n            // If there is football match then priorities it and rest sorted by count\r\n            sortedSports = orderBy(sports, ['priority', 'Count'], ['asc','desc']);\r\n        } \r\n        if(!currentSelectedSport) {\r\n            for (let i in sortedSports) {\r\n                selectedSport = sortedSports[i];\r\n                break;\r\n            }\r\n        }\r\n        else selectedSport = find(sortedSports,(e) =>  e.Id == currentSelectedSport );\r\n        this.setState({ locationAndSportsObj : sortedSports, currentSelectedSport: selectedSport.Id });\r\n    }\r\n\r\n    getSortedLocations = (sports) => {\r\n        forEach(sports, elem => {\r\n           elem.Locations = this.sortLogic(elem.Locations);\r\n        })\r\n    }\r\n\r\n    sortLogic = (locations) => {\r\n        const sortingOrder = locationSortingOrder;\r\n        let preSortedList = [];\r\n        for(let s in sortingOrder) {\r\n            let elem = remove(locations, l => {\r\n                if (l) return l.Name === sortingOrder[s]\r\n            });\r\n            if (elem.length > 0) preSortedList.push(elem[0]);\r\n        }\r\n        return preSortedList.concat(locations.sort((a,b) => Util.compareStrings(a.Name, b.Name)))\r\n\r\n    }\r\n    \r\n    groupMatchesByStatus = () => {\r\n        let { fixedData } = this.state;\r\n        if(!fixedData) return;\r\n        \r\n        const matchesByStatus = {\r\n            '_2': {},\r\n            '_today': {},\r\n        };\r\n        Object.values(fixedData).forEach((item) => {\r\n            // If Fixture/Markets/Livescore is not available skip that match\r\n            if (item.Fixture && (item.Markets && !isEmpty(item.Markets) ) && item.Livescore) {\r\n                if (item.Fixture.Status === lSportsConfig.statuses.inplay && item.Livescore.Scoreboard.Status === lSportsConfig.statuses.inplay) {\r\n                    matchesByStatus['_2'][item.FixtureId] = item;\r\n                } \r\n            }\r\n        });\r\n        return matchesByStatus;\r\n    };\r\n\r\n    // subscribeEvents = (liveMatches) => {\r\n    //     marketSubscription = API.graphql(graphqlOperation(onUpdateLiveDeventMarkets));\r\n\r\n    //     // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below. \r\n\r\n    //     liveMatchSub = marketSubscription.subscribe({\r\n    //         next: this.handleFirebaseUpdates,\r\n    //         error: (error) => {\r\n    //             this.unsubscribeEvents();\r\n    //             this.loadAllDataForLiveMatches();\r\n    //         }\r\n            \r\n    //     });\r\n\r\n    // };\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.unsubscribeEvents();\r\n                this.subscribeExtraMarket(fixtureId);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => {\r\n                this.unsubscribeEvents();\r\n                this.subscribeExtraMarket(fixtureId);\r\n            },\r\n        });\r\n    }\r\n\r\n    unsubscribeEvents = () => {\r\n        if (liveMatchSub) liveMatchSub.close();\r\n        if (liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n\r\n        console.log(\"***** UnSubscribed all live matches. *****\");\r\n    };\r\n\r\n    // handleLiveMatchUpdates = (snap) => {\r\n    //     const liveMatches = snap.data().live_events;\r\n    //     if (!liveMatches) return;\r\n    //     this.setState({ liveMatchesArray : liveMatches });\r\n    // }\r\n\r\n    marketDifference = (markets, prevMarkets) =>  {\r\n        return map(markets, (market) => {   \r\n            const { Bets, Id } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({value}) => {\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        let {event} =this.state;\r\n        let newFixture = {};\r\n        if (!updatedMatch || !event || event.fixture_id != updatedMatch.match_id) {\r\n            return null;\r\n        };\r\n    \r\n        if(updatedMatch.outcomes){\r\n            let updatedMarket = Util.marketFormatter([updatedMatch], updatedMatch?.match_id);\r\n            let marketValue = updatedMarket && Object.values(updatedMarket)[0];\r\n\r\n            if (marketValue?.Bets && event?.market?.[`id_${marketValue.Id}`]) {\r\n                let currBets = event.market[`id_${marketValue.Id}`];\r\n                let newBet = marketValue.Bets;\r\n                if (currBets?.Bets) newBet = { ...currBets.Bets, ...newBet };\r\n                updatedMarket[Object.keys(updatedMarket)[0]].Bets = newBet;\r\n            }\r\n            newFixture.market = { ...event.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = event.market;\r\n        }\r\n        if(updatedMatch.sport_event_status){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.sport_event_status);\r\n        }\r\n        else {\r\n            newFixture.Livescore = event.Livescore;\r\n        }\r\n\r\n        \r\n        \r\n        //const marketWithDiff1 =  this.marketDifference(newFixture.imp_market, this.state.event.imp_market);\r\n        const marketWithDiff2 =  this.marketDifference(newFixture.market, this.state.event.market);\r\n        newFixture.Markets = [ ...marketWithDiff2];\r\n        newFixture = {...event, ...newFixture};\r\n        this.props.setCurrentEvent(newFixture);\r\n        this.setState({ event: newFixture}, () => {this.props.setExtraMarkets(newFixture.Markets);});\r\n\r\n    }\r\n\r\n    handleFirebaseUpdates = ({value}) => {\r\n\r\n        // const updatedMatch = value.data.onUpdateLiveMarkets;\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        const id = updatedMatch.match_id;\r\n        let marketId = updatedMatch.fixture_id;\r\n        marketId = marketId?.split('^')[1];\r\n        if (!updatedMatch.sport_event_status && marketId && liveMarketOnMain.indexOf(marketId) === -1) return;\r\n\r\n        const { liveMatches: { [id]: oldMatches } } = this.state;\r\n\r\n        // const { fixture_status: status } = updatedMatch; //_livescore \r\n        // let { liveMatches } = this.state;\r\n\r\n        if (updatedMatch.outcomes){\r\n        // if (!updatedMatch.livescore) return;\r\n        \r\n         if (!oldMatches) {\r\n            // temp return statement TO fix infinite loader\r\n            return;\r\n         }\r\n        \r\n\r\n         const marketWithDiff = map(Object.values(Util.marketFormatter([updatedMatch], id)), (market) => {\r\n            let { Bets, Id } = market;\r\n            const oldMarket = find(oldMatches.Markets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            if (oldMarket.Bets?.length && Bets) {\r\n                let temp = {};\r\n                oldMarket.Bets.map( (bet) => temp[ bet.Id ] = bet );\r\n                Bets = { ...temp, ...Bets };\r\n                Bets = Object.values(Bets);\r\n                // Bets = temp;\r\n            }\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b?.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n\r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...oldMarket,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n        let liveScore = oldMatches.Livescore;\r\n        if (updatedMatch.sport_event_status) {\r\n            liveScore = JSON.parse(updatedMatch.sport_event_status);\r\n        }\r\n\r\n        let newLiveMatches = {\r\n            ...this.state.liveMatches,\r\n            [id]: { ...oldMatches, Livescore: liveScore, Markets: { ...oldMatches.Markets, [`id_${marketWithDiff[0].Id}`]: marketWithDiff[0] } },\r\n        };\r\n        \r\n        this.setState({\r\n            liveMatches: newLiveMatches });        \r\n    }\r\n    else if(updatedMatch.sport_event_status){\r\n        let newLiveMatches = {\r\n                ...this.state.liveMatches,\r\n                [id]: { ...oldMatches, Livescore: JSON.parse(updatedMatch.sport_event_status)},\r\n            };\r\n        this.setState({\r\n            liveMatches: newLiveMatches\r\n            }\r\n        );\r\n    }\r\n    };\r\n\r\n    getSingleMatchMarkets = async (fixtureId , count) => {\r\n        // let {partialEvents} = this.state;\r\n        let { currentSelectedSport, partialEvents } = this.props;\r\n        try {\r\n            let event =  dynamoClient.query(getLiveMatchMarkets(fixtureId.toString())).promise();\r\n            return await event.then(e => {\r\n                \r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        if(item.outcomes) {\r\n                            // let mrktData = JSON.parse(item.market);\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems, fixtureId);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                }\r\n                // FIXME: set false temporarily need to update once Betradar setup\r\n                if(!count)\r\n                return fixture || e.Items[0];\r\n                else {\r\n                    \r\n                    liveMarkets[fixtureId] = fixture.market;\r\n                    livescores[fixtureId] = fixture.livescore || {};\r\n                    liveMarketCount++;\r\n                    if(liveMarketCount === count)\r\n                    {\r\n                        \r\n                        let finalMatches = {};\r\n                        let { liveMatchesObj, currentSelectedSport, partialEvents } = this.state;\r\n                        // let toReset= [];\r\n\r\n                        // for(let id in liveMatchesObj[currentSelectedSport]) {\r\n                        //     let fixtureId = liveMatchesObj[currentSelectedSport][id];\r\n                        //     if(!partialEvents[currentSelectedSport][fixtureId] || !livescores[fixtureId]){\r\n                        //         toReset.push(+fixtureId);\r\n                        //     }\r\n                        // }\r\n                        // console.log(toReset);\r\n                        // if (toReset.length) this.props.resetLiveMatches(toReset);\r\n\r\n                        for(let id in liveMarkets) {\r\n                            if(liveMarkets[id] && livescores[id] && Object.keys(liveMarkets[id]).length) {\r\n                                finalMatches[id] = {...partialEvents[currentSelectedSport][id],Markets: liveMarkets[id], Livescore: livescores[id]};\r\n                            }\r\n                        }\r\n\r\n                        this.setState({liveMatches: finalMatches, isLoading: false, runningFetch: false, disbleSportsSwitch:false}, ()=> this.startListener());\r\n                    }\r\n                }\r\n            });\r\n        } catch (err) {\r\n            liveMarketCount++;\r\n                    if(liveMarketCount === count)\r\n                    {\r\n            \r\n                        let finalMatches = {};\r\n                        let { liveMatchesObj, currentSelectedSport } = this.state;\r\n                        // let toReset= [];\r\n\r\n                        // for(let id in liveMatchesObj[currentSelectedSport]) {\r\n                        //     let fixtureId = liveMatchesObj[currentSelectedSport][id];\r\n                        //     if(!partialEvents[currentSelectedSport][fixtureId] || !livescores[fixtureId]){\r\n                        //         toReset.push(+fixtureId);\r\n                        //     }\r\n                        // }\r\n                        // console.log(toReset);\r\n                        // if (toReset.length) this.props.resetLiveMatches(toReset);\r\n\r\n                        for(let id in liveMarkets) {\r\n                            finalMatches[id] = {...partialEvents[currentSelectedSport][id],Markets: liveMarkets[id], Livescore: livescores[id]};\r\n                        }\r\n                        this.setState({liveMatches: finalMatches, isLoading: false, runningFetch: false, disbleSportsSwitch:false}, ()=> this.startListener());\r\n                    }\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    openExtraOddsModal = (fixture, liveStreamAvailable) => {\r\n        this.unsubscribe();\r\n            this.getSingleMatchMarkets(fixture.fixture_id).then(e => {\r\n                fixture = {...fixture, Markets: e.market, Livescore: e.livescore}\r\n                this.subscribeExtraMarket(fixture.fixture_id);\r\n                \r\n                this.setState({ event: fixture, liveStreamAvailable: liveStreamAvailable }, () => {\r\n                this.props.setCurrentEvent(fixture);\r\n                this.setState({ showExtraOddsModal: true });\r\n            })\r\n                \r\n                \r\n                \r\n                // const collection = this.props.language === `en`? `d_event` : `d_event_${this.props.language}`;\r\n                // unSub.push(firebaseDB.collection(collection).doc(`${fixture.FixtureId}`).onSnapshot(this.handleFirebaseUpdates));\r\n                });\r\n\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.unsubscribeEvents();\r\n        this.getLiveMatchesMarkets();\r\n        // this.getLiveMatches();\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        let statsTemplateType = 'live';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', statsTemplateType);\r\n    };\r\n\r\n    openLiveStreamModal = (streamURL) => {\r\n        this.unsubscribe();\r\n        this.setState({ liveStreamUrl : streamURL }, () => this.setState({ showLiveStream: true }));\r\n    }\r\n\r\n    closeLiveStreamModal = () => {\r\n        this.unsubscribe();\r\n        liveMatches = {};\r\n        this.setState({disbleSportsSwitch: true})\r\n        this.getLiveMatches();\r\n        this.setState({ liveStreamUrl : null, showLiveStream: false });\r\n    }\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            if (!this.props.searchStarted) {\r\n                // if is in main page\r\n                this.props.getSportEvents(this.props.selectedSport);\r\n            } else {\r\n                // if is in search page\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    };\r\n\r\n    groupBySport = (matches) => { \r\n        const { currentSelectedSport } = this.state;\r\n        const sportWiseMatch = {};\r\n        \r\n        for (let key in matches) {\r\n            if (!matches.hasOwnProperty(key)) continue;\r\n\r\n            const match = matches[key];\r\n            if (!sportWiseMatch[match.fixture_status]) {\r\n                sportWiseMatch[match.fixture_status] = [];\r\n            }\r\n            sportWiseMatch[match.fixture_status].push(match);\r\n        }\r\n        return sportWiseMatch;\r\n    };\r\n\r\n    renderMarketAndMatches =  (liveMatches) => {\r\n        const elems = [];\r\n        for (let sportId in liveMatches) {\r\n            if (!liveMatches.hasOwnProperty(sportId)) continue;\r\n\r\n            const matches = liveMatches[sportId];\r\n            if (matches[0].fixture_status === lSportsConfig.statuses.inplay) { \r\n            elems.push(\r\n                <div key={`random`}> \r\n                    <Matches events={matches} liveStreamData={this.state.liveStreamData} openLiveStreamModal={this.openLiveStreamModal} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />\r\n                </div>,\r\n            );\r\n               \r\n            } \r\n         }\r\n        return elems;\r\n    };\r\n\r\n    selectLocation = (locationId) => {\r\n        this.setState({ currentSelectedLeague: locationId });\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.setState({ currentSelectedSport: sportId }, () => {\r\n            // this.props.selectTodaySport(sportId);\r\n        })\r\n    }\r\n\r\n    resetSelectedLocations = () => {\r\n        this.setState({ currentSelectedLeague: 'all' });\r\n        //this.props.resetSelectedLocations();\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        this.setState({searchVal : value });\r\n        this.props.searchTodayEvents(value);\r\n    }\r\n\r\n\r\n    render() {\r\n        let {\r\n            showExtraOddsModal,\r\n            event,\r\n            showStatisticsModal,\r\n            liveMatches,\r\n            isLoading,\r\n            locationAndSportsObj,\r\n            currentSelectedLeague,\r\n            searchVal,\r\n            currentSelectedSport,\r\n            showLiveStream,\r\n            liveStreamUrl,\r\n            liveStreamData,\r\n            todayMatches\r\n        } = this.state;\r\n        let { statisticsType, selectMainMarket, mainSelectedMarket, language } = this.props;\r\n        let lang = `name_${ language.toLowerCase() }`;\r\n        let matchForModal, filteredLiveMatches = {};\r\n        let liveMatchesFilteredBySports = filter(liveMatches , (e => e.sport?.Id === currentSelectedSport));\r\n        // debugger;\r\n        if (currentSelectedLeague !== 'all') {\r\n            filteredLiveMatches = filter(liveMatchesFilteredBySports, function(o) { return o.location.Id ==  Number.parseInt(currentSelectedLeague) });\r\n        }\r\n\r\n        if( searchVal !== '') {\r\n            filteredLiveMatches = filter(liveMatchesFilteredBySports, function(o) {\r\n                let searchParam =  `${o.participants[0][ lang ] || o.participants[0]?.name_en} ${o.participants[1][ lang ] || o.participants[1]?.name_en}` ;\r\n                return includes( searchParam.toLowerCase(), searchVal.toLowerCase());\r\n            });\r\n        }\r\n        // debugger;\r\n        const groupedLiveEvents = this.groupBySport( currentSelectedLeague !== 'all' || searchVal !== '' ? filteredLiveMatches : liveMatchesFilteredBySports);\r\n        const groupedTodayEvents = this.groupBySport(todayMatches);\r\n\r\n        let matches = this.renderMarketAndMatches(groupedLiveEvents);\r\n        matches = matches.concat(this.renderMarketAndMatches(groupedTodayEvents));\r\n\r\n\r\n\r\n        // Filter out the single match for extraOddsModal\r\n        if (showExtraOddsModal) {\r\n            // let items = groupedLiveEvents['2'];\r\n            // for (let sportId in items) {\r\n            //     if (!items.hasOwnProperty(sportId)) continue;\r\n            //     if (event.fixture_id === items[sportId].fixture_id) {\r\n            //         matchForModal = items[sportId];\r\n            //     }\r\n            // }\r\n            matchForModal = this.state.event;\r\n        }\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <MainMarketSelector\r\n                        selectMainMarket={selectMainMarket}\r\n                        mainMarket={MARKET_FOR_OUTER_SLIDER[currentSelectedSport]}\r\n                        mainSelectedMarket={MARKET_FOR_OUTER_SLIDER[currentSelectedSport][0].Id !== mainSelectedMarket ? mainSelectedMarket : MARKET_FOR_OUTER_SLIDER[currentSelectedSport][0].Id }\r\n                    />\r\n                    {matches}\r\n                    {/* <div className=\"pb-4\" /> */}\r\n                    {showExtraOddsModal &&\r\n                    <ExtraOddsModal \r\n                        event={event}\r\n                        liveStreamAvailable={this.state.liveStreamAvailable}\r\n                        closeModal={this.closeExtraOddsModal}\r\n                        liveMatch={event}\r\n                        // liveMatchURL= {find(liveStreamData,(e) => e.matchId == event.fixture_id)?.iframe}\r\n                        />}\r\n                    {/* {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                    {/* {showLiveStream  && <LiveStreamModal closeModal={this.closeLiveStreamModal} liveStreamMatch={liveStreamUrl} />} */}\r\n                </div>\r\n\r\n            ) : (\r\n                null\r\n                //<div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            );\r\n\r\n        return (\r\n            <div className=\"events__wrap\">\r\n                <SportsLive \r\n                        sports={locationAndSportsObj}\r\n                        selectSport={this.selectSport}\r\n                        selectedSport={currentSelectedSport}\r\n                        resetSelectMainMarket={selectMainMarket}\r\n                        resetSelectedLocations={this.resetSelectedLocations}\r\n                        isDisable = {this.state.disbleSportsSwitch}\r\n                    />\r\n                {isLoading ? <Loading /> :\r\n                    <>\r\n                    \r\n                    <Locations\r\n                        fromLivePage={true}\r\n                        locationsObj={find(locationAndSportsObj, { Id : currentSelectedSport })} // send current selected sport from array of objects\r\n                        searchVal={searchVal}\r\n                        handleSearch={this.handleSearch}\r\n                        selectLocation={this.selectLocation}\r\n                        currentSelectedLeague={currentSelectedLeague}\r\n                        resetSelectedLocations={this.resetSelectedLocations}\r\n                    />\r\n                    {drawContent}\r\n                    <div className={`pre-match-wrapper non-centre-loader`}>\r\n                        {/* <p className=\"header-live-today\" >Upcoming Events</p> */}\r\n                    <Today\r\n                        fromLivePage={true}\r\n                        noLoading={true}\r\n                        noSports={true}\r\n                        currentSelectedSport={currentSelectedSport}\r\n                        currentSelectedMarket={MARKET_FOR_OUTER_SLIDER[currentSelectedSport][0].Id !== mainSelectedMarket ? mainSelectedMarket : MARKET_FOR_OUTER_SLIDER[currentSelectedSport][0].Id }\r\n                        currentSelectedLeague={currentSelectedLeague}\r\n                    />\r\n                    </div>\r\n                    </>\r\n                    }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedSport: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.string,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    getSportEvents: PropTypes.func,\r\n    getInplayLocations: PropTypes.func,\r\n    setInplayResetPage: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    searchValue: PropTypes.string,\r\n    language: PropTypes.string,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedSport: state.inplay.selectedSport,\r\n        mainEvents: state.inplay.mainEvents,\r\n        mainSelectedMarket: state.inplay.mainSelectedMarket,\r\n        noSearchResults: state.inplay.noSearchResults,\r\n        noEvents: state.inplay.noEvents,\r\n        hasNextPage: state.inplay.hasNextPage,\r\n        searchStarted: state.inplay.searchStarted,\r\n        searchValue: state.inplay.searchValue,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,   \r\n        totalEventCount: state.inplay.totalEventCount,\r\n        lastIndex: state.inplay.lastIndex,\r\n        statsData: state.general.statsData   \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        search: (value) => dispatch(search(value)),\r\n        getInplayLocations: (sportId) => dispatch(getInplayLocations(sportId)),\r\n        setInplayResetPage: () => dispatch(setInplayResetPage()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        resetSelectedLocations: (locationId) => dispatch(resetSelectedLocations(locationId)), \r\n        selectTodaySport: (sportId) => dispatch(selectSportMobile(sportId)), \r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        searchTodayEvents: (value) => dispatch(searchTodayEvents(value)),\r\n        setCurrentEventCount: (count) => dispatch(setCurrentEventCount(count)),\r\n        setTotalEventCount: (count) => dispatch(setTotalEventCount(count)),\r\n        resetLiveMatches: (payload) => dispatch(resetLiveMatches(payload)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n    ","import React from 'react';\r\nimport Events from './Events';\r\n\r\nfunction Inplay(props) {\r\n    return (\r\n        <div className=\"main-container\">\r\n            {/* <Sports /> */}\r\n            <Events />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inplay;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Translate } from '../../localization';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet timer = 0;\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    handleChanged = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.search(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ searchVal: '' });\r\n    }\r\n\r\n    render() {\r\n        let { searchVal } = this.state;\r\n        let { parentPath } = this.props;\r\n\r\n        return (\r\n            <div className=\"sports py-2 pbb disable-select\">\r\n                <div className=\"sports__content sports__content_sm\">\r\n                    <div className=\"sports__search-bar\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ml-2 form-control sports__search-input\"\r\n                            autoFocus\r\n                            placeholder={Translate.searchHere}\r\n                            value={searchVal}\r\n                            onChange={this.handleChanged}\r\n                        />\r\n                        <i className=\"icon-search\" />\r\n                        <Link className=\"sports__close-search\" to={parentPath}>\r\n                            <i className=\"material-icons\">close</i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    search: PropTypes.func,\r\n    language: PropTypes.string,\r\n    parentPath: PropTypes.string,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Events from './Events';\r\nimport SearchBar from '../Shared/SearchBar';\r\nimport { search, setSearchStarted, clearLocations, clearSportEvents, clearSearch } from '../../store/actions/inplayActions';\r\n\r\nclass Search extends Component {\r\n    componentDidMount() {\r\n        this.props.clearSearch();\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n        this.props.setSearchStarted(true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSearchStarted(false);\r\n        this.props.clearSearch();\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n    }\r\n\r\n    render() {\r\n        let { search, language } = this.props;\r\n\r\n        return (\r\n            <div className=\"main-container\">\r\n                <SearchBar search={search} language={language} parentPath=\"/live\" />\r\n                <Events />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    search: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    language: PropTypes.string,\r\n    clearSearch: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        search: (value) => dispatch(search(value)),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearSearch: () => dispatch(clearSearch()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Events from './Events';\r\nimport SearchBar from '../Shared/SearchBar';\r\nimport { search, clearSearch, setSearchStarted, clearLeagueEvents, searchEvents } from '../../store/actions/prematchActions';\r\n\r\nclass Search extends Component {\r\n    componentDidMount() {\r\n        this.props.setSearchStarted(true);\r\n        this.props.clearSearch();\r\n        this.props.clearLeagueEvents();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            this.props.setSearchStarted(true);\r\n            this.props.clearSearch();\r\n            this.props.clearLeagueEvents();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSearchStarted(false);\r\n        this.props.clearSearch();\r\n        this.props.clearLeagueEvents();\r\n    }\r\n\r\n    render() {\r\n        let { search, language } = this.props;\r\n\r\n        return (\r\n            <div className=\"main-container\">\r\n                <SearchBar search={search} language={language} parentPath=\"/sports\" />\r\n                <Events />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    clearSearch: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    search: PropTypes.func,\r\n    clearLeagueEvents: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearSearch: () => dispatch(clearSearch()),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        clearLeagueEvents: () => dispatch(clearLeagueEvents()),\r\n        search: (value) => dispatch(searchEvents(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport SportsList from '../Shared/SportsList';\r\nimport { selectSportMobile, setLocationsActive, setResultsActive, selectLocation } from '../../store/actions/resultsActions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        // this.props.getResultsSports();\r\n        this.props.selectSportMobile(lSportsConfig.results.selectedSport);\r\n        this.props.setLocationsActive(true);\r\n        this.props.setResultsActive(false);\r\n        this.props.selectLocation(null);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.props.getResultsSports();\r\n        // }\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.props.setLocationsActive(true);\r\n        this.props.setResultsActive(false);\r\n\r\n        let selectedSport = this.props.selectedSport;\r\n\r\n        if (selectedSport !== sportId) {\r\n            this.props.selectLocation(null);\r\n            this.props.selectSportMobile(sportId);\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        let { selectedSport, language } = this.props;\r\n\r\n        return (\r\n            <div className={`pre-match-wrapper`}>\r\n                <SportsList\r\n                    sportsObj = {this.props.sportsCountObj}\r\n                    sports={staticPrematchSports()}\r\n                    selectedSport={selectedSport}\r\n                    selectSport={this.selectSport}\r\n                    searchPath=\"/results/search\"\r\n                    type=\"seven_days_finished\"\r\n                    language={language}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    selectSportMobile: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setResultsActive: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.results.sports,\r\n        selectedSport: state.results.selectedSport,\r\n        language: state.general.language,\r\n        sportsCountObj: state.results.sportsCountObj\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setResultsActive: (value) => dispatch(setResultsActive(value)),\r\n        selectLocation: (value) => dispatch(selectLocation(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Match(props) {\r\n    let { event } = props;\r\n    let results = event.sport_event_status && event.sport_event_status.home_score  ? [ event.sport_event_status.home_score, event.sport_event_status.away_score ] : null;\r\n    let sportId = event.sport_id;\r\n\r\n    let periodWidth = sportId === lSportsConfig.sports.basketball.id ? 'results__score-md' : 'results__score-sm';\r\n    let periods = event?.sport_event_status?.period_scores?.period_score ? event.sport_event_status.period_scores.period_score : null;\r\n    let drawPeriods = Util.getSportPeriods(periods, sportId);\r\n    let currentDate = Util.convertToLocalTimezone(event.start_date);\r\n    let dateString = currentDate.dateString;\r\n    let timeString = currentDate.timeString;\r\n\r\n    let dateTime = (\r\n        <div className=\"text-center text-black py-2 px-1\">\r\n            <time className=\"d-block\">{dateString}</time>\r\n            <time className=\"d-block\">{timeString}</time>\r\n        </div>\r\n    );\r\n\r\n    let participants = (\r\n        <div className=\"results__participants text-gray-darker p-2\">\r\n            <span className=\"d-block ellipsis ls-0\">{event.participant_one_full.name_en}</span>\r\n            <span className=\"d-block ellipsis ls-0\">{event.participant_two_full.name_en}</span>\r\n        </div>\r\n    );\r\n\r\n    let statistics = event.sport_event_status && event.sport_event_status.statistics ? event.sport_event_status.statistics : null;\r\n    let cards = sportId === lSportsConfig.sports.football.id ? Util.getSportCards(statistics) : null;\r\n    let score = (\r\n        <div className=\"results__score p-2\">\r\n            {drawPeriods}\r\n            {results && (\r\n                <div className={`text-green font-weight-bold ${periodWidth}`}>\r\n                    \r\n                    <span className=\"d-block\">{results[0]}</span>\r\n                    <span className=\"d-block\">{results[1]}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"match__panel hybrid-tomorrow\">\r\n            <div className=\"results__panel\">\r\n                {dateTime}\r\n                {participants}\r\n                {cards}\r\n                {score}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n};\r\n\r\nexport default Match;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/resultsActions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events } = props;\r\n    let lastLeagueId = null;\r\n\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n\r\n                  if (lastLeagueId === e.league_id) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league_id;\r\n                      lastLeagueId = leagueId;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && (\r\n                          <div className='my-2'  key={'panel_' + e.fixture_id}>\r\n                              {groupInfo}\r\n                              {divider}\r\n                              <Match event={e} />\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    openMarketsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchStarted: state.results.searchStarted,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Matches from './Matches';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { getResultsLocationEvents, search, setResultsResetPage, clearLocationEvents } from '../../store/actions/resultsActions';\r\n\r\nclass Events extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setResultsResetPage();\r\n\r\n            if (!this.props.searchStarted) {\r\n                // this.props.getResultsLocationEvents(this.props.selectedLocation);\r\n            } else {\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearLocationEvents();\r\n    }\r\n\r\n    // fetchMoreData = () => {\r\n    //     if (this.props.hasNextPage) {\r\n    //         if (!this.props.searchStarted) {\r\n    //             // if is in main page\r\n    //             this.props.getResultsLocationEvents(this.props.selectedLocation);\r\n    //         } else {\r\n    //             // if is in search page\r\n    //             this.props.search(this.props.searchValue);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    render() {\r\n        let { searchStarted, mainEvents, noSearchResults, noEvents, hasNextPage, locations, isLocationLoading } = this.props;\r\n        let groupedEvents =\r\n            mainEvents &&\r\n            mainEvents[0] &&\r\n            mainEvents[0].sport_id &&\r\n            groupBy(mainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];\r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                let groupMatches = <Matches events={group} />;\r\n\r\n                matches.push(<div key={sportId}>{groupMatches}</div>);\r\n            }\r\n        });\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    {matches}   \r\n                <div className=\"pb-4\" />\r\n                </div>\r\n            ) : noSearchResults || noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing !!!!! Found</div>\r\n            ) : (\r\n                !searchStarted && <Loading />\r\n            );\r\n\r\n        return locations.length > 0 ? <div className=\"events__wrap\">{drawContent}</div> : !isLocationLoading ? <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div> :null\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedLocation: PropTypes.number,\r\n    searchValue: PropTypes.string,\r\n    mainEvents: PropTypes.array,\r\n    searchStarted: PropTypes.bool,\r\n    getResultsLocationEvents: PropTypes.func,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    language: PropTypes.string,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    setResultsResetPage: PropTypes.func,\r\n    clearLocationEvents: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLocation: state.results.selectedLocation,\r\n        searchValue: state.results.searchValue,\r\n        mainEvents: state.results.mainEvents,\r\n        searchStarted: state.results.searchStarted,\r\n        noSearchResults: state.results.noSearchResults,\r\n        noEvents: state.results.noEvents,\r\n        language: state.general.language,\r\n        hasNextPage: state.results.hasNextPage,\r\n        locations: state.results.locations,\r\n        isLocationLoading: state.results.isLocationLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getResultsLocationEvents: (locationId) => dispatch(getResultsLocationEvents(locationId)),\r\n        search: (value) => dispatch(search(value)),\r\n        setResultsResetPage: () => dispatch(setResultsResetPage()),\r\n        clearLocationEvents: () => dispatch(clearLocationEvents()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Loading from '../Common/NewLoading';\r\nimport { getResultsLocations, selectLocation, setResultsLocationEvents, setLocationsActive, setResultsActive } from '../../store/actions/resultsActions';\r\n\r\nclass Locations extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // let sportId = this.props.selectedSport;\r\n            // this.props.getResultsLocations(sportId);\r\n        }\r\n    }\r\n\r\n    handleClick = (e, locationId) => {\r\n        e.preventDefault();\r\n        // let { selectedLocation } = this.props;\r\n        // let locState = selectedLocation === locationId || locationId === null ? false : true;\r\n        // locationId = locState ? locationId : null;\r\n        this.props.selectLocation(locationId);\r\n        this.props.setLocationsActive(false);\r\n        this.props.setResultsActive(true);\r\n        this.props.setResultsLocationEvents(locationId);\r\n    };\r\n\r\n    render() {\r\n        let { locations, isLocationLoading, language} = this.props;\r\n        let lang = `name_${language.toLowerCase()}`;\r\n        let locationLength = locations ? locations.length : 0;\r\n        let locationsList =\r\n            !isLocationLoading ? locations.length > 0 ? (\r\n                locations.map((item, i) => {\r\n                    let locationId = item.location_id;\r\n                    let locationName = item[lang] || item.name_en;\r\n                    let count = item.fixtures_count;\r\n                    let divider = locationLength - 1 > i ? <div className=\"location__divider\"> </div> : null;\r\n\r\n                    return (\r\n                        <div className=\"location\" key={locationId}>\r\n                            <Grid\r\n                                container\r\n                                className=\"justify-content-md-center location__item mx-auto p-0 pb-2 \"\r\n                                onClick={(e) => this.handleClick(e, locationId)}\r\n                            >\r\n                                <Grid item xs={10} className=\"d-flex align-items-center p-0\">\r\n                                    <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"flag\"></div>\r\n                                    <span className=\"ellipsis pr-3\">{locationName}</span>\r\n                                </Grid>\r\n                                <Grid item xs={1} className=\"p-0\">\r\n                                    {count}\r\n                                </Grid>\r\n                                <Grid item xs={1} className=\"p-0\">\r\n                                    <i className=\"material-icons location__rotate-icon\"> keyboard_arrow_right </i>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {divider}\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : null\r\n            : (\r\n                <Loading />\r\n            );\r\n\r\n        return <div className=\"disable-select pt-3\">{locationsList}</div>;\r\n    }\r\n}\r\n\r\nLocations.propTypes = {\r\n    locations: PropTypes.array,\r\n    selectedLocation: PropTypes.number,\r\n    getResultsLocations: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    getResultsLocationEvents: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setResultsActive: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locations: state.results.locations,\r\n        selectedLocation: state.results.selectedLocation,\r\n        selectedSport: state.results.selectedSport,\r\n        language: state.general.language,\r\n        isLocationLoading: state.results.isLocationLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getResultsLocations: (sportId) => dispatch(getResultsLocations(sportId)),\r\n        selectLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n        setResultsLocationEvents: (locationId) => dispatch(setResultsLocationEvents(locationId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setResultsActive: (value) => dispatch(setResultsActive(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Sports from './Sports';\r\nimport Events from './Events';\r\nimport Locations from './Locations';\r\nimport { clearLocations, getResultsLocationsCount , getResultsLocationsCountMobile } from '../../store/actions/resultsActions';\r\nimport { resultTotalSegments } from '../../config';\r\n\r\nclass Results extends Component {\r\n    componentDidMount() {\r\n        for(let i=0; i< resultTotalSegments; i++) {\r\n            this.props.getResultsLocationsCountMobile(true, null, i);\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearLocations();\r\n    }\r\n\r\n    render() {\r\n        let { isLocationsActive, isResultsActive } = this.props;\r\n\r\n        return (\r\n            <div className=\"main-container\">\r\n                <Sports />\r\n                {isLocationsActive && <Locations />}\r\n                {isResultsActive && <Events />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nResults.propTypes = {\r\n    isLocationsActive: PropTypes.bool,\r\n    isResultsActive: PropTypes.bool,\r\n    clearLocations: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLocationsActive: state.results.isLocationsActive,\r\n        isResultsActive: state.results.isResultsActive,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        getResultsLocationsCount: (val) => dispatch(getResultsLocationsCount(val)),\r\n        getResultsLocationsCountMobile: (val, nextToken, i ) => dispatch(getResultsLocationsCountMobile(val, nextToken, i)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Events from './Events';\r\nimport SearchBar from '../Shared/SearchBar';\r\nimport { search, clearSearch, setSearchStarted, clearLocationEvents } from '../../store/actions/resultsActions';\r\n\r\nclass Search extends Component {\r\n    componentDidMount() {\r\n        this.props.setSearchStarted(true);\r\n        this.props.clearSearch();\r\n        this.props.clearLocationEvents();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setSearchStarted(true);\r\n            // this.props.clearSearch();\r\n            // this.props.clearLocationEvents();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSearchStarted(false);\r\n        this.props.clearSearch();\r\n        this.props.clearLocationEvents();\r\n    }\r\n\r\n    render() {\r\n        let { search, language } = this.props;\r\n\r\n        return (\r\n            <div className=\"main-container\">\r\n                <SearchBar search={search} language={language} parentPath=\"/results\" />\r\n                <Events />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    clearSearch: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    search: PropTypes.func,\r\n    clearLocationEvents: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearSearch: () => dispatch(clearSearch()),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        clearLocationEvents: () => dispatch(clearLocationEvents()),\r\n        search: (value) => dispatch(search(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Events from './Events';\r\nimport SearchBar from '../Shared/SearchBar';\r\nimport { search, setSearchStarted, clearLocations, clearSportEvents, clearSearch } from '../../store/actions/todayActions';\r\n\r\nclass Search extends Component {\r\n    componentDidMount() {\r\n        this.props.clearSearch('');\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n        this.props.setSearchStarted(true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSearchStarted(false);\r\n        this.props.clearSearch();\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n    }\r\n\r\n    render() {\r\n        let { search, language } = this.props;\r\n\r\n        return (\r\n            <div className=\"main-container\">\r\n                <SearchBar search={search} language={language} parentPath=\"/today\" />\r\n                <Events />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    search: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    language: PropTypes.string,\r\n    clearSearch: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        search: (value) => dispatch(search(value)),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearSearch: () => dispatch(clearSearch()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import * as Actions from '../actionTypes';\r\n\r\n// Select main market from markets slider (tabs)\r\nexport const selectMainMarket = (marketId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_TOMORROW_MAIN_MARKET_SELECTED, marketId });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setTomorrowResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_TOMORROW_RESET_PAGE });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateTomorrowEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_TOMORROW_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updateTomorrowEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_TOMORROW_EVENTS_STATUS, events });\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport forEach from 'lodash.foreach';\r\nimport map from 'lodash.map';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { selectSport } from './lsports.tomorrow.sport.actions';\r\nimport { setTomorrowResetPage } from './lsports.tomorrow.general.actions';\r\nimport Util from '../../../helper/Util';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsMarketData } from '../../../dynamo/params';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\n\r\n// Get locations top list\r\nexport const getTomorrowLocations = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        dispatch(setLocationLoading(true));\r\n        lSportsService\r\n            .getTomorrowLocations(language, sportId)\r\n            .then((locations) => {\r\n                // set locations top list\r\n                dispatch(setTomorrowLocations(locations));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error.message === 'canceled') {\r\n                // Do nothing if pervious request was canceled.\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set locations top list\r\nexport const setTomorrowLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch(setLocationLoading(false));\r\n        dispatch({ type: Actions.SET_TOMORROW_SPORT_LOCATIONS, locations });\r\n    };\r\n};\r\n\r\nexport const setLocationLoading = (data) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_SPORT_LOCATIONS_LOADING, data });\r\n    };\r\n};\r\n// Clear locations top list\r\nexport const clearLocations = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_TOMORROW_LOCATIONS });\r\n    };\r\n};\r\n\r\n// Set selected locations top list\r\nexport const setTomorrowSelectedLocations = (location) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_SELECTED_LOCATIONS, location });\r\n    };\r\n};\r\n\r\n// Get market data for set of fixture\r\nexport const getMarketData = (data, startIndex, count) => {\r\n    return (dispatch, getState) => {\r\n        let eventCount = 0;\r\n        let marketsArray = [];\r\n        if (!data.length) return null;\r\n        const { sport_id: sportId } = data[0];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        forEach(data, (event, i) => {\r\n            dynamoClient.query(paramsMarketData(event.fixture_id), (err, data) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    const { participant_one_full, participant_two_full, market } = data.Items[0]; \r\n                    marketsArray[i] = { [event.fixture_id]: {\r\n                        market: JSON.parse(market),\r\n                        fixture_status: data.Items[0].fixture_status,\r\n                        participant_one_full: participant_one_full ? JSON.parse(participant_one_full) : {},\r\n                        participant_two_full: participant_two_full ? JSON.parse(participant_two_full) : {},\r\n                    }};\r\n                    eventCount++;\r\n                }\r\n                if(eventCount === count) {\r\n                    let allData  = getState().tomorrow.partialAllEvents;\r\n                    allData = allData.reduce((ac, a) => ({ ...ac, [ a.fixture_id ]: a }), {});\r\n                    marketsArray = map(marketsArray, (market, idx) => {\r\n                        let mktData = Object.values(market)[0];\r\n                        return {\r\n                            ...allData[Object.keys(market)[0]],\r\n                            ...mktData,\r\n                            market: {\r\n                                ...defaultMktObj,\r\n                                ...mktData.market,\r\n                            },\r\n                            participants: [mktData.participant_one_full, mktData.participant_two_full],\r\n                        };\r\n                    });\r\n                    dispatch(setTomorrowLocationEvents(marketsArray));\r\n                }\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\n// On location top list item click (filter by location)\r\nexport const selectLocation = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setTomorrowResetPage());\r\n\r\n        let selectedLocation = locationId;// = getState().tomorrow.selectedLocations;\r\n\r\n        dispatch(setTomorrowSelectedLocations(selectedLocation));\r\n\r\n        let location = selectedLocation.toString();\r\n\r\n        const partialEvents = getState().tomorrow.partialAllEvents;\r\n        let locationEvent = partialEvents.filter(event => event.location.Id === location);\r\n        if(!location) locationEvent = partialEvents.slice(0,20);\r\n        dispatch(getMarketData(locationEvent,0 ,locationEvent.length));\r\n    };\r\n};\r\n\r\n// Set events of selected locations\r\nexport const setTomorrowLocationEvents = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_LOCATION_EVENTS, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// On All locations click\r\nexport const resetSelectedLocations = () => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().tomorrow.selectedSport;\r\n        dispatch(setTomorrowResetPage());\r\n        dispatch(selectSport(sportId));\r\n    };\r\n};\r\n","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport map from 'lodash.map';\r\nimport forEach from 'lodash.foreach';\r\nimport { setTomorrowLocations } from './lsports.tomorrow.location.actions';\r\n// import { logoutUser } from '../user.actions';\r\nimport Util from '../../../helper/Util';\r\nimport { startOfTomorrow, endOfTomorrow } from 'date-fns';\r\nimport { dynamoClient } from '../../../App';\r\nimport { getTomorrowEventsParams } from '../../../dynamo/tomorrowsParam/getTomorrowEventsParams';\r\nimport { paramsMarketData } from '../../../dynamo/params';\r\nimport { sortedLocations, staticPrematchSports } from '../../../config/sports';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\nimport { getAllSportsEventsCount } from '../../../dynamo/tomorrowsParam/getAllSportFixture';\r\nimport groupBy from 'lodash.groupby';\r\n\r\n// Get sports list\r\nlet sportEventCount = [];\r\nexport const getTomorrowSports = () => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        \r\n        lSportsService\r\n            .getSports(language)\r\n            .then((sports) => {\r\n                dispatch(setTomorrowSports(sports));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set sports list\r\nexport const setTomorrowSports = (sports, nextToken) => {\r\n    return (dispatch) => {\r\n        if (!sports) sportEventCount = [];\r\n        const sportObj = {};\r\n        Object.keys(staticPrematchSports()).map((key,i) => sportObj[`:sport${i}`] = +key);\r\n\r\n        // Getting events till the end of tomorrow as Upcoming section;\r\n        const dateRange = [new Date(startOfTomorrow()).toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n        dynamoClient.scan(getAllSportsEventsCount(sportObj, dateRange, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                const { LastEvaluatedKey, Items } = data;\r\n                sportEventCount.push( ...Items );\r\n                if (LastEvaluatedKey) {\r\n                    dispatch(fetchMore(setTomorrowSports, LastEvaluatedKey, sportObj));\r\n                } else {\r\n                    let sportCountObj = {};\r\n                    const sportGrp = groupBy(sportEventCount, 'sport_id');\r\n                    forEach(Object.values(sportObj), sport => {\r\n                        sportCountObj[sport] = sportGrp[sport]?.length || 0;\r\n                    });\r\n                    dispatch({ type: Actions.SET_TOMORROW_SPORTS, sportCountObj });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n// Select active sport\r\nexport const selectSport = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let page = getState().tomorrow.currentPage;\r\n        dispatch({ type: Actions.ON_TOMORROW_SPORT_SELECTED, sportId });\r\n        dispatch(getSportEvents(sportId, page));\r\n    };\r\n};\r\n\r\n// Get market data for set of fixture\r\nexport const getMarketData = (data, startIndex, count) => {\r\n    return (dispatch, getState) => {\r\n        let eventCount = 0;\r\n        let marketsArray = [];\r\n        if (!data.length) return null;\r\n        const { sport_id: sportId } = data[0];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        forEach(data, (event, i) => {\r\n            dynamoClient.query(paramsMarketData(event.fixture_id), (err, res) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    const { participant_one_full, participant_two_full } = res.Items[0]; \r\n                    marketsArray[i] = { [event.fixture_id]: {\r\n                        market: JSON.parse(res.Items[0].market),\r\n                        fixture_status: res.Items[0].fixture_status,\r\n                        participant_one_full: participant_one_full ? JSON.parse(participant_one_full) : {},\r\n                        participant_two_full: participant_two_full ? JSON.parse(participant_two_full) : {},\r\n                    }};\r\n                    eventCount++;\r\n                }\r\n                if(eventCount === count) {\r\n                    let allData  = getState().tomorrow.partialAllEvents;\r\n                    allData = allData.reduce((ac, a) => ({ ...ac, [ a.fixture_id ]: a }), {});\r\n                    marketsArray = map(marketsArray, (market, idx) => {\r\n                        let mktData = Object.values(market)[0];\r\n                        return {\r\n                            ...allData[Object.keys(market)[0]],\r\n                            ...mktData,\r\n                            market: {\r\n                                ...defaultMktObj,\r\n                                ...mktData.market,\r\n                            },\r\n                            participants: [mktData.participant_one_full, mktData.participant_two_full],\r\n\r\n                        };\r\n                    });\r\n                    dispatch({ type: Actions.SET_TOMORROW_EVENTS_MARKETS, events: marketsArray, nextIndex: startIndex + count });\r\n                }\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\n// Get sport events list\r\nexport const getSportEvents = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        // let language = getState().general.language;\r\n        let nextToken = getState().tomorrow.nextToken;\r\n        const dateRange = [new Date(startOfTomorrow()).toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        dynamoClient.scan(getTomorrowEventsParams(sportId, dateRange, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { Items, LastEvaluatedKey } = data;\r\n                let selectedSport = getState().tomorrow.selectedSport;\r\n                Items = Items.map(match => {\r\n                    match.market = defaultMktObj;\r\n                    match.market_count = 0;\r\n                    match.livescore = {};\r\n                    match.participant_one_full = {};\r\n                    match.participant_two_full = {};\r\n                    match.participants = [match.participant_one_full, match.participant_two_full];\r\n                    match.league = JSON.parse(match.league);\r\n                    if(match.location) {\r\n                        match.location = JSON.parse(match.location);\r\n                    }\r\n                    return match;\r\n                });\r\n                let sport = Items[0]?.sport_id;\r\n                if (Items.length && sport !== selectedSport) return null;\r\n                dispatch(setSportEvents(Items, LastEvaluatedKey, LastEvaluatedKey));\r\n                if (LastEvaluatedKey) {\r\n                    dispatch(fetchMore(getSportEvents, LastEvaluatedKey, sportId));\r\n                }\r\n                else {\r\n                    let locations = {};\r\n                    let matches = getState().tomorrow.partialAllEvents;\r\n                    matches.map(match => locations[match.location.Id] = { ...match.location, name: match.location.name_en });\r\n                    let locationArr = sortedLocations(Object.values(locations));\r\n                    dispatch(setTomorrowLocations(locationArr));\r\n                }\r\n            }\r\n        }); \r\n    };\r\n};\r\n\r\nconst fetchMore = (action, token, params) => {\r\n    return (dispatch) => {\r\n        dispatch(action(params, token));\r\n    };\r\n};\r\n\r\n// Set sport events list\r\nexport const setSportEvents = (events, hasNextPage, nextToken) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_SPORT_EVENTS, events, hasNextPage, nextToken });\r\n    };\r\n};\r\n\r\n// Clear sport events list\r\nexport const clearSportEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_TOMORROW_SPORT_EVENTS });\r\n    };\r\n};\r\n","export const getAllSportsEventsCount = (sportIds, dateRange, nextToken) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, sport_id',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s, :s1, :s2) AND sport_id IN ('+Object.keys(sportIds)+') AND start_date BETWEEN :start AND :end',\r\n    ExclusiveStartKey: nextToken,\r\n    ExpressionAttributeValues: {\r\n      ':s': 1,\r\n      ':s1': 5,\r\n      ':s2': 9,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':hasMarket': true,\r\n      ...sportIds,\r\n    },\r\n  };\r\n};","export const getTomorrowEventsParams = (sportId, dateRange, nextToken) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, fixture_status, league, #locations, sport_id, start_date',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s, :s1, :s2)  AND sport_id = :sport_id AND start_date BETWEEN :start AND :end',\r\n    ExclusiveStartKey: nextToken,\r\n    ExpressionAttributeValues: {\r\n      ':s': 1,\r\n      ':s1': 5,\r\n      ':s2': 9,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':sport_id': sportId,\r\n      ':hasMarket': true,\r\n    },\r\n    ExpressionAttributeNames: {\r\n      '#locations': 'location',\r\n    }\r\n  };\r\n};","import find from 'lodash.find';\r\nimport filter from 'lodash.filter';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { getTomorrowLocations } from './lsports.tomorrow.location.actions';\r\nimport { setTomorrowResetPage } from './lsports.tomorrow.general.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Set search started\r\nexport const setSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_SEARCH_STARTED, value });\r\n    };\r\n};\r\n\r\nexport const setTomorrowSearch = (events, hasNextPage, selectedLocations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_SEARCH, events, hasNextPage, selectedLocations });\r\n    };\r\n};\r\n\r\nexport const setTomorrowSearchLoadMore = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TOMORROW_SEARCH_LOAD_MORE, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Search events by participant\r\nexport const search = (value) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        let page = getState().tomorrow.currentPage;\r\n        let searchValue = getState().tomorrow.searchValue;\r\n        let selectedLocations = getState().tomorrow.selectedLocations;\r\n        let locations = selectedLocations.toString();\r\n\r\n        if (searchValue === value) {\r\n            lSportsService\r\n                .tomorrowSearchEvents(value, locations, language, page + 1)\r\n                .then((data) => {\r\n                    if (data.results.length === 0) {\r\n                        dispatch({ type: Actions.ON_TOMORROW_NO_SEARCH_RESULTS });\r\n                    } else {\r\n                        dispatch(setTomorrowSearchLoadMore(data.results, data.next));\r\n                        dispatch(getTomorrowLocations(''));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch(setTomorrowResetPage());\r\n            let page = getState().tomorrow.currentPage;\r\n            let selectedLocations = getState().tomorrow.selectedLocations;\r\n\r\n            lSportsService\r\n                .tomorrowSearchEvents(value, locations, language, page + 1)\r\n                .then((data) => {\r\n                    dispatch({ type: Actions.ON_TOMORROW_SEARCH, searchValue: value });\r\n                    if (data.results.length === 0) {\r\n                        dispatch({ type: Actions.ON_TOMORROW_NO_SEARCH_RESULTS });\r\n                    } else {\r\n                        let selected_locations = filter(selectedLocations, (locationId) => {\r\n                            return find(data.results, ['location_lsport_id', parseInt(locationId)]);\r\n                        });\r\n                        let selectedLocationsList = selected_locations ? selected_locations : [];\r\n\r\n                        dispatch(getTomorrowLocations(''));\r\n                        dispatch(setTomorrowSearch(data.results, data.next, selectedLocationsList));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\n\r\n// Clear search input value\r\nexport const clearSearch = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_CLEAR_TOMORROW_SEARCH });\r\n    };\r\n};\r\n\r\nexport const searchTomorrowEvents = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SEARCH_TOMORROW_EVENTS, value });\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport SportsList from '../Shared/SportsList';\r\nimport { selectSport, setTomorrowSports } from '../../store/actions/tomorrowActions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        // if (!statsData) this.props.getStatsData();\r\n        if (!this.props.mainEvents.length > 0) { // DOn't reload data If main events are already present. \r\n            //this.props.getTomorrowSports();\r\n            this.props.setTomorrowSports();\r\n            this.props.selectSport(lSportsConfig.tomorrow.selectedSport);\r\n        }\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.props.selectSport(sportId);\r\n    };\r\n\r\n    render() {\r\n        let { selectedSport, language, mainEvents, noSport, sportCountObj } = this.props;\r\n        return (\r\n            !noSport ?\r\n            <div className={`pre-match-wrapper`}>\r\n                <SportsList\r\n                    sports={staticPrematchSports()}\r\n                    sportsObj={sportCountObj}\r\n                    selectedSport={selectedSport}\r\n                    selectSport={this.selectSport}\r\n                    searchPath=\"\"\r\n                    type=\"tomorrow\"\r\n                    language={language}\r\n                    isDisable={mainEvents.length === 0}\r\n                    sort\r\n                />\r\n            </div>\r\n            : null\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    // getTomorrowSports: PropTypes.func,\r\n    selectSport: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.tomorrow.sports,\r\n        selectedSport: state.tomorrow.selectedSport,\r\n        language: state.general.language,\r\n        mainEvents: state.tomorrow.mainEvents,\r\n        sportCountObj: state.tomorrow.sportCountObj,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // getTomorrowSports: () => dispatch(getTomorrowSports()),\r\n        selectSport: (sportId) => dispatch(selectSport(sportId)),\r\n        setTomorrowSports: () => dispatch(setTomorrowSports()),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../Common/NewLoading';\r\nimport { Translate } from '../../localization';\r\nimport { resetSelectedLocations, getSportEvents, selectLocation } from '../../store/actions/tomorrowActions';\r\n\r\nfunction Locations(props) {\r\n    const resetSelectedLocations = (e) => {\r\n        e.preventDefault();\r\n        props.resetSelectedLocations();\r\n    };\r\n\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const handleSearchToggle = () => {\r\n        setShowSearch(!showSearch);\r\n    };\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n       props.handleSearch(e.target.value);\r\n    };\r\n\r\n    const hideSearchBar = () => {\r\n        setShowSearch(false);\r\n        props.handleSearch('');\r\n        \r\n    };\r\n    \r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (e.currentTarget.id === props.selectedLocation) props.selectLocation('');\r\n        else props.selectLocation(e.currentTarget.id);\r\n    };\r\n\r\n    let { locations, selectedLocation, locationsLoading, language } = props;\r\n    let isAllActive = selectedLocation === '';\r\n    let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n\r\n    const locationsList =\r\n        !locationsLoading ? (\r\n            locations.length > 0 ?\r\n            locations.map((item, i) => {\r\n                let locationId = item.Id;\r\n                let locationName = item[lang] || item.name_en;\r\n\r\n                let contains = selectedLocation == locationId;\r\n\r\n                return (\r\n                    <div className=\"live-locations__item\" id={locationId} onClick={handleClick} key={locationId}>\r\n                        <div className={`live-locations__box ${contains ? 'live-locations__box_active' : ''}`}>\r\n                            <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"live-flag-25 flag\"></div>\r\n                            <span>{locationName.substring(0, 3)}</span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }) : null\r\n        ) : <Loading />;\r\n    return (\r\n        <div className={'pre-match-wrapper'}>\r\n            {showSearch ? (\r\n                <div className=\"sports__content sports__content_sm\">\r\n                    <div className=\"sports__search-bar\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ml-2 form-control sports__search-input\"\r\n                            autoFocus\r\n                            placeholder={Translate.searchHere}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <i className=\"icon-search\" />\r\n                        <div className=\"sports__close-search\">\r\n                            <i className=\"material-icons text-body\" onClick={hideSearchBar}>\r\n                                close\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"livesearch\">\r\n                        <div className=\"live-icn\" onClick={handleSearchToggle}>\r\n                            <i className=\"icon-search live-search-icon d-inline-block\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"live-locations\">\r\n                        <div className=\"live-locations__item\" onClick={resetSelectedLocations}>\r\n                            <div className={`live-locations__box live-locations__box_all ${isAllActive ? 'live-locations__box_active' : ''}`}>\r\n                                <i className=\"icon-all live-locations__icon\" />\r\n                                <span>{Translate.all}</span>\r\n                            </div>\r\n                        </div>\r\n                        {locationsList}\r\n                    </div>\r\n                </>\r\n            )}\r\n            {/* <div className=\"live-icn\">\r\n                <i className=\"icon-search live-search-icon d-inline-block\"></i>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nLocations.propTypes = {\r\n    locations: PropTypes.array,\r\n    selectedLocation: PropTypes.array,\r\n    resetSelectedLocations: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    getSportEvents: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n    searchStarted: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    locationsLoading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locations: state.tomorrow.locations,\r\n        selectedLocation: state.tomorrow.selectedLocation,\r\n        selectedSport: state.tomorrow.selectedSport,\r\n        searchStarted: state.tomorrow.searchStarted,\r\n        language: state.general.language,\r\n        noEvents: state.tomorrow.noEvents,\r\n        locationsLoading: state.tomorrow.locationsLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resetSelectedLocations: () => dispatch(resetSelectedLocations()),\r\n        selectLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            props.openMarketsModal(event);\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    let { event, mainSelectedMarket, statsData, language } = props;\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    let leagueName = event.league[lang] ? event.league[lang] : event.league.name_en;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = Object.keys(event.market).length;\r\n    if (mainMarketEvent === undefined) return null;\r\n    let hasStatistics = event.has_live_statistics || event.has_prematch_statistics;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        hasStatistics = true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"match__panel hybrid-tomorrow\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} />\r\n                    <MatchDateTime fixture={event} showDate={true} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                        <Participants participants={event.participants} />\r\n                        {/* {cards}\r\n                        <MatchResult isLive={false} livescore={false} /> */}\r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        <ExtraMarkets extraMarketsNumber={sortedMarketsLength} onClick={(e) => openExtraOddsModal(event, sortedMarketsLength)} />\r\n                    </Grid>\r\n\r\n                    <MainMarket market={mainMarketEvent} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.tomorrow.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/tomorrowActions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, selectExtraMarket, setExtraMarkets } = props;\r\n    let lastLeagueId = null;\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n\r\n                  if (lastLeagueId === e.league.Id) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = e.league.Id;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && (\r\n                          <div className='my-2' key={'panel_' + e.fixture_id}>\r\n                              {groupInfo}\r\n                              {divider}\r\n                              <Match selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} event={e} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { slice } from 'lodash';\r\nimport Locations from './Locations';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../Shared/MainMarketSelector';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport {\r\n    selectMainMarket,\r\n    getSportEvents,\r\n    search,\r\n    getTomorrowLocations,\r\n    setTomorrowResetPage,\r\n    clearSportEvents,\r\n    clearLocations,\r\n    searchTomorrowEvents,\r\n    getMarketData,\r\n    setTomorrowSports,\r\n    setLocationLoading,\r\n} from '../../store/actions/tomorrowActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport { intervalTime } from '../../config';\r\nimport find from 'lodash.find';\r\n\r\nlet sportEventInterval;\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setLocationLoading(true);\r\n        sportEventInterval = setInterval(() => {\r\n        let { mainEvents } = this.props;\r\n        this.props.getMarketData(mainEvents, 0, mainEvents.length);\r\n        this.props.setTomorrowSports();\r\n        } , intervalTime);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setTomorrowResetPage();\r\n\r\n            if (!this.props.searchStarted) {\r\n                // let sportId = this.props.selectedSport;\r\n                // this.props.getSportEvents(sportId);\r\n                // this.props.getTomorrowLocations(sportId);\r\n            } else {\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            if (!this.props.searchStarted) {\r\n                let { nextIndex } = this.props;\r\n                const data = slice(this.props.partialAllEvents, nextIndex, nextIndex + 20);\r\n                this.props.getMarketData(data, nextIndex, data.length);\r\n            } else {\r\n                // if is in search page\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event } = this.state;\r\n        let {\r\n            searchStarted,\r\n            mainEvents,\r\n            selectMainMarket,\r\n            mainSelectedMarket,\r\n            noSearchResults,\r\n            noEvents,\r\n            hasNextPage,\r\n            searchTomorrowEvents,\r\n            filteredTomorrowEvents,\r\n            locations,\r\n            locationsLoading,\r\n            setExtraMarkets,\r\n            selectExtraMarket\r\n        } = this.props;\r\n        \r\n        let filteredMainEvents = noSearchResults ? [] : filteredTomorrowEvents.length > 0 ? filteredTomorrowEvents : mainEvents;\r\n        \r\n        let groupedEvents =\r\n            filteredMainEvents &&\r\n            filteredMainEvents[0] &&\r\n            filteredMainEvents[0].sport_id &&\r\n            groupBy(filteredMainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];\r\n\r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                const groupSportId = group[0].sport_id;\r\n                let marketSelector = (\r\n                    <MainMarketSelector selectMainMarket={selectMainMarket} mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[groupSportId]} mainSelectedMarket={mainSelectedMarket} />\r\n                );\r\n\r\n                let groupMatches = <Matches selectExtraMarket ={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={group} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                matches.push(\r\n                    <div key={sportId}>\r\n                        {marketSelector}\r\n                        {groupMatches}\r\n                    </div>,\r\n                );\r\n            }\r\n        });\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <InfiniteScroll\r\n                        dataLength={filteredMainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={hasNextPage}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                        scrollThreshold = {0.95}\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {/* {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                </div>\r\n            ) : noSearchResults || noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            ) : (\r\n                !searchStarted && <Loading />\r\n            );\r\n\r\n        return (\r\n            <div className=\"events__wrap pre-match-wrapper\">\r\n                <Locations {...this.props} handleSearch={searchTomorrowEvents} />\r\n                { locations.length > 0 ? drawContent : !locationsLoading ? <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div> : <Loading /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedSport: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    getSportEvents: PropTypes.func,\r\n    getTomorrowLocations: PropTypes.func,\r\n    setTomorrowResetPage: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    searchValue: PropTypes.string,\r\n    language: PropTypes.string,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    locationsLoading: PropTypes.bool,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedSport: state.tomorrow.selectedSport,\r\n        mainEvents: state.tomorrow.mainEvents,\r\n        mainSelectedMarket: state.tomorrow.mainSelectedMarket,\r\n        noSearchResults: state.tomorrow.noSearchResults,\r\n        noEvents: state.tomorrow.noEvents,\r\n        hasNextPage: state.tomorrow.hasNextPage,\r\n        searchStarted: state.tomorrow.searchStarted,\r\n        searchValue: state.tomorrow.searchValue,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        filteredTomorrowEvents: state.tomorrow.filteredTomorrowEvents,\r\n        locations: state.tomorrow.locations,\r\n        locationsLoading: state.tomorrow.locationsLoading,\r\n        fetchedAll: state.tomorrow.fetchedAll,\r\n        partialAllEvents: state.tomorrow.partialAllEvents,\r\n        nextIndex: state.tomorrow.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        search: (value) => dispatch(search(value)),\r\n        getTomorrowLocations: (sportId) => dispatch(getTomorrowLocations(sportId)),\r\n        setTomorrowResetPage: () => dispatch(setTomorrowResetPage()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        searchTomorrowEvents: (value) => dispatch(searchTomorrowEvents(value)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n        setTomorrowSports: () => dispatch(setTomorrowSports()),\r\n        setLocationLoading: (val) => dispatch(setLocationLoading(val))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { setTomorrowSearchLoadMore } from './lsports.tomorrow.search.actions';\r\nimport { getTomorrowLocations } from './lsports.tomorrow.location.actions';\r\nimport { getSportEvents } from './lsports.tomorrow.sport.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Remove league from main events on 'x' icon click\r\nexport const removeLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_TOMORROW_REMOVE_LEAGUE, leagueId: leagueId });\r\n\r\n        let hasNextPage = getState().tomorrow.hasNextPage;\r\n        let mainEvents = getState().tomorrow.mainEvents;\r\n\r\n        if (mainEvents.length < 20 && hasNextPage) {\r\n            // get new events\r\n            let language = getState().general.language;\r\n            let selectedLocations = getState().tomorrow.selectedLocations;\r\n            let sportId = getState().tomorrow.selectedSport;\r\n            let searchStarted = getState().tomorrow.searchStarted;\r\n            let page = getState().tomorrow.currentPage;\r\n            let searchValue = getState().tomorrow.searchValue;\r\n            let locations = selectedLocations.toString();\r\n\r\n            if (searchStarted) {\r\n                lSportsService\r\n                    .tomorrowSearchEvents(searchValue, locations, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0) {\r\n                            dispatch({ type: Actions.ON_TOMORROW_NO_SEARCH_RESULTS });\r\n                        } else {\r\n                            dispatch(setTomorrowSearchLoadMore(data.results, data.next));\r\n                            dispatch(getTomorrowLocations(''));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            } else {\r\n                dispatch(getSportEvents(sportId));\r\n            }\r\n        }\r\n    };\r\n};\r\n","import React from 'react';\r\nimport Sports from './Sports';\r\nimport Events from './Events';\r\n\r\nfunction Tomorrow(props) {\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Sports {...props} noSport={props.noSports}/>\r\n            <Events {...props}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tomorrow;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Events from './Events';\r\nimport SearchBar from '../Shared/SearchBar';\r\nimport { search, setSearchStarted, clearLocations, clearSportEvents, clearSearch } from '../../store/actions/tomorrowActions';\r\n\r\nclass Search extends Component {\r\n    componentDidMount() {\r\n        this.props.clearSearch('');\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n        this.props.setSearchStarted(true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSearchStarted(false);\r\n        this.props.clearSearch();\r\n        this.props.clearSportEvents();\r\n        this.props.clearLocations();\r\n    }\r\n\r\n    render() {\r\n        let { search, language } = this.props;\r\n\r\n        return (\r\n            <div className=\"main-container\">\r\n                <SearchBar search={search} language={language} parentPath=\"/tomorrow\" />\r\n                <Events />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    search: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    language: PropTypes.string,\r\n    clearSearch: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        search: (value) => dispatch(search(value)),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearSearch: () => dispatch(clearSearch()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport find from 'lodash.find';\r\nimport { connect } from 'react-redux';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { lSportsConfig } from '../../config';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport MatchResult from '../Shared/Match/MatchResult';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\nimport { MARKET_FOR_OUTER_SLIDER } from '../../config/markets';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            props.openMarketsModal(event, liveStreamAvailable);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n    \r\n    let { event, unsubscribeSingleEvents, liveStreamData, statsData} = props;\r\n    const [ liveStreamAvailable, setLiveStreamAvailable] = useState(false);\r\n    const [ streamURL, setStreamingURL] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        let selectedEvent = find(liveStreamData, (e) => e.matchId == event.fixture_id);\r\n        if (selectedEvent && selectedEvent.live === '1') {\r\n            setStreamingURL(selectedEvent.iframe);\r\n            setLiveStreamAvailable(true);\r\n        }\r\n    }, [liveStreamData, event.fixture_id]);\r\n\r\n    let fixtureStatus = event.fixture_status;\r\n    let isLive = fixtureStatus === lSportsConfig.statuses.inplay;\r\n    let livescore = event.Livescore;\r\n    let leagueName = event.league?.Name;\r\n    let sortedMarkets = event.market ? event.market : [];\r\n    let mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    let fixMarketForLive = find(sortedMarkets, m => m.Id == MARKET_FOR_OUTER_SLIDER[event.sport_id][0].Id);\r\n    let sortedMarketsLength = event.market ? Object.values(event.market).length : event.Market ? Object.values(event.Market) : null;\r\n    let hasStatistics = event.Livescore?.Statistics ? true : false;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        if (fixtureStatus == 2 && ['live', 'finished'].indexOf(statsData[+event.fixture_id].status_type) > -1) {\r\n            hasStatistics = true;\r\n        }\r\n        if (fixtureStatus != 2 ) hasStatistics = true;\r\n    }\r\n    let participants = event.participants;\r\n    let cards =  <Grid item xs={2} className=\"results__cards p-2\"></Grid>;\r\n\r\n    return (\r\n        <div className=\"match__panel hybrid-tomorrow\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} unsubscribeSingleEvents={unsubscribeSingleEvents} />\r\n                    <MatchDateTime fixture={event} showDate={true} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                       \r\n                        <Participants isInplay={isLive}  participants={participants} />\r\n                        {isLive && <>\r\n                            {cards}\r\n                            <MatchResult isLive={isLive} livescore={livescore} />\r\n                        </>}\r\n                        \r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        {/* {isLive && <> <Grid item xs={1} className=\"p-1 text-right d-flex align-items-center justify-content-center\">\r\n                            {\r\n                            liveStreamAvailable &&\r\n                                <IconButton onClick={() => openLiveStreamModal(streamURL)}>\r\n                                    <img className=\"stream-icon\" alt=\"stream-icon\" src=\"./images/smart-tv-live-new.svg\"></img> \r\n                                </IconButton> \r\n                            }\r\n                        </Grid>\r\n                        </>} */}\r\n                        <ExtraMarkets isInplay={isLive} extraMarketsNumber={sortedMarketsLength} onClick={(e) => openExtraOddsModal(event, sortedMarketsLength)} />\r\n                    </Grid>\r\n\r\n                    {isLive ? (\r\n                        <MainMarket market={fixMarketForLive ? fixMarketForLive : []} fixture={event} type=\"live\" leagueName={leagueName} />\r\n                    ) : (\r\n                        <MainMarket market={mainMarketEvent} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeFavorite } from '../../store/actions/favorites.actions';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nfunction Matches(props) {\r\n    const removeFavorite = (id, fixtureId) => {\r\n        props.removeFavorite(id, fixtureId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, unsubscribeSingleEvents, selectExtraMarket, setExtraMarkets, openLiveStreamModal, liveStreamData} = props;\r\n\r\n    let drawMatches =        \r\n            map(events, (e, i) => {\r\n                  let eventId = e.event_id ? e.event_id : '' ;\r\n                  \r\n                  let fixtureId = e.fixture_id ? e.fixture_id : e.FixtureId;\r\n                  let groupInfo = <LeagueHeader event={e} isLive={e.Fixture  && e.Fixture.Status === lSportsConfig.statuses.inplay } showStripe remove={(e) => removeFavorite(eventId, fixtureId)} />;\r\n\r\n                  return (\r\n                      e && (\r\n                          <div key={`panel_ ${e.fixture_id ? e.fixture_id : e.FixtureId}`}>\r\n                              {groupInfo}\r\n                              <Match liveStreamData={liveStreamData} openLiveStreamModal={openLiveStreamModal} event={e} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} unsubscribeSingleEvents={unsubscribeSingleEvents}/>\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeFavorite: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeFavorite: (id, fixtureId) => dispatch(removeFavorite(id, fixtureId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport Matches from './Matches';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport LiveExtraOddsModal from '../Inplay/ExtraOddsModal';\r\nimport Loading from '../Common/NewLoading';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { getFavorites } from '../../store/actions/favorites.actions';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport { find, forEach, isEqual } from 'lodash';\r\nimport map from 'lodash.map';\r\nimport jwtService from '../../services/jwtService';\r\nimport Util from '../../helper/Util';\r\nimport { onUpdateMatchMarkets } from '../../graphql/subscriptions';\r\nimport API, { graphqlOperation } from '@aws-amplify/api';\r\nimport { dynamoClient } from '../../App';\r\nimport { getLiveMatchMarkets } from '../../dynamo/inplayParams';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\n\r\n\r\nlet unSub = {};\r\nlet liveMatchSub;\r\nlet marketSubscription;\r\nlet websocket;\r\nlet websocketConnectionAttempts = 0;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\n\r\nclass Favorites extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showNonLiveExtraOddsModal: false,\r\n            showLiveExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModalForNonLive: false,\r\n            showStatisticsModalForLive: false,\r\n            loading: false,\r\n            liveMatches: {},\r\n            nonLiveMatches: {},\r\n            showLiveStream: false,\r\n            liveStreamFixtureId : null,\r\n            liveStreamData: [],\r\n            liveStreamUrl: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.props.getFavorites();\r\n        //this.fetchLiveStreamMatches();\r\n        //if (!this.props.statsData) this.props.getStatsData();\r\n        const matchesByStatus = this.groupMatchesByStatus();\r\n        if (!matchesByStatus) return;\r\n        this.setState({\r\n            liveMatches: matchesByStatus['live'],\r\n            nonLiveMatches: matchesByStatus['nonLive'],\r\n            loading: false,\r\n        }, () => {\r\n            this.subscribeEvents(matchesByStatus['live']);\r\n        });\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        let { favorites, favoritesLiveMatches} = this.props;\r\n        favorites = [...favorites , ...favoritesLiveMatches];\r\n        let preFav = [ ...prevProps.favorites, ...prevProps.favoritesLiveMatches]\r\n        if (!isEqual(preFav, favorites)) {\r\n            const matchesByStatus = this.groupMatchesByStatus();\r\n            if (!matchesByStatus) return;\r\n            this.setState({\r\n                liveMatches: matchesByStatus['live'],\r\n                nonLiveMatches: matchesByStatus['nonLive'],\r\n                loading: false,\r\n            }, () => {\r\n                this.subscribeEvents(matchesByStatus['live']);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeEvents();\r\n    }\r\n    \r\n    groupMatchesByStatus = () => {\r\n        let { favorites, favoritesLiveMatches } = this.props;\r\n        favorites = [...favorites , ...favoritesLiveMatches];\r\n        if(!favorites) return;\r\n        // const events = favorites;\r\n        \r\n        // if (!events) return;\r\n        \r\n        const matchesByStatus = {\r\n            'live': {},\r\n            'nonLive': {},\r\n        };\r\n        favorites.forEach((item) => {\r\n            if (item.fixture_status === lSportsConfig.statuses.inplay) {\r\n                matchesByStatus['live'][item.fixture_id] = item;\r\n            } \r\n            else {\r\n                matchesByStatus['nonLive'][item.fixture_id] = item;\r\n            }\r\n        });\r\n        return matchesByStatus;\r\n    };\r\n\r\n    subscribeEvents = (liveMatches) => {\r\n        websocket = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        websocket.addEventListener('open', () => {\r\n            websocketConnectionAttempts = 0;\r\n        });\r\n\r\n        websocket.addEventListener('message', (event) => {\r\n            this.handleFirebaseUpdates({value: event});\r\n        });\r\n\r\n        websocket.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else websocketConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (websocketConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.subscribeEvents(liveMatches);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeEventsAppSync(liveMatches);\r\n            }\r\n        });\r\n    };\r\n\r\n    subscribeEventsAppSync = (liveMatches) => {\r\n        this.unsubscribeEvents();\r\n        forEach( liveMatches, item => {\r\n            let marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(item.fixture_id))); \r\n    \r\n            unSub[item.fixture_id] = marketSubscription.subscribe({\r\n                next: this.handleFirebaseUpdates,\r\n                error: (error) => console.warn(error),\r\n            });\r\n        });\r\n    }\r\n\r\n    handleFirebaseUpdates = ({value}) => {\r\n        if (!value?.data) return null;\r\n\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        if (!updatedMatch) return null;\r\n\r\n        let { liveMatches } = this.state;\r\n        if (!liveMatches[updatedMatch.match_id]) return null;\r\n\r\n        let { match_id: fixtureId, outcomes: market, sport_event_status: livescore, fixture_status: status } = updatedMatch;\r\n        if (!market && !livescore && !status) return null;\r\n\r\n        const id = fixtureId;\r\n        if (status === lSportsConfig.statuses.results && liveMatches[id]) {\r\n            delete unSub[id];\r\n            delete liveMatches[id];\r\n            return this.setState({liveMatches});\r\n        }\r\n\r\n        const { liveMatches: { [id]: oldMatches } } = this.state;\r\n         if (!oldMatches) {\r\n        // TODO: Add the match in the list\r\n            return;\r\n        };\r\n\r\n        market = market && Util.marketFormatter([updatedMatch], fixtureId);\r\n        if (livescore) {\r\n            livescore = JSON.parse(livescore);\r\n            this.setState({\r\n                liveMatches: {\r\n                    ...this.state.liveMatches,\r\n                    [id]: { ...oldMatches, Livescore: livescore, fixture_status: +status },\r\n                },\r\n            });\r\n            return;\r\n        }\r\n        \r\n        if (!market) {\r\n            this.setState({\r\n                liveMatches: {\r\n                    ...this.state.liveMatches,\r\n                    [id]: {...oldMatches},\r\n                },\r\n            });\r\n            return;\r\n        };\r\n\r\n        const marketWithDiff = (() => {   \r\n            const { Bets, Id } = market;\r\n            //console.log(Bets);  \r\n            const oldMarket = find(oldMatches.Markets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    \r\n                    ...bet,\r\n                    diff,\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...oldMatches,\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        })();\r\n        this.setState({\r\n            liveMatches: {\r\n                ...this.state.liveMatches,\r\n                [id]: { ...oldMatches, market: { ...oldMatches.market, ...marketWithDiff} },\r\n            },\r\n        });\r\n}\r\n\r\n    unsubscribeEvents = () => {\r\n        Object.values(unSub).forEach(element => element.unsubscribe());\r\n        // (let e in Object.values(unSub)) {\r\n        //     unSub[e].unsubscribe();\r\n        // }\r\n        if(websocket) websocket.close();\r\n    };\r\n\r\n    unsubscribeSingleEvents = (id) => {\r\n        //     unSub[id]();\r\n        // console.log(`***** UnSubscribed fixture Id: ${id} *****`);\r\n        \r\n        //liveMatchSub && liveMatchSub();\r\n        //console.log(\"***** UnSubscribed all live matches. *****\");\r\n    };\r\n\r\n    fetchLiveStreamMatches = async () => {\r\n        try {\r\n            let liveStreamData = await jwtService.getLiveStreamData();\r\n            this.setState({ liveStreamData: liveStreamData });\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                // FIXME: Commenting the error temporarily\r\n                //toastr.error('', 'Something went wrong.');\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.subscribeExtraMarket(fixtureId);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => {\r\n                this.unsubscribeEvents();\r\n                this.subscribeExtraMarket(fixtureId);\r\n            },\r\n        });\r\n    }\r\n\r\n    openExtraOddsModalLiveMatch = (fixture, liveStreamAvailable) => {\r\n        this.unsubscribeEvents();\r\n        let newFixture = fixture;\r\n        this.getSingleMatchMarkets(fixture.fixture_id).then(data => {\r\n            if(data)\r\n            {\r\n                this.subscribeExtraMarket(fixture.fixture_id);\r\n                newFixture.market = data.market;\r\n                newFixture.Markets = { ...data.market};\r\n                newFixture.Livescore = data.Livescore;\r\n                \r\n                this.setState({ event: newFixture, liveStreamAvailable: liveStreamAvailable }, () => {\r\n                this.props.setCurrentEvent(newFixture);\r\n                this.setState({ showLiveExtraOddsModal: true });\r\n                \r\n                \r\n                // const collection = this.props.language === `en`? `d_event` : `d_event_${this.props.language}`;\r\n                // unSub.push(firebaseDB.collection(collection).doc(`${fixture.FixtureId}`).onSnapshot(this.handleFirebaseUpdates));\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getSingleMatchMarkets = async (fixtureId, nextToken, fixture) => {\r\n        try {\r\n            let event =  dynamoClient.query(getLiveMatchMarkets(fixtureId.toString(), nextToken)).promise();\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                if (!fixture) fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        if(item.outcomes) {\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.Livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems, fixtureId);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                }\r\n                return fixture || e.Items[0];\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    marketDifference = (markets, prevMarkets) =>  {\r\n        return map(markets, (market) => {   \r\n            const { Bets, Id } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({value}) => {\r\n        if (!value?.data) return null;\r\n\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        if (!updatedMatch) return null;\r\n        let { event } = this.state;\r\n        let newFixture = {};\r\n\r\n        if (!updatedMatch || !event || event.fixture_id !== updatedMatch.match_id) return null;\r\n\r\n        if(updatedMatch.outcomes){\r\n            let updatedMarket = Util.marketFormatter([updatedMatch], updatedMatch?.match_id);\r\n            let marketValue = updatedMarket && Object.values(updatedMarket)[0];\r\n            if (marketValue?.Bets && event?.market?.[`id_${marketValue.Id}`]) {\r\n                let currBets = event.market[`id_${marketValue.Id}`];\r\n                let newBet = marketValue.Bets;\r\n                if (currBets?.Bets) newBet = { ...currBets.Bets, ...newBet };\r\n                updatedMarket[Object.keys(updatedMarket)[0]].Bets = newBet;\r\n            }\r\n            newFixture.market = { ...event.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = event.market;\r\n        }\r\n        if(updatedMatch.sport_event_status){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.sport_event_status);\r\n        }\r\n        else if(updatedMatch.livescore){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.livescore);\r\n        }\r\n        else {\r\n            newFixture.Livescore = event.Livescore;\r\n        }\r\n\r\n        const marketWithDiff2 =  this.marketDifference(newFixture.market, this.state.event.market);\r\n\r\n        newFixture.Markets = { ...marketWithDiff2 };\r\n        newFixture = {...event, ...newFixture};\r\n        this.props.setCurrentEvent(newFixture);\r\n        this.setState({ event: newFixture}, () => {this.props.setExtraMarkets(newFixture.Markets)});\r\n\r\n    }\r\n\r\n    openExtraOddsModal = (fixture, liveStreamAvailable) => {\r\n        // TODO: add the same logic from the Live Page\r\n        \r\n        let liveStatus = fixture.fixture_status;\r\n        this.setState({ event: fixture }, () => {\r\n            if (liveStatus === lSportsConfig.statuses.inplay) {\r\n                // this.unsubscribeEvents();\r\n                // this.setState({  });\r\n                this.openExtraOddsModalLiveMatch(fixture, liveStreamAvailable);\r\n                // const collection = this.props.language === `en` ? `d_event` : `d_event_${this.props.language}`;\r\n                // unSub[fixture.FixtureId] = (firebaseDB.collection(collection).doc(`${fixture.FixtureId}`).onSnapshot(this.handleFirebaseUpdates));\r\n\r\n            } else {\r\n                this.setState({ showNonLiveExtraOddsModal: true });\r\n            }\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        const matchesByStatus = this.groupMatchesByStatus();\r\n        if(liveMatchSub) liveMatchSub.close();\r\n        if(liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        this.setState({ showNonLiveExtraOddsModal: false, showLiveExtraOddsModal: false  }, () => {\r\n            this.subscribeEvents(matchesByStatus['live']);\r\n        });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        let isLive = fixture.fixture_status === lSportsConfig.statuses.inplay ? true : false;\r\n        let id = fixture.fixture_id;\r\n        //let statsTemplateType = !isLive ? 'prematch' : 'live';\r\n        if (isLive) this.setState({ showStatisticsModalForLive: true });\r\n        else this.setState({ showStatisticsModalForNonLive: true }); \r\n        this.props.setStatistics(id, 'forMatch', (isLive ? \"live\" : 'prematch'));\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModalForNonLive: false, showStatisticsModalForLive: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    openLiveStreamModal = (streamURL) => {\r\n        this.unsubscribeEvents();\r\n        this.setState({ liveStreamUrl : streamURL }, () => this.setState({ showLiveStream: true }));\r\n    }\r\n\r\n    closeLiveStreamModal = () => {\r\n        const matchesByStatus = this.groupMatchesByStatus();\r\n        this.unsubscribeEvents();\r\n        this.subscribeEvents(matchesByStatus['live']);\r\n        this.setState({ liveStreamUrl : null, showLiveStream: false });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            showNonLiveExtraOddsModal,\r\n            showLiveExtraOddsModal,\r\n            event,\r\n            loading,\r\n            liveMatches,\r\n            nonLiveMatches,\r\n        } = this.state;\r\n        let { favorites, loadingFavorites, selectExtraMarket, setExtraMarkets, favoritesLiveMatches } = this.props;\r\n        favorites = [ ...favorites , ...favoritesLiveMatches];\r\n        let favoritesList, liveFavoritesList = null;\r\n        let matchForModal = {};\r\n        let liveMatchesLength = Object.keys(liveMatches).length;\r\n        let nonLiveMatchesLength = Object.keys(nonLiveMatches).length;\r\n        let filteredLiveMatches = filter(liveMatches, (match) => { return !!match.fixture_id });\r\n        // Filter out the single match for extraOddsModal\r\n        if (showLiveExtraOddsModal) {\r\n            let items = filteredLiveMatches;\r\n            for (let sportId in items) {\r\n                if (!items.hasOwnProperty(sportId)) continue;\r\n                \r\n                if (event.FixtureId === items[sportId].FixtureId) {\r\n                    matchForModal = items[sportId];\r\n                }\r\n            }\r\n        }\r\n        if (favorites && favorites.length > 0) {\r\n            let incompleteList = filter(favorites, (f) => !f.fixture_id);\r\n           // console.log(\">>>>>>>>>>> Incomlete length >>>\", filteredLiveMatches)\r\n            if (incompleteList.length === 0) {\r\n                //loading = false;\r\n                favoritesList =\r\n                    nonLiveMatchesLength > 0 ? (\r\n                        <div className=\"favorites__list\">\r\n                            <Matches liveStreamData={this.state.liveStreamData} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={nonLiveMatches} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />\r\n\r\n                            {showNonLiveExtraOddsModal && (\r\n                                <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />\r\n                            )}\r\n\r\n                            {/* {showStatisticsModalForNonLive && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                        </div>\r\n                    ) : null;\r\n               liveFavoritesList = \r\n                    liveMatchesLength > 0 ? (\r\n                        <div className=\"favorites__list\">\r\n                            <Matches liveStreamData={this.state.liveStreamData}  selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={filteredLiveMatches} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} unsubscribeSingleEvents={this.unsubscribeSingleEvents} openLiveStreamModal={this.openLiveStreamModal} />\r\n                        \r\n                            {showLiveExtraOddsModal && (\r\n                                <LiveExtraOddsModal liveMatchURL= {find(this.state.liveStreamData,(e) => e.matchId == event.fixture_id)?.iframe} liveStreamAvailable={this.state.liveStreamAvailable} event={event} closeModal={this.closeExtraOddsModal} openStatisticsModal={this.openStatisticsModal} liveMatch={event} />\r\n                            )}\r\n                            {/* {showLiveStream  && <LiveStreamModal closeModal={this.closeLiveStreamModal} liveStreamMatch={liveStreamUrl} />} */}\r\n                            {/* {showStatisticsModalForLive && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                        </div>\r\n                    ) : null;                \r\n            }\r\n        }\r\n\r\n        let drawFavorites =\r\n            loadingFavorites || loading ? <Loading /> :\r\n            favorites && favorites.length > 0 ? (\r\n                <div>\r\n                    {liveFavoritesList}\r\n                    {favoritesList}\r\n                </div>\r\n            ) : (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">No favorites added</div>\r\n            );\r\n\r\n        return <div className=\"favorites\">{drawFavorites}</div>;\r\n    }\r\n}\r\n\r\nFavorites.propTypes = {\r\n    favorites: PropTypes.array,\r\n    favoritesLiveMatches: PropTypes.array,\r\n    loadingFavorites: PropTypes.bool,\r\n    setCurrentEvent: PropTypes.func,\r\n    getFavorites: PropTypes.func,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favorites: state.favorites.favorites,\r\n        favoritesLiveMatches: state.favorites.favoritesLiveMatches,\r\n        loadingFavorites: state.favorites.loadingFavorites,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        language: state.general.language,\r\n        statsData: state.general.statsData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getFavorites: () => dispatch(getFavorites()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getStatsData: () => dispatch(getStatsData())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport {Translate} from '../../localization';\r\nimport {\r\n    clearCasinoGames,\r\n    getGGCasinoGames,\r\n    searchCasino,\r\n    setCasinoActiveCategory,\r\n    setSearchStarted\r\n} from '../../store/actions/casino.actions';\r\nimport {getUser} from '../../store/actions/user.actions';\r\n\r\nlet timer = 0;\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getGGCasinoGames();\r\n        if (this.props.userData !== null) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearCasinoGames();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let {activeCategory} = this.props;\r\n        this.setState({isSearchOpen: true});\r\n        this.props.setSearchStarted(true);\r\n\r\n        if (activeCategory !== 'all') {\r\n            this.props.setCasinoActiveCategory('all');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setSearchStarted(false);\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setCasinoActiveCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({searchVal: value});\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchCasino(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    render() {\r\n        let {isSearchOpen, searchVal} = this.state;\r\n\r\n        return (\r\n            <div style={{marginTop: '1vw'}}>\r\n                <h5 className=\"casino-title\">Casino games</h5>\r\n                {isSearchOpen || true ? (\r\n                    <div className=\"casino__header disable-select mx-4\">\r\n                        <div className=\"sports__content sports__content_sm\">\r\n                            <div className=\"sports__search-bar clearfix ui-input-search ui-body-inherit ui-corner-all ui-mini ui-shadow-inset ui-input-has-clear\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"ml-2 mr-2 form-control sports__search-input\"\r\n                                    autoFocus\r\n                                    placeholder={Translate.searchHere}\r\n                                    value={searchVal}\r\n                                    onChange={this.handleSearch}\r\n                                />\r\n                                <i className=\"icon-search\"></i>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/*<div className=\"casino__category__list\">{categories}</div>*/}\r\n\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"casino__header\">\r\n                        <div className=\"casino__category casino__category-search ui-input-search ui-body-inherit ui-corner-all ui-mini ui-shadow-inset ui-input-has-clear\"  onClick={this.showSearchBar}>\r\n                            <span>\r\n                                <i className=\"icon-search\"></i>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {/*{categories}*/}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategory: PropTypes.string,\r\n    getCasinoGames: PropTypes.func,\r\n    clearCasinoGames: PropTypes.func,\r\n    setCasinoActiveCategory: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    searchCasino: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    casinoCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeCategory: state.casino.activeCategory,\r\n        casinoCategories: state.casino.casinoCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getGGCasinoGames: () => dispatch(getGGCasinoGames()),\r\n        clearCasinoGames: () => dispatch(clearCasinoGames()),\r\n        setCasinoActiveCategory: (category) => dispatch(setCasinoActiveCategory(category)),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        searchCasino: (value) => dispatch(searchCasino(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport map from 'lodash.map';\r\nimport {CASINO_PER_PAGE } from '../../config';\r\nimport Loading from '../Common/NewLoading';\r\nimport {LazyBackgroundImage} from '../Common/ImgLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Login from '../Login';\r\nimport {getSlotGameData} from '../../store/actions/casino.actions';\r\n\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n            casinoGamesList: [],\r\n            page: 1,\r\n            showAm: true,\r\n            showNovo: false,\r\n            showWazda: false,\r\n            showNetent: false,\r\n            showBomba : false,\r\n            showAristocratt  :false ,\r\n            showEgt : false ,\r\n            showRacing: false ,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('casino_url') !== '') {\r\n            sessionStorage.setItem('casino_url', '');\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let {casinoGames, filteredCasinoGames, loadingCasinoGames, activeCategory, noSearchResults} = this.props;\r\n        let allCasinoGames = noSearchResults ? [] : filteredCasinoGames.length > 0 ? filteredCasinoGames : casinoGames;\r\n        if (prevProps.casinoGames !== casinoGames\r\n            || prevProps.filteredCasinoGames !== filteredCasinoGames\r\n            || prevProps.noSearchResults !== noSearchResults\r\n            || prevProps.loadingCasinoGames !== loadingCasinoGames\r\n            || prevProps.activeCategory !== activeCategory\r\n        ) {\r\n            this.setState({\r\n                casinoGamesList: allCasinoGames.slice(0, CASINO_PER_PAGE),\r\n                page: 1,\r\n            });\r\n        }\r\n\r\n        // if (!this.props.isShowCasino) {\r\n        //     this.props.history.push('/');\r\n\r\n        // }\r\n        if (this.props.userData && !this.props.userData.is_casino_enabled) {\r\n            this.props.history.push('/');\r\n\r\n        }\r\n\r\n        if(this.props.currentGameData !== prevProps.currentGameData) {\r\n            console.error('must go now', `/casino/game/${this.props.currentGameData.game}`);\r\n            this.props.history.push(`/casino/game/${this.props.currentGameData.game}`);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({casinoGamesList: []});\r\n    }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    playGame = (game) => {\r\n        if (this.isLoggedIn()) {\r\n            let history = this.props.history;\r\n            this.props.getSlotGameData(game, history);\r\n        } else {\r\n            this.setState({showLogin: true});\r\n        }\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({showLogin: true});\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({showLogin: false});\r\n    };\r\n\r\n    fetchMore = (allCasinoGames) => {\r\n        const {page} = this.state;\r\n        this.setState({\r\n            ...this.state,\r\n            page: page + 1,\r\n            casinoGamesList: [...this.state.casinoGamesList, ...allCasinoGames.slice(page * CASINO_PER_PAGE, (page + 1) * CASINO_PER_PAGE)]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {showLogin, casinoGamesList, page} = this.state;\r\n        let {\r\n            casinoGames,\r\n            filteredCasinoGames,\r\n            loadingCasinoGames,\r\n            activeCategory,\r\n            noSearchResults,\r\n            searchStarted\r\n        } = this.props;\r\n        let allCasinoGames = noSearchResults ? [] : filteredCasinoGames.length > 0 ? filteredCasinoGames : casinoGames;\r\n        let hasMore = allCasinoGames.length > page * CASINO_PER_PAGE;\r\n        let amaticGames = [];\r\n        let novomaticGames = [];\r\n        let wazdaGames = [];\r\n        let netentGames = [];\r\n        let bombaGames =[];\r\n        let aristocratGames =[];\r\n        let egtGames = [];\r\n        let racingGames = [];\r\n\r\n        let gameList =\r\n            casinoGamesList && casinoGamesList.length > 0\r\n                ? map(allCasinoGames, (game) => {\r\n                    if (game.category === 'racing') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        racingGames.push(theGame);\r\n                    }\r\n                    if (game.category === 'egt') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        egtGames.push(theGame);\r\n                    }\r\n\r\n                    if (game.category === 'aristocrat') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        aristocratGames.push(theGame);\r\n                    }\r\n\r\n                    if (game.category === 'bomba') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        bombaGames.push(theGame);\r\n                    }\r\n\r\n                    if (game.category === 'novomatic') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        novomaticGames.push(theGame);\r\n                    }\r\n                    if (game.category === 'netent') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        netentGames.push(theGame);\r\n                    }\r\n\r\n                    if (game.category === 'wazdan') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        wazdaGames.push(theGame);\r\n                    }\r\n                    if (game.category === 'amatic') {\r\n                        let theGame = (<div className=\"casino__itemm\" key={game.id} onClick={() => this.playGame(game)}>\r\n                            <div className=\"casino__img1__container\"><LazyBackgroundImage image={game.image}\r\n                                                                                         fallbackImage=\"./images/loading-dark.gif\"\r\n                                                                                         className=\"casino__img1\"/>\r\n                            </div>\r\n                            <p className=\"casino__namee\">{game.name}{/* - {game.id} - {game.category}*/}</p>\r\n                        </div>);\r\n                        amaticGames.push(theGame);\r\n                    }\r\n\r\n                })\r\n                : [];\r\n\r\n        let novomaticClass = !this.state.showNovo ? 'closed' : '';\r\n        let wazdaClass = !this.state.showWazda ? 'closed' : '';\r\n        let amaticClass = !this.state.showAm ? 'closed' : '';\r\n        let netentClass = !this.state.showNetent ? 'closed' : '';\r\n        let bombaClass = !this.state.showBomba ? 'closed' : '';\r\n        let aristocratClass = !this.state.showAristocratt ? 'closed' : '';\r\n        let egtClass = !this.state.showEgt ? 'closed' : '';\r\n        let racingClass = !this.state.showRacing ? 'closed' : '';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return loadingCasinoGames ? (\r\n            <Loading/>\r\n        ) : (<>\r\n\r\n\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('amatic');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${amaticClass}`}\r\n\r\n\r\n            >Amatic\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showAm ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showAm && amaticGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('novomatic');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${novomaticClass}`}\r\n\r\n\r\n            >Novomatic\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showNovo ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showNovo && novomaticGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('wazda');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${wazdaClass}`}\r\n\r\n\r\n            >Wazdan\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showWazda ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showWazda && wazdaGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('netent');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${netentClass}`}\r\n\r\n\r\n            >Netent\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showNetent ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showNetent && netentGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('bomba');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${bombaClass}`}\r\n\r\n\r\n            >bomba\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showBomba ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showBomba && bombaGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('aristocrat');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${aristocratClass}`}\r\n\r\n\r\n            >aristocrat\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showAristocratt ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showAristocratt && aristocratGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('egt');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${egtClass}`}\r\n\r\n\r\n            >egt\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showEgt ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showEgt && egtGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div data-role=\"collapsible\" data-collapsed=\"false\"\r\n                 className=\"ui-collapsible ui-collapsible-themed-content ui-first-child\"><h3\r\n                className=\"ui-collapsible-heading\"><a\r\n                onClick={() => {\r\n                    this.showCategory('racing');\r\n                }}\r\n\r\n\r\n                className={`ui-collapsible-heading-toggle ui-btn ui-btn-icon-right ui-btn-i ui-icon-carat-d ${egtClass}`}\r\n\r\n\r\n            >Racing\r\n                <span className=\"ui-collapsible-heading-status\"> </span></a>\r\n            </h3>\r\n                <div className=\"ui-collapsible-content ui-body-a\" aria-hidden=\"false\"\r\n                     style={{padding: this.state.showRacing ? '.5em 1em' : ''}}>\r\n                    <ul data-role=\"listview\" id=\"games-overview\" className=\"games-mini-list ui-listview\">\r\n                        {this.state.showRacing && racingGames}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>);\r\n\r\n        return loadingCasinoGames ? (\r\n            <Loading/>\r\n        ) : allCasinoGames.length > 0 ? (\r\n            <>\r\n                {/* {activeCategory === 'all' && !searchStarted && (\r\n                    <>\r\n                        <TopGames />\r\n                        <p className=\"casino__title mt-0 mb-1 pl-3 font-weight-semibold text-yellow\">{Translate.allGames}</p>\r\n                    </>\r\n                )} */}\r\n                {\r\n                    casinoGamesList.length > 0 ? (\r\n                        <InfiniteScroll\r\n                            dataLength={casinoGamesList.length}\r\n                            next={() => this.fetchMore(allCasinoGames)}\r\n                            hasMore={hasMore}\r\n                            loader={<LoadingIcon theme=\"dark centered\"/>}\r\n                            scrollThreshold={0.95}\r\n                        >\r\n                            <div className=\"casino__list clearfix mb-2\">{gameList}</div>\r\n                        </InfiniteScroll>\r\n                    ) : (\r\n                        <div className=\"no-data fs-15 pt-3 pb-3\">No More Result Found</div>\r\n                    )\r\n                }\r\n                {showLogin && <Login hideLogin={this.hideLogin}/>}\r\n            </>\r\n        ) : (\r\n            <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    showCategory(category) {\r\n      \r\n        if (category === 'racing') {\r\n            this.setState({\r\n                showAm: false,\r\n                showWazda: false,\r\n                showNovo: false,\r\n                showNetent:false,\r\n                showBomba: false,\r\n                showAristocratt: false,\r\n                showRacing: !this.state.showRacing,\r\n\r\n            });\r\n        }\r\n        if (category === 'egt') {\r\n            this.setState({\r\n                showAm: false,\r\n                showWazda: false,\r\n                showNovo: false,\r\n                showNetent:false,\r\n                showBomba: false,\r\n                showAristocratt: false,\r\n                showEgt: !this.state.showEgt,\r\n                showRacing: false ,\r\n\r\n            });\r\n        }\r\n\r\n \r\n        if (category === 'amatic') {\r\n            this.setState({\r\n                showAm: !this.state.showAm,\r\n                showWazda: false,\r\n                showNovo: false,\r\n                showNetent:false,\r\n                showBomba: false,\r\n                showAristocratt: false,\r\n                showEgt:false,\r\n                showRacing: false ,\r\n            });\r\n        }\r\n        if (category === 'wazda') {\r\n            this.setState({\r\n                showAm: false,\r\n                showWazda: !this.state.showWazda,\r\n                showNovo: false,\r\n                showNetent:false,\r\n                showBomba: false,\r\n                showAristocratt: false,\r\n                showEgt:false,\r\n                showRacing: false ,\r\n\r\n            });\r\n        }\r\n        if (category === 'novomatic') {\r\n            this.setState({\r\n                showAm: false,\r\n                showWazda: false,\r\n                showNovo: !this.state.showNovo,\r\n                showNetent:false,\r\n                showBomba: false,\r\n                showAristocratt: false,\r\n                showEgt:false,\r\n                showRacing: false ,\r\n\r\n            });\r\n        }\r\n            if (category === 'netent') {\r\n                this.setState({\r\n                    showAm: false,\r\n                    showWazda: false,\r\n                    showNovo: false,\r\n                    showBomba: false,\r\n                    showNetent: !this.state.showNetent,\r\n                    showAristocratt: false,\r\n                    showEgt:false,\r\n                    showRacing: false ,\r\n                });\r\n            }\r\n                if (category === 'bomba') {\r\n                    this.setState({\r\n                        showAm: false,\r\n                        showWazda: false,\r\n                        showNovo: false,\r\n                        showNetent: false,\r\n                        showBomba: !this.state.showBomba,\r\n                        showAristocratt: false,\r\n                        showEgt:false,\r\n                        showRacing: false ,\r\n                    });\r\n\r\n                }\r\n                if (category === 'aristocrat') {\r\n                    this.setState({\r\n                        showAm: false,\r\n                        showWazda: false,\r\n                        showNovo: false,\r\n                        showNetent:false,\r\n                        showBomba: false,\r\n                        showAristocratt: !this.state.showAristocratt,\r\n                        showEgt:false,\r\n                        showRacing: false ,\r\n        \r\n                    });\r\n                }\r\n            }\r\n    \r\n        }\r\n    \r\n\r\n\r\nGameList.propTypes = {\r\n    casinoGames: PropTypes.array,\r\n    filteredCasinoGames: PropTypes.array,\r\n    loadingCasinoGames: PropTypes.bool,\r\n    activeCategory: PropTypes.string,\r\n    noSearchResults: PropTypes.bool,\r\n    searchStarted: PropTypes.bool,\r\n    userData: PropTypes.object,\r\n    initCasinoUser: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoGames: state.casino.casinoGames,\r\n        filteredCasinoGames: state.casino.filteredCasinoGames,\r\n        loadingCasinoGames: state.casino.loadingCasinoGames,\r\n        activeCategory: state.casino.activeCategory,\r\n        noSearchResults: state.casino.noSearchResults,\r\n        searchStarted: state.casino.searchStarted,\r\n        userData: state.user.data,\r\n        isShowCasino: state.general.isShowCasino,\r\n        currentGameData: state.casino.currentGameData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSlotGameData: (game, history) => dispatch(getSlotGameData(game, history)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Loading from '../Common/Loading';\r\nimport Util from '../../helper/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nimport Banner from './Banner';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\nimport { initGgSlotUser } from '../../store/actions/casino.actions';\r\n\r\nclass Casino extends Component {\r\n    componentDidMount() {\r\n     \r\n    //   document.body.classList.add('body_casino');\r\n      \r\n    }\r\n    componentWillUnmount () {\r\n      document.body.classList.remove('body_casino');\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.setLoadingSlot ? <Loading/>: \r\n                <div className=\"main-container bg-gradient\">\r\n                   \r\n\r\n                    {/* <div className='back_button'>\r\n                    <Button  variant=\"contained\" onClick = {()=>{this.props.history.push('/'); this.props.getUser();}} >Back To Home</Button>\r\n                </div>\r\n                <div className=\"main-container \">  \r\n                    {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <Loading />} */}\r\n                    {/*<Banner />*/}\r\n                    <Categories  />\r\n                    <GameList />\r\n                </div>\r\n    }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n        setLoadingSlot: state.casino.setLoadingSlot,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser: () => dispatch(getUser()),\r\n        setCasinoLobby: (value) =>dispatch(setCasinoLobby(value)),\r\n        initGgSlotUser: () => dispatch(initGgSlotUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Casino);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass Jackpot extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    jack(name, stars, amount) {\r\n        return (<>\r\n            <div className=\"jackpot\">\r\n                <div className=\"header-img\"/>\r\n                <p className=\"jack-value\">{amount} TND</p>\r\n                <div className=\"winner-name\">******{name}</div>\r\n                <div className=\"jack-stars\">\r\n                    <i className=\"material-icons\">\r\n                        {[...Array(stars)].map((x, i) =>\r\n                            'star '\r\n                        )}\r\n                         </i>\r\n                </div>\r\n            </div>\r\n        </>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.jack(\"sd125\", 5, 750)}\r\n                {this.jack(\"qz322\", 4, 600)}\r\n                {this.jack(\"arek\", 5, 750)}\r\n                {this.jack(\"alel\", 5, 820)}\r\n                {this.jack(\"ae217\", 3, 280)}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nJackpot.propTypes = {\r\n    names: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Jackpot);\r\n","import React, { Component } from 'react';\r\nimport { getLobbyURL, setCasinoLobby } from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport Lobby from './Lobby';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nimport Loading from '../Common/Loading';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Casino extends Component {\r\n    componentDidMount() {\r\n        const { match, getLobbyURL } = this.props;\r\n\r\n        if (Util.isLoggedIn()) {\r\n            getLobbyURL(match.params.lobbyName);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { match, getLobbyURL } = this.props;\r\n\r\n        if (prevProps.match.params.lobbyName !== match.params.lobbyName && Util.isLoggedIn()) {\r\n            getLobbyURL(match.params.lobbyName);\r\n        }\r\n\r\n        if (this.props.userData && (!this.props.userData.is_ezugi_casino_enabled || !this.props.userData.is_live_casino_enabled)) {\r\n            if (match.params.lobbyName === 'evo' || match.params.lobbyName === 'ezugi') return;\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (Util.isLoggedIn())\r\n            this.props.getUser();\r\n        document.body.classList.remove('body_casino');\r\n        this.props.setCasinoLobby('');\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='back_button'>\r\n                    <Button variant=\"contained\" onClick={() => { this.props.history.push('/'); this.props.getUser(); }} >Back To Home</Button>\r\n                </div>\r\n                <div className='main-container'>\r\n                    {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <Loading />}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: (type) => dispatch(getLobbyURL(type)),\r\n        getUser: () => dispatch(getUser()),\r\n        setCasinoLobby: (value) => dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Casino);\r\n","import React, { useEffect } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../helper/PrivateRoute';\r\nimport PublicRoute from '../helper/PublicRoute';\r\nimport FullLayoutRoute from '../helper/FullLayoutRoute';\r\nimport DefaultRoute from '../helper/DefaultRoute';\r\n\r\nimport '../App.css';\r\n\r\nimport Home from '../Components/Home';\r\nimport Casino from '../Components/Casino';\r\nimport CasinoGame from '../Components/Casino/SingleGame';\r\nimport PCasino from '../Components/P-casino';\r\n\r\n\r\nimport MyAccount from '../Components/MyAccount';\r\nimport MyBets from '../Components/MyBets';\r\nimport Betslip from '../Components/Betslip';\r\nimport Transactions from '../Components/Transactions';\r\n\r\nimport Inplay from '../Components/Inplay';\r\nimport InplaySearch from '../Components/Inplay/Search';\r\nimport Prematch from '../Components/Prematch';\r\nimport PrematchSearch from '../Components/Prematch/Search';\r\nimport Results from '../Components/Results';\r\nimport ResultsSearch from '../Components/Results/Search';\r\nimport Upcoming from '../Components/Today';  // shows matches till next day EOD\r\nimport UpcomingSearch from '../Components/Today/Search';\r\nimport Tomorrow from '../Components/Tomorrow';\r\nimport TomorrowSearch from '../Components/Tomorrow/Search';\r\n\r\nimport Favorites from '../Components/Favorites';\r\nimport TermsAndCondition from '../Components/MyAccount/TermsAndCondition';\r\n\r\nimport Auth from '../store/Auth';\r\n\r\n\r\nimport Ggslot from '../Components/Ggslot';\r\n\r\nimport Jackpot from '../Components/Jackpot';\r\nimport LobbyCasino from '../Components/Casino/LobbyCasino';\r\n\r\n\r\nfunction MobileRoutes(props) {\r\n\r\n  useEffect(() => {\r\n    if(!props.isMobileOnly && props.history.location.pathname.split('/')[1] !== 'd') props.history.push('/d');\r\n    if(props.isMobileOnly && props.history.location.pathname.split('/')[1] === 'd')props.history.push('/');\r\n  }, [props.history, props.isMobileOnly]);\r\n\r\n  return (\r\n      <>\r\n          <Auth>\r\n              <Switch>\r\n                  <PublicRoute exact path=\"/\" component={Home} isMobileOnly={ props.isMobileOnly }/>\r\n                  <PrivateRoute exact path=\"/jackpot\" component={Jackpot} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"jackpot\" />\r\n                  <PrivateRoute exact path=\"/p-casino\" component={PCasino} isMobileOnly={ props.isMobileOnly } headerClass=\"header_transparent\" title=\"PCasino\" />\r\n                  <PrivateRoute exact path=\"/casino/lobby/:lobbyName\" component={LobbyCasino} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"casino\" />\r\n                  <PrivateRoute exact path=\"/casino/lobby\" component={LobbyCasino} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"casino\" />\r\n                  \r\n                  <FullLayoutRoute exact path=\"/casino\" component={Casino} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"casino\" />\r\n                  <FullLayoutRoute exact path=\"/casino/game/:gameTitle\" component={CasinoGame} />\r\n                  {/* <PrivateRoute exact path=\"/live-casino\" component={LiveCasino} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"liveCasino\" /> */}\r\n                  {/* <FullLayoutRoute exact path=\"/pragmatic-play\" component={NewCasino} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"pragmaticPlay\"/> */}\r\n                  {/* <FullLayoutRoute exact path=\"/slotplay\" component={PragmaticPlay} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"pragmaticPlay\"/> */}\r\n\r\n                  {/*<FullLayoutRoute exact path=\"/virtual-sports\" component={VirtualSports} isMobileOnly={ props.isMobileOnly } headerClass=\"header_transparent\" title='virtualSports' />*/}\r\n                  <PrivateRoute exact path=\"/my-account\" component={MyAccount} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"myAccount\" />\r\n                  <PrivateRoute exact path=\"/my-bets\" component={MyBets} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"myBets\" />\r\n                  <PublicRoute exact path=\"/betslip\" component={Betslip} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"betslip\" />\r\n                  <PrivateRoute exact path=\"/my-account/transactions\" component={Transactions} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"transaction\" />\r\n                  <PublicRoute exact path=\"/live\" component={Inplay} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"inplay\" />\r\n                  <PublicRoute exact path=\"/live/search\" component={InplaySearch} isMobileOnly={ props.isMobileOnly } title=\"inplay\" />\r\n                  <PublicRoute exact path=\"/sports\" component={Prematch} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"sports\" />\r\n                  <PublicRoute exact path=\"/sports/search\" component={PrematchSearch} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"sports\" />\r\n                  <PublicRoute exact path=\"/results\" component={Results} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"results\" />\r\n                  <PublicRoute exact path=\"/results/search\" component={ResultsSearch} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"results\" />\r\n                  <PublicRoute exact path=\"/upcoming\" component={Upcoming} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"upcoming\" />\r\n                  <PublicRoute exact path=\"/upcoming/search\" component={UpcomingSearch} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"upcoming\" />\r\n                  <PublicRoute exact path=\"/tomorrow\" component={Tomorrow} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"tomorrow\" />\r\n                  <PublicRoute exact path=\"/tomorrow/search\" component={TomorrowSearch} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"tomorrow\" />\r\n                  <PrivateRoute exact path=\"/favorites\" component={Favorites} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"favorites\" />\r\n                  <PublicRoute exact path=\"/terms-page\" component={TermsAndCondition} headerClass=\"header_white\" title=\"Terms\" />\r\n                  <PublicRoute exact path=\"/ggslot\" component={Ggslot} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"casino\" />\r\n                  {/* <PrivateRoute exact path=\"/virtual-sports\" component={VirtualSports} isMobileOnly={ props.isMobileOnly } headerClass=\"header_white\" title=\"VirtualSports\" /> */}\r\n                  {/* <PublicRoute exact path=\"/new-casino\" component={NewCasino} isMobileOnly={props.isMobileOnly} headerClass=\"header_white\" title=\"casino\"/> */}\r\n\r\n                  <DefaultRoute />\r\n              </Switch>\r\n          </Auth>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default MobileRoutes;\r\n"],"sourceRoot":""}