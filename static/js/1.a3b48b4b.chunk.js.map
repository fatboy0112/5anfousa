{"version":3,"sources":["helper/PrivateRoute.js","Desktop/SignUp/validation.js","services/genralServices.js","Desktop/Login/index.js","Desktop/Betslip/CountdownComponent.js","Components/Common/Navigator.js","helper/FullLayoutRoute.js","helper/DefaultRoute.js","Components/Ggslot/Banner.js","Components/Betslip/CountdownComponent.js","Components/Inplay/Markets.js","Components/Shared/LiveStramModal.js","store/Auth.js","Desktop/MyAccount/ChangePassword.js","Desktop/MyAccount/CashbackModal.js","Desktop/Transactions/Filters.js","Desktop/Transactions/Table.js","Desktop/Transactions/index.js","Desktop/MyBets/Bet.js","Desktop/MyBets/Bets.js","Desktop/MyBets/CashoutModal.js","Desktop/MyBets/SingleBetslipModal.js","Desktop/MyBets/Betslip.js","Desktop/MyBets/CashoutSuccess.js","Desktop/MyBets/CashoutConfirmationPopup.js","Desktop/MyBets/Filter.js","Desktop/MyBets/index.js","Desktop/MyAccount/DepositModal.js","Desktop/MyAccount/index.js","Components/Betslip/BetslipMultiBet.js","Components/Betslip/KeyPadComponent.js","Components/Betslip/Calculator.js","Components/Betslip/MiniCalculator.js","Components/Betslip/BetslipList.js","Components/Betslip/BetslipSingleBet.js","Components/Betslip/BetslipSingle.js","Components/Betslip/ExtraOddModal.js","Components/Betslip/FastBetPopup.js","Components/Betslip/PlaceBetPopup.js","Components/Betslip/index.js","Components/MyBets/Bet.js","Components/MyBets/Bets.js","Components/MyBets/CashoutModal.js","Components/MyBets/SingleBetslipModal.js","Components/MyBets/Betslip.js","Components/MyBets/CashoutSuccess.js","Components/MyBets/CashoutConfirmationPopup.js","Components/MyBets/Filter.js","Components/MyBets/index.js","Components/Prematch/Sports.js","Components/Prematch/League.js","Components/Prematch/Locations.js","Components/Prematch/DateFilters.js","Components/Prematch/index.js","Components/MyAccount/ChangePassword.js","Components/MyAccount/CashbackModal.js","Components/MyAccount/DepositModal.js","Components/MyAccount/index.js","Components/Transactions/Filters.js","Components/Transactions/Table.js","Components/Transactions/index.js","Components/Prematch/Match.js","Components/Prematch/Matches.js","Components/Prematch/Events.js","helper/Footer.js","helper/PublicRoute.js","Components/Common/Header.js","Components/SignUp/index.js","Desktop/Common/Header.js","Desktop/SignUp/index.js","Components/Shared/Bet.js","Components/Shared/CustomMarket.js","Components/Common/NewLoading.js","services/casinoService.js","store/actions/casino.actions.js","store/actions/todayActions/lsports.today.search.actions.js","store/actions/todayActions/lsports.today.league.actions.js","store/actions/lsports.global.actions.js","store/actions/betslip.actions.js","store/actions/general.actions.js","store/actions/prematchActions/lsports.prematch.general.actions.js","store/actions/prematchActions/lsports.prematch.sport.actions.js","store/actions/prematchActions/lsports.prematch.location.actions.js","store/actions/prematchActions/lsports.prematch.league.actions.js","store/actions/prematchActions/lsports.prematch.search.actions.js","store/actions/home.actions.js","Components/Shared/Match/MatchDateTime.js","Components/Login/index.js","store/actions/resultsActions/lsports.results.general.actions.js","store/actions/resultsActions/lsports.results.location.actions.js","dynamo/resultsParams/getResultLocations.js","dynamo/resultsParams/getResultsCountParam.js","store/actions/resultsActions/lsports.results.sport.actions.js","store/actions/resultsActions/lsports.results.search.actions.js","store/actions/resultsActions/lsports.results.league.actions.js","Components/Shared/LeagueHeader.js","Components/Common/Loading.js","Components/Shared/Match/Favorite.js","Components/Common/ImgLoading.js","graphql/subscriptions.js","store/actions/todayActions/lsports.today.location.actions.js","Components/Shared/MainMarketSelector.js","Components/Shared/Match/Participants.js","Components/Shared/Match/ExtraMarkets.js","Components/Shared/MarketsPrematch.js","Components/Shared/ExtraOddsModal.js","Components/Shared/MainBet.js","Components/Shared/MainMarket.js","store/actions/transaction.actions.js","Components/Shared/SportsList.js","store/actions/inplayActions/lsports.inplay.general.actions.js","store/actions/inplayActions/lsports.inplay.search.actions.js","store/actions/inplayActions/lsports.inplay.location.actions.js","store/actions/inplayActions/lsports.inplay.sport.actions.js","store/actions/inplayActions/lsports.inplay.league.actions.js","store/actions/bets.actions.js","store/actions/todayActions/lsports.today.general.actions.js","Components/Common/LoaderLiveCasino.js","store/actions/lastMinuteActions/lsports.lastMinute.sport.actions.js","store/actions/lastMinuteActions/lsports.lastMinute.general.actions.js","store/actions/lastMinuteActions/lsports.lastMinute.league.actions.js","store/actions/cashout.actions.js","store/actions/todayActions/lsports.today.sport.actions.js","dynamo/todaysParam/getAllSportFixture.js","dynamo/todaysParam/getTodayEventsParams.js","store/actions/todayActions/lsports.prematch.location.action.js","Components/Casino/Lobby.jsx","Components/Shared/ExtraMarketSelector.js","Components/Shared/Match/MatchResult.js"],"names":["PrivateRoute","_ref","Component","component","rest","_objectWithoutProperties","_excluded","authed","localStorage","getItem","sessionStorage","pageTitle","title","headerClassname","headerClass","React","createElement","Route","Object","assign","render","props","Fragment","isMobileOnly","Header","DesktopHeader","Navigator","className","viewBox","fill","xmlns","d","Redirect","to","pathname","state","from","location","validation","userName","required","min_length","max_length","PhoneNo","length","passWord","require","instance","_createClass","genralServices","_classCallCheck","getDeviceLocation","Promise","resolve","reject","fetch","apiConfig","routes","then","response","json","getStatsStatus","nextUrl","url","concat","getStatsScore","getSearchEvents","value","sportId","searchEvent","tenetCasinoStatus","axios","get","params","unique_id","process","data","catch","error","console","Login","_Component","_inherits","_super","_createSuper","_this","call","stayLoggedIn","e","setState","checked","target","handleSubmit","usernameError","passwordError","inputUsername","inputPassword","loginLoading","submitLogin","handleChange","_objectSpread2","_objectSpread","_defineProperty","id","key","prevProps","prevState","this","userData","setLoginError","_this2","loginError","_this$state","onSubmit","preventDefault","type","placeholder","Translate","username","onChange","autoComplete","password","onClick","LoadingIcon","login","connect","user","language","general","dispatch","rememberMe","CountdownComponent","memo","betPlaceCountdown","seconds","message","messageText","Countdown","date","Date","now","onComplete","setTimeout","clearCountdown","renderer","hours","minutes","completed","timeout","showLoginForm","path","Util","isLoggedIn","showLogin","history","push","redirectLink","hideLogin","toggleNavigation","nav","GoTo","newPath","openTooltip","clearStripTimeout","checkLiveOddsUpdates","showTooltip","checkSavedBets","getTenentStatus","prevProp","count","fixtures","forEach","fixture","fixture_status","markets","market","bets","bet","dynamoClient","query","getSingleMarketOfEvent","fixtureId","Id","promise","Items","JSON","parse","find","values","Bets","Price","dataToSend","match_id","FixtureId","Market","updateBetslipEventsMarket","updateBetslipEventsLivescore","clearTimeout","lSportsConfig","oddsCalculatorTimer","_this3","_this$props","totalMultiOdds","totalOdds","isHomeLeagueActive","myBets","src","alt","is_casino_enabled","drawBetslipCount","BetslipTooltip","withStyles","tooltip","color","background","fontSize","minWidth","textAlign","borderRadius","margin","arrow","bottom","marginLeft","marginRight","marginBottom","transformOrigin","Tooltip","sports","live","href","placement","open","leaveDelay","interactive","PopperProps","popperOptions","positionFixed","modifiers","computeStyle","gpuAcceleration","fn","styles","position","left","right","display","justifyContent","arrowStyles","applyStyle","onLoad","disableHoverListener","betslip","home","isShowCasino","events","FullLayoutRoute","DefaultRoute","Banner","Markets","leagueName","_props$currentlySelec","currentlySelectedMarket","_useState","useState","_useState2","_slicedToArray","liveMarkets","setLiveMarkets","useEffect","sortedMarkets","array","sport_id","order","getExtraMarketName","MarketIdMapping","marketIds","sort","a","b","A","B","indA","indexOf","indB","sortMarkets","map","CustomMarket","column","LiveStreamModal","closeModal","liveStreamMatch","Dialog","onClose","aria-labelledby","scroll","DialogTitle","disableTypography","IconButton","aria-label","DialogContent","width","height","allow","style","border","Auth","_len","arguments","args","Array","_key","apply","waitAuthCheck","jwtCheck","jwtService","on","getUser","setUser","getFavorites","log","init","setLanguage","all","Loading","children","ChangePassword","oldPasswordError","newPasswordError","confirmPasswordError","inputOldPassword","inputNewPassword","inputConfirmPassword","changePasswordLoading","passwordMatchError","changePassword","changePasswordSuccess","setChangePasswordError","changePasswordError","oldPassword","newPassword","confirmPassword","Button","variant","disabled","customClass","change","CashbackModal","cashbackAmount","currency","getCashbackSucess","yesterday","setDate","getDate","Filters","setActivityType","tab","activityTypes","getTransactionTypes","CASINO_TYPES","LIVE_CASINO_TYPES","GG_SLOT_CASINO_TYPES","EVO_CASINO_TYPES","P_CASINO_TYPES","activityTypesMobile","index","label","activityTypesDesktop","MenuItem","handleChangeDateFrom","dateFrom","handleChangeDateTo","dateTo","handleChangeSelect","event","name","onSearchTransactions","isValid","differenceInDays","setTransactions","activityType","clearTransactions","_this$state2","getTransactions","setTransactionsFilter","_this$state3","MuiPickersUtilsProvider","utils","DateFnsUtils","InputLabel","shrink","fromDate","KeyboardDatePicker","disableToolbar","autoOk","format","minDateMessage","maxDateMessage","maxDate","toDate","FormControl","Select","fullWidth","size","show","firstPage","Table","fetchMoreData","filterParams","countBets","totalResultCount","fetchMore","runAgain","_this$props2","transactions","loadingTransactions","transactionsList","transaction","amount","toFixedDecimal","amountClassname","parseISO","created","trans_type","journal_entry","credit","debit","drawTransactions","InfiniteScroll","dataLength","next","hasMore","loader","theme","scrollableTarget","dateTime","gameType","nothingFound","Transactions","setActiveTab","isActive","selectTransactionTab","selectedOption","getCasinoTransactionOptions","CASINO_TRANSACTION_OPTIONS","includes","LIVE_CASINO_TRANSACTION_OPTIONS","item","xs","sportsBook","casino","liveCasino","_toConsumableArray","MenuProps","anchorOrigin","vertical","horizontal","getContentAnchorEl","Bet","_bet$specifiers","_bet$score","_bet$score2","_bet$score2$livescore","_bet$score3","_bet$score3$livescore","_bet$score4","_bet$score4$livescore","_bet$score5","_bet$score5$clock","_bet$participants$","_bet$participants$$pa","_bet$participants$2","_bet$participants$2$p","betslipStatus","statusStyle","settlement_status","betStatus","event_status","statuses","inplay","lost","won","bet_line","specifier","results","match_result","oddType","specifiers","split","spec","_spec$split","_spec$split2","specKey","specValue","Grid","container","league_name","score","livescore","home_score","away_score","clock","match_time","getBetTime","cashout","participants","participant","price","tip","marketNameFormatter","STATIC_MARKET","market_id","name_en","start_date","possible_win","win_amount","singleBetslip","drawBets","betslip_status","betType","bet_type","singleBetslip_odd","multi_price","status","isRefund","betNumber","showBonus","has_bonus","check","totalOdd","totalStake","possibleWin","totalWin","CashoutModal","cashoutData","openCashoutConfirmationPopup","isCashoutExpired","cashoutExpired","refreshCashout","cashoutAvailable","isCashoutAvailableLoading","loadingCashout","keys","cashoutTimer","cashout_amount","parseFloat","toFixed","SingleBetslipModal","checkCashoutConditions","isAnyLostBet","checkCashoutObject","isNotPastPrematch","openCashoutModal","cashoutObject","element","checkAllOddsAvailable","fixture_id","_e$Items$","outcomes","handleOddsUpdate","market_status","getSingleMarketOfPreEvent","_e$Items$2","snap","marketStatus","_lSportsConfig$market","active","settled","prematch","selectedBet","bet_id","result","odds","cashoutObj","startDate","compareAsc","resetCashoutData","showCashoutSuccess","couponId","coupon_id","betslipList","headerData","coupon","PaperProps","classes","root","ReactToPrint","trigger","content","betSlipRef","documentTitle","pageStyle","ref","el","setCashoutData","betslip_id","total_odds","stake_price","statusText","openBetslipModal","CashoutSuccess","CashoutConfirmationPopup","closeCashoutModal","getBetslipId","processCashout","showCashoutError","cashoutSuccessVisible","disableBackdropClick","disableEscapeKeyDown","areYouSureWantCashout","betslipId","yes","no","dateLastWeek","loadTranslations","getMyBetFilterTypes","endDate","setMybetsFilters","mybetsFilterParams","MyBets","activeTab","selectBetslip","openSingleBetslipModal","showSingleBetslipModal","singleBetslipLoading","currentBetslip","closeCashoutSuccessModal","getSingleBetslip","closeSingleBetslipModal","setCashoutLoading","betslips","showCashoutConfirmationPopup","closeCashoutConfirmationPopup","getBetslips","closeCashoutSuccess","isCashoutSuccess","removeMyBetsFilters","loadingBetslip","betslipsList","Betslip","drawBetslips","winAmount","closeSuccessModal","Filter","totalBetslipCount","DepositModal","depositAmount","loading","qr_code","depositError","QRCode","qrScan","autoFocus","enterAmount","continue","MyAccount","logout","isGetUserNeeded","_assertThisInitialize2","_assertThisInitialized","logoutUser","GoToPage","showChangePasswordForm","showChangePassword","showCashbackModal","closeBonus","hideChangePassword","redirectToTermsPage","handleDepositAmount","toastr","handleCurrentTab","resetDepositAmount","currentTab","enableMyBets","cashbackData","role","deposit","balance","data-dismiss","cashback_amount","withRouter","getCashbackData","BetslipMultiBet","lan","participant_one_full","participant_two_full","line","Line","handicap","BaseLine","matchInfo","canBeCombinedValue","currentFixture","currentFixtureMarkets","canBeCombined","canNotBeCombined","pickCanNotBeCombined","Status","betStatusMessage","suspended","betSuspended","betSettled","betStatusInfo","isLive","undefined","Livescore","Scoreboard","fixtureStatus","removeBet","provider","participantArray","Fixture","Participants","currentDate","convertToLocalTimezone","StartDate","dateString","timeString","printLive","betClassName","diff","isPlaced","setExtraMarkets","selectExtraMarket","openExtraOddsModal","openOddsModal","stopPropagation","switchBetslipType","colSpan","outcomeFormatter","propTypes","PropTypes","func","object","number","string","onClickCalAction","rowSpan","ok","Calculator","action","currentTarget","onCloseModal","reset","backspace","onSetValue","_value$split","match","res","slice","substr","startValue","Drawer","anchor","KeyPadComponent","defaultOptions","multiStake","singleStake","setMultiStake","setBetStake","stackAmount","openCalculator","options","option","i","activeClass","handleSetStake","BetslipList","isShow","placeBetCheck","isBtnDisabled","setPlaceBetError","placeBetError","showCountdown","placeBetDisabled","placeBetDisableFromAdmin","isDisabled","league","bonusMinValue","bonusAmount","bonusPersentage","totalPossibleWin","drawCalculator","bootomContainer","MiniCalculator","placeBet","BetslipSingleBet","BetslipSingle","setSingleStake","extraMarkets","ExtraOddsModal","unsubscribeEvents","handleFirebaseUpdates","updatedMatch","oldMatches","liveUpdates","marketWithDiff","oldMarket","mar","updatedBetsWithDiff","betId","oldBetArray","isArray","oldBet","oldPriceStr","openStatistics","extraMarketEvent","setStatistics","closeStatistics","clearStatistics","liveMatchForModal","marketsUpdated","Sport","extraMarketNames","getExtraMarkets","liveMatch","isEqual","clearExtraMarkets","_participants$0$parti","_participants$0$parti2","_participants$1$parti","_participants$1$parti2","extraSelectedMarket","toLowerCase","League","Name","liveScore","drawEventHeader","MatchDateTime","showDate","extraMarketEventsList","areBetsAllSettled","checkSettledBets","drawMarkets","ExtraMarketSelector","lsportsGlobal","extraMarketsLoading","statisticsEventId","statisticsType","eventId","marketName","statsType","statsTemplateType","FastBetPopup","setFastBetOption","acceptOddChangesText","turnOffAway","acceptOddChanges","PlaceBetPopup","setPlaceBetOption","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","timer","liveMatchSub","marketSubscription","liveMatchSubAppSync","setTimer","unsubscribe","liveMatchSubConnectionAttempts","startListener","liveFixtureId","filter","obj","liveObj","liveFix","actualFixtureId","toString","setInterval","updatedgetSingleMatchMarkets","setLiveScore","startListenerAppSync","fixtureIdArray","_asyncToGenerator","_callee","unsub","_context","API","graphql","graphqlOperation","onUpdateMatchMarkets","subscribe","warn","_x","getLiveMatches","_callee2","_context2","scan","getLiveMatchIds","t0","checkBetsValidity","isEventLive","updateBetslipEventsStatus","getSingleMatchMarkets","updateBetslipEvent","_ref3","onUpdateLiveMarkets","_updatedMatch","sport_event_status","marketFormatter","subscribeExtraMarket","WebSocket","REACT_APP_WEBSOCKET_CHANNEL","addEventListener","handleExtraMarketUpdates","isDisconnected","maxWebsocketRetryCount","subscribeExtraMarketAppSync","openExtraOddsModalLiveMatch","liveStreamAvailable","newFixture","currentEvent","setCurrentEvent","showExtraOddsModal","_ref4","_callee3","_context3","batchGet","getLiveScore","Responses","LiveMarkets","_x2","_ref5","_callee4","_context4","updatedgetLiveMatchMarkets","_x3","_ref6","_callee5","_context5","getLiveMatchMarkets","paramsMarketDataIndex","mktItems","mrktData","_x4","_x5","getSingleMarketOfMatch","_ref7","_callee6","fixtureMarketId","_context6","_x6","marketDifference","prevMarkets","_ref8","_updatedMatch2","_currentEvent$market","updatedMarket","marketValue","currBets","newBet","marketWithDiff2","close","closeExtraOddsModal","activeTabId","clearBets","setLastBetslipId","onFastBetChange","fastBetChecked","openFastBetModal","setItem","showFastBetModal","showPlaceBetModal","fastBetOff","closeFastBetModal","openPlaceBetModal","closePlaceBetModal","_this$props3","limits","placeBetWithOutLoader","canNotBePlaced","canNotBePlacedMessage","m","insufficientBalance","limitValidation","betLimitsValidation","typeId","convertToPlaceBetData","getDiff","setPlaceBetCountdown","latestFixtures","betStatusAfterTime","setPlaceBetDisabled","stakeGreaterThen1","replaceSameBets","getLastBetslip","lastBetId","calculateModalOption","ExtraOddsModalLive","liveMatches","_this$props4","getBetLimits","_this$props5","setPlaceBetSuccess","clearInterval","_this$props6","placeBetCountdown","betPlacedMessage","betslipLoading","tabsHeader","single","multiple","fastBet","repeatBet","placeBetSuccess","_bet$score2$clock","NativeSelect","inputProps","Sports","selectSport","setLocationsActive","setPrematchActive","selectedSport","selectLocation","selectLeague","selectPreSport","getPrematchSportsMobile","sportsCountObj","SportsList","staticPrematchSports","sportsObj","searchPath","statsData","getPrematchSports","getStatsData","segment","sportEventInterval","leagues","leagueId","getPrematchLeagueEvents","lang","drawLeagues","location_id","fixtures_count","divider","handleClick","Locations","locationId","selectedLocation","getPrematchLeagueForLocation","clearPartialLocations","getPrematchLocationsMobile","locations","noLocations","locationLength","locationsList","locationName","country","getPrematchLocations","setClearLocations","dateFilter","setDateFilter","dateList","showSearch","setShowSearch","hideSearchBar","handleSearch","_loop","day","dayFormat","dayFormatToShow","today","tomorrow","searchHere","Prematch","searchPrematchEvents","search","setPrematchDateFilter","resetPrematch","isLocationsActive","isPrematchActive","searchValue","searchStarted","DateFilters","Events","clearLocations","searchVal","searchEvents","hideDepositForm","showDepositForm","showDepositModal","handelOddsTypeChange","_this$props$userData","Link","md","is_cashback_available","bonus","termsAndConditon","mainSelectedMarket","mainMarketEvent","isSortedMarkets","isEmpty","Favorite","ExtraMarkets","openMarketsModal","info","MainMarket","removeLeague","openStatisticsModal","lastLeagueId","drawMatches","groupInfo","LeagueHeader","showStripe","remove","Match","showStatisticsModal","closeStatisticsModal","hasNextPage","nextIndex","mainEvents","getMarketData","clearLeagueEvents","selectMainMarket","noSearchResults","noEvents","groupedEventsBySport","groupBy","matchesPrematch","gr","marketSelector","MainMarketSelector","mainMarket","MARKET_FOR_OUTER_SLIDER_PREMATCH","groupMatches","Matches","matches","drawContent","selectedLeague","marketId","setPrematchResetPage","startIndex","isSearch","clear","Footer","data-ceg-seal-id","data-ceg-image-size","data-ceg-image-type","aria-hidden","PublicRoute","extraMarketChild","jackpotInterval","SignUp","inputPhoneNo","bankAccountNo","agentCode","currencyName","bankAccountName","code","misMatchError","checkedError","submitSignUp","handlePhone","dialCode","handleToggle","bankAccountNoError","agentCodeError","phonenoError","signupError","hideSignUp","overflowX","PhoneInput","inputStyle","backgroundColor","borderStyle","buttonClass","containerClass","enableSearch","passwordAgain","signup","toggleHeader","window","pageYOffset","header","current","clientHeight","classList","add","goToPage","onGoBack","goBack","handleClickMenu","anchorEl","changeLanguage","getLanguage","selectedIndex","changeLanguageMobile","parseInt","handleCloseMenu","showSignUpForm","showSignUp","access_token","getAccessToken","isAuthTokenValid","document","body","menuToggle","showMenu","createRef","cashbackAvailable","limit","jackPotClass","showConfetti","jackpotMsg","userSelectedLang","userSelectedLangIndex","is_jackpot_enabled","last_jackpot_run","currentTimeDiff","differenceInMinutes","addLimit","jackpot_amount","jackpot_time_limit","amountPerSec","getJackPot","removeItem","jackPotError","jackpotUserName","removeEventListener","_this4","languageList","selected","languageListMobile","toUpperCase","isNotHome","zIndex","Confetti","innerWidth","innerHeight","numberOfPieces","liveF","todayf","startf","favorites","paddingTop","paddingRight","aria-haspopup","aria-controls","Menu","keepMounted","Boolean","jackpotAmount","toLocaleString","year","month","weekday","hour","hour12","minute","showMyAccount","ShowleftItems","pathIndex","lastUrl","_this$props$location$","_this$props$location$2","casinoClass","is_live_casino_enabled","extraMarketPre","extraMarketLive","myAccount","overflowY","is_gg_slot_casino_enabled","is_pcasino_enabled","pCasino","is_ezugi_casino_enabled","ezugiCasino","evoCasino","replaceAll","replace","LoginPop","addBet","diffType","getElementById","isCentered","isEuropeanHandicap","handicapMarkets","colClass","span1Class","span2Class","span3Class","gridClassName","deactivated","_Bets$0$specifier","_Bets","useSelector","sortBet","activeBet","isShowScore","showScore","stableMarketOnExtraMarket","isFavorite","activeOutcomes","slicedBets","TwoColumnMarketIds","SortBySecondary","orderBy","Math","ceil","splice","OnlyActiveBets","flex","some","groupedBets","every","UnderOverPairMarketIds","betArray","isHandicap","isHandicapVisible","isAnyBetActive","marketSpecifier","dynamicMarkets","_activeOutcomes$","NewLoading","casinoGameTimer","_EventEmitter","casinoService","getCasinoGames","game_type","initCasinoUser","getLiveCasinoGames","getpCasinoGames","Games","getIPAddress","ipAddress","publicIp","v4","getpGameData","game","lobbyUrl","ip","post","pcasinoAPI","game_code","GameCode","currency_code","player_ip","country_name_code","casino_lobby_url","platform_type","Vendor","Platform","getGameData","casinoAPI","game_name","getLiveCasinoGameData","getLiveGameData","game_id","mode","device","getEzugiLobbyURL","ezugiCasinoLobby","open_table","getEvoLobbyURL","getVirtualSports","getLobbyURL","CASINO_GAME_LIST_QTECH","lobbyURL","initGgSlotUser","getAllGgGamesList","getGgAllGamesList","ggSlotURL","lobby_id","getNewCasinoGames","slot","getNewCasinoGameData","getNewGameData","EventEmitter","getGGCasinoGames","games","setCasinoGames","handleRepeatedLogin","Actions","setLiveCasinoGames","getState","setPCasinoGames","setCasinoActiveCategory","category","setLiveCasinoActiveCategory","setPCasinoActiveCategory","setSearchStarted","setLiveSearchStarted","searchCasino","searchLiveCasino","searchPCasino","getSlotGameData","gameName","menu_title","game_url","GAME_URL","hash","api_id","exiturl","setLoading","setSlotGameData","refreshToken","setLiveGameData","getpCasinoGameData","clearCasinoGames","clearLiveCasinoGames","setVirtualSports","postHeartBeat","getVirtualSportsData","clearVirtualSports","setVirtualSearchStarted","searchVirtualSports","setVirtualSportsCategory","setCasinoLobby","setLoadingGgSlot","setNewCasinoGames","setNewCasinoActiveCategory","setNewSearchStarted","searchNewCasino","setNewGameData","clearNewCasinoGames","setTodaySearchLoadMore","page","currentPage","selectedLocations","lSportsService","todaySearchEvents","getTodayLocations","setTodayResetPage","selected_locations","selectedLocationsList","setTodaySearch","clearSearch","searchTodayEvents","getSportEvents","selectedLeagues","selectedLocationList","leagueEvent","partialAllEvents","_event$league","league_id","updateExtraMarketsEventsMarket","updateExtraMarketsEventsLivescore","setExtraMarketLeagueName","setExtraMarketLocationName","MAX_BET_COUNT","setLimits","updateBets","betslipID","newData","placeLiveBet","setBetPlacedMessage","setBetslipLoading","non_field_errors","converted3","_fixture$fixture","_fixture$fixture$Fixt","repeatBetAvailable","fMarket","err","setLastBetslip","getBanners","banners","getMatchBanners","eventObj","getFavEvents","_PartialDevent","PartialDevent","updatedBanner","evt","redirection","isMatchBanner","countryCode","updatePrematchEventsMarket","updatePrematchEventsLivescore","updatePrematchEventsStatus","countObj","nextToken","paramsPrematchCount","getFormattedDate","LastEvaluatedKey","locationObj","getSportsCount","getPrematches","sportCountMeta","sport_count","eventCount","noOfBatches","previousSportId","paramsPrematchLocations","setPartialLocations","fetchedAllData","token","partialLocations","locationArray","name_tr","name_nl","name_de","name_ru","sortedLocations","setPrematchLocations","setLocationObj","leaguesArray","setPrematchLeaguesForLocation","forIn","leagueObj","key2","getTodaySportEvents","sport","prematchData","entries","_ref2","prematchEventBatchSize","j","segmentData","getSportEventsMobile_2","fixtureArray","defaultMkt","defaultMktObj","mkt","getPartialEventsBatch","setPrematchSearch","setPrematchSearchStatus","setPrematchPartialSearchResults","getEventsData","partialSearchResults","nextPage","market_count","searchMore","generalService","payload","URL","URLSearchParams","marketsArray","partialLeagueEvents","_partialSearchResults","mktData","_partialLeagueEvents","setPrematchLeagueEvents","searchStatus","prematchSearchEvents","filteredEvents","me","lowercaseEventName","lowercaseSearchVal","setPrematchSearchLoadMore","setPartialLeagueData","_event$league2","eventCountDesktop","setHomeLeagues","homePageLeagues","setHomeActive","setHomeLeaguesActive","selectHomeActiveLeague","removeHomeActiveLeague","allData","reduce","ac","idx","getHomeActiveLeagueEvents","paramsHomeLeaguesEvents","_Items","setHomeActiveLeagueEvents","setHomeResetPage","clearHomeActiveLeagueEvents","dontClearLeagueId","updateHomeEventsMarket","updateHomeEventsStatus","getHomeActiveLeagueEventsMobile","paramsHomeLeaguesEventsMobile","totalSegments","_Items2","getHomeActiveLeagueEventsDesktop","paramsHomeLeaguesEventsDesktop","_Items3","_fixture$Livescore$cl","_fixture$Livescore$cl2","_fixture$Livescore$cl3","_fixture$Livescore$cl4","_fixture$Livescore","_fixture$Livescore$cl5","_fixture$Livescore2","_fixture$Livescore$cl6","_fixture$Livescore3","_fixture$Livescore$cl7","_fixture$Livescore4","time","halfTime","extraTime","currentTime","matchDateTime","match_status","stoppage_time","_betradarConfig$perio","quarter","betradarConfig","quarterPeriods","period","period_number","alignItems","_betradarConfig$perio2","hset","iceHockeyPeriods","_betradarConfig$perio3","set","setPeriods","_betradarConfig$perio4","vset","fromExtraMarket","setResultsActive","setResultsResetPage","resultCount","getResultLocationCount","getResultsLocations","setLocationLoading","TableName","ProjectionExpression","FilterExpression","ExclusiveStartKey","ExpressionAttributeValues","ExpressionAttributeNames","getResultLocationsParams","getResultsLocationsCount","clearCount","getResultsCountParams","location_name","sortedLocationsResults","getResultsLocationEvents","setResultsLocationEvents","clearLocationEvents","getResultsLocationsCountMobile","segmentNo","Segment","TotalSegments","getResultsCountParamsMobile","resultTotalSegments","getResultsLocationsMobile","getResultLocationsParamsMobile","selectSportMobile","resultsSearchEvents","setResultsSearchLoadMore","stripeClassname","getSportIconByName","sportAndLocationData","setStarActive","unsubscribeSingleEvents","favoritesLiveMatches","removeFavorite","addFavorite","reducer","currentSrc","useProgressiveImage","fallbackSrc","_useReducer","useReducer","_useReducer2","mainImage","Image","fallbackImage","onload","LazyImage","img","image","altText","LazyBackgroundImage","backgroundImage","onUpdateLiveDeventMarkets","matchId","setTodayLocations","betFixtures","_values$","_values$2","setTodayLocationEvents","setTodaySelectedLocations","partialEvents","locationEvent","resetSelectedLocations","fromLivePage","createMuiTheme","palette","primary","main","currentMainMarket","selectedTab","marketToSelectList","Tab","activeElement","blur","ThemeProvider","AppBar","Tabs","refTabs","indicatorColor","textColor","scrollButtons","isInplay","prematchMarkets","setPrematchMarkets","getExtraMarketNamePrematch","has_live_statistics","getExtraMarketsPrematch","Results","Value","checkSettledBetsPrematch","MainBet","disableClass","orderedBets","_lSportsConfig$betSta","countOfBets","total","_bet$specifier","filteredBets","teamWinRest","firstHalfTeamWinRest","_orderedBets","_orderedBets2","_toArray","firstBet","secondBet","thirdBet","remainingBets","mainBets","firstHalfTotal","underOverInclOvertime","_orderedBets3","_orderedBets4","betsCount","exactGoal","take","setTransactionsError","isDisable","football","remSportsArray","orderby","selectedSportCount","sportList","sportName","disabledClass","type_sport","icon_name","setInplayResetPage","setInplayEventsStatus","updateInplayEventsMarket","updateInplayEventsLivescore","updateInplayEventsStatus","setLiveMatchesObject","liveMatchesObj","setLiveMatches","setSelectedLocation","setCurrentSelectedSport","setPartialEvents","removeLiveEvents","setInplaySearch","setInplaySearchLoadMore","eventsStatus","inplaySearchEvents","getInplayLocations","clearSportEvents","liveLocations","todayLocations","getLocations","allLocations","setInplayLocations","setTotalEventCount","setCurrentEventCount","inplayGetSportEvents","setSportEvents","todayGetSportEvents","resetLiveMatches","liveEvents","newParams","timezone_offset","getTimezoneOffset","setBetslips","setSingleBetslip","updateTodayEventsMarket","updateTodayEventsStatus","LoaderLiveCasino","setLastMinuteResetPage","updateLastMinuteEventsMarket","updateLastMinuteEventsStatus","getLastMinuteSports","paramsLastMinute","setLastMinuteSports","checkLastMin","isLastMinAvailable","hasNext","lastMinute","setClearData","MARKET_FOR_OUTER_SLIDER","eventsArray","paramsMarketData","_data$Items$","_data$Items$2","getCashoutData","cashoutAmount","someThingWrong","msg","sportEventCount","sportCount","sportCountDesktop","sportObjectCount","getTodaySportsMobile","sportsArr","getTodaySportCount","todayData","dateRange","toISOString","endOfTomorrow","sportCountObj","getTodaySports","getSports","setTodaySports","sportObj","endOfToday","sportIds","getAllSportsEventsCount","_sportEventCount","sportGrp","_sportGrp$sport","dontFetch","dontClearMainEvents","segmentTodayData","_Items$","fetching","initialEvents","locationArr","partialMatchFormatter","prematchMarketSize","startOfDay","endOfDay","getTodayEventsParams","_Items$2","setUpdatedMatchData","setTodaySportsMobile","getAllSportsEventsCountMobile","_sportEventCount2","_sportGrp$sport2","getSportEventsDesktop","getTodaySportEventsDesktop","getSportEventsForDesktop_2","_ref9","_Items$4","setTodaySportsWithDateRangeDesktop","getTodaySportCountDesktop","getTodayEventsParamsDesktop","getTodayEventsParamsMobile","eventIds","queryParams","RequestItems","Keys","getPrematchLocationsDesktop","getSportEventsDesktop_2","partialEventsArray","currentMainData","newPartialLocations","Lobby","casinoLobbyURL","frameBorder","allowFullScreen","tabNames","timeout1","timeout2","MatchResult","firstScoreChanged","secondScoreChanged","prevResults"],"mappings":"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","file":"static/js/1.a3b48b4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from '../Components/Common/Header';\r\nimport DesktopHeader from '../Desktop/Common/Header';\r\nimport Navigator from '../Components/Common/Navigator';\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    let authed = localStorage.getItem('jwt_access_token') || sessionStorage.getItem('jwt_access_token') ? true : false;\r\n    let pageTitle = rest.title ? rest.title : '';\r\n    let headerClassname = rest.headerClass ? rest.headerClass : '';\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                authed ? (\r\n                    <>\r\n                        { rest.isMobileOnly ? (\r\n                            <Header {...props} headerClassname={headerClassname} pageTitle={pageTitle} />\r\n                        ) : (\r\n                            <DesktopHeader { ...props } />\r\n                        )}\r\n                        <Component {...props} />\r\n                        { rest.isMobileOnly && (<Navigator {...props} title={pageTitle} /> )}\r\n                        { rest.isMobileOnly || <div className=\"footer__text\"><p className=\"footer__text-paragraph\">Tous droits réservés et protégés par la loi Copyright © 2022 Marbouha365</p><span className=\"SVGInline footer__bottom-icon\"><svg className=\"SVGInline-svg footer__bottom-icon-svg\" viewBox=\"0 0 53 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.36089 1.51111L0.0017779 5.43111V11.7902L4.18311 9.39466V32H10.0631V1.51111H6.36089ZM28.7226 15.928C30.2035 14.36 31.1181 12.3564 31.1181 10.2658V9.35111C31.1181 4.34222 27.8515 0.988443 22.9733 0.988443C18.095 0.988443 14.8284 4.34222 14.8284 9.35111V10.2658C14.8284 12.3564 15.743 14.4471 17.1804 15.9716C15.4381 17.3218 14.3057 19.6302 14.3057 22.1564V23.5502C14.3057 29.1689 17.7901 32.5227 22.9733 32.5227C28.1564 32.5227 31.6408 29.1689 31.6408 23.5502V22.1564C31.6408 19.5867 30.5084 17.2782 28.7226 15.928ZM20.6213 9.61244C20.6213 7.52178 21.4488 6.69422 22.9733 6.69422C24.4977 6.69422 25.3253 7.52178 25.3253 9.61244V10.44C25.3253 12.5742 24.4977 13.5324 22.9733 13.5324C21.4488 13.5324 20.6213 12.5742 20.6213 10.44V9.61244ZM25.7608 23.5067C25.7608 25.7716 24.8026 26.7298 22.9733 26.7298C21.1439 26.7298 20.1857 25.7716 20.1857 23.5067V22.2C20.1857 19.9787 21.1439 19.0204 22.9733 19.0204C24.8026 19.0204 25.7608 19.9787 25.7608 22.2V23.5067ZM52.3198 15.7538H46.3527V9.56889H40.8647V15.7538H34.8976V21.1982H40.8647V27.3831H46.3527V21.1982H52.3198V15.7538Z\" fill=\"#565656\" /></svg></span></div>}\r\n                    </>\r\n                ) : (\r\n                    <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","export const validation = {\r\n         userName :{\r\n             required : true,\r\n             min_length : 4,\r\n             max_length : 26\r\n         },\r\n         PhoneNo: {\r\n             required : true,\r\n             length : 10,\r\n         },\r\n         passWord:{\r\n             require : true,\r\n             min_length : 6,\r\n             max_length :14,\r\n         }\r\n\r\n}\r\nexport const currency = [\"TRY\" , \"RUB\", \"EUR\"];\r\nexport const bank = [\"HANA BANK\", \"JB MORGON\" ];\r\n\r\n","import { apiConfig } from '../config';\r\nimport axios from 'axios';\r\nclass genralServices {\r\n    getDeviceLocation = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(apiConfig.routes.getDeviceLocation)\r\n                .then(response => resolve(response.json()));\r\n        });\r\n    }\r\n\r\n    getStatsStatus = (nextUrl) => {\r\n        const url = nextUrl || `${apiConfig.routes.getStatsScore}`;\r\n        return new Promise((resolve, reject) => {\r\n            fetch(url)\r\n                .then(response => resolve(response.json()));\r\n        });\r\n    }\r\n\r\n    getSearchEvents = ({value, sportId}, nextUrl) => {\r\n        const url = nextUrl || `${apiConfig.routes.searchEvent}?participant=${value}&sport_id=${sportId}`;\r\n        return new Promise((resolve, reject) => {\r\n            fetch(url)\r\n                .then(response => resolve(response.json()));\r\n        });\r\n    }\r\n    // getTranslations = () => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //         fetch(apiConfig.routes.getTranslations)\r\n    //             .then(response => resolve(response.json()));\r\n    //     });\r\n    // }\r\n\r\n     tenetCasinoStatus = () => {\r\n      return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.tenetCasinoStatus, {\r\n                    params: {\r\n                        unique_id: process.env.REACT_APP_UNIQUE_ID,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });   \r\n    }\r\n\r\n}\r\nconst instance = new genralServices();\r\n\r\nexport default instance;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from '../../localization';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { setLoginError, submitLogin } from '../../store/actions/user.actions';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputUsername: '',\r\n            inputPassword: '',\r\n            checked: true,\r\n            usernameError: false,\r\n            passwordError: false,\r\n            loginLoading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.userData !== null) {\r\n            this.props.setLoginError('');\r\n        }\r\n\r\n        if (prevState.inputUsername !== this.state.inputUsername) {\r\n            this.props.setLoginError('');\r\n\r\n            if (!this.state.inputUsername) {\r\n                this.setState({ usernameError: true });\r\n            } else {\r\n                this.setState({ usernameError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputPassword !== this.state.inputPassword) {\r\n            this.props.setLoginError('');\r\n\r\n            if (!this.state.inputPassword) {\r\n                this.setState({ passwordError: true });\r\n            } else {\r\n                this.setState({ passwordError: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setLoginError('');\r\n    }\r\n\r\n    stayLoggedIn = (e) => {\r\n        this.setState({ checked: e.target.checked });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        if (!this.state.usernameError && !this.state.passwordError) {\r\n            if (this.state.inputUsername.length > 0 && this.state.inputPassword.length > 0) {\r\n                this.setState({ loginLoading: true });\r\n                this.props.submitLogin(this.state.inputUsername, this.state.inputPassword, this.state.checked);\r\n            } else {\r\n                if (this.state.inputUsername.length === 0) {\r\n                    this.setState({\r\n                        usernameError: true,\r\n                    });\r\n                }\r\n                if (this.state.inputPassword.length === 0) {\r\n                    this.setState({\r\n                        passwordError: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value,\r\n            loginLoading: false,\r\n            usernameError: null,\r\n            passwordError: null,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { loginError } = this.props;\r\n        let { usernameError, passwordError, loginLoading } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        this.handleSubmit();\r\n                    }}\r\n                    className='d-flex'                  \r\n                >\r\n                <div className='input-group'>\r\n                    {usernameError && !passwordError && <p className=\"auth__error sm mx-2 mt-2\">Username is required.</p>}\r\n                    {passwordError && !usernameError && <p className=\"auth__error sm mx-2 mt-2\">Password is required.</p>}\r\n                    {usernameError && passwordError && <p className=\"auth__error sm mx-2 mt-2\">Fields are required.</p> }                   \r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={Translate.username}\r\n                        id=\"inputUsername\"\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder={Translate.password}\r\n                        id=\"inputPassword\"\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    {loginError && (\r\n                        <div className='login-err-msg'>\r\n                        <p className=\"auth__error sm mx-2 mt-2\">{loginError}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"btn-group\">\r\n                    <button\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          this.handleSubmit();\r\n                      }}\r\n                    >\r\n                        {loginLoading && !loginError ? <LoadingIcon /> : Translate.login}\r\n                    </button>\r\n                </div>\r\n                </form>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLoginError: PropTypes.func,\r\n    loginError: PropTypes.string,\r\n    submitLogin: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        loginError: state.user.loginError,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLoginError: (error) => dispatch(setLoginError(error)),\r\n        submitLogin: (username, password, rememberMe) => dispatch(submitLogin(username, password, rememberMe)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Countdown from 'react-countdown';\r\n\r\nfunction CountdownComponentView(props) {\r\n    const onComplete = () => {\r\n        setTimeout(() => {\r\n            props.clearCountdown();\r\n        }, 100);\r\n    };\r\n\r\n    let betPlaceCountdown = props.seconds ? props.seconds : 5;\r\n    let message = props.messageText ? props.messageText : '';\r\n    return (\r\n        <Countdown\r\n            date={Date.now() + betPlaceCountdown * 1000}\r\n            onComplete={onComplete}\r\n            renderer={({ hours, minutes, seconds, completed }) => {\r\n                return completed ? null : <span>{message} {seconds}</span>;\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nCountdownComponentView.propTypes = {\r\n    clearCountdown: PropTypes.func,\r\n};\r\n\r\nexport const CountdownComponent = React.memo(CountdownComponentView);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport forEach from 'lodash.foreach';\r\nimport { Translate } from '../../localization';\r\nimport { \r\n    checkSavedBets,\r\n    updateBetslipEventsLivescore,\r\n    updateBetslipEventsMarket,\r\n} from '../../store/actions/betslip.actions';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport { dynamoClient } from '../../App';\r\nimport { getSingleMarketOfEvent } from '../../dynamo/inplayParams';\r\nimport { \r\n   getTenentStatus\r\n} from '../../store/actions/general.actions';\r\nimport Login from '../Login';\r\n\r\n\r\nlet timeout;\r\n\r\nclass Navigator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          redirectLink: '',\r\n            showTooltip : false,\r\n            showLogin:false\r\n            \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.checkSavedBets();\r\n        this.props.getTenentStatus();\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState) {\r\n        if(this.props.count !== prevProp.count && this.props.count > 0 ) {\r\n            // also check to clear timeout or not\r\n            this.openTooltip(prevState.showTooltip);\r\n        }\r\n    }\r\n\r\n      showLoginForm=(path)=>{\r\n      if(Util.isLoggedIn()){\r\n        this.setState({ showLogin: false });\r\n        this.props.history.push(path);\r\n        }\r\n       else{\r\n        this.setState({ showLogin: true ,\r\n          redirectLink:path});\r\n       ;\r\n      }\r\n    \r\n    };\r\n\r\n    hideLogin = () => {\r\n   \r\n      if(Util.isLoggedIn()){\r\n      this.setState({ showLogin: false });\r\n      this.props.history.push(this.state.redirectLink);\r\n      }\r\n     else{\r\n      this.setState({ showLogin: false });\r\n     }};\r\n\r\n    toggleNavigation = (e, nav) => {\r\n        this.GoTo(nav);\r\n    };\r\n\r\n    GoTo = (path) => {\r\n        let newPath = '/' + path;\r\n        this.props.history.push(newPath);\r\n    }; \r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    openTooltip = (clearStripTimeout) => {\r\n        this.checkLiveOddsUpdates(clearStripTimeout);\r\n    }\r\n\r\n    checkLiveOddsUpdates(clearStripTimeout) {\r\n        const { fixtures } = this.props;\r\n        let count = 0 ;\r\n        forEach( fixtures , (fixture) => {\r\n            if(fixture.fixture.fixture_status === 2) {\r\n                forEach( fixture.markets, (market) => {\r\n                    forEach( market.bets, (bet) => {\r\n                        let event =  dynamoClient.query(getSingleMarketOfEvent(`${fixture.fixtureId}_market_${market.Id}`)).promise();\r\n                        event.then(({  Items }) => {\r\n                            if(!Items[0]) return;\r\n                            let data = Items[0];\r\n                            data = { ...data, market: JSON.parse(data.market)};\r\n                            const betData = find(Object.values(data.market), (market) => market.Bets[`id_${bet.Id}`]).Bets[`id_${bet.Id}`];\r\n                            if( betData.Price !== bet.Price ) {\r\n                                let id = data.match_id;\r\n                                let dataToSend = {};\r\n                                dataToSend[id] = { FixtureId: data.match_id, Market: data.market };\r\n                                this.props.updateBetslipEventsMarket(dataToSend);\r\n                                this.props.updateBetslipEventsLivescore(dataToSend);\r\n                            }\r\n                            \r\n                        }).then(() => {\r\n                            count++;\r\n                           if(count === fixtures.length) {\r\n                               if(clearStripTimeout && timeout) {\r\n                                   clearTimeout(timeout);\r\n                               }\r\n                               if(!this.state.showTooltip ) {\r\n                                   this.setState({ showTooltip: true });\r\n                               }\r\n                               timeout = setTimeout(() => { \r\n                                   this.setState({ showTooltip: false });\r\n                               }, lSportsConfig.oddsCalculatorTimer * 1000);\r\n                           }\r\n                           });\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                count++;\r\n                if(count === fixtures.length) {\r\n                    if(clearStripTimeout && timeout) {\r\n                        clearTimeout(timeout);\r\n                    }\r\n                    if(!this.setState.showTooltip) {\r\n                        this.setState({ showTooltip: true });\r\n                    }\r\n                    timeout = setTimeout(() => { \r\n                        this.setState({ showTooltip: false });\r\n                    }, lSportsConfig.oddsCalculatorTimer * 1000);\r\n                }\r\n            }\r\n        });      \r\n    }\r\n\r\n    render() {\r\n        let { location, count, totalMultiOdds, totalOdds, isHomeLeagueActive } = this.props;\r\n        let { showTooltip } = this.state;\r\n        let myBets = this.isLoggedIn() ? (\r\n            <div className={`menu-item ripple ${location.pathname === '/my-bets' ? 'active' : ''}`} onClick={(e) => this.toggleNavigation(e, 'my-bets')}>\r\n                <div className=\"menu-item__content\">\r\n                    <div className=\"menu-item__wrap\">\r\n                        <img src= \"/images/mybetf.svg\" alt=\"mybetf\" />\r\n                        <img src= \"/images/mybetf.svg\" alt=\"mybetf\" />\r\n                        <div className=\"menu-item__text\">{Translate.myBets}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div className=\"menu-item ripple disabled\">\r\n                <div className=\"menu-item__content\">\r\n                    <div className=\"menu-item__wrap\">\r\n                        {/* <i className=\"icon-my-bets\"></i> */}\r\n                        <img src= \"/images/mybetf.svg\" alt=\"mybetf\" />\r\n                        <img src= \"/images/mybetf.svg\" alt=\"mybetf\" />\r\n                        <div className=\"menu-item__text\">{Translate.myBets}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        let casinoClass = '';\r\n        \r\n        if(this.props.userData) {\r\n            casinoClass = this.props.userData.is_casino_enabled ? '': 'disabled';\r\n        }\r\n\r\n        let drawBetslipCount = count > 0 ? <span className=\"navigator__tooltip-bit navigator__tooltip-text\">{count}</span> : null;\r\n\r\n        const BetslipTooltip = withStyles({\r\n            tooltip: {\r\n              color: '#1e140d',\r\n              background: '#f2b705',\r\n              fontSize: '15px',\r\n              minWidth: 'calc(100vw - 5px)',\r\n              textAlign: 'center',              \r\n              borderRadius: '16px 16px 0px 0px',\r\n              margin: '34px 0',\r\n            },\r\n            arrow: {\r\n                color: '#f2b705',\r\n                bottom: 0,\r\n                marginLeft: '4px',\r\n                marginRight: '-6px',\r\n                marginBottom: '-0.71em',\r\n                fontSize: 15,\r\n                '&::before' : {\r\n                    transformOrigin: '100% 0',\r\n                }\r\n            },\r\n\r\n            \r\n            \r\n          })(Tooltip);\r\n          \r\n        return (\r\n            <div className=\"navbar mui-fixed\">\r\n                <div className={`menu-item ripple ${location.pathname === '/sports' ? 'active' : ''}`} onClick={(e) => this.toggleNavigation(e, 'sports')}>\r\n                    <div className=\"menu-item__content\">\r\n                        <div className=\"menu-item__wrap\">\r\n                            <img src=\"/images/sportsf.svg\" alt=\"Home\" />\r\n                            <img src=\"/images/sportsf.svg\" alt=\"Home\" />\r\n                            <div className=\"menu-item__text\">{Translate.sports}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={`menu-item ripple ${location.pathname === '/live' ? 'active' : ''}`} onClick={(e) => this.toggleNavigation(e, 'live')}>\r\n                    <div className=\"menu-item__wrap menu-item__content menu-item__content_live\">\r\n                        <img src=\"/images/liveF.svg\" alt=\"live\" />\r\n                        <img src=\"/images/liveF.svg\" alt=\"live\" />\r\n                        <span className=\"menu-item__text\">{Translate.live}</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className={`menu-item ripple ${location.pathname === '/' ? 'active' : ''}`} onClick={(e) => this.toggleNavigation(e, '')}>\r\n                    <div className=\"menu-item__content\">\r\n                        <div className=\"menu-item__wrap\">\r\n                            <a className=\"main-mobile-menu__logo\" href=\"/\"><span\r\n                                className=\"main-mobile-menu__logo-text\">Accueil</span></a>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                {myBets}\r\n\r\n                <div\r\n                    className={`menu-item ripple pl-0 pr-0 ${count > 0 ? '' : 'disabled'} ${location.pathname === '/betslip' && count > 0 ? 'active' : ''}`}\r\n                    onClick={(e) => this.toggleNavigation(e, 'betslip')} \r\n                >\r\n                    <BetslipTooltip\r\n                        placement=\"top\"\r\n                        open = { showTooltip && count > 0 && ( location.pathname === '/upcoming' || location.pathname === '/tomorrow' || location.pathname === '/sports' || location.pathname === '/live' || location.pathname === '/favorites' || ( location.pathname === '/' && isHomeLeagueActive) ) ? true : false }\r\n                        arrow\r\n                        leaveDelay={1000}\r\n                        interactive\r\n                        title={`${count} X Comb. ${count > 1 ? totalMultiOdds : totalOdds}`}\r\n                        PopperProps={{\r\n                            popperOptions: {\r\n                                positionFixed: true,\r\n                            },\r\n                    \r\n                            modifiers: {\r\n                                computeStyle: {\r\n                                    gpuAcceleration: false,\r\n                                    fn: (data => {\r\n                                        data.styles = {\r\n                                            position : 'fixed',\r\n                                            bottom: '4vh',\r\n                                            left: '0',\r\n                                            right: '0',\r\n                                            display: 'flex',\r\n                                            justifyContent: 'center',\r\n                                        };\r\n                                        data.arrowStyles = {\r\n                                            right: '8vw'\r\n                                        };\r\n                                        return data;\r\n                                    })\r\n                                },\r\n                                applyStyle: {\r\n                                    onLoad: ((data) => data),                                 \r\n                                },\r\n                            },\r\n                              \r\n                        }}  \r\n                        disableHoverListener\r\n                    >\r\n                   \r\n                        <div className=\"menu-item__content navigator navigator__tooltip\">\r\n                            <div className=\"menu-item__wrap\">\r\n                                {drawBetslipCount}\r\n                                {/* <i className=\"material-icons menu-item__betslip-icon\" >receipt</i> */}\r\n                                <img src=\"/images/betslipf.svg\" alt=\"betsslipf\" />\r\n                                <img src=\"/images/betslipf.svg\" alt=\"betsslipf\" />\r\n                                <div className=\"menu-item__text\">{Translate.betslip}</div>\r\n                            </div>\r\n                        </div>           \r\n                    </BetslipTooltip>    \r\n                </div>\r\n                {this.state.showLogin && <Login hideLogin={this.hideLogin} />}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavigator.propTypes = {\r\n    userData: PropTypes.object,\r\n    count: PropTypes.number,\r\n    language: PropTypes.string,\r\n    checkSavedBets: PropTypes.func,\r\n    totalMultiOdds: PropTypes.string,\r\n    fixtures: PropTypes.array,\r\n    totalOdds: PropTypes.string,\r\n    isHomeLeagueActive: PropTypes.bool,\r\n    updateBetslipEventsLivescore: PropTypes.func,\r\n    updateBetslipEventsMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        count: state.betslip.count,\r\n        language: state.general.language,\r\n        totalMultiOdds: state.betslip.totalMultiOdds,\r\n        totalOdds: state.betslip.totalOdds,\r\n        fixtures: state.betslip.fixtures,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        isShowCasino:state.general.isShowCasino\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkSavedBets: () => dispatch(checkSavedBets()),\r\n        updateBetslipEventsLivescore: (events) => dispatch(updateBetslipEventsLivescore(events)),\r\n        updateBetslipEventsMarket: (events) => dispatch(updateBetslipEventsMarket(events)),\r\n        getTenentStatus:()=>dispatch(getTenentStatus())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigator);\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nfunction FullLayoutRoute({ component: Component, ...rest }) {\r\n    const component = (props) => <Component {...props} />;\r\n    return <Route {...rest} component={component} />;\r\n}\r\n\r\nexport default FullLayoutRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction DefaultRoute() {\r\n    return ( \r\n        <Route>\r\n            <Redirect to=\"/\" />\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default DefaultRoute;\r\n","import React from 'react';\r\n\r\nfunction Banner(props) {\r\n    return (\r\n        <div className=\"casino__banner\">\r\n            <img src=\"./images/banner_casino 2.png\" alt=\"Casino banner\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Countdown from 'react-countdown';\r\nimport Loading from '../Common/Loading';\r\n\r\nfunction CountdownComponentView(props) {\r\n    const onComplete = () => {\r\n        setTimeout(() => {\r\n            props.clearCountdown();\r\n        }, 100);\r\n    };\r\n\r\n    let betPlaceCountdown = props.seconds ? props.seconds : 5;\r\n    let message = props.messageText ? props.messageText : '';\r\n    return (\r\n        <Countdown\r\n            date={Date.now() + betPlaceCountdown * 1000}\r\n            onComplete={onComplete}\r\n            renderer={({ hours, minutes, seconds, completed }) => {\r\n                return completed ? null : <span>{message} {seconds}</span>;\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nCountdownComponentView.propTypes = {\r\n    clearCountdown: PropTypes.func,\r\n};\r\n\r\nexport const CountdownComponent = React.memo(CountdownComponentView);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomMarket from '../Shared/CustomMarket';\r\nimport Util from '../../helper/Util';\r\nimport { MarketIdMapping } from '../../config/markets'\r\n\r\nfunction Markets(props) {\r\n    let { markets, fixture, type, leagueName,currentlySelectedMarket = 'All' } = props;\r\n    const [liveMarkets, setLiveMarkets] = useState([]);\r\n    useEffect(() => {\r\n        setLiveMarkets(markets);\r\n    },[markets]);\r\n    \r\n    useEffect(() => {\r\n        markets && setLiveMarkets(Object.values(markets));\r\n    },[markets, fixture]);\r\n    \r\n    const sortMarkets = (array, key) => {\r\n\r\n        let sportId = props.fixture.sport_id;\r\n        const order = Util.getExtraMarketName(sportId)[MarketIdMapping[currentlySelectedMarket]].marketIds;\r\n        array.sort( (a, b) => {\r\n          var A = a[key],\r\n              B = b[key];\r\n\r\n          let indA = order.indexOf(A);\r\n          let indB = order.indexOf(B);\r\n          if (indA == -1) indA = order.length - 1;\r\n          if (indB == -1) indB = order.length - 1;\r\n\r\n          if (indA < indB) {\r\n              return -1;\r\n          } else if (indA > indB) {\r\n              return 1;\r\n          }\r\n          return 0;\r\n          \r\n        });\r\n        \r\n        return array;\r\n      };\r\n\r\n    const sortedMarkets = sortMarkets(liveMarkets, 'Id');\r\n\r\n    //const sortedMarkets = orderBy(liveMarkets, ['Id'], 'asc');\r\n    const drawMarkets = liveMarkets ? (\r\n        <div className=\"match-panel-bottom pl-2 pr-2 modal-body\">\r\n            {sortedMarkets.map((market) => {\r\n                return <CustomMarket\r\n                Market={market}\r\n                fixture={fixture}\r\n                column={3} \r\n                key={market.Id} \r\n                type={type} \r\n                leagueName={leagueName} \r\n                />;\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n    );\r\n\r\n    return drawMarkets;\r\n}\r\n\r\nMarkets.propTypes = {\r\n    fixture: PropTypes.object,\r\n    markets: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Markets;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nfunction LiveStreamModal(props) {\r\n    let { closeModal,liveStreamMatch } = props;\r\n\r\n    return (\r\n        <Dialog onClose={closeModal} aria-labelledby=\"statistics-dialog-title\" open={true} scroll=\"paper\" className=\"statistics__modal\">\r\n            <DialogTitle id=\"statistics-dialog-title\" disableTypography>\r\n                <div className=\"d-flex align-items-center flex-wrap\">\r\n                    <h3 className=\"m-0 mr-3 d-flex align-items-center\">\r\n                        <img className=\"stream-icon-extra-market\" alt=\"stream-icon\" src=\"./images/smart-tv-live-new.svg\"></img>\r\n                        {'     '}Live Stream\r\n                    </h3>\r\n                </div>\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\"material-icons fs-22\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className=\"modal-min-height extra-odd__bets p-0\">\r\n                <iframe title='Live Stream' width='100%' height='200vw' allow=\"autoplay\" style={{ border:'none'}} src={liveStreamMatch}></iframe>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nLiveStreamModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n};\r\n\r\nexport default LiveStreamModal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from '../Components/Common/Loading';\r\nimport jwtService from '../services/jwtService';\r\nimport { connect } from 'react-redux';\r\nimport { setUser } from './actions/user.actions';\r\nimport { getFavorites } from './actions/favorites.actions';\r\nimport { Translate } from '../localization';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        waitAuthCheck: true,\r\n    };\r\n\r\n    componentDidMount() {\r\n        Translate.setLanguage(this.props.language);\r\n        return Promise.all([this.jwtCheck()]).then(() => {\r\n            this.setState({ waitAuthCheck: false });\r\n        });\r\n    }\r\n\r\n\r\n    jwtCheck = () => {\r\n        new Promise((resolve) => {\r\n            jwtService.on('onAutoLogin', () => {\r\n                jwtService\r\n                    .getUser()\r\n                    .then((user) => {\r\n                        this.props.setUser(user);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        resolve();\r\n                    });\r\n\r\n                this.props.getFavorites();\r\n            });\r\n\r\n            jwtService.on('onAutoLogout', (message) => {\r\n                if (message) {\r\n                    console.log(message);\r\n                }\r\n\r\n                resolve();\r\n            });\r\n\r\n            jwtService.on('onNoAccessToken', () => {\r\n                resolve();\r\n            });\r\n\r\n            jwtService.init();\r\n\r\n            return Promise.resolve();\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return this.state.waitAuthCheck ? <Loading /> : <React.Fragment children={this.props.children} />;\r\n    }\r\n}\r\n\r\nAuth.propTypes = {\r\n    setUser: PropTypes.func,\r\n    getFavorites: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUser: (user) => dispatch(setUser(user)),\r\n        getFavorites: () => dispatch(getFavorites()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoadingIcon from '../../Components/Common/NewLoading';\r\nimport { changePassword, setChangePasswordError } from '../../store/actions/user.actions';\r\nimport { Translate } from '../../localization';\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputOldPassword: '',\r\n            inputNewPassword: '',\r\n            inputConfirmPassword: '',\r\n            oldPasswordError: false,\r\n            newPasswordError: false,\r\n            confirmPasswordError: false,\r\n            passwordMatchError: false,\r\n            changePasswordLoading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.changePasswordSuccess !== this.props.changePasswordSuccess) {\r\n            this.setState({\r\n                changePasswordLoading: false,\r\n            });\r\n            // this.props.setChangePasswordError('');\r\n        }\r\n\r\n        if (prevState.inputOldPassword !== this.state.inputOldPassword) {\r\n            this.props.setChangePasswordError('');\r\n\r\n            if (!this.state.inputOldPassword) {\r\n                this.setState({ oldPasswordError: true });\r\n            } else {\r\n                this.setState({ oldPasswordError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputNewPassword !== this.state.inputNewPassword) {\r\n            this.props.setChangePasswordError('');\r\n            this.setState({ passwordMatchError: false });\r\n\r\n            if (!this.state.inputNewPassword) {\r\n                this.setState({ newPasswordError: true });\r\n            } else {\r\n                this.setState({ newPasswordError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputConfirmPassword !== this.state.inputConfirmPassword) {\r\n            this.props.setChangePasswordError('');\r\n            this.setState({ passwordMatchError: false });\r\n\r\n            if (!this.state.inputConfirmPassword) {\r\n                this.setState({ confirmPasswordError: true });\r\n            } else {\r\n                this.setState({ confirmPasswordError: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setChangePasswordError('');\r\n        // this.props.hideChangePassword();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (!this.state.oldPasswordError && !this.state.newPasswordError && !this.state.confirmPasswordError) {\r\n            if (this.state.inputOldPassword.length > 0 && this.state.inputNewPassword.length > 0 && this.state.inputConfirmPassword.length > 0) {\r\n                if (this.state.inputNewPassword === this.state.inputConfirmPassword) {\r\n                    this.setState({\r\n                        changePasswordLoading: true,\r\n                        passwordMatchError: false,\r\n                    });\r\n                    this.props.changePassword(this.state.inputOldPassword, this.state.inputNewPassword);\r\n                } else {\r\n                    this.setState({ passwordMatchError: true });\r\n                }\r\n            } else {\r\n                if (this.state.inputOldPassword.length === 0) {\r\n                    this.setState({\r\n                        oldPasswordError: true,\r\n                    });\r\n                }\r\n                if (this.state.inputNewPassword.length === 0) {\r\n                    this.setState({\r\n                        newPasswordError: true,\r\n                    });\r\n                }\r\n                if (this.state.inputConfirmPassword.length === 0) {\r\n                    this.setState({\r\n                        confirmPasswordError: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value,\r\n            changePasswordLoading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { changePasswordError } = this.props;\r\n        let { oldPasswordError, newPasswordError, confirmPasswordError, changePasswordLoading, passwordMatchError } = this.state;\r\n\r\n        return (\r\n            <div className=\"changes-pass\">\r\n                <div className='div-1'>\r\n                    <span className={`mt-1 ${oldPasswordError ? 'auth__error-field' : ''}`}>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"auth__input\"\r\n                            placeholder={Translate.oldPassword}\r\n                            id=\"inputOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"old-password\"\r\n                        />\r\n                        {oldPasswordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                    </span>\r\n                    <span className={`mt-2 ${newPasswordError ? 'auth__error-field' : ''}`}>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"auth__input\"\r\n                            placeholder={ Translate.newPassword}\r\n                            id=\"inputNewPassword\"\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"new-password\"\r\n                        />\r\n                        {newPasswordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                    </span>\r\n                    <span className={`mt-2 ${confirmPasswordError ? 'auth__error-field' : ''}`}>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"auth__input\"\r\n                            placeholder={ Translate.confirmPassword}\r\n                            id=\"inputConfirmPassword\"\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"confirm-password\"\r\n                        />\r\n                        {confirmPasswordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                    </span>\r\n                    <span className=\"auth__btn-wrap\">\r\n                        {changePasswordError && (\r\n                        <p className=\"auth__error auth__error_with-icon md \">\r\n                            <span className=\"material-icons icon mr-2 align-middle fs-22\">error_outline</span>\r\n                            <span className=\"d-inline-block align-middle\">{changePasswordError}</span>\r\n                        </p>\r\n                                    )}\r\n\r\n                        {passwordMatchError && (\r\n                        <p className=\"auth__error auth__error_with-icon md \">\r\n                            <span className=\"material-icons icon mr-2 align-middle fs-22\">error_outline</span>\r\n                            <span className=\"d-inline-block align-middle\">New and Confirmed password must match</span>\r\n                        </p>\r\n                                    )}\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                            onClick={ () => this.handleSubmit() }\r\n                            disabled={changePasswordLoading && !changePasswordError}\r\n                        >\r\n                            {changePasswordLoading && !changePasswordError ? <LoadingIcon customClass='changepass-loader'/> : Translate.change }\r\n                        </Button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n    hideChangePassword: PropTypes.func,\r\n    changePassword: PropTypes.func,\r\n    setChangePasswordError: PropTypes.func,\r\n    changePasswordSuccess: PropTypes.bool,\r\n    changePasswordError: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        changePasswordSuccess: state.user.changePasswordSuccess,\r\n        changePasswordError: state.user.changePasswordError,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePassword: (oldPassword, newPassword) => dispatch(changePassword(oldPassword, newPassword)),\r\n        setChangePasswordError: (error) => dispatch(setChangePasswordError(error)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nconst CashbackModal = ( {closeModal, cashbackAmount, currency, getCashbackSucess } ) => (\r\n    <Dialog onClose={closeModal} aria-labelledby=\"Casback Popup\" open={true} scroll=\"paper\" >\r\n        \r\n        <DialogContent >\r\n            <div className=\"d-flex flex-column text-center\">\r\n                <div className=\"fs-20\"> Here is your Cashback </div>\r\n                <div className=\"fs-26 text-green font-weight-semibold\"> {cashbackAmount} {currency} </div>\r\n                <div className=\"text-center\">\r\n                    <img className=\"bonus-icon-popup\" alt=\"bonus icon\" src=\"./images/bonusPopup.svg\"></img>\r\n                </div>\r\n            </div>\r\n            <div className= \"d-flex mt-2\">\r\n                <div>\r\n                    <Button\r\n                    type=\"button\"\r\n                    className = \"save-for-later-btn fs-16\"\r\n                    variant=\"contained\"\r\n                    onClick={closeModal}\r\n                    > Save for later </Button>\r\n                </div>\r\n                <div className= \"pl-2\">\r\n                    <Button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    className = \"accept-cashback-btn fs-16\"\r\n                    variant=\"contained\"\r\n                    onClick={()=> {\r\n                        getCashbackSucess();\r\n                        closeModal();\r\n                    }}\r\n                    > Accept Now </Button>\r\n\r\n                </div>\r\n            </div>\r\n        </DialogContent>\r\n    </Dialog>\r\n);\r\n\r\nexport default CashbackModal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport map from 'lodash.map';\r\nimport { isValid, differenceInDays } from 'date-fns';\r\nimport { CASINO_TYPES, LIVE_CASINO_TYPES, getTransactionTypes, GG_SLOT_CASINO_TYPES, EVO_CASINO_TYPES, P_CASINO_TYPES} from '../../config';\r\nimport { Button, MenuItem, Select, InputLabel, FormControl } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { getTransactions, setTransactionsFilter, clearTransactions } from '../../store/actions/transaction.actions';\r\nimport { Translate } from '../../localization';\r\n\r\n\r\nlet yesterday = new Date();\r\nyesterday.setDate(yesterday.getDate() - 1);\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dateFrom: yesterday,\r\n            dateTo: new Date(),\r\n            activityType: 'all',\r\n            activityTypesMobile: <div></div>,\r\n            activityTypesDesktop: <div></div>\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTransactions();\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        let { tab } = this.props;\r\n        if(prevProps.tab !== tab) {\r\n            this.props.clearTransactions();\r\n            let defaultActivityType = 'all';\r\n            this.setState({ dateTo: new Date(), dateFrom: yesterday, activityType: defaultActivityType }, () => {\r\n                this.setTransactions();\r\n            });\r\n        }\r\n\r\n        if(prevProps.language !== this.props.language) {\r\n            this.setTransactions();\r\n        }\r\n\r\n    }\r\n\r\n    setTransactions() {\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n        let { tab } = this.props;\r\n        let params = { dateFrom, dateTo, activityType };\r\n        this.setActivityType(tab);\r\n        this.props.getTransactions(tab, params, true);\r\n        this.props.setTransactionsFilter(params);\r\n    }\r\n    \r\n\r\n\r\n    setActivityType = (tab) => {\r\n        let activityTypes;\r\n        if(tab === 'sports book') {\r\n            activityTypes = getTransactionTypes();\r\n        }\r\n        else if(tab === 'casino') {\r\n            activityTypes = CASINO_TYPES;\r\n        }\r\n        else if(tab === 'live casino') {\r\n            activityTypes = LIVE_CASINO_TYPES;\r\n        }\r\n        else if(tab === 'GG-Slot casino') {\r\n          activityTypes = GG_SLOT_CASINO_TYPES;\r\n        }\r\n        else if(tab === 'evo casino') {\r\n            activityTypes = EVO_CASINO_TYPES;\r\n        }\r\n        else if(tab === 'pcasino') {\r\n            activityTypes = P_CASINO_TYPES;\r\n        }\r\n\r\n        const activityTypesMobile = map(activityTypes, (type, index) => (\r\n            <option key={index} value={type.value}>\r\n                {type.label}\r\n            </option>\r\n        ));\r\n        \r\n        const activityTypesDesktop = map(activityTypes, (type, index) => (\r\n            <MenuItem key={index} value={type.value}>\r\n                {type.label}\r\n            </MenuItem>\r\n        ));\r\n\r\n        this.setState({ activityTypesMobile, activityTypesDesktop });\r\n    }\r\n    handleChangeDateFrom = (date) => {\r\n        this.setState({ dateFrom: date });\r\n    };\r\n\r\n    handleChangeDateTo = (date) => {\r\n        this.setState({ dateTo: date });\r\n    };\r\n\r\n    handleChangeSelect = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    onSearchTransactions = () => {\r\n        let { dateFrom, dateTo } = this.state;\r\n\r\n        // if date to is invalid\r\n        if (dateTo !== null) {\r\n            if (!isValid(dateTo)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date from is invalid\r\n        if (dateFrom !== null) {\r\n            if (!isValid(dateFrom)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date range is invalid\r\n        if (dateTo !== null && dateFrom !== null) {\r\n            if (differenceInDays(dateTo, dateFrom) < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        this.setTransactions();\r\n\r\n    };\r\n\r\n    render() {\r\n        let { dateFrom, dateTo, activityType, activityTypesDesktop } = this.state;\r\n\r\n        return (\r\n            <div className=\"sorting\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    {/* From Date - start */}\r\n                    <div className=\"sort-input\">\r\n                        <InputLabel shrink>{Translate.fromDate}</InputLabel>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            value={dateFrom}\r\n                            onChange={this.handleChangeDateFrom}\r\n                            minDateMessage=\"Invalid Date\"\r\n                            maxDateMessage=\"Invalid Date\"\r\n                            maxDate={dateTo}\r\n                        />\r\n                    </div>\r\n                    {/* From Date - end */}\r\n\r\n                    {/* To Date - start */}\r\n                    <div className=\"sort-input\">\r\n                        <InputLabel shrink>{Translate.toDate}</InputLabel>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            value={dateTo}\r\n                            onChange={this.handleChangeDateTo}\r\n                            minDateMessage=\"Invalid Date\"\r\n                            maxDateMessage=\"Invalid Date\"\r\n                        />\r\n                    </div>\r\n                    {/* To Date - end */}\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"sort-input\">\r\n                    <FormControl className=\"w-100 select select_desktop\">\r\n                        <InputLabel shrink>{Translate.activityType}</InputLabel>\r\n                        <Select value={activityType} name=\"activityType\" onChange={this.handleChangeSelect}>\r\n                            {activityTypesDesktop}\r\n                        </Select>\r\n                    </FormControl>  \r\n                </div>\r\n                <div className=\"sort-input mt-2\">\r\n                    <Button className='show-button' variant=\"contained\" color=\"primary\" fullWidth size=\"medium\" onClick={this.onSearchTransactions}>\r\n                        {Translate.show}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    getTransactions: PropTypes.func,\r\n    setTransactionsFilter: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearTransactions: () => dispatch(clearTransactions()),\r\n        getTransactions: (tab, params, firstPage) => dispatch(getTransactions(tab, params, firstPage)),\r\n        setTransactionsFilter: (params) => dispatch(setTransactionsFilter(params)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filters);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { format, parseISO } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { getTransactions, clearTransactions } from '../../store/actions/transaction.actions';\r\nimport { Translate } from '../../localization';\r\n\r\nclass Table extends Component {\r\n    componentWillUnmount() {\r\n        this.props.clearTransactions();\r\n    }\r\n\r\n    fetchMoreData = () => {\r\n        let { filterParams, tab, countBets, totalResultCount, fetchMore} = this.props;\r\n\r\n        if(countBets < totalResultCount && fetchMore)\r\n        {\r\n            this.props.getTransactions(tab, filterParams, false);\r\n        }\r\n\r\n        // if (hasNextPage) {\r\n        //     this.props.getTransactions(tab, filterParams, false);\r\n        // }\r\n    };\r\n\r\n    render() {\r\n        let { transactions, loadingTransactions, userData, countBets, totalResultCount, fetchMore } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n        \r\n        let transactionsList =\r\n            transactions && transactions.length > 0\r\n                ? map(transactions, (transaction) => {\r\n                      let amount = Util.toFixedDecimal(transaction.amount);\r\n                      let amountClassname = amount >= 0 ? 'text-green' : 'text-red';\r\n                      return (\r\n                          <tr key={transaction.id}>\r\n                              <td>\r\n                                  <div className=\"transaction__date\">\r\n                                      <div>\r\n                                          <time>{format(parseISO(transaction.created), 'dd/MM/yy kk:mm')}</time>\r\n                                      </div>\r\n                                  </div>\r\n                              </td>\r\n                              <td>{transaction.trans_type ? transaction.trans_type : '-'}</td>\r\n                              <td className=\"text-capitalize\">\r\n                                  {transaction.journal_entry === 'credet'\r\n                                      ? Translate.credit\r\n                                      : transaction.journal_entry === 'debet'\r\n                                      ? Translate.debit\r\n                                      : transaction.journal_entry}\r\n                              </td>\r\n                              \r\n                              <td className={amountClassname}>\r\n                                  {amount} {currency}\r\n                              </td>\r\n\r\n                          </tr>\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n                let runAgain ;\r\n                if(countBets < totalResultCount )\r\n                {\r\n                    runAgain = true;\r\n                }\r\n                if(!fetchMore)\r\n                {\r\n                    runAgain = false;\r\n                }\r\n\r\n        let drawTransactions = loadingTransactions ? (\r\n            <Loading customClass='my-account-loader w-100'/>\r\n        ) : transactionsList.length > 0 ? (\r\n            <>\r\n                <InfiniteScroll\r\n                    dataLength={transactionsList.length}\r\n                    next={this.fetchMoreData}\r\n                    hasMore={runAgain}\r\n                    loader={<LoadingIcon theme=\"dark centered\" />}\r\n                    scrollableTarget='transaction-scroll'\r\n                >\r\n                    <table className=\"table mb-1\">\r\n                        <thead>\r\n                            <tr className=\"transaction__table-head\">\r\n                                <th>{Translate.dateTime}</th>\r\n                                <th>{Translate.gameType}</th>\r\n                                <th>{Translate.type}</th>\r\n                                <th>{Translate.amount}</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{transactionsList}</tbody>\r\n                    </table>\r\n                </InfiniteScroll>\r\n            </>\r\n        ) : (\r\n            <div className=\"no-data fs-15 pt-3 pb-3 pl-3\">{Translate.nothingFound}</div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"table-responsive pb-3\">\r\n                {drawTransactions}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    transactions: PropTypes.array,\r\n    loadingTransactions: PropTypes.bool,\r\n   // hasNextPage: PropTypes.bool,\r\n    fetchMore: PropTypes.bool,\r\n    filterParams: PropTypes.object,\r\n    getTransactions: PropTypes.func,\r\n    clearTransactions: PropTypes.func,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactions: state.transaction.transactions,\r\n        loadingTransactions: state.transaction.loadingTransactions,\r\n       // hasNextPage: state.transaction.hasNextPage,\r\n        countBets : state.transaction.countBets,\r\n        totalResultCount : state.transaction.totalResultCount,\r\n        fetchMore : state.transaction.fetchMore,\r\n        filterParams: state.transaction.filterParams,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTransactions: (params, firstPage) => dispatch(getTransactions(params, firstPage)),\r\n        clearTransactions: () => dispatch(clearTransactions()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Filters from './Filters';\r\nimport Table from './Table';\r\nimport { selectTransactionTab } from '../../store/actions/transaction.actions';\r\nimport { Translate } from '../../localization';\r\nimport { CASINO_TRANSACTION_OPTIONS, LIVE_CASINO_TRANSACTION_OPTIONS } from '../../config';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { map } from 'lodash';\r\nclass Transactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: 'sports book',\r\n            selectedOption: '',\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { isActive } = this.state;\r\n        this.props.selectTransactionTab(isActive);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { isActive } = this.state;\r\n        if (prevProps.language !== this.props.language) {\r\n            this.setActiveTab(isActive);\r\n        }\r\n    }\r\n\r\n    setActiveTab = (tab) => {\r\n        if(this.state.isActive !== tab) {\r\n            this.setState({ isActive: tab });\r\n            this.props.selectTransactionTab(tab);\r\n            if (tab === 'casino' || tab === 'live casino') {\r\n              this.setState({ selectedOption: tab });\r\n          }\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n      \r\n        if(this.state.selectedOption !== e.target.value) {\r\n            this.setState({ selectedOption: e.target.value });\r\n            this.setActiveTab(e.target.value);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      if(this.state.selectedOption !== e.target.value) {\r\n          this.setState({ selectedOption: e.target.value });\r\n          this.setActiveTab(e.target.value);\r\n      }\r\n  }\r\n\r\n  getCasinoTransactionOptions = () => {\r\n      const { isActive } = this.state;\r\n      if (CASINO_TRANSACTION_OPTIONS.map(type => type.id).includes(isActive)) {\r\n          return CASINO_TRANSACTION_OPTIONS;\r\n      } else if (LIVE_CASINO_TRANSACTION_OPTIONS.map(type => type.id).includes(isActive)) {\r\n          return LIVE_CASINO_TRANSACTION_OPTIONS;\r\n      }\r\n\r\n      return null;\r\n  }\r\n    render() {\r\n      let { isActive, selectedOption } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"main-container mybet\" >\r\n                    <div className=\"acount-head\">\r\n                        <div className=\"d-flex left-link\">\r\n                            <ul>\r\n                                <li item xs={4} className={`${isActive === 'sports book' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('sports book')}>\r\n                                    <a href>{Translate.sportsBook}</a>\r\n                                </li>\r\n                                <li item xs={4} className={`${CASINO_TRANSACTION_OPTIONS.map(type => type.id).includes(isActive) ? 'active' : ''}`} onClick={(e) => this.setActiveTab('casino')}>\r\n                                    <a href>{Translate.casino}</a>\r\n                                </li>\r\n                                <li item xs={4} className={`${LIVE_CASINO_TRANSACTION_OPTIONS.map(type => type.id).includes(isActive) ? 'active' : ''}`} onClick={(e) => this.setActiveTab('live casino')}>\r\n                                    <a href>{ Translate.liveCasino}</a>\r\n                                </li>\r\n                                {/* <li item xs={4} className={`${isActive === 'GG-Slot casino' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('GG-Slot casino')}>\r\n                                    <a href>{ 'GG-Slot'}</a>\r\n                                </li> */}\r\n                            </ul>\r\n                        </div>\r\n                        <Filters tab={isActive} language={this.props.language}/>\r\n                    </div>\r\n\r\n                    {[\r\n                        ...CASINO_TRANSACTION_OPTIONS.map(type => type.id),\r\n                        ...LIVE_CASINO_TRANSACTION_OPTIONS.map(type => type.id)]\r\n                        .includes(isActive) && (\r\n                            <Select\r\n                                MenuProps={{\r\n                                    anchorOrigin: {\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'left'\r\n                                    },\r\n                                    getContentAnchorEl: null\r\n                                }}\r\n                                className='casino-transaction-type mt-2 ml-2'\r\n                                variant='outlined'\r\n                                value={selectedOption}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                {map(this.getCasinoTransactionOptions(), (type) => (\r\n                                    <MenuItem key={type.id} value={type.id}>{type.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                    )}\r\n                    <div className=\"account-body\" id='transaction-scroll'>\r\n                        <Table tab={isActive} />\r\n                    </div>\r\n                </div>\r\n            \r\n            </>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectTransactionTab: (tab) => dispatch(selectTransactionTab(tab)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Transactions);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { STATIC_MARKET } from '../../config/staticMarket';\r\n\r\nfunction Bet(props) {\r\n    let { bet, betslipStatus } = props;\r\n    let statusStyle = 'bl-darkgray-8';\r\n\r\n    \r\n    if (bet.settlement_status === null) {\r\n        statusStyle = 'bl-yellow-8';\r\n    } else if (bet.settlement_status === 1) {\r\n        statusStyle = 'bl-red-8';\r\n    } else if (bet.settlement_status === 2) {\r\n        statusStyle = 'bl-green-8';\r\n    }\r\n\r\n    let betStatus = null;\r\n    if (bet.event_status === lSportsConfig.statuses.inplay ){ \r\n        betStatus = <span className=\"live-icon lg\">{Translate.live}</span>; \r\n    }\r\n    else if(bet.settlement_status === 1){\r\n        betStatus = <span className=\"lost-icon lg\">{Translate.lost}</span>;\r\n    }\r\n    else if(bet.settlement_status === 2){\r\n        betStatus = <span className=\"won-icon lg\">{Translate.won}</span>;\r\n    }\r\n    else if(bet.settlement_status === 3){\r\n        betStatus = <span className=\"refund-icon lg\">Refund</span>;\r\n    }\r\n    else if(bet.settlement_status === 4){\r\n        betStatus = <span className=\"lost-icon lg\">Half Lost</span>;\r\n    }\r\n    else if(bet.settlement_status === 5){\r\n        betStatus = <span className=\"won-icon lg\">Half Won</span>;\r\n    }\r\n    else if(bet.settlement_status === -1  || bet.settlement_status === 6){\r\n        betStatus = <span className=\"refund-icon lg\">Cancelled</span>;\r\n    }\r\n    else if(bet.settlement_status === null){\r\n        betStatus = <span className=\"ingame-icon lg\">{Translate['in game']}</span>;\r\n    }\r\n    \r\n//     if (betslipStatus === 'cashout') {\r\n        \r\n//         let newBetStatus = <span className=\"d-flex justify-content-between\">\r\n//             {betStatus}\r\n//             <span className=\"cashout-icon sm\">{Translate.cashout}</span>\r\n//         </span>;\r\n    \r\n//        betStatus = newBetStatus;         \r\n// }\r\n\r\n    let bet_line = bet.bet_line ? '(' + bet.bet_line + ')' : null;\r\n    const results = bet.match_result ? typeof bet.match_result == 'string' ? JSON.parse(bet.match_result) : bet.match_result : {};\r\n    let oddType =  localStorage.getItem('oddType') ?  localStorage.getItem('oddType') : '';\r\n\r\n    let specifier;\r\n    const specifierArr = bet?.specifiers?.split('|') || [];\r\n    specifierArr.forEach(spec => {\r\n        let [ specKey, specValue ] = spec.split('=');\r\n        if (!specifier) specifier = {};\r\n        specifier = { ...specifier, [specKey]: specValue };\r\n    });\r\n    return (\r\n        <div>\r\n            <div className={'py-2 pr-2 ' + statusStyle}>\r\n                <Grid container className=\"m-0 p-0 px-2\">\r\n                    <Grid item xs={betslipStatus === 'cashout' ? 5 : 7} className=\"p-0 text-gray-dark ellipsis print_color\">\r\n                        {bet.league_name}\r\n                    </Grid>\r\n                    <Grid item xs={3} className=\"p-0 text-right\">\r\n                        {bet?.score?.livescore && bet?.score?.livescore?.home_score && (\r\n                            <span className='mybet__score font-weight-bold print_color'>\r\n                                {`${bet?.score?.livescore?.home_score || ''}:${bet?.score?.livescore?.away_score || ''}`}\r\n                            </span>\r\n                        )}\r\n                        {bet?.score?.clock?.match_time && (\r\n                            <span className='ml-1 mybet__score font-weight-bold print_color'>\r\n                                {Util.getBetTime(bet.sport_id, bet.score)}\r\n                            </span>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={2} className=\"p-0 text-right\">\r\n                        {betStatus}\r\n                    </Grid>\r\n                    { betslipStatus === 'cashout' && <Grid item xs={2} className=\"p-0 text-right\">\r\n                        <span className=\"cashout-icon sm\">{Translate.cashout}</span>\r\n                    </Grid> }\r\n                </Grid>\r\n\r\n                <Grid container className=\"m-0 p-0 px-2\">\r\n                    <Grid item xs={8} className=\"p-0 pt-1 pr-2 mybet__popup-text text-gray-darker\">\r\n                        <p className=\"ellipsis m-0 print_color\">{bet.participants[0].participant.name}</p>\r\n                        <p className=\"ellipsis m-0 print_color\">{bet.participants[1].participant.name}</p>\r\n                    </Grid>\r\n                    <>\r\n                        <Grid item xs={3} className=\"p-0 pt-1 text-green mybet__popup-text text-center\">\r\n                            <p className=\"m-0 print_color\">{results?.home_score || 0}</p>\r\n                            <p className=\"m-0 print_color\">{results?.away_score || 0}</p>\r\n                        </Grid>\r\n                        <Grid item xs={1} className=\"p-0 pt-1 text-right mybet__popup-text print_color\">\r\n                            {Util.toFixedDecimal(bet.price, oddType)}\r\n                        </Grid>\r\n                    </>\r\n                </Grid>\r\n\r\n                <Grid container className=\"m-0 p-0 px-2\">\r\n                    <Grid item xs={8} className=\"p-0 pt-1 text-green\">\r\n                        <span className=\"print_color\">{Translate.tip} {bet.name}</span>\r\n                        {/* {bet_line}: {bet.market_name} */}\r\n                        <span className=\"print_color\">{ ' : ' }</span>\r\n                        <span className=\"print_color\">{Util.marketNameFormatter(STATIC_MARKET[`id_${ bet.market_id }`].name_en, specifier || {}, [bet.participants[0]?.participant?.name, bet.participants[1]?.participant?.name])}</span>\r\n                    </Grid>\r\n                    <Grid item xs={3} className=\"p-0 pt-1 text-gray text-center\">\r\n                        <time className=\"print_color\">{format(parseISO(bet.start_date), 'dd/MM/yy')}</time>\r\n                    </Grid>\r\n                    <Grid item xs={1} className=\"p-0 pt-1 text-gray text-right\">\r\n                        <time className=\"print_color\">{format(parseISO(bet.start_date), 'kk:mm')}</time>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div className=\"mybet__divider\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBet.propTypes = { \r\n    bet: PropTypes.object,\r\n};\r\n\r\nexport default Bet;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport { connect } from 'react-redux';\r\nimport { format, parseISO } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bet from './Bet';\r\n\r\nfunction Bets(props) {\r\n    let { singleBetslip, betslip, userData } = props;\r\n    let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n    let drawBets = map(singleBetslip.bets, (bet, index) => {\r\n        return <Bet betslipStatus={singleBetslip.betslip_status} bet={bet} key={index} />;\r\n    });\r\n\r\n    let betType = singleBetslip.bet_type === 1 ? 'single' : 'multiple';\r\n    let singleBetslip_odd = singleBetslip.multi_price === '0.00' ? singleBetslip.bets[0].price : singleBetslip.multi_price;\r\n\r\n    let possible_win;\r\n    let win_amount;\r\n\r\n    if (betslip.status === 'in game') {\r\n        possible_win = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    } else if (betslip.status === 'lost') {\r\n        win_amount = '0.00 ' + currency;\r\n    } else if (betslip.status === 'won') {\r\n        win_amount = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    }\r\n\r\n    let betNumber = singleBetslip.bet_type === 2 ? singleBetslip.bets.length : '';\r\n    let showBonus = betslip.has_bonus;\r\n    \r\n    let isRefund;\r\n    if(betslip.status === 'refund'){\r\n        isRefund = true;\r\n    }\r\n    else{\r\n        let check = true;\r\n        singleBetslip.bets.forEach((bet) => {\r\n            if(bet.settlement_status !== 3){\r\n                check = false;\r\n            }\r\n        });\r\n        isRefund = check;\r\n    }\r\n    return (\r\n        <div className=\"mybet__popup-content\">\r\n            <div className=\"px-2\">\r\n                <Grid container className=\"mx-auto text-gray px-2 pb-2\">\r\n                    <Grid item xs={8} className=\"p-0 text-capitalize print_color\">\r\n                        {Translate[betType]} {betNumber}\r\n                    </Grid>\r\n                    <Grid item xs={3} className=\"p-0 text-center\">\r\n                        <time className='print_color'>{format(parseISO(singleBetslip.created), 'dd/MM/yy')}</time>\r\n                    </Grid>\r\n                    <Grid item xs={1} className=\"p-0 text-right\">\r\n                        <time className='print_color'>{format(parseISO(singleBetslip.created), 'kk:mm')}</time>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n            <div className=\"mybet__divider\"></div>\r\n\r\n            {drawBets}\r\n\r\n            <Grid container className=\"mx-auto text-gray px-2 pt-2 pb-4\">\r\n                {!isRefund && <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    <span className='print_color'>{Translate.totalOdd}</span> <span className='print_color'>{singleBetslip_odd}</span>\r\n                </Grid>}\r\n                <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    <span className='print_color'>{Translate.totalStake}</span>{' '}\r\n                    <span className='print_color'>\r\n                        {singleBetslip.amount} {currency}\r\n                    </span>\r\n                </Grid>\r\n                <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between print_color\">\r\n                    {!isRefund && possible_win && (\r\n                        <>\r\n                            <span className=\"text-black print_color\">{Translate.possibleWin}</span>\r\n                            {showBonus && <span className=\"mybet__bonus text-black print_color\">+ 10% Bonus</span>}\r\n                            <span className=\"text-black print_color\">{possible_win}</span>\r\n                        </>\r\n                    )}\r\n                    {win_amount && (\r\n                        <>\r\n                            <span className={betslip.status === 'won' && 'font-weight-bolder text-black print_color'}>{Translate.totalWin}</span>\r\n                            {showBonus && <span className=\"mybet__bonus print_color\">+ 10% Bonus</span>}\r\n                            <span className={betslip.status === 'won' && 'font-weight-bold text-black print_color'}>{win_amount}</span>\r\n                        </>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nBets.propTypes = {\r\n    singleBetslip: PropTypes.object,\r\n    betslip: PropTypes.object,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Bets);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CountdownComponent } from '../Betslip/CountdownComponent';\r\nimport { lSportsConfig } from '../../config';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { Translate } from '../../localization';\r\n\r\nfunction CashoutModal(props) {\r\n    const { cashoutData, openCashoutConfirmationPopup, isCashoutExpired, cashoutExpired, refreshCashout, currency, cashoutAvailable, isCashoutAvailableLoading, loadingCashout} = props;\r\n    return (\r\n        <>\r\n            { !isCashoutExpired && Object.keys(cashoutData).length !== 0 && <> <div className={`cashout-timer`}>\r\n                <CountdownComponent seconds={lSportsConfig.cashoutTimer} clearCountdown={cashoutExpired} messageText={'Cashout Expire In:'} />\r\n            </div>\r\n\r\n            {/* <Grid container className=\"mx-auto text-gray px-2 pt-2 pb-4\">\r\n                {/* <Grid item xs={12} className=\"p-0 d-flex justify-content-end text-right\">\r\n                    <span className=\"cashout-icon sm\">Cashout Amount</span>\r\n                </Grid> \r\n\r\n                <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    <span className=\"text-black\">Cashout Amount</span>{' '}\r\n                    <span className=\"text-black\">{parseFloat(cashoutData.cashout_amount).toFixed(2)}</span>\r\n                </Grid>\r\n            </Grid> */}\r\n            </>\r\n            }\r\n            { <div className=\"cashout-btn-wrap\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={!isCashoutExpired\r\n                                ? cashoutAvailable && cashoutData.cashout_amount ? openCashoutConfirmationPopup : refreshCashout \r\n                                : refreshCashout\r\n                            }\r\n                    className=\"place-btn\"\r\n                    variant=\"contained\"\r\n                    disabled = {(!cashoutAvailable && isCashoutAvailableLoading) || loadingCashout}\r\n                >\r\n                    {(!cashoutAvailable && isCashoutAvailableLoading) ? <LoadingIcon/>\r\n                        : cashoutAvailable ? loadingCashout ? <LoadingIcon/>  \r\n                                : !isCashoutExpired \r\n                                    ? cashoutData.cashout_amount ? `${parseFloat(cashoutData.cashout_amount).toFixed(2)} ${currency}` : 'No Cashout Offer'\r\n                                    : `${Translate.refreshCashout}`\r\n                        : 'No Cashout Offer'\r\n                    }\r\n                </Button>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nCashoutModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    openCashoutConfirmationPopup: PropTypes.func,\r\n    cashoutData: PropTypes.object,\r\n    refreshCashout: PropTypes.func\r\n};\r\n\r\nexport default CashoutModal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport find from 'lodash.find';\r\nimport Bets from './Bets';\r\nimport { setCashoutData } from '../../store/actions/cashout.actions';\r\n\r\nimport CashoutModal from './CashoutModal';\r\nimport forEach from 'lodash.foreach';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport { dynamoClient } from '../../App';\r\nimport { getSingleLiveMarkets, getSingleMarketOfPreEvent, getSingleMarketOfEvent } from '../../dynamo/inplayParams';\r\nimport { paramsMarketDataIndex } from '../../dynamo/params';\r\nimport { lSportsConfig } from '../../config';\r\nimport { compareAsc } from 'date-fns';\r\nimport ReactToPrint from 'react-to-print';\r\nlet unSub=[];\r\n\r\nclass SingleBetslipModal extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            cashoutAvailable: false,\r\n            isCashoutAvailableLoading: true,\r\n            isCashoutExpired: false,\r\n            cashoutObject: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkAllOddsAvailable();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.showCashoutSuccess !== this.props.showCashoutSuccess) {\r\n            if(this.props.showCashoutSuccess) {\r\n                this.setState({ cashoutAvailable: false, cashoutObject: {}  });\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCashoutConditions = () => {  \r\n        if(!this.isAnyLostBet() && this.checkCashoutObject() && this.isNotPastPrematch()) { \r\n            this.setState({ cashoutAvailable: true });\r\n            if (!this.props.cashoutData.cashout_amount)\r\n            this.props.betslip.status === 'in game' && this.props.openCashoutModal();\r\n        }\r\n        else if (this.isAnyLostBet() || !this.checkCashoutObject()) {\r\n            this.setState({ cashoutAvailable: false });\r\n        }\r\n        if ( this.state.isCashoutAvailableLoading ) {\r\n            this.setState({ isCashoutAvailableLoading: false });\r\n        }\r\n    };\r\n\r\n    checkCashoutObject = () => {\r\n        let check = true;\r\n        forEach(this.state.cashoutObject, (element) => {\r\n            if(element === false) {\r\n                check = false;\r\n            }\r\n        });\r\n        return check;\r\n    }\r\n\r\n    checkAllOddsAvailable = () => {\r\n        if(this.props.betslip.status === 'in game') {\r\n            let check = false;\r\n            this.props.singleBetslip.bets.forEach((bet) => {\r\n                if(!bet.settlement_status) {\r\n                    check = true;\r\n                //listen to changes\r\n                    if(bet.event_status === lSportsConfig.statuses.inplay ) {\r\n                        let id = `${bet.fixture_id}^${bet.market_id}`;\r\n                        if (bet.specifiers) id = `${id}^${bet.specifiers}`;\r\n                        dynamoClient.query(getSingleMarketOfEvent(`${id}`)).promise().then((e) => {\r\n                            if(e?.Items && e.Items[0]?.outcomes) this.handleOddsUpdate(bet, JSON.parse(e.Items[0].outcomes), e.Items[0].market_status);\r\n                            else this.handleOddsUpdate(bet);\r\n                        });\r\n                    }\r\n                    else {\r\n                        let id = `${bet.fixture_id}^${bet.market_id}`;\r\n                        if (bet.specifiers) id = `${id}^${bet.specifiers}`;\r\n                        dynamoClient.query(getSingleMarketOfPreEvent(id)).promise().then((e) => {\r\n                            if(e?.Items && e.Items[0]?.outcomes) this.handleOddsUpdate(bet, JSON.parse(e.Items[0].outcomes), e.Items[0].market_status);\r\n                            else this.handleOddsUpdate(bet);\r\n                        });\r\n                    }\r\n                }\r\n                if(!check){\r\n                    this.setState({ cashoutAvailable: false });\r\n                }\r\n            });\r\n        }\r\n    };\r\n        \r\n    handleOddsUpdate = (bet, snap, marketStatus) => {\r\n        let { cashoutObject } = this.state;\r\n        if(snap) {\r\n            //now check price and status\r\n            let check = true;\r\n            const { active, settled } = lSportsConfig.marketStatus;\r\n            // custom check for Correct Score and Correct score first period && market should be active/settled\r\n            if([active, settled].indexOf(+marketStatus) === -1 || bet.market_id === 431 || bet.market_id === 481){\r\n                check =false;\r\n            }\r\n            else if(bet.event_status === lSportsConfig.statuses.prematch || bet.event_status === lSportsConfig.statuses.inplay ) {\r\n                // let selectedMarket = snap[`${bet.market_id}`];\r\n                let selectedBet = snap[`${bet.bet_id}`];\r\n                \r\n                if(!selectedBet?.result && (selectedBet?.active != lSportsConfig.betStatus.active || !selectedBet?.odds) ){\r\n                    check =false;\r\n                }\r\n            }\r\n            else check = false;\r\n        \r\n            if(!cashoutObject[bet.fixture_id]) {\r\n                let cashoutObj = cashoutObject;\r\n                cashoutObj[bet.fixture_id] = check;\r\n                this.setState({ cashoutObject : cashoutObj });\r\n            }\r\n            else if(!check && cashoutObject[bet.fixture_id] === true ) {\r\n                let cashoutObj = cashoutObject;\r\n                cashoutObj[bet.fixture_id] = false;\r\n                this.setState({ cashoutObject : cashoutObj });\r\n                this.setState({ cashoutAvailable : false});\r\n            }\r\n            else if(check && cashoutObject[bet.fixture_id] === false) {\r\n                let cashoutObj = cashoutObject;\r\n                cashoutObj[bet.fixture_id] = true;\r\n                this.setState({ cashoutObject : cashoutObj });\r\n                    // this.setState({ cashoutOddsAvailable : true});       \r\n            }\r\n        }\r\n        else {\r\n            let cashoutObj = cashoutObject;\r\n            cashoutObj[bet.fixture_id] = false;\r\n            this.setState({ cashoutObject : cashoutObj });\r\n            // this.setState({ cashoutOddsAvailable : false});\r\n        }\r\n        this.checkCashoutConditions();\r\n    };\r\n\r\n    isNotPastPrematch = () => {\r\n        let check = true;\r\n        this.props.singleBetslip.bets.forEach(element => {\r\n            const { start_date: startDate } = element;\r\n            if((element.event_status != lSportsConfig.statuses.inplay && element.event_status != lSportsConfig.statuses.results) && compareAsc(new Date(startDate), new Date()) < 1){\r\n                check= false;\r\n            }\r\n        });\r\n        return check;\r\n    };\r\n\r\n    isAnyLostBet = () => {\r\n        let check = false;\r\n        this.props.singleBetslip.bets.forEach(element => {\r\n            if(element.settlement_status === 1){\r\n                check= true;\r\n            }\r\n        });\r\n        return check;\r\n    }\r\n\r\n    refreshCashout = () => {\r\n        if(this.state.cashoutAvailable) {\r\n            this.props.openCashoutModal();\r\n            this.setState({ isCashoutExpired: false });\r\n        }\r\n        else {\r\n            this.checkAllOddsAvailable();\r\n        }\r\n    }\r\n\r\n    cashoutExpired = () => {\r\n        this.props.resetCashoutData();\r\n        this.setState({ isCashoutExpired: true });\r\n    }\r\n\r\n    render() {\r\n\r\n        let { cashoutAvailable, isCashoutAvailableLoading, isCashoutExpired } = this.state;\r\n        let { closeModal, singleBetslip, betslip, showCashoutSuccess, cashoutData, openCashoutConfirmationPopup, userData, loadingCashout } = this.props;\r\n        let couponId = singleBetslip.coupon_id ? singleBetslip.coupon_id : '-';\r\n\r\n        let betslipList =\r\n             singleBetslip.bets.length > 0 ? <Bets singleBetslip={singleBetslip} betslip={betslip} /> : <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>;\r\n         let headerData =  <div className=\"d-flex align-items-center flex-wrap\">\r\n                        <h3 className=\"m-0 mr-3 d-flex align-items-center print_color\">\r\n                            <i className=\"material-icons menu-item__betslip-icon mr-2\" style={{ marginBottom: '1px' }}>\r\n                                receipt\r\n                            </i>\r\n                            {Translate.coupon} \r\n                            {/* {print_color is used for print design} */}\r\n                        </h3>\r\n                        <p className=\"my-0 subtitle print_color\">ID: {couponId}&nbsp;&nbsp;&nbsp;</p>\r\n                        </div>\r\n            return (\r\n                <Dialog onClose={closeModal} aria-labelledby=\"single-betslip-dialog-title\" open={true} scroll=\"paper\" PaperProps={{ classes: { root: 'w-50' } }}>\r\n                    <ReactToPrint\r\n                            trigger={() => <Button className=\"print-button\">Print</Button>}\r\n                            content={() => this.betSlipRef}\r\n                            documentTitle={`Africa_gold_${couponId}`}\r\n                            pageStyle=\"@page { size: auto; margin: 0mm 50mm 0mm 50mm; border-style: solid;  } @media print { body { -webkit-print-color-adjust: exact; padding:40px !important;  background-color: #fff !important;} .mybet__popup-text { font-size: 15px !important;} .text-gray-dark{color: #000 !important;} .print_color{color: #000 !important; font-size:25px !important;} .close-modal{display:none !important;} .cashout-btn-wrap{display:none !important;}}\"\r\n                        />\r\n                         <div ref={(el) => (this.betSlipRef = el)}>\r\n                    <DialogTitle id=\"single-betslip-dialog-title\" disableTypography>\r\n                        {headerData}\r\n                        <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                            <i className=\" material-icons fs-22\"> close </i>\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent className=\"p-0\">\r\n                    \r\n                    <>\r\n                    {betslipList}\r\n                    {betslip.status === 'in game' && \r\n                        <CashoutModal \r\n                            cashoutData={cashoutData}\r\n                            openCashoutConfirmationPopup={openCashoutConfirmationPopup}\r\n                            isCashoutExpired={isCashoutExpired}\r\n                            cashoutExpired={this.cashoutExpired}\r\n                            refreshCashout={this.refreshCashout}\r\n                            cashoutAvailable = {cashoutAvailable}\r\n                            isCashoutAvailableLoading = {isCashoutAvailableLoading}\r\n                            loadingCashout= {loadingCashout}\r\n                            currency = {userData && userData.currency ? userData.currency : 'EUR'} \r\n                        />}\r\n                    </>\r\n                    </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSingleBetslipModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    singleBetslip: PropTypes.object,\r\n    betslip: PropTypes.object,\r\n    cashoutData: PropTypes.object,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        singleBetslip: state.bets.singleBetslip,\r\n        loadingCashout: state.bets.loadingCashout,\r\n        cashoutData: state.bets.cashoutData,\r\n        showCashoutSuccess: state.bets.showCashoutSuccess,\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCashoutData: (betslip_id, total_odds, stake_price) => dispatch(setCashoutData(betslip_id, total_odds, stake_price)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleBetslipModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { format, parseISO } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\n\r\nfunction Betslip(props) {\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        props.openBetslipModal(props.betslip);\r\n    };\r\n\r\n    let { betslip, userData } = props;\r\n    let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';    \r\n    let statusText = Translate[betslip.status];\r\n    let statusStyle = 'bl-darkgray-6';\r\n    let possible_win = <span className=\"fs-18\">-</span>;\r\n    let win_amount = <span className=\"fs-18\">-</span>;\r\n    let statusTextStyle = '';\r\n\r\n    if (betslip.status === 'in game') {\r\n        statusStyle = 'ingame';\r\n        possible_win = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    } else if (betslip.status === 'lost') {\r\n        statusStyle = 'lost';\r\n        statusTextStyle = 'text-red-dark';\r\n        win_amount = '0.00 ' + currency;\r\n    } else if (betslip.status === 'won') {\r\n        statusStyle = 'win';\r\n        statusTextStyle = 'text-green';\r\n        win_amount = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    } else if (betslip.status === 'refund') {\r\n        statusStyle = 'refund';\r\n    }  else if (betslip.status === 'cashout') {\r\n        statusStyle = 'cashout';\r\n        possible_win = '-';\r\n        win_amount = Util.toFixedDecimal(betslip.cashout_amount) + ' ' + currency;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr onClick={handleClick} className={statusStyle}>\r\n                <td>\r\n                    <div className={`mybet__date ${statusStyle}`}>\r\n                        <div>\r\n                            <time>{format(parseISO(betslip.created), 'dd/MM/yy kk:mm')}</time>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {Util.toFixedDecimal(betslip.amount)} {currency}\r\n                </td>\r\n                <td className=\"text-black\">{possible_win}</td>\r\n                <td>{win_amount}</td>\r\n                <td className={`text-capitalize`}>\r\n                    <span className={`${statusStyle}`}>\r\n                        {statusText}\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nBetslip.propTypes = {\r\n    betslip: PropTypes.object,\r\n    language: PropTypes.string,\r\n    openBetslipModal: PropTypes.func,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Betslip);\r\n","import React from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nfunction CashoutSuccess(props) {\r\n    return (\r\n        <>\r\n            <DialogTitle id=\"single-betslip-dialog-title\" disableTypography>\r\n                <div className=\"d-flex justify-content-center font-weight-semibold fs-20 ls-2\"> Cashout Successful</div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className=\"p-0\">\r\n                <div className=\"success-checkmark\">\r\n                    <div className=\"check-icon\">\r\n                        <span className=\"icon-line line-tip\"></span>\r\n                        <span className=\"icon-line line-long\"></span>\r\n                        <div className=\"icon-circle\"></div>\r\n                        <div className=\"icon-fix\"></div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CashoutSuccess;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Translate } from '../../localization';\r\nimport CashoutSuccess from './CashoutSuccess';\r\n\r\nfunction CashoutConfirmationPopup(props) {\r\n    const { closeModal, closeCashoutModal, cashoutData, getBetslipId, processCashout, showCashoutError, cashoutSuccessVisible, } = props;\r\n\r\n    const handleCashout = () => {\r\n        if( Object.keys(cashoutData).length !== 0 ) {\r\n            let betslipId = getBetslipId();\r\n            processCashout(betslipId, cashoutData.cashout_amount);\r\n            closeModal();\r\n            closeCashoutModal();\r\n        }\r\n        else {\r\n            showCashoutError('Cashout Expired');\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog aria-labelledby=\"fast-bet-dialog-title\" disableBackdropClick disableEscapeKeyDown open={true} scroll=\"body\">\r\n            {!cashoutSuccessVisible ? <> <DialogTitle id=\"fast-bet-dialog-title\" disableTypography>\r\n                <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n                {/* <div className=\"dialog-logo-wrap\">\r\n                    <i className=\"icon-logo-1\"></i>\r\n                    <i className=\"icon-logo-2\"></i>\r\n                </div> */}\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\" material-icons fs-22\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n                <DialogContent className=\"pt-0 bg-color\">\r\n                    <p className=\"text-center text-white mb-0 mt-2\">{Translate.areYouSureWantCashout}</p>\r\n\r\n                    <div className=\"fast-bet__btn-wrap\">\r\n                        <button className=\"fast-bet__btn\" id=\"accept-changes\" onClick={handleCashout}>\r\n                            {Translate.yes}\r\n                        </button>\r\n                        <button className=\"fast-bet__btn\" id=\"cancel\" onClick={closeModal}>\r\n                            {Translate.no}\r\n                        </button>\r\n                    </div>\r\n                </DialogContent>\r\n            </> : <CashoutSuccess/>}\r\n            \r\n        </Dialog>\r\n    );\r\n}\r\n\r\nCashoutConfirmationPopup.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    setCashoutOptions: PropTypes.func,\r\n};\r\n\r\nexport default CashoutConfirmationPopup;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport map from 'lodash.map';\r\nimport { isValid, differenceInDays } from 'date-fns';\r\nimport { getMyBetFilterTypes } from '../../config';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\n// import { getTransactions, setTransactionsFilter } from '../../store/actions/transaction.actions';\r\nimport { setMybetsFilters } from '../../store/actions/bets.actions';\r\nimport { Translate } from '../../localization';\r\n\r\nlet activityTypesMobile, activityTypesDesktop ;\r\nlet dateLastWeek = new Date();\r\ndateLastWeek.setDate(dateLastWeek.getDate() - 7);\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dateFrom: dateLastWeek,\r\n            dateTo: new Date(),\r\n            activityType: 'all',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTranslations();\r\n        let { mybetsFilterParams } = this.props;\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n        // this.props.getTransactions(params, true);\r\n        let startDate = dateFrom;\r\n        let endDate = dateTo;\r\n        let params = { activityType, endDate, startDate};\r\n        if( mybetsFilterParams && mybetsFilterParams.activityType ){\r\n            this.setState({\r\n                dateFrom: mybetsFilterParams.startDate, \r\n                dateTo: mybetsFilterParams.endDate, \r\n                activityType: mybetsFilterParams.activityType\r\n            });\r\n        } \r\n        if( !mybetsFilterParams || !mybetsFilterParams.activityType) {\r\n            this.props.setMybetsFilters(params);\r\n        }\r\n        \r\n    }\r\n\r\n    loadTranslations = () => {\r\n        activityTypesMobile = map(getMyBetFilterTypes(), (type, index) => (\r\n            <option key={index} value={type.value}>\r\n                {type.label}\r\n            </option>\r\n        ));\r\n        \r\n        activityTypesDesktop = map(getMyBetFilterTypes(), (type, index) => (\r\n            <MenuItem key={index} value={type.value}>\r\n                {type.label}\r\n            </MenuItem>\r\n        ));\r\n    }\r\n    \r\n    handleChangeDateFrom = (date) => {\r\n        this.setState({ dateFrom: date });\r\n    };\r\n\r\n    handleChangeDateTo = (date) => {\r\n        this.setState({ dateTo: date });\r\n    };\r\n\r\n    handleChangeSelect = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    onSearchTransactions = () => {\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n\r\n        // if date to is invalid\r\n        if (dateTo !== null) {\r\n            if (!isValid(dateTo)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date from is invalid\r\n        if (dateFrom !== null) {\r\n            if (!isValid(dateFrom)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date range is invalid\r\n        if (dateTo !== null && dateFrom !== null) {\r\n            if (differenceInDays(dateTo, dateFrom) < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        let startDate = dateFrom;\r\n        let endDate = dateTo;\r\n        let params = { activityType, endDate, startDate};\r\n        // this.props.getTransactions(params, true);\r\n        this.props.setMybetsFilters(params);\r\n    };\r\n\r\n    render() {\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n\r\n        return (\r\n            <div className=\"sorting\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    {/* From Date - start */}\r\n                    <div className='sort-input'>\r\n                        <InputLabel shrink>{Translate.fromDate}</InputLabel>\r\n                        <KeyboardDatePicker\r\n                                disableToolbar\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={dateFrom}\r\n                                onChange={this.handleChangeDateFrom}\r\n                                minDateMessage=\"Invalid Date\"\r\n                                maxDateMessage=\"Invalid Date\"\r\n                                maxDate={dateTo}\r\n                            />\r\n                    </div>\r\n                    {/* From Date - end */}\r\n\r\n                    {/* To Date - start */}\r\n                    <div className='sort-input'>\r\n                        <InputLabel shrink>{Translate.toDate}</InputLabel>\r\n                        <KeyboardDatePicker\r\n                                disableToolbar\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={dateTo}\r\n                                onChange={this.handleChangeDateTo}\r\n                                minDateMessage=\"Invalid Date\"\r\n                                maxDateMessage=\"Invalid Date\"\r\n                            />\r\n                    </div>\r\n                    {/* To Date - end */}\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"sort-input\">\r\n                    <FormControl className=\"w-100 select select_desktop\">\r\n                        <InputLabel shrink>{Translate.activityType}</InputLabel>\r\n                        <Select value={activityType} name=\"activityType\" onChange={this.handleChangeSelect}>\r\n                            {activityTypesDesktop}\r\n                        </Select>\r\n                    </FormControl>  \r\n                </div>\r\n                <div className=\"sort-input mt-2\">\r\n                    <Button className='show-button' variant=\"contained\" color=\"primary\" fullWidth size=\"medium\" onClick={this.onSearchTransactions}>\r\n                        {Translate.show}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    // getTransactions: PropTypes.func,\r\n    setMybetsFilters: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mybetsFilterParams: state.bets.mybetsFilterParams,\r\n    };     \r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setMybetsFilters: (params) => dispatch(setMybetsFilters(params)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport SingleBetslipModal from './SingleBetslipModal.js';\r\nimport Betslip from './Betslip';\r\nimport { getBetslips, selectBetslip, getSingleBetslip, removeMyBetsFilters} from '../../store/actions/bets.actions';\r\nimport { setCashoutData, processCashout, setCashoutLoading, resetCashoutData, showCashoutSuccess,showCashoutError } from '../../store/actions/cashout.actions';\r\nimport CashoutConfirmationPopup from './CashoutConfirmationPopup';\r\nimport CashoutSuccess from './CashoutSuccess';\r\nimport find from 'lodash.find';\r\nimport Filter from './Filter';\r\n\r\nclass MyBets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: 'all',\r\n            showSingleBetslipModal: false,\r\n            singleBetslipLoading: false,\r\n            currentBetslip: {},\r\n            showCashoutConfirmationPopup: false,\r\n            closeCashoutSuccess: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { isActive } = this.state;\r\n        let activeTab = isActive === 'all' ? '' : isActive;\r\n        this.props.selectBetslip(activeTab);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { isActive } = this.state;\r\n        let activeTab = isActive === 'all' ? '' : isActive;\r\n        if (prevProps.singleBetslip !== this.props.singleBetslip) {\r\n            this.setState({ singleBetslipLoading: false });\r\n        }\r\n        \r\n        if(prevProps.isCashoutSuccess && !this.props.isCashoutSuccess) {\r\n            this.setState({ showSingleBetslipModal: false});\r\n            if( this.props.cashoutData.cashout_amount ) {\r\n                this.props.resetCashoutData();\r\n            }\r\n        }\r\n\r\n        if (prevProps.language !== this.props.language) {\r\n            this.setActiveTab(isActive);\r\n        }\r\n\r\n        // Code for auto load the next data\r\n        // if (this.props.hasNextPage && this.props.betslips.length !== this.props.totalBetslipCount) {\r\n        //     this.props.getBetslips(activeTab);\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.removeMyBetsFilters();\r\n    }\r\n\r\n    setActiveTab = (tab) => {\r\n        if( this.state.isActive !== tab) {\r\n            this.setState({ isActive: tab });\r\n            let activeTab = tab === 'all' ? '' : tab;\r\n            this.props.selectBetslip(activeTab);\r\n        }\r\n    };\r\n\r\n    openSingleBetslipModal = (betslip) => {\r\n        this.setState({\r\n            showSingleBetslipModal: true,\r\n            singleBetslipLoading: true,\r\n            currentBetslip: betslip,\r\n            closeCashoutSuccessModal: false,\r\n        }) ;\r\n        this.props.getSingleBetslip(betslip.id);\r\n    };\r\n\r\n    closeSingleBetslipModal = () => {\r\n        this.setState({ showSingleBetslipModal: false }, () => {\r\n            this.props.resetCashoutData()\r\n        });\r\n    };\r\n\r\n    openCashoutModal = () => {\r\n        const betslipId = this.getBetslipId();\r\n        this.props.setCashoutLoading(true);\r\n        this.props.setCashoutData(betslipId, this.props.singleBetslip.multi_price, this.props.singleBetslip.amount);\r\n    }\r\n\r\n    getBetslipId = () => {\r\n        const betslip = find( this.props.betslips, (bet) => bet.coupon_id === this.props.singleBetslip.coupon_id);\r\n        return betslip.id;\r\n    } \r\n\r\n    closeCashoutModal = () => {\r\n        this.setState({ showSingleBetslipModal: false }, () => {\r\n            this.props.resetCashoutData()\r\n        });\r\n    }\r\n\r\n    openCashoutConfirmationPopup = () => {\r\n        this.setState({\r\n            showCashoutConfirmationPopup: true,\r\n        });\r\n    }\r\n\r\n    closeCashoutConfirmationPopup = () => {\r\n        this.setState({\r\n            showCashoutConfirmationPopup: false,\r\n        }\r\n        );\r\n    }\r\n        \r\n\r\n    fetchMoreData = () => {\r\n        let { isActive } = this.state;\r\n        let activeTab = isActive === 'all' ? '' : isActive;\r\n        let { countBets, totalResultCount, fetchMore} = this.props;\r\n\r\n        if(countBets < totalResultCount && fetchMore)\r\n        {\r\n            this.props.getBetslips(activeTab);\r\n        }\r\n        // if (this.props.hasNextPage) {\r\n        //     this.props.getBetslips(activeTab);\r\n        // }\r\n    };\r\n\r\n    closeCashoutSuccessModal = () => {\r\n        this.setState({closeCashoutSuccess : true});\r\n    }\r\n\r\n    render() {\r\n        let { isActive, showSingleBetslipModal, singleBetslipLoading, currentBetslip, showCashoutConfirmationPopup, closeCashoutSuccess } = this.state;\r\n        let { betslips, loadingBetslip, cashoutData, processCashout, showCashoutSuccess, resetCashoutData, isCashoutSuccess, countBets, totalResultCount, fetchMore } = this.props;\r\n        let betslipsList =\r\n            betslips && betslips.length > 0\r\n                ? map(betslips, (betslip) => {\r\n                      return <Betslip betslip={betslip} key={betslip.id} openBetslipModal={this.openSingleBetslipModal} />;\r\n                  })\r\n                : [];\r\n\r\n                let runAgain ;\r\n                if(countBets < totalResultCount )\r\n                {\r\n                    runAgain = true;\r\n                }\r\n                if(!fetchMore)\r\n                {\r\n                    runAgain = false;\r\n                }\r\n\r\n        let drawBetslips = loadingBetslip ? (\r\n            <Loading customClass='my-account-loader w-100'/>\r\n        ) : betslipsList.length > 0 ? (\r\n            <div className='account-body' id='my-bet-scroll'>\r\n                <InfiniteScroll dataLength={betslipsList.length} next={this.fetchMoreData} hasMore={runAgain} loader={<LoadingIcon theme=\"dark centered\" />} scrollableTarget=\"my-bet-scroll\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr className=\"mybet__table-head\">\r\n                                <th>{Translate.date}</th>\r\n                                <th>{Translate.amount}</th>\r\n                                <th>{Translate.possibleWin}</th>\r\n                                <th>{Translate.winAmount}</th>\r\n                                <th>{Translate.status}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{betslipsList}</tbody>\r\n                    </table>\r\n                </InfiniteScroll>\r\n\r\n                <div className=\"pb-4\" />\r\n\r\n                {showSingleBetslipModal &&\r\n                    (singleBetslipLoading ? (\r\n                        <Loading customClass='my-account-loader w-100'/>\r\n                    ) : (\r\n                        <SingleBetslipModal\r\n                            openCashoutModal={this.openCashoutModal}\r\n                            resetCashoutData={resetCashoutData}\r\n                            closeModal={this.closeSingleBetslipModal}\r\n                            betslip={currentBetslip}\r\n                            openCashoutConfirmationPopup={this.openCashoutConfirmationPopup}\r\n                        />\r\n                    ))}\r\n\r\n                {(showCashoutConfirmationPopup || isCashoutSuccess) && (\r\n                    <CashoutConfirmationPopup\r\n                        getBetslipId={this.getBetslipId}\r\n                        cashoutData={cashoutData}\r\n                        closeModal={this.closeCashoutConfirmationPopup}\r\n                        closeCashoutModal={this.closeCashoutModal}\r\n                        processCashout={processCashout}\r\n                        showCashoutSuccess={showCashoutSuccess}\r\n                        showCashoutError={showCashoutError}\r\n                        isCashoutSuccess={isCashoutSuccess}\r\n                        closeCashoutSuccess={closeCashoutSuccess} \r\n                        cashoutSuccessVisible ={isCashoutSuccess && !closeCashoutSuccess}\r\n                        closeSuccessModal={this.closeCashoutSuccessModal}\r\n                    />\r\n                )}\r\n            </div>\r\n        ) : (\r\n            <div className='account-body' id='my-bet-scroll'>\r\n                <div className=\"no-data fs-15 pt-3 pb-3 pl-3\">{ Translate.nothingFound}</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"main-container mybet\" id=\"mybets\">\r\n                <div className=\"acount-head\">\r\n                    <div className=\"d-flex left-link\">\r\n                        <ul>\r\n                            <li item xs={3} className={`${isActive === 'all' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('all')}>\r\n                                <a href>{Translate.all}</a>\r\n                            </li>\r\n                            <li item xs={3} className={`${isActive === 'in game' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('in game')}>\r\n                                <a href>{Translate['in game']}</a>\r\n                            </li>\r\n                            <li item xs={3} className={`${isActive === 'won' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('won')}>\r\n                                <a href>{Translate.won}</a>\r\n                            </li>\r\n                            <li item xs={3} className={`${isActive === 'lost' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('lost')}>\r\n                                <a href>{Translate.lost}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {isActive === 'all' && <Filter />}\r\n                </div>\r\n\r\n                {drawBetslips}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyBets.propTypes = {\r\n    betslips: PropTypes.array,\r\n    //hasNextPage: PropTypes.bool,\r\n    loadingBetslip: PropTypes.bool,\r\n    singleBetslip: PropTypes.object,\r\n    getBetslips: PropTypes.func,\r\n    selectBetslip: PropTypes.func,\r\n    getSingleBetslip: PropTypes.func,\r\n    language: PropTypes.string,\r\n    cashoutData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        betslips: state.bets.betslips,\r\n        mybetsFilterParams: state.bets.mybetsFilterParams,\r\n       // hasNextPage: state.bets.hasNextPage,\r\n        countBets : state.bets.countBets,\r\n        totalResultCount : state.bets.totalResultCount,\r\n        fetchMore : state.bets.fetchMore,\r\n        loadingBetslip: state.bets.loadingBetslip,\r\n        singleBetslip: state.bets.singleBetslip,\r\n        totalBetslipCount: state.bets.totalBetslipCount,\r\n        language: state.general.language,\r\n        cashoutData: state.bets.cashoutData,\r\n        loadingCashout: state.bets.loadingCashout,\r\n        isCashoutSuccess: state.bets.showCashoutSuccess,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getBetslips: (data) => dispatch(getBetslips(data)),\r\n        selectBetslip: (value) => dispatch(selectBetslip(value)),\r\n        getSingleBetslip: (betslip_id) => dispatch(getSingleBetslip(betslip_id)),\r\n        setCashoutData: (betslip_id, total_odds, stake_price) => dispatch(setCashoutData(betslip_id, total_odds, stake_price)),\r\n        processCashout: (betslip_id, cashout_amount) => dispatch(processCashout(betslip_id, cashout_amount)),\r\n        setCashoutLoading: (value) => dispatch(setCashoutLoading(value)),\r\n        resetCashoutData: () => dispatch(resetCashoutData()),\r\n        showCashoutSuccess: (value) => dispatch(showCashoutSuccess(value)),\r\n        removeMyBetsFilters: () => dispatch(removeMyBetsFilters()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBets);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { depositAmount, getUser } from '../../store/actions/user.actions';\r\nimport { Translate } from '../../localization';\r\nimport QRCode from 'react-qr-code'\r\n\r\nclass DepositModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            amount: 0,\r\n            error: null,\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.qr_code !== this.props.qr_code\r\n            || prevProps.depositError !== this.props.depositError){\r\n                this.setState({ ...this.state, loading: false })\r\n            }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const { amount } = this.state\r\n        if (amount <= 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                error: 'Amount should be greater than zero'\r\n            })\r\n        } else {\r\n            this.props.depositAmount(amount)\r\n            this.setState({ ...this.state, loading: true })\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            amount: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"changes-pass\">\r\n                <div className='deposit'>\r\n                    { this.props.qr_code\r\n                        ? (\r\n                            <div className='qr_code'>\r\n                                <QRCode size={ 400 } value={ this.props.qr_code } />\r\n                                <h3>{ Translate.qrScan }</h3>\r\n                            </div>\r\n                        )\r\n                        : (<form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                this.handleSubmit();\r\n                            }}\r\n                        >\r\n                            <div className={`mt-1`}>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    autoFocus\r\n                                    className=\"auth__input\"\r\n                                    placeholder={Translate.enterAmount}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {\r\n                                    !!this.props.depositError ? <p className=\"auth__error sm\">{ this.props.depositError }</p>\r\n                                        : this.state.error && <p className=\"auth__error sm\">{ this.state.error }</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"auth__btn-wrap desktop_deposit_button\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                                    type=\"submit\"\r\n                                    disabled={ this.state.loading }\r\n                                >\r\n                                    {this.state.loading ? <LoadingIcon /> : Translate.continue }\r\n                                </Button>\r\n                            </div>\r\n                        </form>)\r\n                    }\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nDepositModal.propTypes = {\r\n    hideDepositForm: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // data: state.user.data,\r\n        qr_code: state.user.qr_code,\r\n        depositError: state.user.depositError,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        depositAmount: (amount) => dispatch(depositAmount(amount)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositModal);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport ChangePassword from './ChangePassword';\r\nimport { getCashbackData, getCashbackSucess, logoutUser, resetDepositAmount, getUser } from '../../store/actions/user.actions';\r\nimport CashbackModal from './CashbackModal';\r\nimport Transactions from '../Transactions';\r\nimport MyBets from '../MyBets';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport DepositModal from './DepositModal';\r\n\r\nclass MyAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentTab: 'transaction',\r\n            isGetUserNeeded: false,\r\n            showChangePassword: false,\r\n            showCashbackModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.getCashbackData();\r\n        const { enableMyBets } = this.props;\r\n        if (enableMyBets) this.setState({currentTab: 'mybets' });\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ isGetUserNeeded: false });\r\n        const { props: { logoutUser, onClose } } = this;\r\n        logoutUser();\r\n        setTimeout(() => {\r\n            onClose();\r\n        }, 200);\r\n        this.GoToPage('/');\r\n    };\r\n\r\n    GoToPage = (path) => {\r\n        this.props.history.push(path);\r\n    };\r\n\r\n    showChangePasswordForm = (e) => {\r\n        this.setState({ showChangePassword: true });\r\n    };\r\n    \r\n    showBonus = () => {\r\n        this.setState({ showCashbackModal: true});\r\n    }\r\n\r\n    closeBonus = () => {\r\n        this.setState({ showCashbackModal: false});\r\n    } \r\n\r\n    hideChangePassword = () => {\r\n        this.setState({ showChangePassword: false });\r\n    };\r\n\r\n    redirectToTermsPage = () => {\r\n        this.GoToPage('/terms-page');\r\n    }\r\n     \r\n    handleDepositAmount = () => {\r\n        const { qr_code, depositError } = this.props;\r\n        if(depositError){\r\n            toastr.error('', depositError);\r\n        }\r\n    }\r\n\r\n    handleCurrentTab = (value) => {\r\n        if (value === 'deposit' && !this.state.isGetUserNeeded) { this.setState({ isGetUserNeeded: true }); }\r\n        this.props.resetDepositAmount();\r\n        this.setState({currentTab: value});\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.state.isGetUserNeeded && this.props.userData) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { userData, cashbackData, getCashbackSucess, onClose } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';        \r\n        let { currentTab ,showCashbackModal } = this.state;\r\n        let depositAllowedUser = ['player1', 'player2', 'player3'];\r\n        return (\r\n            <>\r\n                <div className=\"inner-links modal-backdrop fade show\" />\r\n                <div className=\"modal account-popup fade show d-block\" role=\"dialog\" >\r\n                    <div className=\"modal-dialog extra-mkt modal-lg modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header d-flex\">\r\n                                <ul className=\"nav nav-tabs\">\r\n                                    <li onClick={ () => this.handleCurrentTab('transaction') }><a className={ `${ currentTab === 'transaction' && 'active'}` } href>{Translate.transaction}</a></li>\r\n                                    <li onClick={ () => this.handleCurrentTab('mybets') }><a className={ `${ currentTab === 'mybets' && 'active'}` } href>{ Translate.myBets }</a></li>\r\n                                    <li onClick={ () => this.handleCurrentTab('changepass') }><a className={ `${ currentTab === 'changepass' && 'active'}` } href>{Translate.changePassword}</a></li>\r\n                                    { userData && depositAllowedUser.includes(userData.username) && (\r\n                                        <li className=\"disabled\" onClick={ () => this.handleCurrentTab('deposit') }><a className={ `${ currentTab === 'deposit' && 'active'} ` } href>{ Translate.deposit }</a></li>\r\n                                    )}\r\n                                    <li onClick={this.logout}><a href>{Translate.logout}</a></li>\r\n                                </ul>\r\n                                <div className=\"head-right-account d-flex\">\r\n                                    <div className=\"user-detail\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"user-p\">\r\n                                                <span><i className=\"icon-my-account\"></i></span>\r\n                                            </div>\r\n                                            <p> {userData && userData.username} <span> {userData && Util.toFixedDecimal(userData.balance)} {currency}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"button\" onClick={ onClose }className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <i className=\"material-icons betslip__table-close close_sign_color\">close</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body tab-content my-account\">\r\n                                <div className={`tab-pane ${ currentTab === 'transaction' && 'active'}`}>\r\n                                    { currentTab === 'transaction' && <Transactions /> }\r\n                                </div>\r\n                                <div className={`tab-pane ${ currentTab === 'mybets' && 'active'}`}>\r\n                                    { currentTab === 'mybets' && <MyBets /> }\r\n                                </div>\r\n                                <div className={`tab-pane password-chnag ${ currentTab === 'changepass' && 'active'}`}>\r\n                                    { currentTab === 'changepass' && <ChangePassword /> }\r\n                                </div>\r\n                                <div className={`tab-pane password-chnag ${ currentTab === 'deposit' && 'active'}`}>\r\n                                    { currentTab === 'deposit' && <DepositModal /> }\r\n                                </div>\r\n                            </div>\r\n\r\n                            {showCashbackModal && <CashbackModal getCashbackSucess={getCashbackSucess} currency={currency} cashbackAmount={cashbackData.cashback_amount} closeModal={this.closeBonus} /> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMyAccount.propTypes = {\r\n    userData: PropTypes.object,\r\n    logoutUser: PropTypes.func,\r\n    language: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n        cashbackData: state.user.cashbackData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logoutUser: () => dispatch(logoutUser()),\r\n        getCashbackData: () => dispatch(getCashbackData()),\r\n        getCashbackSucess: () => dispatch(getCashbackSucess()),\r\n        resetDepositAmount: () => dispatch(resetDepositAmount()),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyAccount));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { removeBet } from '../../store/actions/betslip.actions';\r\nimport { marketIds } from '../../config/markets';\r\n\r\nfunction BetslipMultiBet(props) {\r\n    const handleClose = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let { bet, fixture, market, switchBetslipType, count } = props;\r\n        props.removeBet(fixture, market, bet, bet.provider);\r\n        if (count < 3) {\r\n            switchBetslipType('1');\r\n        }\r\n    };\r\n\r\n    const canBeCombined = () => {\r\n        let { fixture, fixtures } = props;\r\n        let currentFixture = find(fixtures, { fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId  });\r\n        let currentFixtureMarkets = currentFixture.markets ? currentFixture.markets : currentFixture.Markets;\r\n        return currentFixture && !(currentFixtureMarkets.length > 1 || currentFixtureMarkets[0].bets.length > 1);\r\n    };\r\n\r\n    const openOddsModal = (fixture) => {\r\n        props.setExtraMarkets(fixture.markets);\r\n        props.selectExtraMarket('All');\r\n        props.openExtraOddsModal(fixture);\r\n    };\r\n\r\n    let { bet, fixture, market, index, leagueName, userData, language } = props;\r\n    const lan = `name_${ language }`;\r\n    const participants = [ fixture?.participant_one_full[lan] || fixture?.participant_one_full.name_en, fixture?.participant_two_full[lan] || fixture?.participant_two_full.name_en ];\r\n    let line = bet.Line ? '(' + bet.Line + ')' : null;\r\n    if (market.Id == marketIds.handicap) line = `(${bet.BaseLine})`;\r\n    let canBeCombinedValue = canBeCombined();\r\n    let oddType = userData?.username && localStorage.getItem('oddType') ?  localStorage.getItem('oddType') : '';\r\n\r\n    let canNotBeCombined = !canBeCombinedValue ? <div className=\"betslip__error\">{Translate.pickCanNotBeCombined}<span className=\"material-icons icon mr-2 align-middle text-red\"></span>\r\n    </div> : null;\r\n\r\n\r\n    let betStatus = bet.Status;\r\n    let betStatusMessage = betStatus === lSportsConfig.betStatus.suspended ? `${Translate.betSuspended} (Bet can not be placed)` : `${Translate.betSettled} (Bet can not be placed)`;\r\n\r\n    let betStatusInfo = canBeCombinedValue && betStatus !== lSportsConfig.betStatus.active ? <div className=\"betslip__error\">{betStatusMessage}</div> : null;\r\n\r\n    let isLive = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status ) === lSportsConfig.statuses.inplay;\r\n    let fixtureStatus = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status);\r\n    let matchInfo;\r\n    if (isLive && fixtureStatus !== lSportsConfig.statuses.inplay) props.removeBet(fixture, market, bet, bet.provider);\r\n    let participantArray = fixture.fixture_status !== undefined ? [fixture.participant_one_full, fixture.participant_two_full] :  fixture.Fixture.Participants;\r\n    if (isLive) {\r\n        let results;\r\n       if (fixture.fixture_status !== undefined && !fixture.Livescore) results = fixture.livescore ? fixture.livescore : null;\r\n        else results = fixture.Livescore ? fixture.Livescore : null;\r\n        if (results) {\r\n            matchInfo = (\r\n                <>\r\n                    <li className=\"betslip__table-text\">{results ? results.home_score : '' }</li>\r\n                    <li className=\"betslip__table-text\">{results ? results.away_score : '' }</li>\r\n                </>\r\n            );\r\n        }\r\n    } else {\r\n        let currentDate = Util.convertToLocalTimezone(fixture.start_date ? fixture.start_date : fixture.Fixture.StartDate);\r\n        let dateString = currentDate.dateString;\r\n        let timeString = currentDate.timeString;\r\n        \r\n        matchInfo = (        \r\n            <span className=\"betslip__table-text-sm text-black\"><span>{dateString}</span><span> {timeString}</span></span>        \r\n        );\r\n    }\r\n    let printLive = isLive ? <span className=\"live-icon sm align-middle\">{Translate.live}</span> : matchInfo;\r\n    let betClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) betClassName = 'decreased';\r\n            if (bet.diff < 0)  betClassName = 'increased';\r\n        }\r\n    let drawBet = bet.isPlaced ? (\r\n        <div className=\"mx-auto sectionhead pb-2\">\r\n            <Grid container className=\"mx-auto betslip__placed\">\r\n                <Grid item xs={12} className=\"bg-light p-4 mt-2 text-center \">\r\n                    <span className=\"color-green\">Bet Placed</span>\r\n                    <span className=\"material-icons icon ml-2 mb-2 betslip__placed-icon align-middle color-green\">check</span>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    ) : (\r\n        <div className=\"mx-auto sectionhead py-1 px-1 no-border\" onClick={() => openOddsModal(fixture)}>\r\n            <div className=\"box-shadow-sm pl-2 pr-2 pt-2 pb-2 betslip__info\">\r\n                <table className=\"w-100 betslip__table\">\r\n                    <thead className=\"betslip__table-content\">\r\n                        <tr>\r\n                            <th className=\"text-gray-dark \">{index}.</th>\r\n                            <th className=\"text-gray-dark text-left ellipsis\">{leagueName}</th>\r\n                            <th className=\"text-center\">{printLive}</th>\r\n                            <th className=\"text-right close_sign_color\">\r\n                                <i className=\"material-icons betslip__table-close\" onClick={handleClose}>\r\n                                    close\r\n                                </i>\r\n\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td />\r\n                            <td className=\"width-50\">\r\n                                <ul className=\"list__unstyled text-gray-darker\">\r\n                                    <li className=\"betslip__table-text ellipsis\">{participantArray[0].name_en}</li>\r\n                                    <li className=\"betslip__table-text ellipsis\">{participantArray[1].name_en}</li>\r\n                                </ul>\r\n                            </td>\r\n                            <td className=\"text-green text-center\">\r\n                                <ul className=\"list__unstyled\">{isLive ? matchInfo : ''}</ul>\r\n                            </td>\r\n                            <td className=\"text-right betslip__table-text font-weight-bold\">\r\n                                <span className={`betslip__odd ${isLive ? 'live__background' : 'prematch__background'} ${(bet.Status !== lSportsConfig.betStatus.active) ? 'betslip__lock' : betClassName}`}>{bet.Status !== lSportsConfig.betStatus.active  ? <i className=\"material-icons fs-14\"> lock </i> : Util.toFixedDecimal(bet.Price, oddType)}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td />\r\n                            <td className=\"text-black betslip__table-content font-weight-semibold\" colSpan={3}>\r\n                                <p className=\"m-0 pt-1 betslipselect-odds\">\r\n                                    <span> {Util.marketNameFormatter(market[lan] || market.name_en, bet?.specifier || {}, participants)}։</span>\r\n                                    {/* <span> {Translate.markets[market.Id] || Util.marketNameFormatter(market[lan] || market.name_en, market.Bets[0].specifier)}։</span> */}\r\n                                    <span className=\"ml-3\">\r\n                                        {Translate.tip} { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                                        {line}\r\n                                    </span>\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {canNotBeCombined}\r\n                {betStatusInfo}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return drawBet;\r\n}\r\n\r\nBetslipMultiBet.propTypes = {\r\n    switchBetslipType: PropTypes.func,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    index: PropTypes.number,\r\n    bet: PropTypes.object,\r\n    count: PropTypes.number,\r\n    fixtures: PropTypes.array,\r\n    removeBet: PropTypes.func,\r\n    leagueName: PropTypes.string,\r\n    language: PropTypes.string,\r\n    openExtraOddsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.betslip.count,\r\n        fixtures: state.betslip.fixtures,\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BetslipMultiBet);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction KeyPadComponent(props) {\r\n    let { result, onClickCalAction, possibleWin, userData } = props;\r\n    let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n    return (\r\n        <div className=\"container pb-3\">\r\n            <div className=\"fs-15 d-flex align-items-center justify-content-between py-1 px-2 text-white\">\r\n                <span>{Translate.possibleWin}</span>\r\n                <p className=\"text-right font-weight-semibold m-0 text-white\">\r\n                    {possibleWin} <span className=\"text-white\">{currency}</span>\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"fs-20 bg-white br-5 p-2 d-flex align-items-center justify-content-between\">\r\n                <span className=\"pl-1\">{Translate.amount}</span>\r\n                <p className=\"text-right font-weight-semibold m-0 pr-1\">\r\n                    {result ? Util.toFixedDecimal(result) : '0.00'} <span className=\"text-gray-light\">{currency}</span>\r\n                </p>\r\n            </div>\r\n\r\n            <Grid container className=\"fs-20 text-white text-center width-auto mx-0 my-2\">\r\n                <Grid item xs className=\"default-bet-btn bg-green br-5 mr-1 mt-1\" id=\"1\" name=\"1\" onClick={onClickCalAction}>\r\n                    1\r\n                </Grid>\r\n                <Grid item xs className=\"default-bet-btn bg-green br-5 mr-1 mt-1\" id=\"5\" name=\"5\" onClick={onClickCalAction}>\r\n                    5\r\n                </Grid>\r\n                <Grid item xs className=\"default-bet-btn bg-green br-5 mr-1 mt-1\" id=\"10\" name=\"10\" onClick={onClickCalAction}>\r\n                    10\r\n                </Grid>\r\n                <Grid item xs className=\"default-bet-btn bg-green br-5 mr-1 mt-1\" id=\"5\" name=\"5\" onClick={onClickCalAction}>\r\n                    50\r\n                </Grid>\r\n                <Grid item xs className=\"default-bet-btn bg-green br-5 mr-1 mt-1\" id=\"100\" name=\"100\" onClick={onClickCalAction}>\r\n                    100\r\n                </Grid>\r\n                <Grid item xs className=\"default-bet-btn bg-green br-5 mr-1 mt-1\" id=\"500\" name=\"500\" onClick={onClickCalAction}>\r\n                    500\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <table className=\"calc-table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td width=\"25%\" id=\"7\" name=\"7\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">7</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\"8\" name=\"8\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">8</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\"9\" name=\"9\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">9</div>\r\n                        </td>\r\n                        <td rowSpan=\"2\" width=\"25%\" id=\"*\" name=\"*\" onClick={onClickCalAction}>\r\n                            <div className=\"text-center bg-white mul-btn\">\r\n                                <div className=\"mul-btn_height btn-back\">\r\n                                    <i className=\"material-icons\">backspace</i>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width=\"25%\" id=\"4\" name=\"4\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">4</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\"5\" name=\"5\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">5</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\"6\" name=\"6\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">6</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width=\"25%\" id=\"1\" name=\"1\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">1</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\"2\" name=\"2\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">2</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\"3\" name=\"3\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">3</div>\r\n                        </td>\r\n                        <td rowSpan=\"2\" width=\"25%\" id=\"=\" name=\"=\" onClick={onClickCalAction}>\r\n                            <div className=\"mul-btn_height btn-back\">{Translate.ok}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\" width=\"50%\" id=\"0\" name=\"0\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">0</div>\r\n                        </td>\r\n                        <td width=\"25%\" id=\".\" name=\".\" onClick={onClickCalAction}>\r\n                            <div className=\"btn-back\">.</div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nKeyPadComponent.propTypes = {\r\n    result: PropTypes.string,\r\n    onClickCalAction: PropTypes.func,\r\n    possibleWin: PropTypes.string,\r\n    language: PropTypes.string,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(KeyPadComponent);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport KeyPadComponent from './KeyPadComponent';\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            result: props.startValue > 0 ? props.startValue : '',\r\n        };\r\n    }\r\n\r\n    onClickCalAction = (e) => {\r\n        e.preventDefault();\r\n        let action = e.currentTarget.id;\r\n\r\n        if (action === '=') {\r\n            this.props.onCloseModal();\r\n        } else if (action === 'C') {\r\n            this.reset();\r\n        } else if (action === 'CE' || action === '*') {\r\n            this.backspace();\r\n        } else if (action === '1000' || action === '5000' || action === '10000' || action === '50000' || action === '100000' || action === '500000') {\r\n            this.props.onSetValue(action);\r\n            this.setState({\r\n                result: action,\r\n            });\r\n            this.props.onCloseModal();\r\n        } else {\r\n            let value = this.state.result + action;\r\n            if ((value.match(/\\./g) || []).length > 1 || value.split('.')?.[0].length > 6 || value.length > 9) return null;\r\n            this.props.onSetValue(this.state.result + action);\r\n            this.setState(\r\n                {\r\n                    result: this.state.result + action,\r\n                },\r\n                () => {\r\n                    if (action === '.') {\r\n                        let res = this.state.result;\r\n\r\n                        if (res.length === 1) {\r\n                            res = '0.';\r\n                            this.setState({ result: res });\r\n                            this.props.onSetValue(res);\r\n                        } else {\r\n                            if (res.slice(-2) === '..' || res.split('.').length - 1 > 1) {\r\n                                this.setState({ result: res.slice(0, -1) });\r\n                                this.props.onSetValue(res.slice(0, -1));\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let res = this.state.result;\r\n                        if (res.substr(res.length - 4)[0] === '.') {\r\n                            this.setState({ result: res.slice(0, -1) });\r\n                            this.props.onSetValue(res.slice(0, -1));\r\n                        }\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    reset = () => {\r\n        this.props.onSetValue(0);\r\n        this.setState({\r\n            result: '',\r\n        });\r\n    };\r\n\r\n    backspace = () => {\r\n        let result = this.state.result.slice(0, -1);\r\n        if (result.slice(-1) === '.') {\r\n            result = result.slice(0, -1);\r\n        }\r\n\r\n        this.props.onSetValue(result === '' ? 0 : result);\r\n        this.setState({\r\n            result: result,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { onCloseModal, possibleWin } = this.props;\r\n        let { result } = this.state;\r\n\r\n        return (\r\n            <Drawer anchor=\"bottom\" open={true} onClose={(e) => onCloseModal()} className=\"modal-calculator\">\r\n                <KeyPadComponent onClickCalAction={this.onClickCalAction} result={result} possibleWin={possibleWin} />\r\n            </Drawer>\r\n        );\r\n    }\r\n}\r\n\r\nCalculator.propTypes = {\r\n    startValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    possibleWin: PropTypes.string,\r\n    onSetValue: PropTypes.func,\r\n    onCloseModal: PropTypes.func,\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { setMultiStake, setBetStake } from '../../store/actions/betslip.actions';\r\n\r\nconst defaultOptions = [1, 5, 10, 50, 100, 500];\r\n\r\nfunction MiniCalculator(props) {\r\n    const handleSetStake = (value) => {\r\n        let { type } = props;\r\n        if (type === 'multiple') {\r\n            props.setMultiStake(value);\r\n        } else if (type === 'single') {\r\n            props.setBetStake(value);\r\n        }\r\n    };\r\n\r\n    let { openCalculator, multiStake, singleStake, type, userData } = props;\r\n    let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';    \r\n    let stackAmount;\r\n\r\n    if (type === 'multiple') {\r\n        stackAmount = Util.toFixedDecimal(multiStake);\r\n    } else if (type === 'single') {\r\n        stackAmount = Util.toFixedDecimal(singleStake);\r\n    }\r\n\r\n    let options = map(defaultOptions, (option, i) => {\r\n        let id = i + 1;\r\n        let activeClass = +stackAmount === option ? 'cal-btn_active' : '';\r\n\r\n        return (\r\n            <Grid\r\n                item\r\n                xs={2}\r\n                key={i}\r\n                className={`cal-btn mr-1 ${activeClass}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetStake(option);\r\n                }}\r\n            >\r\n                <div id={id}>{option}</div>\r\n            </Grid>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Grid container className=\"p-2 pt-2 betslip__panel mx-auto\">\r\n            <Grid item xs={12} className=\"mx-auto d-flex pr-0 pl-0\">\r\n                {options}\r\n            </Grid>\r\n            <Grid item xs={12} className=\"ml-0 mx-auto d-flex pl-0 pr-0 flex align-items-center justify-content-end betslip__panel-amount\">\r\n                <div className=\"mr-1\">{currency}</div>\r\n                <div className=\"btn-cal_white px-1 flex-grow-1 stake__input my-2\">\r\n                    <div className=\"input-item\" onClick={openCalculator}>\r\n                        {stackAmount}\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nMiniCalculator.propTypes = {\r\n    openCalculator: PropTypes.func,\r\n    type: PropTypes.string,\r\n    multiStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    singleStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setMultiStake: PropTypes.func,\r\n    setBetStake: PropTypes.func,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        multiStake: state.betslip.multiStake,\r\n        singleStake: state.betslip.singleStake,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setMultiStake: (value) => dispatch(setMultiStake(value)),\r\n        setBetStake: (value) => dispatch(setBetStake(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniCalculator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport BetslipMultiBet from './BetslipMultiBet';\r\nimport Calculator from './Calculator';\r\nimport MiniCalculator from './MiniCalculator';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { setMultiStake, setPlaceBetError } from '../../store/actions/betslip.actions';\r\n\r\nclass BetslipList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: false,\r\n            isBtnDisabled: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setPlaceBetError(null);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setMultiStake(0);\r\n    }\r\n\r\n    openCalculator = (show) => {\r\n        this.setState({ isShow: show });\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ isShow: false });\r\n    };\r\n\r\n    setMultiStake = (value) => {\r\n        this.props.setMultiStake(value);\r\n    };\r\n\r\n    placeBetCheck = () => {\r\n        if (!this.state.isBtnDisabled) {\r\n            this.setState({ isBtnDisabled: true });\r\n            this.props.placeBetCheck('multiple');\r\n\r\n            setTimeout(() => {\r\n                this.setState({ isBtnDisabled: false });\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShow, isBtnDisabled } = this.state;\r\n        let { fixtures, totalMultiOdds, multiStake, placeBetError, switchBetslipType, openExtraOddsModal, showCountdown, placeBetDisabled, placeBetDisableFromAdmin, setExtraMarkets, selectExtraMarket } = this.props;\r\n        let isDisabled = isBtnDisabled || placeBetDisabled;\r\n        let index = 0; // numbering in the list of bets\r\n\r\n        let drawBets = map(fixtures, (fixture) => {\r\n            return map(fixture.markets, (market) => {\r\n                return map(market.bets, (bet) => {\r\n                    index++;\r\n                    let  leagueName = fixture.leagueName ? fixture.leagueName : fixture.fixture.league.name_en;\r\n                    return (\r\n                        <BetslipMultiBet\r\n                            setExtraMarkets={setExtraMarkets}\r\n                            selectExtraMarket={selectExtraMarket}\r\n                            switchBetslipType={switchBetslipType}\r\n                            fixture={fixture.fixture}\r\n                            market={market.market}\r\n                            index={index}\r\n                            bet={bet}\r\n                            leagueName={leagueName}\r\n                            openExtraOddsModal={openExtraOddsModal}\r\n                            key={bet.Id}\r\n                        />\r\n                    );\r\n                });\r\n            });\r\n        });\r\n\r\n        let possibleWin = Util.toFixedDecimal(parseFloat(multiStake) * totalMultiOdds + 0.00001);\r\n        let showBonus = totalMultiOdds >= lSportsConfig.betslip.bonusMinValue ? true : false;\r\n        let bonusAmount = showBonus ? Util.toFixedDecimal(possibleWin * (lSportsConfig.betslip.bonusPersentage / 100)) : 0;\r\n        let totalPossibleWin = Util.toFixedDecimal(parseFloat(possibleWin) + parseFloat(bonusAmount));\r\n\r\n        let drawCalculator = isShow ? (\r\n            <Calculator startValue={multiStake} possibleWin={possibleWin} onSetValue={this.setMultiStake} onCloseModal={this.closeModal} />\r\n        ) : null;\r\n\r\n        let error = placeBetError ? (\r\n            <Grid container className=\"mx-auto fs-15\">\r\n                <Grid item xs={12} className=\"p-1 text-center error-bg\">\r\n                    {/* <img src=\"./images/error-icon.png\" className=\"align-middle error-icon\"></img> */}\r\n                    <span className=\"material-icons icon mr-2 align-middle text-red\">error</span>\r\n                    <span className=\"error\">{placeBetError}</span>\r\n                </Grid>\r\n            </Grid>\r\n        ) : null;\r\n\r\n        let bootomContainer =\r\n            fixtures.length > 0 ? (\r\n                <div className=\"betslip__bootom\">\r\n                    {error}\r\n                    <MiniCalculator openCalculator={this.openCalculator} type=\"multiple\" />\r\n                    <Grid container className=\"mx-auto betslip__panel pt-1\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.totalOdds}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {parseFloat(totalMultiOdds).toFixed(2)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container className=\"mx-auto betslip__panel\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.possibleWin}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {possibleWin}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {showBonus && (\r\n                        <Grid container className=\"mx-auto betslip__panel highlighted py-1\">\r\n                            <Grid className=\"px-2\" item xs={7}>\r\n                                {`+${lSportsConfig.betslip.bonusPersentage}% Bonus`}\r\n                            </Grid>\r\n                            <Grid item xs={5} className=\"text-right px-2 bonus-win-amount\">\r\n                                {totalPossibleWin}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    <Grid container className=\"mx-auto btn-cont\">\r\n                        {showCountdown ? (\r\n                            <Grid item xs={12} className=\"p-0\">\r\n                                <Button variant=\"contained\" className=\"place-btn\" type=\"button\">\r\n                                    <LoadingIcon theme=\"my-1 centered\" />\r\n                                </Button>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid item xs={12} className=\"p-0\">\r\n\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    className={`place-btn ${isDisabled ? 'place-btn_disabled' : ''}`}\r\n                                    onClick={this.placeBetCheck}\r\n                                    disabled={placeBetDisableFromAdmin || isDisabled}\r\n                                >\r\n                                    {Translate.placeBet}\r\n                                </Button>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            ) : null;\r\n\r\n        return (\r\n            fixtures &&\r\n            fixtures.length > 0 && (\r\n                <div>\r\n                    <div className=\"betslip__item mb-200 mt-1\">{drawBets}</div>\r\n                    {bootomContainer}\r\n                    {drawCalculator}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nBetslipList.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    placeBetError: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    multiStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    totalMultiOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setPlaceBetError: PropTypes.func,\r\n    setMultiStake: PropTypes.func,\r\n    placeBetCheck: PropTypes.func,\r\n    switchBetslipType: PropTypes.func,\r\n    openExtraOddsModal: PropTypes.func,\r\n    language: PropTypes.string,\r\n    showCountdown: PropTypes.bool,\r\n    placeBetDisabled: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        placeBetError: state.betslip.placeBetError,\r\n        placeBetDisabled: state.betslip.placeBetDisabled,\r\n        loading: state.general.loading,\r\n        multiStake: state.betslip.multiStake,\r\n        totalMultiOdds: state.betslip.totalMultiOdds,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        setMultiStake: (value) => dispatch(setMultiStake(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BetslipList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { removeBet } from '../../store/actions/betslip.actions';\r\nimport { marketIds } from '../../config/markets';\r\n\r\nfunction BetslipSingleBet(props) {\r\n    const handleClose = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let { bet, fixture, market } = props;\r\n        props.removeBet(fixture, market, bet, bet.provider);\r\n    };\r\n\r\n    const openOddsModal = (fixture) => {\r\n        props.setExtraMarkets(fixture.market);\r\n        props.selectExtraMarket('All');\r\n        props.openExtraOddsModal(fixture);\r\n    };\r\n\r\n    let { bet, fixture, market, index,leagueName, userData, language } = props;\r\n    const lan = `name_${ language }`;\r\n    const participants = [ fixture?.participant_one_full[lan] || '', fixture?.participant_two_full[lan] || '' ];\r\n    let line = bet.Line ? '(' + bet.Line + ')' : null;\r\n    if (market.Id === marketIds.handicap) line = `(${bet.BaseLine})`;\r\n    let betStatus = bet.Status;\r\n    let betStatusMessage = betStatus === lSportsConfig.betStatus.suspended ? `${Translate.betSuspended} (Bet can not be placed)` : `${Translate.betSettled} (Bet can not be placed)`;\r\n\r\n    let oddType = userData?.username && localStorage.getItem('oddType') ?  localStorage.getItem('oddType') : '';\r\n\r\n    let betStatusInfo = betStatus !== lSportsConfig.betStatus.active ? <div className=\"betslip__error\">{betStatusMessage}<span className=\"material-icons icon mr-2 align-middle text-red\"></span></div> : null;\r\n    let isLive = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status) === lSportsConfig.statuses.inplay;\r\n    let fixtureStatus = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status);\r\n    let matchInfo;\r\n    if (isLive && fixtureStatus !== lSportsConfig.statuses.inplay ) props.removeBet(fixture, market, bet, bet.provider);\r\n    let participantArray = fixture.fixture_status !== undefined ? [fixture.participant_one_full, fixture.participant_two_full] :  fixture.Fixture.Participants;\r\n    if (isLive) {\r\n        let results;\r\n        if (fixture.fixture_status !== undefined && !fixture.Livescore) results = fixture.livescore ? fixture.livescore : null;\r\n        else results = fixture.Livescore ? fixture.Livescore : null;\r\n        \r\n        if (results) {\r\n            matchInfo = (\r\n                <>\r\n                    <li className=\"betslip__table-text\">{results && results.home_score }</li>\r\n                    <li className=\"betslip__table-text\">{results && results.away_score }</li>\r\n                </>\r\n            );\r\n        }\r\n    } else {\r\n        let currentDate = Util.convertToLocalTimezone(fixture.start_date ? fixture.start_date : fixture.Fixture.StartDate );\r\n        let dateString = currentDate.dateString;\r\n        let timeString = currentDate.timeString;\r\n\r\n        matchInfo = (        \r\n            <span className=\"betslip__table-text-sm text-black\"><span>{dateString}</span><span> {timeString}</span></span>        \r\n        );\r\n    }\r\n    let printLive = isLive ? <span className=\"live-icon sm align-middle\">{Translate.live}</span> : matchInfo;\r\n    let betClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) betClassName = 'decreased';\r\n            if (bet.diff < 0)  betClassName = 'increased';\r\n        }\r\n    let drawBet = bet.isPlaced ? (\r\n        <div className=\"mx-auto sectionhead pb-2\">\r\n            <Grid container className=\"mx-auto betslip__placed\">\r\n                <Grid item xs={12} className=\"bg-light p-4 mt-2 text-center\">\r\n                    <span className=\"color-green\">Bet Placed</span>\r\n                    <span className=\"material-icons icon ml-2 mb-2 betslip__placed-icon align-middle color-green\">check</span>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    ) : (\r\n        <div className=\"mx-auto sectionhead py-1 px-1 no-border mt-1\" onClick={() => openOddsModal(fixture)}>\r\n            <div className=\"box-shadow-sm pl-1 pr-1 pt-2 pb-2 betslip__info\">\r\n                <table className=\"w-100 betslip__table\">\r\n                    <thead className=\"betslip__table-content\">\r\n                        <tr>\r\n                            <th className=\"text-gray-dark\">{index}.</th>\r\n                            <th className=\"text-gray-dark text-left ellipsis\">{leagueName}</th>\r\n                            <th className=\"text-center\">{printLive}</th>\r\n                            <th className=\"text-right\">\r\n                                <i className=\"material-icons betslip__table-close close_sign_color\" onClick={handleClose}>\r\n                                    close\r\n                                </i>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td />\r\n                            <td>\r\n                                <ul className=\"list__unstyled text-gray-darker\">\r\n                                    <li className=\"betslip__table-text ellipsis\">{participantArray[0].name_en}</li>\r\n                                    <li className=\"betslip__table-text ellipsis\">{participantArray[1].name_en}</li>\r\n                                </ul>\r\n                            </td>\r\n                            <td className=\"text-center text-green\">\r\n                                <ul className=\"list__unstyled\">{isLive ? matchInfo : ''}</ul>\r\n                            </td>\r\n                            <td className=\"text-right betslip__table-text font-weight-bold\">\r\n                                <span className={`betslip__odd ${isLive ? 'live__background' : 'prematch__background'} ${(bet.Status !== lSportsConfig.betStatus.active) ? 'betslip__lock': betClassName}`}>{ bet.Status !== lSportsConfig.betStatus.active  ? <i className=\"material-icons fs-14\"> lock </i> : Util.toFixedDecimal(bet.Price, oddType) }</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td />\r\n                            <td className=\"text-black betslip__table-content font-weight-semibold\" colSpan={3}>\r\n                                <p className=\"m-0 pt-1 betslipselect-odds\">\r\n                                    <span> {Util.marketNameFormatter(market[lan] || market.name_en, bet?.specifier || {}, participants)}։</span>\r\n                                    {/* <span>{Translate.markets[market.Id] || Util.marketNameFormatter(market[lan] || market.name_en, market.Bets[0].specifier)}։</span> */}\r\n                                    <span className=\"ml-3\">\r\n                                        {Translate.tip} { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                                        {line}\r\n                                    </span>\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {betStatusInfo}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return drawBet;\r\n}\r\n\r\nBetslipSingleBet.propTypes = {\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    index: PropTypes.number,\r\n    bet: PropTypes.object,\r\n    leagueName: PropTypes.string,\r\n    language: PropTypes.string,\r\n    removeBet: PropTypes.func,\r\n    openExtraOddsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BetslipSingleBet);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport BetslipSingleBet from './BetslipSingleBet';\r\nimport Calculator from './Calculator';\r\nimport MiniCalculator from './MiniCalculator';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { setBetStake, setPlaceBetError } from '../../store/actions/betslip.actions';\r\n\r\nclass BetslipSingle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: false,\r\n            isBtnDisabled: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setPlaceBetError(null);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setBetStake(0);\r\n    }\r\n\r\n    openCalculator = (show) => {\r\n        this.setState({ isShow: show });\r\n    };\r\n\r\n    closeModal = (show) => {\r\n        this.setState({ isShow: show });\r\n    };\r\n\r\n    setSingleStake = (value) => {\r\n        this.props.setBetStake(value);\r\n    };\r\n\r\n    placeBetCheck = () => {\r\n        if (!this.state.isBtnDisabled) {\r\n            this.setState({ isBtnDisabled: true });\r\n            this.props.placeBetCheck('single');\r\n\r\n            setTimeout(() => {\r\n                this.setState({ isBtnDisabled: false });\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShow, isBtnDisabled } = this.state;\r\n        let { fixtures, totalOdds, singleStake, placeBetError, openExtraOddsModal, showCountdown, placeBetDisabled, placeBetDisableFromAdmin, selectExtraMarket, setExtraMarkets } = this.props;\r\n        let index = 0; // numbering in the list of bets\r\n        let isDisabled = isBtnDisabled || placeBetDisabled;\r\n\r\n        let drawBets = map(fixtures, (fixture) => {\r\n            return map(fixture.markets, (market) => {\r\n                return map(market.bets, (bet) => {\r\n                    let  leagueName = fixture.leagueName ? fixture.leagueName : fixture.fixture.league.name_en;\r\n                    index++;\r\n                    return (\r\n                        <BetslipSingleBet\r\n                            fixture={fixture.fixture}\r\n                            market={market.market}\r\n                            index={index}\r\n                            bet={bet}\r\n                            leagueName={leagueName}\r\n                            openExtraOddsModal={openExtraOddsModal}\r\n                            key={bet.Id}\r\n                            selectExtraMarket = {selectExtraMarket}\r\n                            setExtraMarkets = {setExtraMarkets}\r\n                        />\r\n                    );\r\n                });\r\n            });\r\n        });\r\n\r\n        let possibleWin = Util.toFixedDecimal(parseFloat(singleStake) * totalOdds + 0.00001);\r\n        let showBonus = totalOdds >= lSportsConfig.betslip.bonusMinValue ? true : false;\r\n        let bonusAmount = showBonus ? Util.toFixedDecimal(possibleWin * (lSportsConfig.betslip.bonusPersentage / 100)) : 0;\r\n        let totalPossibleWin = Util.toFixedDecimal(parseFloat(possibleWin) + parseFloat(bonusAmount));\r\n\r\n        let drawCalculator = isShow ? (\r\n            <Calculator startValue={singleStake} possibleWin={possibleWin} onSetValue={this.setSingleStake} onCloseModal={this.closeModal} />\r\n        ) : null;\r\n\r\n        let error = placeBetError ? (\r\n            <Grid container className=\"mx-auto fs-15\">\r\n                <Grid item xs={12} className=\"p-1 text-center error-bg\">\r\n                    {/* <img src=\"./images/error-icon.png\" className=\"align-middle error-icon\"></img> */}\r\n                    <span className=\"material-icons icon mr-2 align-middle text-red\">error</span>\r\n                    <span>{placeBetError}</span>\r\n                </Grid>\r\n            </Grid>\r\n        ) : null;\r\n\r\n        let bootomContainer =\r\n            fixtures.length > 0 ? (\r\n                <div className=\"betslip__bootom\">\r\n                    {error}\r\n                    <MiniCalculator openCalculator={this.openCalculator} type=\"single\" />\r\n                    <Grid container className=\"mx-auto betslip__panel pt-1\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.totalOdds}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {parseFloat(totalOdds).toFixed(2)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container className=\"mx-auto betslip__panel\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.possibleWin}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {possibleWin}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {showBonus && (\r\n                        <Grid container className=\"mx-auto betslip__panel highlighted py-1\">\r\n                            <Grid className=\"px-2\" item xs={7}>\r\n                                {`+${lSportsConfig.betslip.bonusPersentage}% Bonus`}\r\n                            </Grid>\r\n                            <Grid item xs={5} className=\"text-right px-2 bonus-win-amount\">\r\n                                {totalPossibleWin}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    <Grid container className=\"mx-auto btn-cont\">\r\n                        {showCountdown ? (\r\n                            <Grid item xs={12} className=\"p-0\">\r\n                                <Button variant=\"contained\" className=\"place-btn\" type=\"button\">\r\n                                    <LoadingIcon theme=\"my-1 centered\" />\r\n                                </Button>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid item xs={12} className=\"p-0\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    className={`place-btn ${isDisabled ? 'place-btn_disabled' : ''}`}\r\n                                    onClick={this.placeBetCheck}\r\n                                    disabled={placeBetDisableFromAdmin || isDisabled}\r\n                                >\r\n                                    {Translate.placeBet}\r\n                                </Button>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            ) : null;\r\n\r\n        return (\r\n            fixtures &&\r\n            fixtures.length > 0 && (\r\n                <div>\r\n                    <div className=\"betslip__item mb-120 mt-1\">{drawBets}</div>\r\n                    {bootomContainer}\r\n                    {drawCalculator}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nBetslipSingle.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    singleStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    placeBetError: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    totalOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setPlaceBetError: PropTypes.func,\r\n    setBetStake: PropTypes.func,\r\n    placeBetCheck: PropTypes.func,\r\n    openExtraOddsModal: PropTypes.func,\r\n    language: PropTypes.string,\r\n    showCountdown: PropTypes.bool,\r\n    placeBetDisabled: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        singleStake: state.betslip.singleStake,\r\n        placeBetError: state.betslip.placeBetError,\r\n        placeBetDisabled: state.betslip.placeBetDisabled,\r\n        loading: state.general.loading,\r\n        totalOdds: state.betslip.totalOdds,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        setBetStake: (value) => dispatch(setBetStake(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BetslipSingle);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Markets from '../Inplay/Markets';\r\nimport { getExtraMarkets, clearExtraMarkets, selectExtraMarket, setStatistics, clearStatistics } from '../../store/actions/lsports.global.actions';\r\nimport { isEqual } from 'lodash';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\nimport ExtraMarketSelector from '../Shared/ExtraMarketSelector';\r\n\r\nlet unsubscribe;\r\nlet extraMarkets = {};\r\nclass ExtraOddsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            liveMatchForModal: {},\r\n            liveUpdates: {},\r\n            marketsUpdated: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { extraMarketEvent } = this.props;\r\n        let sportId = extraMarketEvent.Fixture ? extraMarketEvent.Fixture.Sport.Id : extraMarketEvent.sport_id;\r\n        Util.getExtraMarketName(sportId).extraMarketNames.forEach( e => {\r\n            extraMarkets[e] = {};\r\n        })\r\n        extraMarkets = Util.getExtraMarkets(extraMarkets, this.props.liveMatch, sportId);\r\n        this.setState({ marketsUpdated: extraMarkets});\r\n        // let fixtureId = extraMarketEvent.FixtureId ? extraMarketEvent.FixtureId : extraMarketEvent.fixture_id;\r\n        \r\n        // //this.props.setStatistics(fixtureId, 'forPopup', 'live');\r\n        // let id = event.FixtureId ? event.FixtureId : event.fixture_id;\r\n        // const collection = this.props.language === `en` ? `d_event` : `d_event_${this.props.language}`;\r\n        // firebaseDB.collection(collection).doc(`${id}`).get().then((snap) => {\r\n        //     this.setState({ liveMatchForModal: snap.data() })\r\n        // });\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        const { liveMatch, extraMarketEvent } = this.props;\r\n        let sportId = liveMatch.sport_id;\r\n        if (!isEqual(prevProps.liveMatch.Markets, liveMatch.Markets)) {\r\n            extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        }\r\n\r\n        if(prevProps.extraMarketEvent !== extraMarketEvent) {\r\n            extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        }\r\n        // if (!isEqual(prevState.liveMatchForModal, liveMatchForModal)) {\r\n        //     if (liveMatchForModal?.fixture_status === 2) {\r\n        //         let id = liveMatchForModal?.fixture_id;\r\n        //         const item = {\r\n        //             [id]: liveMatchForModal,\r\n        //         };\r\n        //         this.setState({ liveUpdates: item }, () => {\r\n        //             const collection = this.props.language === `en` ? `d_event` : `d_event_${this.props.language}`;\r\n        //             unsubscribe = firebaseDB.collection(collection).doc(`${id}`).onSnapshot(this.handleFirebaseUpdates);\r\n        //         });\r\n        //     }            \r\n        // }\r\n\r\n        // if (!isEqual(prevState.liveUpdates, liveUpdates)) {\r\n        //     if (!liveUpdates) return;\r\n        //     let id = liveMatchForModal.FixtureId;\r\n        //     let liveMatch = liveUpdates[id];\r\n        //     let sportId = liveMatch.Fixture.Sport.Id;\r\n        //     extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n        //     this.setState({ marketsUpdated: extraMarkets});\r\n        // }\r\n\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.unsubscribeEvents();\r\n        //     if (liveMatchForModal.Fixture.Status === 2) {\r\n        //         let id = liveMatchForModal.FixtureId;\r\n        //         const item = {\r\n        //             [id]: liveMatchForModal,\r\n        //         };\r\n        //         this.setState({ liveUpdates: item }, () => {\r\n        //             const collection = this.props.language === `en` ? `d_event` : `d_event_${this.props.language}`;\r\n        //             unsubscribe = firebaseDB.collection(collection).doc(`${id}`).onSnapshot(this.handleFirebaseUpdates);\r\n        //         });\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearExtraMarkets();\r\n        this.props.clearStatistics();\r\n        this.unsubscribeEvents();\r\n    }\r\n\r\n    unsubscribeEvents = () => {\r\n        unsubscribe && unsubscribe();\r\n    };\r\n\r\n\r\n    handleFirebaseUpdates = (snap) => {\r\n        const updatedMatch = snap.data();\r\n        const id = updatedMatch.FixtureId;\r\n        const { liveUpdates: { [id]: oldMatches } } = this.state;\r\n\r\n        if (!oldMatches) {\r\n            this.setState({\r\n                liveUpdates: {\r\n                    ...this.state.liveUpdates,\r\n                    [id]: updatedMatch,\r\n                },\r\n            });\r\n            return;\r\n        };\r\n        \r\n        if (!updatedMatch.Markets) {\r\n            this.setState({\r\n                liveUpdates: {\r\n                    ...this.state.liveUpdates,\r\n                    [id]: updatedMatch,\r\n                },\r\n            });\r\n            return;\r\n        };\r\n        let marketsArray = updatedMatch.Markets ? Object.values(updatedMatch.Markets) : [];\r\n        const marketWithDiff =  marketsArray.map(market => {\r\n            const { Bets, Id } = market;\r\n            let oldMarketArray = oldMatches.Markets ? Object.values(oldMatches.Markets) : [];\r\n            const oldMarket = oldMarketArray.find((mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = Object.values(Bets).map(bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                let oldBetArray = oldMarket.Bets ? oldMarket.Bets : [];\r\n                if (!Array.isArray(oldMarket.Bets)) {\r\n                    oldBetArray = Object.values(oldMarket.Bets ? oldMarket.Bets : []);\r\n                }\r\n                \r\n                const oldBet = oldBetArray.find((b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            liveUpdates: {\r\n                ...this.state.liveUpdates,\r\n                [id]: { ...updatedMatch, Markets: marketWithDiff },\r\n            },\r\n        });\r\n    }\r\n\r\n    openStatistics = () => {\r\n        let { extraMarketEvent } = this.props;\r\n        this.props.setStatistics(extraMarketEvent.FixtureId, 'forPopup', 'live');\r\n    };\r\n\r\n    closeStatistics = () => {\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    closeModal = () => {\r\n        const { closeModal } = this.props;\r\n        this.unsubscribeEvents();\r\n        closeModal();\r\n    }\r\n\r\n    render() {\r\n        let { closeModal, extraMarketEvent, extraSelectedMarket, selectExtraMarket, language } = this.props;\r\n        const { liveUpdates } = this.state;\r\n       \r\n        const lan = `name_${ language.toLowerCase() }`;\r\n        let id = extraMarketEvent.FixtureId ? extraMarketEvent.FixtureId : extraMarketEvent.fixture_id;\r\n        // if live data is not present use the store data and once live data is available use that\r\n        let liveMatch = liveUpdates[id];\r\n        liveMatch = liveMatch ? liveMatch : extraMarketEvent; \r\n        //let liveMarkets = liveUpdates ? (!liveUpdates[id] ? []: liveUpdates[id].Markets) : [];\r\n        let fixtureStatus = liveMatch.Fixture ? liveMatch.Fixture.Status : liveMatch.fixture_status;\r\n        let type =\r\n        fixtureStatus === lSportsConfig.statuses.inplay\r\n                ? 'live'\r\n                : fixtureStatus === lSportsConfig.statuses.prematch\r\n                ? 'sports'\r\n                : 'last-minute';\r\n        let leagueName = liveMatch.Fixture ? liveMatch.Fixture.League.Name || liveMatch.Fixture.League.name_en : liveMatch.league[lan] || liveMatch.league.name_en;\r\n        let liveScore = liveMatch.Livescore ? liveMatch.Livescore : liveMatch.livescore;\r\n        let results =\r\n            liveScore && liveScore?.home_score\r\n                ? [liveScore.home_score, liveScore.away_score]\r\n                : null;\r\n        // results = results && Object.values(results);\r\n        let currentDate = Util.convertToLocalTimezone(liveMatch.Fixture ? liveMatch.Fixture.StartDate : liveMatch.start_date);\r\n        let timeString = currentDate.timeString;\r\n        \r\n        let matchInfo = type === 'live' ? results ? results[0] + ' : ' + results[1] : '' : <time className=\"d-block lh-18\">{timeString}</time>;\r\n\r\n        // let disbaledStatClass = !liveScore?.statistics ? 'statistics_disabled' : '';\r\n\r\n        let participants = liveMatch.Fixture ? liveMatch.Fixture.Participants : liveMatch.participants;\r\n        let sportId = liveMatch.Fixture ? liveMatch.Fixture.Sport.Id : liveMatch.sport_id;\r\n        let drawEventHeader = (\r\n            <div className=\"extra-odd__title\">\r\n                <p className=\"league-name\">{leagueName}</p>\r\n                <div className=\"team-name\">\r\n                    <span className=\"extra-odd__participant name-one ellipsis\">{participants[0].participant ? participants[0].participant?.name || participants[0].participant?.name_en : participants[0][lan] || participants[0].name_en}</span>\r\n                    <span className=\"extra-odd__score score\">{matchInfo}<MatchDateTime fixture={liveMatch} showDate={false} /></span>\r\n                    <span className=\"extra-odd__participant ellipsis name-two\">{participants[1].participant ? participants[1].participant?.name || participants[1].participant?.name_en : participants[1][lan] || participants[1].name_en}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n        let currentlySelectedMarket = extraSelectedMarket ? extraSelectedMarket : \"All\";\r\n        let extraMarketEventsList = extraMarkets[currentlySelectedMarket];\r\n        \r\n        // check if all bets are settled\r\n        let areBetsAllSettled = Util.checkSettledBets(extraMarketEventsList);\r\n        let drawMarkets =\r\n            extraMarketEventsList && Object.keys(extraMarketEventsList).length > 0 ? (\r\n                areBetsAllSettled ? (\r\n                    <div className=\"no-data fs-15 pt-3 pb-3\">All the Odds are settled for this event.</div>\r\n                ) : \r\n                \r\n                (\r\n                  <Markets markets={extraMarketEventsList} fixture={liveMatch} type={type} leagueName={leagueName}  />\r\n                )\r\n            ) \r\n            : (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n            );\r\n\r\n        return  (\r\n            <Dialog onClose={closeModal} aria-labelledby=\"extra-odds-dialog-title\" open={true} scroll=\"paper\" className=\"extra-odds__modal\">\r\n                <DialogTitle id=\"extra-odds-dialog-title\" className=\"p-0 dialog-tab\" disableTypography>\r\n                    <div className=\"pr-6\">\r\n                        <ExtraMarketSelector\r\n                            selectExtraMarket={selectExtraMarket}\r\n                            extraSelectedMarket={currentlySelectedMarket}\r\n                            extraMarketNames={Util.getExtraMarketName(sportId).extraMarketNames}\r\n                        />\r\n                    </div>\r\n                    {drawEventHeader}\r\n\r\n                    {/* <IconButton className={`data-icon ${disbaledStatClass}`}>\r\n                        { liveMatch?.Livescore.Statistics && statisticsType === 'forPopup' ? (\r\n                            <i className={`icon-statistics text-green ${disbaledStatClass}`} onClick={(e) => this.closeStatistics() } />\r\n                        ) : (\r\n                            <i className={`icon-statistics ${disbaledStatClass}`} onClick={(e) =>  this.openStatistics()} />\r\n                        )}\r\n                    </IconButton> */}\r\n\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                        <i className=\" material-icons fs-22\"> close </i>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent className=\"modal-min-height extra-odd__bets p-0\">\r\n                    {/* {liveMatch?.Livescore.Statistics && statisticsType === 'forPopup' && <Statistics />} */}\r\n                    {drawMarkets}\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nExtraOddsModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    event: PropTypes.object,\r\n    extraMarkets: PropTypes.object,\r\n    extraSelectedMarket: PropTypes.string,\r\n    extraMarketsLoading: PropTypes.bool,\r\n    selectExtraMarket: PropTypes.func,\r\n    getExtraMarkets: PropTypes.func,\r\n    clearExtraMarkets: PropTypes.func,\r\n    extraMarketEvent: PropTypes.object,\r\n    setStatistics: PropTypes.func,\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        extraMarkets: state.lsportsGlobal.extraMarkets,\r\n        extraMarketsLoading: state.lsportsGlobal.extraMarketsLoading,\r\n        extraSelectedMarket: state.lsportsGlobal.extraSelectedMarket,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        fixtures: state.betslip.fixtures,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getExtraMarkets: (eventId) => dispatch(getExtraMarkets(eventId)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        clearExtraMarkets: () => dispatch(clearExtraMarkets()),\r\n        setStatistics: (eventId, statsType, statsTemplateType) => dispatch(setStatistics(eventId, statsType, statsTemplateType)),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtraOddsModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';import { Translate } from '../../localization';\r\n\r\nfunction FastBetPopup(props) {\r\n    const setFastBetOption = (e) => {\r\n        props.setFastBetOption(e);\r\n    };\r\n\r\n    let { closeModal } = props;\r\n\r\n    return (\r\n        <Dialog onClose={closeModal} aria-labelledby=\"fast-bet-dialog-title\" open={true} scroll=\"body\">\r\n            <DialogTitle id=\"fast-bet-dialog-title\" disableTypography>\r\n                <div className=\"dialog-logo-wrap\">\r\n                    <img src=\"./images/logo.png\" alt=\"Logo\" />\r\n                </div>\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\" material-icons fs-22 text-white\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className=\"pt-0 bg-color\">\r\n                <p className=\"text-center text-white mb-0 mt-2\">{Translate.acceptOddChangesText}</p>\r\n\r\n                <div className=\"fast-bet__btn-wrap\">\r\n                    <button className=\"fast-bet__btn\" id=\"turn-off\" onClick={(e) => setFastBetOption(e.target.id)}>\r\n                        {Translate.turnOffAway}\r\n                    </button>\r\n                    <button className=\"fast-bet__btn\" id=\"accept-changes\" onClick={(e) => setFastBetOption(e.target.id)}>\r\n                        {Translate.acceptOddChanges}\r\n                    </button>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nFastBetPopup.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    setFastBetOption: PropTypes.func,\r\n};\r\n\r\nexport default FastBetPopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';import { Translate } from '../../localization';\r\n\r\nfunction PlaceBetPopup(props) {\r\n    const setPlaceBetOption = (e) => {\r\n        props.setPlaceBetOption(e);\r\n    };\r\n\r\n    let { closeModal } = props;\r\n\r\n    return (\r\n        <Dialog onClose={closeModal} aria-labelledby=\"fast-bet-dialog-title\" open={true} scroll=\"body\">\r\n            <DialogTitle id=\"fast-bet-dialog-title\" disableTypography>\r\n                <div className=\"dialog-logo-wrap\">\r\n                    <img src=\"./images/logo.png\" alt=\"Logo\" />\r\n                </div>\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\" material-icons fs-22 text-white\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className=\"pt-0 bg-color\">\r\n                <p className=\"text-center text-white mb-0 mt-2\">{Translate.acceptOddChangesText}</p>\r\n\r\n                <div className=\"fast-bet__btn-wrap\">\r\n                    <button className=\"fast-bet__btn\" id=\"accept-changes\" onClick={(e) => setPlaceBetOption(e.target.id)}>\r\n                        Accept \r\n                    </button>\r\n                    <button className=\"fast-bet__btn\" id=\"cancel\" onClick={(e) => setPlaceBetOption(e.target.id)}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nPlaceBetPopup.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    setPlaceBetOption: PropTypes.func,\r\n};\r\n\r\nexport default PlaceBetPopup;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport forEach from 'lodash.foreach';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport Button from '@material-ui/core/Button';\r\nimport BetslipList from './BetslipList';\r\nimport BetslipSingle from './BetslipSingle';\r\nimport ExtraOddsModalLive from './ExtraOddModal';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport FastBetPopup from './FastBetPopup';\r\nimport PlaceBetPopup from './PlaceBetPopup';\r\nimport Loading from '../Common/Loading';\r\nimport { CountdownComponent } from './CountdownComponent';\r\nimport Login from '../Login';\r\nimport {\r\n    clearBets,\r\n    checkSavedBets,\r\n    getBetLimits,\r\n    placeBet,\r\n    setPlaceBetError,\r\n    setPlaceBetSuccess,\r\n    setPlaceBetCountdown,\r\n    setLastBetslipId,\r\n    getLastBetslip,\r\n    updateBetslipEventsMarket,\r\n    updateBetslipEventsLivescore,\r\n    updateBetslipEventsStatus,\r\n    placeBetWithOutLoader,\r\n    removeBet,\r\n    setPlaceBetDisabled,\r\n    updateBetslipEvent,\r\n} from '../../store/actions/betslip.actions';\r\nimport { selectExtraMarket, setCurrentEvent, setExtraMarkets } from '../../store/actions/lsports.global.actions';\r\nimport { isEqual } from 'lodash';\r\nimport map from 'lodash.map';\r\nimport find from 'lodash.find';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { onUpdateMatchMarkets } from '../../graphql/subscriptions';\r\nimport { dynamoClient } from '../../App';\r\nimport { getLiveMatchMarkets, getSingleMarketOfEvent, getLiveMatchIds, updatedgetLiveMatchMarkets, getLiveScore } from '../../dynamo/inplayParams';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\nimport { paramsMarketDataIndex } from '../../dynamo/params';\r\n\r\nlet unsubscribe = {};\r\nlet timer;\r\nlet liveMatchSub;\r\nlet marketSubscription;\r\nlet websocket;\r\nlet websocketConnectionAttempts = 0;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\nlet setTimer;\r\n\r\nclass Betslip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTabId: this.props.count > 1 ? '2' : '1',\r\n            showExtraOddsModal: false,\r\n            currentEvent: {},\r\n            fastBetChecked: localStorage.getItem('fast_bet') ? (localStorage.getItem('fast_bet') === 'on' ? true : false) : true,\r\n            fastBetOff: false, // off the fast bet switch after placing a bet\r\n            betType: null,\r\n            showFastBetModal: false,\r\n            showPlaceBetModal: false,\r\n            showLogin: false,   \r\n            fixtureIdArray: [],\r\n            liveMatches: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { fixtures, getBetLimits } = this.props;\r\n        this.props.checkSavedBets();\r\n        if (fixtures.length) this.getLiveMatches().then(data => this.checkBetsValidity(fixtures, data));\r\n        if (this.isLoggedIn()) {\r\n            getBetLimits();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { fixtures, count, singleStake, multiStake, canNotBeCombined, userData, setPlaceBetError, getBetLimits, language } = this.props;\r\n        if (prevProps.count !== count) {\r\n            this.setState({ activeTabId: count > 1 ? '2' : '1' });\r\n        }\r\n\r\n        if (prevProps.singleStake !== singleStake || prevProps.multiStake !== multiStake) {\r\n            setPlaceBetError(null);\r\n        }\r\n\r\n        if (prevProps.canNotBeCombined !== canNotBeCombined) {\r\n            if (!canNotBeCombined) {\r\n                setPlaceBetError(null);\r\n            }\r\n        }\r\n\r\n        if (prevProps.userData !== userData) {\r\n            if (this.isLoggedIn()) {\r\n                getBetLimits();\r\n            }\r\n        }\r\n\r\n        if(!isEqual(prevProps.fixtures.length, fixtures.length)) {\r\n            this.getLiveMatches().then(data => this.checkBetsValidity(fixtures, data));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setPlaceBetCountdown(false);\r\n        this.props.setPlaceBetSuccess(false);\r\n        this.props.setLastBetslipId(false);\r\n        this.unsubscribe();\r\n        clearInterval(setTimer);\r\n    }\r\n\r\n    startListener = () => {\r\n        // websocket = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        // websocket.addEventListener('open', () => {\r\n        //     websocketConnectionAttempts = 0;\r\n        // });\r\n\r\n        // websocket.addEventListener('message', (event) => {\r\n        //     this.handleFirebaseUpdates({value: event});\r\n        // });\r\n\r\n        // websocket.addEventListener('error', (error) => {\r\n        //     console.warn(error);\r\n\r\n        //     if (this.state.isDisconnected) return;  // Network is disconnected\r\n        //     else websocketConnectionAttempts++;     // Network is not disconnected\r\n\r\n        //     if (websocketConnectionAttempts < maxWebsocketRetryCount) {\r\n        //         // Retry websocket connection\r\n        //         this.startListener();\r\n        //     } else {\r\n        //         // Open appsync connection\r\n        //         this.startListenerAppSync();\r\n        //     }\r\n        // });\r\n\r\n        const fixtures = this.props.fixtures;\r\n        let liveFixtureId = fixtures.filter((f) => f.fixture.fixture_status == 1);\r\n        let fixtureIdArray = [];\r\n        let obj = {};\r\n        let liveObj = {};\r\n        liveFixtureId.map((liveFix) => {\r\n            liveFix.markets.map((mar) => {\r\n                mar.bets.map((bet) => {\r\n                    let id = bet.actualFixtureId.split('^')[0];\r\n                    obj = { ...obj, [bet.actualFixtureId]: { fixture_id: bet.actualFixtureId.toString() } };\r\n                    liveObj = { ...liveObj, [bet.actualFixtureId]: { fixture_id: id.toString() + '^sport_event_status' } };\r\n                });\r\n            });\r\n        });\r\n        if(liveFixtureId.length){\r\n            setTimer = setInterval(() => {\r\n                this.updatedgetSingleMatchMarkets(obj);\r\n                this.setLiveScore(liveObj);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    startListenerAppSync = () => {\r\n        const { fixtureIdArray } = this.state;\r\n\r\n        forEach(fixtureIdArray, async (fixtureId ) => {\r\n            let marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n            // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below. \r\n            let unsub = marketSubscription.subscribe({\r\n                next: this.handleFirebaseUpdates,\r\n                error: (error) => console.warn(error),\r\n            });\r\n            unsubscribe[fixtureId] = unsub;\r\n\r\n            // Stop receiving data updates from the subscription\r\n            // setTimeout(() => {\r\n            //     unsub.unsubscribe();\r\n            // }, 30000);\r\n        });\r\n    }\r\n\r\n    getLiveMatches = async () => {\r\n        try {\r\n            let event =  dynamoClient.scan(getLiveMatchIds()).promise();\r\n            return await event.then(e => {\r\n                let { Items } = e;\r\n                if (Items.length) return Items.map(item => item.fixture_id);\r\n                return []; \r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    checkBetsValidity = (fixtures, data) => {\r\n        // fixtures = fixtures.filter(f => data.indexOf(f.fixtureId) > -1);\r\n        fixtures = fixtures.filter(f => {\r\n            const { fixture, fixtureId } = f;\r\n            let status = fixture.fixture_status;\r\n            let isEventLive = data && data.indexOf(fixtureId) > -1;\r\n            if ((fixture.fixture_status == lSportsConfig.statuses.inplay && isEventLive) || (fixture.fixture_status != lSportsConfig.statuses.inplay && !isEventLive)) {\r\n                return f;\r\n            }\r\n            status = isEventLive ? lSportsConfig.statuses.inplay : fixture.fixture_status == lSportsConfig.statuses.inplay ? lSportsConfig.statuses.results : lSportsConfig.statuses.prematch;\r\n            this.props.updateBetslipEventsStatus({[f.fixtureId]: {FixtureId: f.fixtureId, Status: status }});\r\n            delete unsubscribe[fixtureId];\r\n        });\r\n        if (fixtures.length > 0) {\r\n            let fixtureIdArray = map(fixtures, (f) => {\r\n                let isLive = f.fixture.fixture_status == lSportsConfig.statuses.inplay;\r\n                this.getSingleMatchMarkets(f.fixtureId, isLive).then(data => {\r\n                    if(data)\r\n                    {\r\n                        let { market, livescore } = data;\r\n                        if (!market && !livescore) return null;\r\n                        if (market) {\r\n                            this.props.updateBetslipEventsMarket({[f.fixtureId]: { FixtureId: f.fixtureId, Market: market }});\r\n                            // update fixture data for prematch bets\r\n                            if(!isLive) this.props.updateBetslipEvent({ FixtureId: f.fixtureId, Market: market });\r\n                        }\r\n                        if (livescore) this.props.updateBetslipEventsLivescore({[f.fixtureId]: { FixtureId: f.fixtureId, Livescore: livescore }});\r\n                    }\r\n                });\r\n                if (isLive) return f.fixtureId;\r\n            });\r\n            fixtureIdArray = fixtureIdArray.filter(f => f);\r\n            this.setState({ fixtureIdArray: fixtureIdArray }, () => {\r\n                this.unsubscribe();\r\n                this.startListener();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFirebaseUpdates = ({value}) => {\r\n        if (!value?.data) return null;\r\n\r\n        const { updateBetslipEventsMarket, updateBetslipEventsLivescore, updateBetslipEventsStatus } = this.props;\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n\r\n        let { match_id: fixtureId, outcomes: market, sport_event_status: livescore, fixture_status: status } = updatedMatch;\r\n        if (!market && !livescore && !status) return null;\r\n        market = market ? Util.marketFormatter([updatedMatch], fixtureId) : {};\r\n        updateBetslipEventsMarket({[fixtureId]: { FixtureId: fixtureId, Market: market }});\r\n        if (livescore) {\r\n            livescore = JSON.parse(livescore);\r\n            updateBetslipEventsLivescore({[fixtureId]: { FixtureId: fixtureId, Livescore: livescore }});\r\n        }\r\n        if (status && status == lSportsConfig.statuses.results) {\r\n            delete unsubscribe[fixtureId];\r\n            updateBetslipEventsStatus({[fixtureId]: {FixtureId: fixtureId, Status: status }});\r\n        }\r\n    }\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.subscribeExtraMarket(fixtureId);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => console.warn(error));\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => console.warn(error),\r\n        });\r\n    }\r\n\r\n    openExtraOddsModalLiveMatch = (fixture, liveStreamAvailable) => {\r\n        this.unsubscribe();\r\n        this.getSingleMatchMarkets(fixture.fixture_id, true).then(data => {\r\n            if(data)\r\n            {\r\n                this.subscribeExtraMarket(fixture.fixture_id);\r\n                const newFixture = {...fixture};\r\n                newFixture.market = data.market;\r\n                newFixture.Markets = {...data.market};\r\n                newFixture.Livescore = data.livescore || {};\r\n                this.setState({ currentEvent: newFixture, liveStreamAvailable: liveStreamAvailable }, () => {\r\n                this.props.setCurrentEvent(newFixture);\r\n                this.setState({ showExtraOddsModal: true });\r\n                });\r\n            }\r\n        });        \r\n    }\r\n\r\n    setLiveScore = async (fixtureId) => {\r\n        try {\r\n            let event;\r\n            event = dynamoClient.batchGet(getLiveScore(fixtureId)).promise();\r\n            return await event.then((e) => {\r\n                const { updateBetslipEventsLivescore } = this.props;\r\n                let {\r\n                    Responses: { LiveMarkets },\r\n                } = e;\r\n                LiveMarkets.map((item) => {\r\n                    let { match_id: fixtureId, sport_event_status: livescore, fixture_status: status } = item;\r\n                    if (livescore) {\r\n                        livescore = JSON.parse(livescore);\r\n                        updateBetslipEventsLivescore({ [fixtureId]: { FixtureId: fixtureId, Livescore: livescore } });\r\n                    }\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    updatedgetSingleMatchMarkets = async (fixtureId) => {\r\n        try {\r\n            let event;\r\n            event = dynamoClient.batchGet(updatedgetLiveMatchMarkets(fixtureId)).promise();\r\n            return await event.then((e) => {\r\n                const { updateBetslipEventsMarket, updateBetslipEventsLivescore, updateBetslipEventsStatus } = this.props;\r\n                let {\r\n                    Responses: { LiveMarkets },\r\n                } = e;\r\n                LiveMarkets.map((item) => {\r\n                    let { match_id: fixtureId, outcomes: market, fixture_status: status } = item;\r\n                    if (!market && !status) return null;\r\n                    market = market ? Util.marketFormatter([item], fixtureId) : {};\r\n                    updateBetslipEventsMarket({ [fixtureId]: { FixtureId: fixtureId, Market: market } });\r\n                    if (status && status == lSportsConfig.statuses.results) {\r\n                        delete unsubscribe[fixtureId];\r\n                        updateBetslipEventsStatus({ [fixtureId]: { FixtureId: fixtureId, Status: status } });\r\n                    }\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    getSingleMatchMarkets = async (fixtureId, isLive) => {\r\n        try {\r\n            let event;\r\n            if (isLive) {\r\n                event = dynamoClient.query(getLiveMatchMarkets(fixtureId.toString())).promise();\r\n            } else {\r\n                event = dynamoClient.query(paramsMarketDataIndex(fixtureId.toString())).promise();\r\n            }\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        // If match is already over Update the status to 3 so it will be removed from UI\r\n                        if (item.fixture_status == lSportsConfig.statuses.results) {\r\n                            this.props.updateBetslipEventsStatus({[item.fixture_id]: {FixtureId: item.fixture_id, Status: item.fixture_status }});\r\n                            return;\r\n                        }\r\n\r\n                        if(item.outcomes) {\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems, fixtureId);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                } else {\r\n                    // If not present in any table consider it as finished event.\r\n                    this.props.updateBetslipEventsStatus({[fixtureId]: {FixtureId: fixtureId, Status: lSportsConfig.statuses.results }});\r\n                    delete unsubscribe[fixtureId];\r\n                }\r\n                return fixture || e.Items[0];\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getSingleMarketOfMatch = async (fixtureMarketId) => {\r\n        try {\r\n            let event =  dynamoClient.query(getSingleMarketOfEvent(fixtureMarketId.toString())).promise();\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        if(item.outcomes) {\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                }\r\n                return fixture || e.Items[0];\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    marketDifference = (markets, prevMarkets) =>  {\r\n        return map(markets, (market) => {   \r\n            const { Bets, Id, Name } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({value}) => {\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        if (!updatedMatch) return null;\r\n        // this.handleFirebaseUpdates({value});\r\n        let {currentEvent} = this.state;\r\n        let newFixture = {};\r\n\r\n        if (!updatedMatch || !currentEvent || currentEvent.fixture_id != updatedMatch.match_id) {\r\n            return null;\r\n        };\r\n\r\n        if(updatedMatch.outcomes){\r\n            let updatedMarket = Util.marketFormatter([updatedMatch], updatedMatch?.match_id);\r\n            let marketValue = updatedMarket && Object.values(updatedMarket)[0];\r\n            if (marketValue?.Bets && currentEvent?.market?.[`id_${marketValue.Id}`]) {\r\n                let currBets = currentEvent.market[`id_${marketValue.Id}`];\r\n                let newBet = marketValue.Bets;\r\n                if (currBets?.Bets) newBet = { ...currBets.Bets, ...newBet };\r\n                updatedMarket[Object.keys(updatedMarket)[0]].Bets = newBet;\r\n            }\r\n            newFixture.market = { ...currentEvent.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = currentEvent.market;\r\n        }\r\n        if(updatedMatch.sport_event_status){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.sport_event_status);\r\n        }\r\n        else {\r\n            newFixture.Livescore = currentEvent.Livescore;\r\n        }\r\n\r\n        // const marketWithDiff1 =  this.marketDifference(newFixture.imp_market, this.state.currentEvent.imp_market);\r\n        const marketWithDiff2 =  this.marketDifference(newFixture.market, this.state.currentEvent.market);\r\n        newFixture.Markets = {...marketWithDiff2};\r\n        newFixture = {...currentEvent, ...newFixture};\r\n        this.props.setCurrentEvent(newFixture);\r\n        this.setState({ currentEvent: newFixture}, () => {this.props.setExtraMarkets(newFixture.Markets)});\r\n\r\n    }\r\n\r\n    unsubscribe =() => {\r\n        console.log(\" *******  Unsubscribe live matches **********\")\r\n        if(websocket) websocket.close();\r\n        Object.values(unsubscribe).forEach(e => e.unsubscribe());\r\n        if(liveMatchSub) liveMatchSub.close();\r\n        if(liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        unsubscribe = {};\r\n    }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        if(fixture.fixture_status === lSportsConfig.statuses.inplay) {\r\n            this.openExtraOddsModalLiveMatch(fixture);\r\n        }\r\n        else {\r\n            this.setState({ currentEvent: fixture }, () => {\r\n                this.props.setCurrentEvent(fixture);\r\n                this.setState({ showExtraOddsModal: true });\r\n                this.getSingleMatchMarkets(fixture.fixture_id, false).then((data) => {\r\n                    if (data) {\r\n                        const newFixture = { ...fixture };\r\n                        newFixture.market = data.market;\r\n                        newFixture.Markets = { ...data.market };\r\n                        newFixture.Livescore = data.livescore || {};\r\n                        this.setState({ currentEvent: newFixture }, () => {\r\n                            this.props.setCurrentEvent(newFixture);\r\n                            this.setState({ showExtraOddsModal: true });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        if(liveMatchSub) liveMatchSub.close();\r\n        if(liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        this.setState({ showExtraOddsModal: false });\r\n        this.startListener();\r\n    };\r\n\r\n    // Change Single/Multiple tabs\r\n    setActiveTab = (e) => {\r\n        this.setState({ activeTabId: e });\r\n    };\r\n\r\n    // Remove all bets\r\n    clearBets = (e) => {\r\n        this.props.clearBets();\r\n        this.props.setLastBetslipId(false);\r\n        this.setState({ activeTabId: '1' });\r\n        this.unsubscribe();\r\n    };\r\n\r\n    // On Fast bet switch change\r\n    onFastBetChange = (e) => {\r\n        if (this.state.fastBetChecked) {\r\n            this.openFastBetModal();\r\n        } else {\r\n            this.setState({ fastBetChecked: e.target.checked });\r\n            localStorage.setItem('fast_bet', 'on');\r\n        }\r\n    };\r\n\r\n    // Set option choosed from popup\r\n    setFastBetOption = (value) => {\r\n        this.setState({ showFastBetModal: false });\r\n\r\n        if (value === 'turn-off') {\r\n            this.setState({ fastBetChecked: false });\r\n            localStorage.setItem('fast_bet', 'off');\r\n        }\r\n    };\r\n\r\n    // Set option choosed from popup\r\n    setPlaceBetOption = (value) => {\r\n        this.setState({ showPlaceBetModal: false });\r\n\r\n        if (value === 'accept-changes') {\r\n            this.setState({\r\n                fastBetChecked: true,\r\n                fastBetOff: true,\r\n            });\r\n            localStorage.setItem('fast_bet', 'on');\r\n        }\r\n    };\r\n\r\n    openFastBetModal = () => {\r\n        this.setState({ showFastBetModal: true });\r\n    };\r\n\r\n    closeFastBetModal = () => {\r\n        this.setState({ showFastBetModal: false });\r\n    };\r\n\r\n    openPlaceBetModal = () => {\r\n        this.setState({ showPlaceBetModal: true });\r\n    };\r\n\r\n    closePlaceBetModal = () => {\r\n        this.setState({ showPlaceBetModal: false });\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({ showLogin: true });\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n\r\n    clearCountdown = () => {\r\n        if (this.state.fastBetOff) {\r\n            this.setState({ fastBetChecked: false });\r\n            localStorage.setItem('fast_bet', 'off');\r\n        }\r\n    };\r\n\r\n    // Get confirmation if fast bet switch is off after user clicks on Place bet button\r\n    placeBetCheck = (type) => {\r\n        this.setState({ betType: type }, () => {\r\n            // if switch is turned off show popup\r\n            if (!this.state.fastBetChecked) {\r\n                this.openPlaceBetModal();\r\n            } else {\r\n                this.placeBet();\r\n            }\r\n        });\r\n    };\r\n\r\n    // Place a bet\r\n    placeBet = () => {\r\n        let {\r\n            fixtures,\r\n            limits,\r\n            singleStake,\r\n            multiStake,\r\n            count,\r\n            totalOdds,\r\n            totalMultiOdds,\r\n            canNotBeCombined,\r\n            userData,\r\n            setPlaceBetError,\r\n            placeBet,\r\n            placeBetWithOutLoader,\r\n            placeBetError,\r\n            language,\r\n        } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n        let type = this.state.betType;\r\n        let amount = type === 'single' ? singleStake : multiStake;\r\n        // If user is not logged in\r\n        if (!this.isLoggedIn()) {\r\n            this.setState({ showLogin: true });\r\n            return;\r\n        }\r\n\r\n        // If bet cannot be combined\r\n        if (canNotBeCombined) {\r\n            setPlaceBetError(Translate.canNotBeCombined);\r\n            return;\r\n        }\r\n\r\n        // If bet is settled or suspended\r\n        let canNotBePlaced = false;\r\n        let canNotBePlacedMessage = '';\r\n        forEach(fixtures, (fixture) => {\r\n            forEach(fixture.markets, (m) => {\r\n                forEach(m.bets, (b) => {\r\n                    if (b.Status !== lSportsConfig.betStatus.active) {\r\n                        canNotBePlaced = true;\r\n                        canNotBePlacedMessage = b.Status === lSportsConfig.betStatus.suspended ? `${Translate.betSuspended} (Bet can not be placed)` : `${Translate.betSettled} (Bet can not be placed)`;\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        if (canNotBePlaced) {\r\n            setPlaceBetError(canNotBePlacedMessage);\r\n            return;\r\n        }\r\n\r\n        // If user balance = 0 or user balance < stake amount\r\n        if (userData.balance === 0 || userData.balance < parseFloat(amount)) {\r\n            setPlaceBetError(`${Translate.insufficientBalance}!`);\r\n            return;\r\n        }\r\n\r\n        // If stake amount is 0\r\n        if (!parseFloat(amount)) {\r\n            setPlaceBetError(`${Translate.stakeGreaterThen1} 0.`);\r\n            return;\r\n        }\r\n\r\n        // Need sport Id for single bet sport wise\r\n        let sportId;\r\n        if (type === 'single') {\r\n            sportId = fixtures[0].fixture.sport_id ? fixtures[0].fixture.sport_id : fixtures[0].fixture.Fixture.Sport.Id;\r\n        }\r\n\r\n        // Bet limits\r\n        let limitValidation = Util.betLimitsValidation(limits, type, count, amount, totalOdds, totalMultiOdds, currency, userData, sportId);\r\n        if (limitValidation) {\r\n            setPlaceBetError(limitValidation);\r\n            return;\r\n        }\r\n\r\n        let typeId = type === 'single' ? 1 : 2;\r\n        let data = Util.convertToPlaceBetData(fixtures, typeId, amount, language);\r\n\r\n        // Check if in next 5 second any bet is getting suspended\r\n        let isChanged = false;\r\n        let betStatus = this.getDiff();\r\n        \r\n        let containsLiveEvent = find(fixtures, (fixture) => {\r\n            if (fixture.fixture.fixture_status !== undefined) return fixture.fixture.fixture_status === lSportsConfig.statuses.inplay\r\n            else return fixture.fixture.Fixture.Status === lSportsConfig.statuses.inplay\r\n        });\r\n\r\n        if (containsLiveEvent) {\r\n            this.props.setPlaceBetCountdown(true);\r\n            timer = setTimeout(() => {\r\n                let { fixtures: latestFixtures } = this.props;\r\n                let betStatusAfterTime = this.getDiff();\r\n                isChanged = !isEqual(betStatus, betStatusAfterTime);\r\n                if (isChanged) {\r\n                    // stop processing if bet is suspended/settled in 5 seconds\r\n                    this.props.setPlaceBetCountdown(false); \r\n                    this.props.setPlaceBetDisabled(false);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.props.setPlaceBetCountdown(false);\r\n                    data = Util.convertToPlaceBetData(latestFixtures, typeId, amount, language);\r\n                    placeBet(data, this.unsubscribe);\r\n                    \r\n                }\r\n            }, 5000);\r\n        }\r\n\r\n        // Check if repeated Bet\r\n        placeBetWithOutLoader(data, timer);\r\n    };\r\n    \r\n    getDiff = () => {\r\n        const {fixtures} = this.props;\r\n        let status = [];\r\n        forEach(fixtures, (fixture) => {\r\n            forEach(fixture.markets, (market) => {\r\n                forEach(market.bets, (bet) => {\r\n                    status.push(bet.Status);\r\n                });\r\n            });\r\n        });\r\n        return status;\r\n    }\r\n\r\n    replaceSameBets = () => {\r\n        this.props.getLastBetslip(this.props.lastBetId);\r\n    };\r\n\r\n    calculateModalOption = () => {\r\n        const { currentEvent } = this.state;\r\n        let isLive = currentEvent.fixture_status !== undefined ? (currentEvent.fixture_status === lSportsConfig.statuses.inplay  ? true : false ) : true;\r\n        return (isLive ? <ExtraOddsModalLive event={currentEvent} liveMatch={currentEvent} closeModal={this.closeExtraOddsModal} /> : <ExtraOddsModal event={currentEvent} closeModal={this.closeExtraOddsModal} />)\r\n    }\r\n\r\n    render() {\r\n        let { activeTabId, showExtraOddsModal, currentEvent, fastBetChecked, showFastBetModal, showPlaceBetModal, showLogin, liveMatches } = this.state;\r\n        let { count, placeBetCountdown, betPlacedMessage, lastBetId, betslipLoading, selectExtraMarket, setExtraMarkets, placeBetDisabled } = this.props;\r\n        let tabsHeader =\r\n            count > 0 ? (\r\n                <div className=\"betslip__header mx-auto\">\r\n                    <div className={`betslip__tab ${activeTabId === '1' ? 'betslip__tab_active text-green' : ''}`}>\r\n                        <div id=\"1\" className=\"betslip__tab-link active\">\r\n                            {Translate.single}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`betslip__tab ${activeTabId === '2' ? 'betslip__tab_active text-green' : ''}`}>\r\n                        <div id=\"2\" className=\"betslip__tab-link\">\r\n                            {Translate.multiple}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"betslip__delete\">\r\n                        <div id=\"3\" className=\"betslip__tab-link\" onClick={this.clearBets}>\r\n                            <i className=\"icon-trash-1\"></i>\r\n                            {/* <img src=\"./images/trash.png\" width=\"22\"></img> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"betslip__toggle\">\r\n                        <div className=\"mr-1 fastbet\">\r\n                            <span className=\"d-block\">{Translate.fastBet}</span>\r\n                            {/* <span className=\"d-block text-gray\"></span> */}\r\n                        </div>\r\n                        <label className=\"switch\">\r\n                            <input type=\"checkbox\" className=\"switch__input\" checked={fastBetChecked} onChange={this.onFastBetChange} />\r\n                            <span className=\"switch__slider switch__input_round\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"betslip__no-bets-wrap\">\r\n                    {lastBetId && (\r\n                        <div className={`betslip__bet-placed ${betPlacedMessage ? 'betslip__bet-placed_active' : ''}`}>\r\n                            <i className=\"material-icons\">check</i>\r\n                            <p className='text-yellow'>\r\n                                <span className=\"font-weight-bold\">Bet</span> Placed\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className={`betslip__placeholder ${betPlacedMessage ? 'betslip__placeholder_hidden' : ''}`}>\r\n                        <div className=\"no-data__img\">\r\n                            <img src=\"./images/no-odds.png\" alt=\"No data\" />\r\n                        </div>\r\n                        {lastBetId && (\r\n                            <Button variant=\"contained\" className=\"betslip__same-bet\" type=\"button\" onClick={this.replaceSameBets}>\r\n                                { Translate.repeatBet }\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <div className=\"main-container bg-f7\">\r\n                {tabsHeader}\r\n                {activeTabId === '1' && (\r\n                    <BetslipSingle setExtraMarkets={setExtraMarkets} selectExtraMarket={selectExtraMarket} openExtraOddsModal={this.openExtraOddsModal} placeBetCheck={this.placeBetCheck} showCountdown={placeBetCountdown} placeBetDisableFromAdmin={placeBetDisabled} />\r\n                )}\r\n                {activeTabId === '2' && (\r\n                    <BetslipList\r\n                        setExtraMarkets={setExtraMarkets}\r\n                        selectExtraMarket={selectExtraMarket}\r\n                        switchBetslipType={this.setActiveTab}\r\n                        openExtraOddsModal={this.openExtraOddsModal}\r\n                        placeBetCheck={this.placeBetCheck}\r\n                        showCountdown={placeBetCountdown}\r\n                        placeBetDisableFromAdmin={placeBetDisabled}\r\n                    />\r\n                )}\r\n\r\n                {showExtraOddsModal && this.calculateModalOption()}\r\n\r\n                {showFastBetModal && <FastBetPopup closeModal={this.closeFastBetModal} setFastBetOption={this.setFastBetOption} />}\r\n\r\n                {showPlaceBetModal && <PlaceBetPopup closeModal={this.closePlaceBetModal} setPlaceBetOption={this.setPlaceBetOption} />}\r\n\r\n                {placeBetCountdown && (\r\n                    <div className=\"betslip__countdown-overlay\">\r\n                        <CountdownComponent clearCountdown={this.clearCountdown} placeBetCountdown={placeBetCountdown} />\r\n                    </div>\r\n                )}\r\n\r\n                {betslipLoading && <Loading customClass='betslip-loader' />}\r\n\r\n                {showLogin && <Login hideLogin={this.hideLogin} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBetslip.propTypes = {\r\n    count: PropTypes.number,\r\n    language: PropTypes.string,\r\n    clearBets: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    checkSavedBets: PropTypes.func,\r\n    placeBet: PropTypes.func,\r\n    placeBetWithOutLoader: PropTypes.func,\r\n    multiStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    singleStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    fixtures: PropTypes.array,\r\n    userData: PropTypes.object,\r\n    setPlaceBetError: PropTypes.func,\r\n    setPlaceBetSuccess: PropTypes.func,\r\n    setPlaceBetCountdown: PropTypes.func,\r\n    getBetLimits: PropTypes.func,\r\n    placeBetError: PropTypes.string,\r\n    placeBetSuccess: PropTypes.bool,\r\n    placeBetCountdown: PropTypes.bool,\r\n    betPlacedMessage: PropTypes.bool,\r\n    canNotBeCombined: PropTypes.bool,\r\n    betslipLoading: PropTypes.bool,\r\n    limits: PropTypes.object,\r\n    totalOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    totalMultiOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lastBetId: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.betslip.count,\r\n        language: state.general.language,\r\n        multiStake: state.betslip.multiStake,\r\n        singleStake: state.betslip.singleStake,\r\n        fixtures: state.betslip.fixtures,\r\n        userData: state.user.data,\r\n        placeBetError: state.betslip.placeBetError,\r\n        placeBetSuccess: state.betslip.placeBetSuccess,\r\n        placeBetCountdown: state.betslip.placeBetCountdown,\r\n        betPlacedMessage: state.betslip.betPlacedMessage,\r\n        canNotBeCombined: state.betslip.canNotBeCombined,\r\n        limits: state.betslip.limits,\r\n        totalOdds: state.betslip.totalOdds,\r\n        totalMultiOdds: state.betslip.totalMultiOdds,\r\n        lastBetId: state.betslip.lastBetId,\r\n        betslipLoading: state.betslip.betslipLoading,\r\n        placeBetDisabled: state.betslip.placeBetDisabled,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearBets: () => dispatch(clearBets()),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        checkSavedBets: () => dispatch(checkSavedBets()),\r\n        placeBet: (data, unsubscribe) => dispatch(placeBet(data, unsubscribe)),\r\n        placeBetWithOutLoader: (data, timer) => dispatch(placeBetWithOutLoader(data, timer)),\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        setPlaceBetSuccess: (value) => dispatch(setPlaceBetSuccess(value)),\r\n        setPlaceBetCountdown: (value) => dispatch(setPlaceBetCountdown(value)),\r\n        setLastBetslipId: (value) => dispatch(setLastBetslipId(value)),\r\n        getBetLimits: () => dispatch(getBetLimits()),\r\n        getLastBetslip: (id) => dispatch(getLastBetslip(id)),\r\n        updateBetslipEventsMarket: (events) => dispatch(updateBetslipEventsMarket(events)),\r\n        updateBetslipEventsLivescore: (events) => dispatch(updateBetslipEventsLivescore(events)),\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        setPlaceBetDisabled: (value) => dispatch(setPlaceBetDisabled(value)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (type) => dispatch(selectExtraMarket(type)),\r\n        updateBetslipEventsStatus: (events) => dispatch(updateBetslipEventsStatus(events)),\r\n        updateBetslipEvent: (event) => dispatch(updateBetslipEvent(event)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Betslip);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { STATIC_MARKET } from '../../config/staticMarket';\r\n\r\nfunction Bet(props) {\r\n    let { bet, betslipStatus } = props;\r\n    let statusStyle = 'bl-darkgray-8';\r\n\r\n    \r\n    if (bet.settlement_status === null) {\r\n        statusStyle = 'bl-yellow-8';\r\n    } else if (bet.settlement_status === 1) {\r\n        statusStyle = 'bl-red-8';\r\n    } else if (bet.settlement_status === 2) {\r\n        statusStyle = 'bl-green-8';\r\n    }\r\n\r\n    let betStatus = null;\r\n    if (bet.event_status === lSportsConfig.statuses.inplay ){ \r\n        betStatus = <span className=\"live-icon sm\">{Translate.live}</span>; \r\n    }\r\n    else if(bet.settlement_status === 1){\r\n        betStatus = <span className=\"lost-icon sm\">{Translate.lost}</span>;\r\n    }\r\n    else if(bet.settlement_status === 2){\r\n        betStatus = <span className=\"won-icon sm\">{Translate.won}</span>;\r\n    }\r\n    else if(bet.settlement_status === 3){\r\n        betStatus = <span className=\"refund-icon sm\">Refund</span>;\r\n    }\r\n    else if(bet.settlement_status === 4){\r\n        betStatus = <span className=\"lost-icon sm\">Half Lost</span>;\r\n    }\r\n    else if(bet.settlement_status === 5){\r\n        betStatus = <span className=\"won-icon sm\">Half Won</span>;\r\n    }\r\n    else if(bet.settlement_status === -1  || bet.settlement_status === 6){\r\n        betStatus = <span className=\"refund-icon sm\">Cancelled</span>;\r\n    }\r\n    else if(bet.settlement_status === null){\r\n        betStatus = <span className=\"ingame-icon sm\">{Translate['in game']}</span>;\r\n    }\r\n    \r\n//     if (betslipStatus === 'cashout') {\r\n        \r\n//         let newBetStatus = <span className=\"d-flex justify-content-between\">\r\n//             {betStatus}\r\n//             <span className=\"cashout-icon sm\">{Translate.cashout}</span>\r\n//         </span>;\r\n    \r\n//        betStatus = newBetStatus;         \r\n// }\r\n    const results = bet.match_result ? typeof bet.match_result == 'string' ? JSON.parse(bet.match_result) : bet.match_result : {};\r\n    let bet_line = bet.bet_line ? '(' + bet.bet_line + ')' : null;\r\n    let oddType =  localStorage.getItem('oddType') ?  localStorage.getItem('oddType') : '';\r\n\r\n    let specifier;\r\n    const specifierArr = bet?.specifiers?.split('|') || [];\r\n    specifierArr.forEach(spec => {\r\n        let [ specKey, specValue ] = spec.split('=');\r\n        if (!specifier) specifier = {};\r\n        specifier = { ...specifier, [specKey]: specValue };\r\n    });\r\n    return (\r\n        <div>\r\n            <div className={'py-2 pr-2 ' + statusStyle}>\r\n                <Grid container className=\"m-0 p-0 px-2\">\r\n                    <Grid item xs={betslipStatus === 'cashout' ? 5 : 7} className=\"p-0 text-white ellipsis \">\r\n                        <span className='print_color'>{bet.league_name}</span>\r\n                    </Grid>\r\n                    <Grid item xs={3} className=\"p-0 text-right\">\r\n                        {bet?.score?.home_score && (\r\n                            <span className='mybet__score font-weight-bold print_color'>\r\n                                {`${bet.score.home_score || ''}:${bet.score.away_score || ''}`}\r\n                            </span>\r\n                        )}\r\n                        {bet?.score?.clock?.match_time && (\r\n                            <span className='ml-1 mybet__score font-weight-bold print_color'>\r\n                                {Util.getBetTime(bet.sport_id, bet.score)}\r\n                            </span>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={2} className=\"p-0 text-right\">\r\n                        {betStatus}\r\n                    </Grid>\r\n                    { betslipStatus === 'cashout' && <Grid item xs={2} className=\"p-0 text-right\">\r\n                        <span className=\"cashout-icon sm\">{Translate.cashout}</span>\r\n                    </Grid> }\r\n                </Grid>\r\n\r\n                <Grid container className=\"m-0 p-0 px-2\">\r\n                    <Grid item xs={8} className=\"p-0 pt-1 pr-2 mybet__popup-text text-white\">\r\n                        <p className=\"ellipsis m-0 print_color\">{bet.participants[0].participant.name}</p>\r\n                        <p className=\"ellipsis m-0 print_color\">{bet.participants[1].participant.name}</p>\r\n                    </Grid>\r\n                    <>\r\n                        <Grid item xs={3} className=\"p-0 pt-1 text-green mybet__popup-text text-center\">\r\n                            <p className=\"m-0 print_color\">{results?.home_score || 0}</p>\r\n                            <p className=\"m-0 print_color\">{results?.away_score || 0}</p>\r\n                        </Grid>\r\n                        <Grid item xs={1} className=\"p-0 pt-1 text-right mybet__popup-text text-white \">\r\n                            <span className='print_color'> {Util.toFixedDecimal(bet.price, oddType)}</span>\r\n                        </Grid>\r\n                    </>\r\n                </Grid>\r\n\r\n                <Grid container className=\"m-0 p-0 px-2\">\r\n                    <Grid item xs={8} className=\"p-0 pt-1 text-green\">\r\n                         <span className=\"print_color\">{Translate.tip} {bet.name}</span>\r\n                        {/* {bet_line}: {bet.market_name} */}\r\n                        <span className=\"print_color\">{ ' : ' }</span>\r\n                        <span className=\"print_color\">{Util.marketNameFormatter(STATIC_MARKET[`id_${ bet.market_id }`].name_en, specifier || {}, [bet.participants[0]?.participant?.name, bet.participants[1]?.participant?.name])}</span>\r\n                    </Grid>\r\n                    <Grid item xs={3} className=\"p-0 pt-1 text-white text-center\">\r\n                        <time className=\"print_color\">{format(parseISO(bet.start_date), 'dd/MM/yy')}</time>\r\n                    </Grid>\r\n                    <Grid item xs={1} className=\"p-0 pt-1 text-white text-right\">\r\n                        <time className=\"print_color\">{format(parseISO(bet.start_date), 'kk:mm')}</time>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div className=\"mybet__divider\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBet.propTypes = { \r\n    bet: PropTypes.object,\r\n};\r\n\r\nexport default Bet;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport { connect } from 'react-redux';\r\nimport { format, parseISO } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bet from './Bet';\r\n\r\nfunction Bets(props) {\r\n    let { singleBetslip, betslip, userData } = props;\r\n    let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n    let drawBets = map(singleBetslip.bets, (bet, index) => {\r\n        return <Bet betslipStatus={singleBetslip.betslip_status} bet={bet} key={index} />;\r\n    });\r\n\r\n    let betType = singleBetslip.bet_type === 1 ? 'single' : 'multiple';\r\n    let singleBetslip_odd = singleBetslip.multi_price === '0.00' ? singleBetslip.bets[0].price : singleBetslip.multi_price;\r\n\r\n    let possible_win;\r\n    let win_amount;\r\n\r\n    if (betslip.status === 'in game') {\r\n        possible_win = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    } else if (betslip.status === 'lost') {\r\n        win_amount = '0.00 ' + currency;\r\n    } else if (betslip.status === 'won') {\r\n        win_amount = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    }\r\n\r\n    let betNumber = singleBetslip.bet_type === 2 ? singleBetslip.bets.length : '';\r\n    let showBonus = betslip.has_bonus;\r\n    \r\n    let isRefund;\r\n    if(betslip.status === 'refund'){\r\n        isRefund = true;\r\n    }\r\n    else{\r\n        let check = true;\r\n        singleBetslip.bets.forEach((bet) => {\r\n            if(bet.settlement_status !== 3){\r\n                check = false;\r\n            }\r\n        });\r\n        isRefund = check;\r\n    }\r\n    return (\r\n        <div className=\"mybet__popup-content\">\r\n            <div className=\"px-2\">\r\n                <Grid container className=\"mx-auto text-white px-2 pb-2\">\r\n                    <Grid item xs={8} className=\"p-0 text-capitalize print_color\">\r\n                        {Translate[betType]} {betNumber}\r\n                    </Grid>\r\n                    <Grid item xs={3} className=\"p-0 text-center print_color\">\r\n                        <time>{format(parseISO(singleBetslip.created), 'dd/MM/yy')}</time>\r\n                    </Grid>\r\n                    <Grid item xs={1} className=\"p-0 text-right print_color\">\r\n                        <time>{format(parseISO(singleBetslip.created), 'kk:mm')}</time>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n            <div className=\"mybet__divider\"></div>\r\n\r\n            {drawBets}\r\n\r\n            <Grid container className=\"mx-auto text-white px-2 pt-2 pb-4\">\r\n                {!isRefund && <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    <span className = 'print_color'>{Translate.totalOdd}</span> <span className = 'print_color'>{singleBetslip_odd}</span>\r\n                </Grid>}\r\n                <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    <span className='print_color'>{Translate.totalStake}</span>{' '}\r\n                    <span className='print_color'>\r\n                        {singleBetslip.amount} {currency}\r\n                    </span>\r\n                </Grid>\r\n                <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    {!isRefund && possible_win && (\r\n                        <>\r\n                            <span className=\"text-white print_color\"><span className ='print_color'>{Translate.possibleWin}</span></span>\r\n                            {showBonus && <span className=\"mybet__bonus text-white print_color\">+ 10% Bonus</span>}\r\n                            <span className=\"text-white print_color\"><span className ='print_color'>{possible_win}</span></span>\r\n                        </>\r\n                    )}\r\n                    {win_amount && (\r\n                        <>\r\n                            <span className={betslip.status === 'won' && 'font-weight-bolder text-white print_color'}><span className ='print_color'>{Translate.totalWin}</span></span>\r\n                            {showBonus && <span className=\"mybet__bonus print_color\">+ 10% Bonus</span>}\r\n                            <span className={betslip.status === 'won' && 'font-weight-bolder text-white print_color'}><span className='print_color'>{win_amount}</span></span>\r\n                        </>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nBets.propTypes = {\r\n    singleBetslip: PropTypes.object,\r\n    betslip: PropTypes.object,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Bets);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CountdownComponent } from '../Betslip/CountdownComponent';\r\nimport { lSportsConfig } from '../../config';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { Translate } from '../../localization';\r\n\r\nfunction CashoutModal(props) {\r\n    const { cashoutData, openCashoutConfirmationPopup, isCashoutExpired, cashoutExpired, refreshCashout, currency, cashoutAvailable, isCashoutAvailableLoading, loadingCashout} = props;\r\n    return (\r\n        <>\r\n            { !isCashoutExpired && Object.keys(cashoutData).length !== 0 && <> <div className={`cashout-timer`}>\r\n                <CountdownComponent seconds={lSportsConfig.cashoutTimer} clearCountdown={cashoutExpired} messageText={'Cashout Expire In:'} />\r\n            </div>\r\n\r\n            {/* <Grid container className=\"mx-auto text-gray px-2 pt-2 pb-4\">\r\n                {/* <Grid item xs={12} className=\"p-0 d-flex justify-content-end text-right\">\r\n                    <span className=\"cashout-icon sm\">Cashout Amount</span>\r\n                </Grid> \r\n\r\n                <Grid xs={12} item className=\"p-0 pt-0 pr-2 d-flex align-items-center justify-content-between\">\r\n                    <span className=\"text-black\">Cashout Amount</span>{' '}\r\n                    <span className=\"text-black\">{parseFloat(cashoutData.cashout_amount).toFixed(2)}</span>\r\n                </Grid>\r\n            </Grid> */}\r\n            </>\r\n            }\r\n            { <div className=\"cashout-btn-wrap\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={!isCashoutExpired\r\n                                ? cashoutAvailable && cashoutData.cashout_amount ? openCashoutConfirmationPopup : refreshCashout \r\n                                : refreshCashout\r\n                            }\r\n                    className=\"place-btn\"\r\n                    variant=\"contained\"\r\n                    disabled = {(!cashoutAvailable && isCashoutAvailableLoading) || loadingCashout}\r\n                >\r\n                    {(!cashoutAvailable && isCashoutAvailableLoading) ? <LoadingIcon/>\r\n                        : cashoutAvailable ? loadingCashout ? <LoadingIcon/>  \r\n                                : !isCashoutExpired \r\n                                    ? cashoutData.cashout_amount ? `${parseFloat(cashoutData.cashout_amount).toFixed(2)} ${currency}` : 'No Cashout Offer'\r\n                                    : `${Translate.refreshCashout}`\r\n                        : 'No Cashout Offer'\r\n                    }\r\n                </Button>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nCashoutModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    openCashoutConfirmationPopup: PropTypes.func,\r\n    cashoutData: PropTypes.object,\r\n    refreshCashout: PropTypes.func\r\n};\r\n\r\nexport default CashoutModal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport find from 'lodash.find';\r\nimport Bets from './Bets';\r\nimport { setCashoutData } from '../../store/actions/cashout.actions';\r\n\r\nimport CashoutModal from './CashoutModal';\r\nimport forEach from 'lodash.foreach';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport { dynamoClient } from '../../App';\r\nimport { getSingleLiveMarkets, getSingleMarketOfPreEvent, getSingleMarketOfEvent } from '../../dynamo/inplayParams';\r\nimport { paramsMarketDataIndex } from '../../dynamo/params';\r\nimport { lSportsConfig } from '../../config';\r\nimport { compareAsc } from 'date-fns';\r\nimport ReactToPrint from 'react-to-print';\r\nlet unSub=[];\r\n\r\nclass SingleBetslipModal extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            cashoutAvailable: false,\r\n            isCashoutAvailableLoading: true,\r\n            isCashoutExpired: false,\r\n            cashoutObject: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkAllOddsAvailable();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.showCashoutSuccess !== this.props.showCashoutSuccess) {\r\n            if(this.props.showCashoutSuccess) {\r\n                this.setState({ cashoutAvailable: false, cashoutObject: {}  });\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCashoutConditions = () => {  \r\n        if(!this.isAnyLostBet() && this.checkCashoutObject() && this.isNotPastPrematch()) { \r\n            this.setState({ cashoutAvailable: true });\r\n            if (!this.props.cashoutData.cashout_amount)\r\n            this.props.betslip.status === 'in game' && this.props.openCashoutModal();\r\n        }\r\n        else if (this.isAnyLostBet() || !this.checkCashoutObject()) {\r\n            this.setState({ cashoutAvailable: false });\r\n        }\r\n        if ( this.state.isCashoutAvailableLoading ) {\r\n            this.setState({ isCashoutAvailableLoading: false });\r\n        }\r\n    };\r\n\r\n    checkCashoutObject = () => {\r\n        let check = true;\r\n        forEach(this.state.cashoutObject, (element) => {\r\n            if(element === false) {\r\n                check = false;\r\n            }\r\n        });\r\n        return check;\r\n    }\r\n\r\n    checkAllOddsAvailable = () => {\r\n        if(this.props.betslip.status === 'in game') {\r\n            let check = false;\r\n            this.props.singleBetslip.bets.forEach((bet) => {\r\n                if(!bet.settlement_status) {\r\n                    check = true;\r\n                //listen to changes\r\n                    if(bet.event_status === lSportsConfig.statuses.inplay ) {\r\n                        let id = `${bet.fixture_id}^${bet.market_id}`;\r\n                        if (bet.specifiers) id = `${id}^${bet.specifiers}`;\r\n                        dynamoClient.query(getSingleMarketOfEvent(`${id}`)).promise().then((e) => {\r\n                            if(e?.Items && e.Items[0]?.outcomes) this.handleOddsUpdate(bet, JSON.parse(e.Items[0].outcomes), e.Items[0].market_status);\r\n                            else this.handleOddsUpdate(bet);\r\n                        });\r\n                    }\r\n                    else {\r\n                        let id = `${bet.fixture_id}^${bet.market_id}`;\r\n                        if (bet.specifiers) id = `${id}^${bet.specifiers}`;\r\n                        dynamoClient.query(getSingleMarketOfPreEvent(id)).promise().then((e) => {\r\n                            if(e?.Items && e.Items[0]?.outcomes) this.handleOddsUpdate(bet, JSON.parse(e.Items[0].outcomes), e.Items[0].market_status);\r\n                            else this.handleOddsUpdate(bet);\r\n                        });\r\n                    }\r\n                }\r\n                if(!check){\r\n                    this.setState({ cashoutAvailable: false });\r\n                }\r\n            });\r\n        }\r\n    };\r\n        \r\n    handleOddsUpdate = (bet, snap, marketStatus) => {\r\n        let { cashoutObject } = this.state;\r\n        if(snap) {\r\n            //now check price and status\r\n            let check = true;\r\n            const { active, settled } = lSportsConfig.marketStatus;\r\n            // custom check for Correct Score and Correct score first period && market should be active/settled\r\n            if([active, settled].indexOf(+marketStatus) === -1 || bet.market_id === 431 || bet.market_id === 481){\r\n                check =false;\r\n            }\r\n            else if(bet.event_status === lSportsConfig.statuses.prematch || bet.event_status === lSportsConfig.statuses.inplay ) {\r\n                // let selectedMarket = snap[`${bet.market_id}`];\r\n                let selectedBet = snap[`${bet.bet_id}`];\r\n                \r\n                if(!selectedBet?.result && (selectedBet?.active != lSportsConfig.betStatus.active || !selectedBet?.odds) ){\r\n                    check =false;\r\n                }\r\n            }\r\n            else check = false;\r\n        \r\n            if(!cashoutObject[bet.fixture_id]) {\r\n                let cashoutObj = cashoutObject;\r\n                cashoutObj[bet.fixture_id] = check;\r\n                this.setState({ cashoutObject : cashoutObj });\r\n            }\r\n            else if(!check && cashoutObject[bet.fixture_id] === true ) {\r\n                let cashoutObj = cashoutObject;\r\n                cashoutObj[bet.fixture_id] = false;\r\n                this.setState({ cashoutObject : cashoutObj });\r\n                this.setState({ cashoutAvailable : false});\r\n            }\r\n            else if(check && cashoutObject[bet.fixture_id] === false) {\r\n                let cashoutObj = cashoutObject;\r\n                cashoutObj[bet.fixture_id] = true;\r\n                this.setState({ cashoutObject : cashoutObj });\r\n                    // this.setState({ cashoutOddsAvailable : true});       \r\n            }\r\n        }\r\n        else {\r\n            let cashoutObj = cashoutObject;\r\n            cashoutObj[bet.fixture_id] = false;\r\n            this.setState({ cashoutObject : cashoutObj });\r\n            // this.setState({ cashoutOddsAvailable : false});\r\n        }\r\n        this.checkCashoutConditions();\r\n    };\r\n\r\n    isNotPastPrematch = () => {\r\n        let check = true;\r\n        this.props.singleBetslip.bets.forEach(element => {\r\n            const { start_date: startDate } = element;\r\n            if((element.event_status != lSportsConfig.statuses.inplay && element.event_status != lSportsConfig.statuses.results) && compareAsc(new Date(startDate), new Date()) < 1){\r\n                check= false;\r\n            }\r\n        });\r\n        return check;\r\n    };\r\n\r\n    isAnyLostBet = () => {\r\n        let check = false;\r\n        this.props.singleBetslip.bets.forEach(element => {\r\n            if(element.settlement_status === 1){\r\n                check= true;\r\n            }\r\n        });\r\n        return check;\r\n    }\r\n\r\n    refreshCashout = () => {\r\n        if(this.state.cashoutAvailable) {\r\n            this.props.openCashoutModal();\r\n            this.setState({ isCashoutExpired: false });\r\n        }\r\n        else {\r\n            this.checkAllOddsAvailable();\r\n        }\r\n    }\r\n\r\n    cashoutExpired = () => {\r\n        this.props.resetCashoutData();\r\n        this.setState({ isCashoutExpired: true });\r\n    }\r\n\r\n    render() {\r\n\r\n        let { cashoutAvailable, isCashoutAvailableLoading, isCashoutExpired } = this.state;\r\n        let { closeModal, singleBetslip, betslip, showCashoutSuccess, cashoutData, openCashoutConfirmationPopup, userData, loadingCashout } = this.props;\r\n        let couponId = singleBetslip.coupon_id ? singleBetslip.coupon_id : '-';\r\n\r\n        let betslipList =\r\n            singleBetslip.bets.length > 0 ? <Bets singleBetslip={singleBetslip} betslip={betslip} /> : <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>;\r\n        let headerData  = <div className=\"d-flex align-items-center flex-wrap\">\r\n                            <h3 className=\"m-0 mr-3 d-flex align-items-center print_color\">\r\n                                <i className=\"material-icons menu-item__betslip-icon mr-2\" style={{ marginBottom: '1px' }}>\r\n                                    receipt\r\n                                </i>\r\n                                {Translate.coupon}\r\n                            </h3>\r\n                            <p className=\"my-0 subtitle  print_color\">ID: {couponId}&nbsp;&nbsp;&nbsp;</p>\r\n                            </div>\r\n            return (\r\n                <Dialog onClose={closeModal} aria-labelledby=\"single-betslip-dialog-title\" open={true} scroll=\"paper\">\r\n                    <ReactToPrint\r\n                            trigger={() => <Button className=\"print-button\">Print</Button>}\r\n                            content={() => this.betSlipRef}\r\n                            documentTitle={`Africa_gold_${couponId}`}\r\n                            pageStyle=\"@page { size: auto; margin: 0mm 50mm 0mm 50mm; border-style: solid;  } @media print { body { -webkit-print-color-adjust: exact; padding:40px !important;  background-color: #fff !important;} .mybet__popup-text { font-size: 15px !important;} .text-gray-dark{color: #000 !important;} .print_color{color: #000 !important;} .close-modal{display:none !important;} .cashout-btn-wrap{display:none !important;}}\"\r\n                        />\r\n                         <div ref={(el) => (this.betSlipRef = el)}>\r\n                    <DialogTitle id=\"single-betslip-dialog-title\" disableTypography>\r\n                        {headerData}\r\n                        <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                            <i className=\" material-icons fs-22\"> close </i>\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent className=\"p-0\">\r\n                    \r\n                    <>\r\n                   {betslipList}\r\n                    {betslip.status === 'in game' && \r\n                        <CashoutModal \r\n                            cashoutData={cashoutData}\r\n                            openCashoutConfirmationPopup={openCashoutConfirmationPopup}\r\n                            isCashoutExpired={isCashoutExpired}\r\n                            cashoutExpired={this.cashoutExpired}\r\n                            refreshCashout={this.refreshCashout}\r\n                            cashoutAvailable = {cashoutAvailable}\r\n                            isCashoutAvailableLoading = {isCashoutAvailableLoading}\r\n                            loadingCashout= {loadingCashout}\r\n                            currency = {userData && userData.currency ? userData.currency : 'EUR'} \r\n                        />}\r\n                    </>\r\n                    </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSingleBetslipModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    singleBetslip: PropTypes.object,\r\n    betslip: PropTypes.object,\r\n    cashoutData: PropTypes.object,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        singleBetslip: state.bets.singleBetslip,\r\n        loadingCashout: state.bets.loadingCashout,\r\n        cashoutData: state.bets.cashoutData,\r\n        showCashoutSuccess: state.bets.showCashoutSuccess,\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCashoutData: (betslip_id, total_odds, stake_price) => dispatch(setCashoutData(betslip_id, total_odds, stake_price)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleBetslipModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { format, parseISO } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\n\r\nfunction Betslip(props) {\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        props.openBetslipModal(props.betslip);\r\n    };\r\n\r\n    let { betslip, userData } = props;\r\n    let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';    \r\n    let statusText = Translate[betslip.status];\r\n    let statusStyle = 'bl-darkgray-6';\r\n    let possible_win = <span className=\"fs-18\">-</span>;\r\n    let win_amount = <span className=\"fs-18\">-</span>;\r\n    let statusTextStyle = '';\r\n\r\n    if (betslip.status === 'in game') {\r\n        statusStyle = 'bl-yellow-6';\r\n        possible_win = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    } else if (betslip.status === 'lost') {\r\n        statusStyle = 'bl-red-6';\r\n        statusTextStyle = 'text-red-dark';\r\n        win_amount = '0.00 ' + currency;\r\n    } else if (betslip.status === 'won') {\r\n        statusStyle = 'bl-green-6';\r\n        statusTextStyle = 'text-green';\r\n        win_amount = Util.toFixedDecimal(betslip.possible_win) + ' ' + currency;\r\n    } else if (betslip.status === 'refund') {\r\n        statusStyle = 'bl-darkgray-6';\r\n    }  else if (betslip.status === 'cashout') {\r\n        statusStyle = 'bl-yellow-6';\r\n        possible_win = '-';\r\n        win_amount = Util.toFixedDecimal(betslip.cashout_amount) + ' ' + currency;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr onClick={handleClick}>\r\n                <td>\r\n                    <div className={`mybet__date`}>\r\n                        <div>\r\n                            <time>{format(parseISO(betslip.created), 'dd/MM/yy')}</time>\r\n                        </div>\r\n                        <div>\r\n                            <time>{format(parseISO(betslip.created), 'kk:mm')}</time>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {Util.toFixedDecimal(betslip.amount)} {currency}\r\n                </td>\r\n                <td className=\"text-black\">{possible_win}</td>\r\n                <td>{win_amount}</td>\r\n                <td className={`text-capitalize`}>\r\n                    <span className={`${statusStyle}`}>\r\n                        {statusText}\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nBetslip.propTypes = {\r\n    betslip: PropTypes.object,\r\n    language: PropTypes.string,\r\n    openBetslipModal: PropTypes.func,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Betslip);\r\n","import React from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nfunction CashoutSuccess(props) {\r\n    return (\r\n        <>\r\n            <DialogTitle id=\"single-betslip-dialog-title\" disableTypography>\r\n                <div className=\"d-flex justify-content-center font-weight-semibold fs-20 ls-2\"> Cashout Successful</div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className=\"p-0\">\r\n                <div className=\"success-checkmark\">\r\n                    <div className=\"check-icon\">\r\n                        <span className=\"icon-line line-tip\"></span>\r\n                        <span className=\"icon-line line-long\"></span>\r\n                        <div className=\"icon-circle\"></div>\r\n                        <div className=\"icon-fix\"></div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CashoutSuccess;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Translate } from '../../localization';\r\nimport CashoutSuccess from './CashoutSuccess';\r\n\r\nfunction CashoutConfirmationPopup(props) {\r\n    const { closeModal, closeCashoutModal, cashoutData, getBetslipId, processCashout, showCashoutError, cashoutSuccessVisible, } = props;\r\n\r\n    const handleCashout = () => {\r\n        if( Object.keys(cashoutData).length !== 0 ) {\r\n            let betslipId = getBetslipId();\r\n            processCashout(betslipId, cashoutData.cashout_amount);\r\n            closeModal();\r\n            closeCashoutModal();\r\n        }\r\n        else {\r\n            showCashoutError('Cashout Expired');\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog aria-labelledby=\"fast-bet-dialog-title\" disableBackdropClick disableEscapeKeyDown open={true} scroll=\"body\">\r\n            {!cashoutSuccessVisible ? <> <DialogTitle id=\"fast-bet-dialog-title\" disableTypography>\r\n                <div className=\"dialog-logo-wrap\">\r\n                    <img src=\"./images/logo.png\" alt=\"Logo\" />\r\n                </div>\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\" material-icons fs-22 text-white\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className=\"pt-0 bg-color\">\r\n                <p className=\"text-center text-white mb-0 mt-2\">{Translate.areYouSureWantCashout}</p>\r\n\r\n                <div className=\"fast-bet__btn-wrap\">\r\n                    <button className=\"fast-bet__btn\" id=\"accept-changes\" onClick={handleCashout}>\r\n                        {Translate.yes}\r\n                    </button>\r\n                    <button className=\"fast-bet__btn\" id=\"cancel\" onClick={closeModal}>\r\n                        {Translate.no}\r\n                    </button>\r\n                </div>\r\n            </DialogContent>\r\n            </> : <CashoutSuccess/>}\r\n            \r\n        </Dialog>\r\n    );\r\n}\r\n\r\nCashoutConfirmationPopup.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    setCashoutOptions: PropTypes.func,\r\n};\r\n\r\nexport default CashoutConfirmationPopup;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport map from 'lodash.map';\r\nimport { isValid, differenceInDays } from 'date-fns';\r\nimport { getMyBetFilterTypes } from '../../config';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n// import { getTransactions, setTransactionsFilter } from '../../store/actions/transaction.actions';\r\nimport { setMybetsFilters } from '../../store/actions/bets.actions';\r\nimport { Translate } from '../../localization';\r\n\r\nlet activityTypesMobile, activityTypesDesktop ;\r\nlet dateLastWeek = new Date();\r\ndateLastWeek.setDate(dateLastWeek.getDate() - 7);\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dateFrom: dateLastWeek,\r\n            dateTo: new Date(),\r\n            activityType: 'all',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTranslations();\r\n        let { mybetsFilterParams } = this.props;\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n        // this.props.getTransactions(params, true);\r\n        let startDate = dateFrom;\r\n        let endDate = dateTo;\r\n        let params = { activityType, endDate, startDate};\r\n        if( mybetsFilterParams && mybetsFilterParams.activityType ){\r\n            this.setState({\r\n                dateFrom: mybetsFilterParams.startDate, \r\n                dateTo: mybetsFilterParams.endDate, \r\n                activityType: mybetsFilterParams.activityType\r\n            });\r\n        } \r\n        if( !mybetsFilterParams || !mybetsFilterParams.activityType) {\r\n            this.props.setMybetsFilters(params);\r\n        }\r\n        \r\n    }\r\n\r\n    loadTranslations = () => {\r\n        activityTypesMobile = map(getMyBetFilterTypes(), (type, index) => (\r\n            <option key={index} value={type.value}>\r\n                {type.label}\r\n            </option>\r\n        ));\r\n        \r\n        activityTypesDesktop = map(getMyBetFilterTypes(), (type, index) => (\r\n            <MenuItem key={index} value={type.value}>\r\n                {type.label}\r\n            </MenuItem>\r\n        ));\r\n    }\r\n    \r\n    handleChangeDateFrom = (date) => {\r\n        this.setState({ dateFrom: date });\r\n    };\r\n\r\n    handleChangeDateTo = (date) => {\r\n        this.setState({ dateTo: date });\r\n    };\r\n\r\n    handleChangeSelect = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    onSearchTransactions = () => {\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n\r\n        // if date to is invalid\r\n        if (dateTo !== null) {\r\n            if (!isValid(dateTo)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date from is invalid\r\n        if (dateFrom !== null) {\r\n            if (!isValid(dateFrom)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date range is invalid\r\n        if (dateTo !== null && dateFrom !== null) {\r\n            if (differenceInDays(dateTo, dateFrom) < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        let startDate = dateFrom;\r\n        let endDate = dateTo;\r\n        let params = { activityType, endDate, startDate};\r\n        // this.props.getTransactions(params, true);\r\n        this.props.setMybetsFilters(params);\r\n    };\r\n\r\n    render() {\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n\r\n        return (\r\n            <div className=\"mybet__filters\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container className=\"m-0\">\r\n                        {/* From Date - start */}\r\n                        <Grid item xs={6} className=\"mb-2 pr-2\">\r\n                            <InputLabel shrink>{Translate.fromDate}</InputLabel>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={dateFrom}\r\n                                onChange={this.handleChangeDateFrom}\r\n                                minDateMessage=\"Invalid Date\"\r\n                                maxDateMessage=\"Invalid Date\"\r\n                                maxDate={dateTo}\r\n                            />\r\n                        </Grid>\r\n                        {/* From Date - end */}\r\n\r\n                        {/* To Date - start */}\r\n                        <Grid item xs={6} className=\"mb-2 pl-2\">\r\n                            <InputLabel shrink>{Translate.toDate}</InputLabel>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={dateTo}\r\n                                onChange={this.handleChangeDateTo}\r\n                                minDateMessage=\"Invalid Date\"\r\n                                maxDateMessage=\"Invalid Date\"\r\n                            />\r\n                        </Grid>\r\n                        {/* To Date - end */}\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <Grid container className=\"m-0 align-items-end\">\r\n                    {/* Activity Type - start */}\r\n                    <Grid item xs={6} className=\"pr-2\">\r\n                        <FormControl className=\"select select_mobile\">\r\n                            <InputLabel shrink>{Translate.activityType}</InputLabel>\r\n                            <NativeSelect value={activityType} onChange={this.handleChangeSelect} inputProps={{ name: 'activityType' }}>\r\n                                {activityTypesMobile}\r\n                            </NativeSelect>\r\n                        </FormControl>\r\n\r\n                        <FormControl className=\"select select_desktop\">\r\n                            <InputLabel shrink>{Translate.activityType}</InputLabel>\r\n                            <Select value={activityType} name=\"activityType\" onChange={this.handleChangeSelect}>\r\n                                {activityTypesDesktop}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    {/* Activity Type - end */}\r\n\r\n                    <Grid item xs={6} className=\"text-right pl-2\">\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth size=\"medium\" onClick={this.onSearchTransactions}>\r\n                            {Translate.show}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    // getTransactions: PropTypes.func,\r\n    setMybetsFilters: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mybetsFilterParams: state.bets.mybetsFilterParams,\r\n    }     \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setMybetsFilters: (params) => dispatch(setMybetsFilters(params)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport SingleBetslipModal from './SingleBetslipModal.js';\r\nimport Betslip from './Betslip';\r\nimport { getBetslips, selectBetslip, getSingleBetslip, removeMyBetsFilters} from '../../store/actions/bets.actions';\r\nimport { setCashoutData, processCashout, setCashoutLoading, resetCashoutData, showCashoutSuccess,showCashoutError } from '../../store/actions/cashout.actions';\r\nimport CashoutConfirmationPopup from './CashoutConfirmationPopup';\r\nimport find from 'lodash.find';\r\nimport Filter from './Filter';\r\n\r\nclass MyBets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: 'all',\r\n            showSingleBetslipModal: false,\r\n            singleBetslipLoading: false,\r\n            currentBetslip: {},\r\n            showCashoutConfirmationPopup: false,\r\n            closeCashoutSuccess: false \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { isActive } = this.state;\r\n        let activeTab = isActive === 'all' ? '' : isActive;\r\n        this.props.selectBetslip(activeTab);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { isActive } = this.state;\r\n        if (prevProps.singleBetslip !== this.props.singleBetslip) {\r\n            this.setState({ singleBetslipLoading: false });\r\n        }\r\n        \r\n        if(prevProps.isCashoutSuccess && !this.props.isCashoutSuccess) {\r\n            this.setState({ showSingleBetslipModal: false});\r\n            if( this.props.cashoutData.cashout_amount ) {\r\n                this.props.resetCashoutData();\r\n            }\r\n        }\r\n\r\n        if (prevProps.language !== this.props.language) {\r\n            this.setActiveTab(isActive);\r\n        }\r\n\r\n        // Code for auto load the next data\r\n        // if (this.props.hasNextPage && this.props.betslips.length !== this.props.totalBetslipCount) {\r\n        //     this.props.getBetslips(activeTab);\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.removeMyBetsFilters();\r\n    }\r\n\r\n    setActiveTab = (tab) => {\r\n        this.setState({ isActive: tab });\r\n        let activeTab = tab === 'all' ? '' : tab;\r\n        this.props.selectBetslip(activeTab);\r\n    };\r\n\r\n    openSingleBetslipModal = (betslip) => {\r\n        this.setState({\r\n            showSingleBetslipModal: true,\r\n            singleBetslipLoading: true,\r\n            currentBetslip: betslip,\r\n            closeCashoutSuccessModal: false,\r\n        }) ;\r\n        this.props.getSingleBetslip(betslip.id);\r\n    };\r\n\r\n    closeSingleBetslipModal = () => {\r\n        this.setState({ showSingleBetslipModal: false }, () => {\r\n            this.props.resetCashoutData()\r\n        });\r\n    };\r\n\r\n    openCashoutModal = () => {\r\n        const betslipId = this.getBetslipId();\r\n        this.props.setCashoutLoading(true);\r\n        this.props.setCashoutData(betslipId, this.props.singleBetslip.multi_price, this.props.singleBetslip.amount);\r\n    }\r\n\r\n    getBetslipId = () => {\r\n        const betslip = find( this.props.betslips, (bet) => bet.coupon_id === this.props.singleBetslip.coupon_id);\r\n        return betslip.id;\r\n    } \r\n\r\n    closeCashoutModal = () => {\r\n        this.setState({ showSingleBetslipModal: false }, () => {\r\n            this.props.resetCashoutData()\r\n        });\r\n    }\r\n\r\n    openCashoutConfirmationPopup = () => {\r\n        this.setState({\r\n            showCashoutConfirmationPopup: true,\r\n        });\r\n    }\r\n\r\n    closeCashoutConfirmationPopup = () => {\r\n        this.setState({\r\n            showCashoutConfirmationPopup: false,\r\n        }\r\n        );\r\n    }\r\n        \r\n\r\n    fetchMoreData = () => {\r\n        let { isActive } = this.state;\r\n        let activeTab = isActive === 'all' ? '' : isActive;\r\n        let { countBets, totalResultCount, fetchMore} = this.props;\r\n        if(countBets < totalResultCount && fetchMore)\r\n        {\r\n            this.props.getBetslips(activeTab);\r\n        }\r\n        // if (this.props.hasNextPage) {\r\n        //     this.props.getBetslips(activeTab);\r\n        // }\r\n    };\r\n\r\n    closeCashoutSuccessModal = () => {\r\n        this.setState({closeCashoutSuccess : true});\r\n    }\r\n\r\n    render() {\r\n        let { isActive, showSingleBetslipModal, singleBetslipLoading, currentBetslip, showCashoutConfirmationPopup, closeCashoutSuccess} = this.state;\r\n        let { betslips, loadingBetslip, cashoutData, processCashout, showCashoutSuccess, resetCashoutData, isCashoutSuccess, countBets, totalResultCount, fetchMore  } = this.props;\r\n        let betslipsList =\r\n            betslips && betslips.length > 0\r\n                ? map(betslips, (betslip) => {\r\n                      return <Betslip betslip={betslip} key={betslip.id} openBetslipModal={this.openSingleBetslipModal} />;\r\n                  })\r\n                : [];\r\n\r\n                let runAgain ;\r\n                if(countBets < totalResultCount )\r\n                {\r\n                    runAgain = true;\r\n                }\r\n                if(!fetchMore)\r\n                {\r\n                    runAgain = false;\r\n                }\r\n\r\n        let drawBetslips = loadingBetslip || singleBetslipLoading ? (\r\n            <Loading />\r\n        ) : betslipsList.length > 0 ? (\r\n            <>\r\n                <InfiniteScroll dataLength={betslipsList.length} next={this.fetchMoreData} hasMore={runAgain} loader={<LoadingIcon theme=\"dark centered\" />}>\r\n                    {isActive === 'all' && <Filter />}\r\n                    <table className=\"mybet__table\">\r\n                        <thead>\r\n                            <tr className=\"mybet__table-head\">\r\n                                <th>{Translate.date}</th>\r\n                                <th>{Translate.amount}</th>\r\n                                <th>{Translate.possibleWin}</th>\r\n                                <th>{Translate.winAmount}</th>\r\n                                <th>{Translate.status}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{betslipsList}</tbody>\r\n                    </table>\r\n                </InfiniteScroll>\r\n\r\n                <div className=\"pb-4\" />\r\n\r\n                {showSingleBetslipModal &&\r\n                    (singleBetslipLoading ? (\r\n                        <Loading/>\r\n                    ) : (\r\n                        <SingleBetslipModal\r\n                            openCashoutModal={this.openCashoutModal}\r\n                            resetCashoutData={resetCashoutData}\r\n                            closeModal={this.closeSingleBetslipModal}\r\n                            betslip={currentBetslip}\r\n                            openCashoutConfirmationPopup={this.openCashoutConfirmationPopup}\r\n                        />\r\n                    ))}\r\n\r\n                {(showCashoutConfirmationPopup || isCashoutSuccess) && (\r\n                    <CashoutConfirmationPopup\r\n                        getBetslipId={this.getBetslipId}\r\n                        cashoutData={cashoutData}\r\n                        closeModal={this.closeCashoutConfirmationPopup}\r\n                        closeCashoutModal={this.closeCashoutModal}\r\n                        processCashout={processCashout}\r\n                        showCashoutSuccess={showCashoutSuccess}\r\n                        showCashoutError={showCashoutError}\r\n                        isCashoutSuccess={isCashoutSuccess}\r\n                        closeCashoutSuccess={closeCashoutSuccess} \r\n                        cashoutSuccessVisible ={isCashoutSuccess && !closeCashoutSuccess}\r\n                        closeSuccessModal={this.closeCashoutSuccessModal}\r\n                    />\r\n                )}\r\n            </>\r\n        ) : (\r\n            <>\r\n                {isActive === 'all' && <Filter />}\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <div className=\"main-container mybet\" id=\"mybets\">\r\n                <Grid container className=\"mybet__result\">\r\n                    <Grid item xs={3} className={`${isActive === 'all' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('all')}>\r\n                        {Translate.all}\r\n                    </Grid>\r\n                    <Grid item xs={3} className={`${isActive === 'in game' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('in game')}>\r\n                        {Translate['in game']}\r\n                    </Grid>\r\n                    <Grid item xs={3} className={`${isActive === 'won' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('won')}>\r\n                        {Translate.won}\r\n                    </Grid>\r\n                    <Grid item xs={3} className={`${isActive === 'lost' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('lost')}>\r\n                        {Translate.lost}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {drawBetslips}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyBets.propTypes = {\r\n    betslips: PropTypes.array,\r\n    //hasNextPage: PropTypes.bool,\r\n    loadingBetslip: PropTypes.bool,\r\n    singleBetslip: PropTypes.object,\r\n    getBetslips: PropTypes.func,\r\n    selectBetslip: PropTypes.func,\r\n    getSingleBetslip: PropTypes.func,\r\n    language: PropTypes.string,\r\n    cashoutData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        betslips: state.bets.betslips,\r\n        mybetsFilterParams: state.bets.mybetsFilterParams,\r\n        //hasNextPage: state.bets.hasNextPage,\r\n        countBets : state.bets.countBets,\r\n        totalResultCount : state.bets.totalResultCount,\r\n        fetchMore : state.bets.fetchMore,\r\n        loadingBetslip: state.bets.loadingBetslip,\r\n        singleBetslip: state.bets.singleBetslip,\r\n        totalBetslipCount: state.bets.totalBetslipCount,\r\n        language: state.general.language,\r\n        cashoutData: state.bets.cashoutData,\r\n        loadingCashout: state.bets.loadingCashout,\r\n        isCashoutSuccess: state.bets.showCashoutSuccess,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getBetslips: (data) => dispatch(getBetslips(data)),\r\n        selectBetslip: (value) => dispatch(selectBetslip(value)),\r\n        getSingleBetslip: (betslip_id) => dispatch(getSingleBetslip(betslip_id)),\r\n        setCashoutData: (betslip_id, total_odds, stake_price) => dispatch(setCashoutData(betslip_id, total_odds, stake_price)),\r\n        processCashout: (betslip_id, cashout_amount) => dispatch(processCashout(betslip_id, cashout_amount)),\r\n        setCashoutLoading: (value) => dispatch(setCashoutLoading(value)),\r\n        resetCashoutData: () => dispatch(resetCashoutData()),\r\n        showCashoutSuccess: (value) => dispatch(showCashoutSuccess(value)),\r\n        removeMyBetsFilters: () => dispatch(removeMyBetsFilters()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBets);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport SportsList from '../Shared/SportsList';\r\nimport { getPrematchSports, selectPreSport, getPrematchSportsMobile, setLocationsActive, setPrematchActive, selectLocation, selectLeague } from '../../store/actions/prematchActions';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        //if (!this.props.sports.length > 0) {\r\n            // for(let i=0; i < totalSegments; i++ ) {\r\n            //     this.props.getPrematchSportsMobile(true, i);\r\n            // }\r\n            this.props.selectPreSport(lSportsConfig.prematch.selectedSport);\r\n       // }\r\n        // const { statsData } = this.props;\r\n        // if (!statsData) this.props.getStatsData();\r\n        this.props.setLocationsActive(true);\r\n        this.props.setPrematchActive(false);\r\n        this.props.selectLocation(null);\r\n        this.props.selectLeague(null);\r\n        this.props.getPrematchSportsMobile(true, 0);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.getPrematchSports();\r\n        }\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.props.setLocationsActive(true);\r\n        this.props.setPrematchActive(false);\r\n\r\n        let selectedSport = this.props.selectedSport;\r\n\r\n        if (selectedSport !== sportId) {\r\n            this.props.selectLocation(null);\r\n            this.props.selectLeague(null);\r\n            this.props.selectPreSport(sportId);\r\n        }\r\n        \r\n    };\r\n\r\n    render() {\r\n        let { selectedSport, language, sportsCountObj } = this.props;\r\n\r\n        return (\r\n            <div className={`pre-match-wrapper`}>\r\n                <SportsList\r\n                sports={staticPrematchSports()}\r\n                sportsObj={sportsCountObj}\r\n                selectedSport={selectedSport}\r\n                selectSport={this.selectSport}\r\n                searchPath={''}\r\n                type=\"prematch\"\r\n                language={language}\r\n                sort\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    selectPreSport: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setPrematchActive: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    selectLeague: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.prematch.sports,\r\n        selectedSport: state.prematch.selectedSport,\r\n        language: state.general.language,\r\n        sportsCountObj: state.prematch.sportsCountObj,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectPreSport: (sportId) => dispatch(selectPreSport(sportId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setPrematchActive: (value) => dispatch(setPrematchActive(value)),\r\n        selectLocation: (value) => dispatch(selectLocation(value)),\r\n        selectLeague: (value) => dispatch(selectLeague(value)),\r\n        getPrematchSports: (value) => dispatch(getPrematchSports(value)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        getPrematchSportsMobile: (value, segment) => dispatch(getPrematchSportsMobile(value, segment)),\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { selectLeague, setLocationsActive, setPrematchActive, getPrematchLeagueEvents } from '../../store/actions/prematchActions';\r\nimport Loading from '../Common/NewLoading';\r\n\r\nfunction League(props) {\r\n    const handleClick = (e, leagueId) => {\r\n        e.preventDefault();\r\n        props.selectLeague(leagueId);\r\n        props.setLocationsActive(false);\r\n        props.setPrematchActive(true);\r\n    };\r\n    const { leagues, loading, language } = props;\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    let drawLeagues = leagues\r\n        ? map(leagues, (item, i) => {\r\n              let leagueId = item.location_id;\r\n              let leagueName = item[lang] || item.name || item.name_en;\r\n              let count = item.fixtures_count;\r\n              let divider = leagues.length - 1 > i ? <div className=\"location__divider\"></div> : null;\r\n\r\n              return (\r\n                  <div className=\"mx-auto\" key={leagueId}>\r\n                      <Grid container className=\"m-0 justify-content-md-center\" onClick={(e) => handleClick(e, leagueId)}>\r\n                          <Grid item xs={10} className=\"location__league p-0\">\r\n                              {leagueName}\r\n                          </Grid>\r\n                          <Grid item xs={1} className=\"p-0\">\r\n                              {count}\r\n                          </Grid>\r\n                          <Grid item xs={1} className=\"p-0\">\r\n                              <i className=\"material-icons align-i\"> keyboard_arrow_right </i>\r\n                          </Grid>\r\n                      </Grid>\r\n                      {divider}\r\n                  </div>\r\n              );\r\n          })\r\n        : null;\r\n\r\n    return <div className=\"location__content\">{ loading ? <Loading /> : drawLeagues}</div>;\r\n}\r\n\r\nLeague.propTypes = {\r\n    selectLeague: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setPrematchActive: PropTypes.func,\r\n    getPrematchLeagueEvents: PropTypes.func,\r\n    leagues: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        leagues: state.prematch.leagues,\r\n        loading: state.general.loading,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectLeague: (leagueId) => dispatch(selectLeague(leagueId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setPrematchActive: (value) => dispatch(setPrematchActive(value)),\r\n        getPrematchLeagueEvents: (leagueId) => dispatch(getPrematchLeagueEvents(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(League);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport League from './League';\r\nimport Loading from '../Common/NewLoading';\r\nimport { getPrematchLeagueForLocation, getPrematchLocations, getPrematchLocationsMobile, selectLocation, setClearLocations, clearPartialLocations } from '../../store/actions/prematchActions';\r\n\r\nlet sportEventInterval;\r\nclass Locations extends Component {\r\n\r\n    componentDidMount() {\r\n            this.props.clearPartialLocations();\r\n            this.props.getPrematchLocationsMobile();\r\n            sportEventInterval = setInterval(() => {\r\n                this.props.clearPartialLocations();\r\n                this.props.getPrematchLocationsMobile();\r\n            }, 300000);\r\n            \r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.getPrematchLocations();\r\n        }\r\n        if (this.props.selectedLocation) {\r\n            this.props.getPrematchLeagueForLocation(this.props.selectedLocation);\r\n        }\r\n\r\n        if(prevProps.selectedSport !== this.props.selectedSport) {\r\n            // this.props.clearPartialLocations();\r\n            this.props.getPrematchLocationsMobile();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n\r\n    handleClick = (e, locationId) => {\r\n        let { selectedLocation } = this.props;\r\n        if (selectedLocation === locationId) {\r\n            e.preventDefault();\r\n            let locState = selectedLocation === locationId || locationId === null ? false : true;\r\n            locationId = locState ? locationId : null;\r\n            this.props.selectLocation(locationId);\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n            let locState = selectedLocation === locationId || locationId === null ? false : true;\r\n            locationId = locState ? locationId : null;\r\n            this.props.selectLocation(locationId);\r\n            this.props.getPrematchLeagueForLocation(locationId);\r\n\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { locations, selectedLocation, noLocations, language } = this.props;\r\n        let lang = `name_${language.toLowerCase()}`;\r\n        let locationLength = locations ? locations.length : 0;\r\n        let locationsList =\r\n            locations.length > 0 ? (\r\n                locations.map((item, i) => {\r\n                    let locationId = item.location_id;\r\n                    let locationName = item[lang] || item.name || item.name_en;\r\n                    let count = item.fixtures_count;\r\n                    let divider = locationLength - 1 > i ? <div className=\"location__divider\"> </div> : null;\r\n\r\n                    return (\r\n                        <div className={`location ${selectedLocation === locationId ? 'location_open' : ''}`} key={locationId}>\r\n                            <Grid\r\n                                container\r\n                                className=\"justify-content-md-center location__item mx-auto p-0 pb-2 \"\r\n                                onClick={(e) => this.handleClick(e, locationId)}\r\n                            >\r\n                                <Grid item xs={10} className=\"d-flex align-items-center p-0\">\r\n                                    <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"flag\"></div>\r\n                                    <span className=\"ellipsis pr-3\">{locationName}</span>\r\n                                </Grid>\r\n                                <Grid item xs={1} className=\"p-0\">\r\n                                    {count}\r\n                                </Grid>\r\n                                <Grid item xs={1} className=\"p-0\">\r\n                                    <i className=\"material-icons location__rotate-icon\"> keyboard_arrow_right </i>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {divider}\r\n\r\n                            <League />\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : noLocations ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            ) : (\r\n                <Loading />\r\n            );\r\n\r\n        return <div className=\"disable-select pt-2\">{locationsList}</div>;\r\n    }\r\n}\r\n\r\nLocations.propTypes = {\r\n    locations: PropTypes.array,\r\n    selectedLocation: PropTypes.number,\r\n    getPrematchLocations: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n    noLocations: PropTypes.bool,\r\n    getPrematchLeagueForLocation: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locations: state.prematch.locations,\r\n        selectedLocation: state.prematch.selectedLocation,\r\n        selectedSport: state.prematch.selectedSport,\r\n        noLocations: state.prematch.noLocations,\r\n        language: state.general.language,\r\n    }; \r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPrematchLocations: () => dispatch(getPrematchLocations()),\r\n        selectLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n        getPrematchLeagueForLocation: (locationId) => dispatch(getPrematchLeagueForLocation(locationId)),\r\n        setClearLocations: () => dispatch(setClearLocations()),\r\n        clearPartialLocations: () => dispatch(clearPartialLocations()),\r\n        getPrematchLocationsMobile: () => dispatch(getPrematchLocationsMobile()),\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport { Translate } from '../../localization';\r\nimport { setDateFilter, getPrematchLocations } from '../../store/actions/prematchActions';\r\n\r\nfunction DateFilters(props) {\r\n    const handleClick = (e, value) => {\r\n        e.preventDefault();\r\n        props.setDateFilter(value);\r\n        // props.getPrematchLocations(sportId);\r\n    };\r\n\r\n    let { dateFilter, selectedSport } = props;\r\n    let dateList = [];\r\n\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const handleSearchToggle = () => {\r\n        setShowSearch(!showSearch);\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n       props.handleSearch(e.target.value);\r\n    }\r\n\r\n    const hideSearchBar = () => {\r\n        setShowSearch(false);\r\n        props.handleSearch('');\r\n        \r\n    };\r\n\r\n    useEffect(() => hideSearchBar(),[selectedSport]);\r\n\r\n    for (var i = 0; i < 8; i++) {\r\n        let date = new Date();\r\n        let day = date.setDate(date.getDate() + i);\r\n        let dayFormat = format(day, 'yyyy-MM-dd');        \r\n        let dayFormatToShow = format(day, 'dd/MM');\r\n        if (i>=1){\r\n            let date = new Date();\r\n             day = date.setDate(date.getDate() +i-1);\r\n             dayFormat = format(day, 'yyyy-MM-dd');\r\n             dayFormatToShow = format(day, 'dd/MM');\r\n        }\r\n\r\n        dateList.push(\r\n            <div key={i} className={`date-filter__item pre-match-wrapper ${dateFilter === dayFormat && 'date-filter__item_active'}`} onClick={(e) => handleClick(e, dayFormat)}>\r\n                <span>{i === 0 ? Translate.all : i === 1 ? Translate.today : i === 2 ? Translate.tomorrow : dayFormatToShow}</span>\r\n            </div>,\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"date-filter__list\">\r\n                {showSearch ? (\r\n                    <div className=\"sports__content sports__content_sm\">\r\n                    <div className=\"sports__search-bar\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ml-2 form-control sports__search-input\"\r\n                            autoFocus\r\n                            placeholder={Translate.searchHere}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <i className=\"icon-search\" />\r\n                        <div className=\"sports__close-search\">\r\n                            <i className=\"material-icons text-body\" onClick={hideSearchBar}>\r\n                                close\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"livesearch sear-btn btn1\">\r\n                        <div className=\"live-icn\" onClick={handleSearchToggle}>\r\n                            <i className=\"icon-search live-search-icon d-inline-block\"></i>\r\n                        </div>\r\n                    </div>\r\n                    {dateList}\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n        <div className=\"location__divider\"></div>\r\n        </>\r\n    );\r\n}\r\nDateFilters.propTypes = {\r\n    dateFilter: PropTypes.string,\r\n    setDateFilter: PropTypes.func,\r\n    getPrematchLocations: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dateFilter: state.prematch.dateFilter,\r\n        selectedSport: state.prematch.selectedSport,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDateFilter: (value) => dispatch(setDateFilter(value)),\r\n        getPrematchLocations: (sportId) => dispatch(getPrematchLocations(sportId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DateFilters);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Sports from './Sports';\r\nimport Locations from './Locations';\r\nimport DateFilters from './DateFilters';\r\nimport Events from './Events';\r\nimport { clearLocations, setClearLocations, searchEvents, setPrematchDateFilter, resetPrematch } from '../../store/actions/prematchActions';\r\nlet timer = 0;\r\nclass Prematch extends Component {\r\n    componentWillUnmount() {\r\n        let fromXtraMarket = localStorage.getItem('fromExtraMarketPrematch');\r\n        if(fromXtraMarket !== 'true') {\r\n            this.props.setClearLocations();\r\n            this.props.setPrematchDateFilter();\r\n            this.props.resetPrematch();\r\n        }\r\n        localStorage.setItem('fromExtraMarketPrematch', false);\r\n    }\r\n    \r\n    searchPrematchEvents = (value) => {\r\n        const requestDelay = 400;\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.search(value);\r\n        }, requestDelay);\r\n\r\n    }\r\n\r\n    render() {\r\n        let { isLocationsActive, isPrematchActive, searchValue, searchStarted } = this.props;\r\n        return (\r\n            <div className=\"main-container\">\r\n\r\n\r\n                <Sports />\r\n                {isLocationsActive && (\r\n                    <>\r\n                        <DateFilters handleSearch={this.searchPrematchEvents} searchPath=\"/sports/search\" />\r\n                        { !searchStarted && searchValue === ''  ? <Locations /> : <Events />}\r\n                    </>\r\n                )}\r\n                {isPrematchActive && (\r\n                <Events />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPrematch.propTypes = {\r\n    isLocationsActive: PropTypes.bool,\r\n    isPrematchActive: PropTypes.bool,\r\n    clearLocations: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLocationsActive: state.prematch.isLocationsActive,\r\n        isPrematchActive: state.prematch.isPrematchActive,\r\n        searchValue: state.prematch.searchValue,        \r\n        searchStarted: state.prematch.searchStarted,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        search: (searchVal) => dispatch(searchEvents(searchVal)),\r\n        setClearLocations: () => dispatch(setClearLocations()),\r\n        setPrematchDateFilter: () => dispatch(setPrematchDateFilter()),\r\n        resetPrematch: () => dispatch(resetPrematch()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Prematch);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { changePassword, setChangePasswordError } from '../../store/actions/user.actions';\r\nimport { Translate } from '../../localization';\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputOldPassword: '',\r\n            inputNewPassword: '',\r\n            inputConfirmPassword: '',\r\n            oldPasswordError: false,\r\n            newPasswordError: false,\r\n            confirmPasswordError: false,\r\n            passwordMatchError: false,\r\n            changePasswordLoading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.changePasswordSuccess !== this.props.changePasswordSuccess) {\r\n            this.props.hideChangePassword();\r\n        }\r\n\r\n        if (prevState.inputOldPassword !== this.state.inputOldPassword) {\r\n            this.props.setChangePasswordError('');\r\n\r\n            if (!this.state.inputOldPassword) {\r\n                this.setState({ oldPasswordError: true });\r\n            } else {\r\n                this.setState({ oldPasswordError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputNewPassword !== this.state.inputNewPassword) {\r\n            this.props.setChangePasswordError('');\r\n            this.setState({ passwordMatchError: false });\r\n\r\n            if (!this.state.inputNewPassword) {\r\n                this.setState({ newPasswordError: true });\r\n            } else {\r\n                this.setState({ newPasswordError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputConfirmPassword !== this.state.inputConfirmPassword) {\r\n            this.props.setChangePasswordError('');\r\n            this.setState({ passwordMatchError: false });\r\n\r\n            if (!this.state.inputConfirmPassword) {\r\n                this.setState({ confirmPasswordError: true });\r\n            } else {\r\n                this.setState({ confirmPasswordError: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setChangePasswordError('');\r\n        this.props.hideChangePassword();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (!this.state.oldPasswordError && !this.state.newPasswordError && !this.state.confirmPasswordError) {\r\n            if (this.state.inputOldPassword.length > 0 && this.state.inputNewPassword.length > 0 && this.state.inputConfirmPassword.length > 0) {\r\n                if (this.state.inputNewPassword === this.state.inputConfirmPassword) {\r\n                    this.setState({\r\n                        changePasswordLoading: true,\r\n                        passwordMatchError: false,\r\n                    });\r\n                    this.props.changePassword(this.state.inputOldPassword, this.state.inputNewPassword);\r\n                } else {\r\n                    this.setState({ passwordMatchError: true });\r\n                }\r\n            } else {\r\n                if (this.state.inputOldPassword.length === 0) {\r\n                    this.setState({\r\n                        oldPasswordError: true,\r\n                    });\r\n                }\r\n                if (this.state.inputNewPassword.length === 0) {\r\n                    this.setState({\r\n                        newPasswordError: true,\r\n                    });\r\n                }\r\n                if (this.state.inputConfirmPassword.length === 0) {\r\n                    this.setState({\r\n                        confirmPasswordError: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value,\r\n            changePasswordLoading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { changePasswordError } = this.props;\r\n        let { oldPasswordError, newPasswordError, confirmPasswordError, changePasswordLoading, passwordMatchError } = this.state;\r\n\r\n        return (\r\n            <Dialog onClose={this.props.hideChangePassword} aria-labelledby=\"change-password-dialog-title\" open={true} className=\"auth__modal\" scroll=\"body\">\r\n                <DialogTitle id=\"change-password-dialog-title\" disableTypography>\r\n                    <h3 className=\"m-0 fs-17\">{Translate.changePassword}</h3>\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={this.props.hideChangePassword}>\r\n                        <i className=\" material-icons fs-22\"> close </i>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            this.handleSubmit();\r\n                        }}\r\n                    >\r\n                        <div className={`mt-1 ${oldPasswordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                autoFocus\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.oldPassword}\r\n                                id=\"inputOldPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"old-password\"\r\n                            />\r\n                            {oldPasswordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                        </div>\r\n                        <div className={`mt-2 ${newPasswordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={ Translate.newPassword}\r\n                                id=\"inputNewPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"new-password\"\r\n                            />\r\n                            {newPasswordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                        </div>\r\n                        <div className={`mt-2 ${confirmPasswordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={ Translate.confirmPassword}\r\n                                id=\"inputConfirmPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"confirm-password\"\r\n                            />\r\n                            {confirmPasswordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                        </div>\r\n                        <div className=\"auth__btn-wrap\">\r\n                            {changePasswordError && (\r\n                                <p className=\"auth__error auth__error_with-icon md \">\r\n                                    <span className=\"material-icons icon mr-2 align-middle fs-22\">error_outline</span>\r\n                                    <span className=\"d-inline-block align-middle\">{changePasswordError}</span>\r\n                                </p>\r\n                            )}\r\n\r\n                            {passwordMatchError && (\r\n                                <p className=\"auth__error auth__error_with-icon md \">\r\n                                    <span className=\"material-icons icon mr-2 align-middle fs-22\">error_outline</span>\r\n                                    <span className=\"d-inline-block align-middle\">New and Confirmed password must match</span>\r\n                                </p>\r\n                            )}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                                type=\"submit\"\r\n                                disabled={changePasswordLoading && !changePasswordError}\r\n                            >\r\n                                {Translate.change}\r\n                                {changePasswordLoading && !changePasswordError && <LoadingIcon />}\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n    hideChangePassword: PropTypes.func,\r\n    changePassword: PropTypes.func,\r\n    setChangePasswordError: PropTypes.func,\r\n    changePasswordSuccess: PropTypes.bool,\r\n    changePasswordError: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        changePasswordSuccess: state.user.changePasswordSuccess,\r\n        changePasswordError: state.user.changePasswordError,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePassword: (oldPassword, newPassword) => dispatch(changePassword(oldPassword, newPassword)),\r\n        setChangePasswordError: (error) => dispatch(setChangePasswordError(error)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nconst CashbackModal = ( {closeModal, cashbackAmount, currency, getCashbackSucess } ) => (\r\n    <Dialog onClose={closeModal} aria-labelledby=\"Casback Popup\" open={true} scroll=\"paper\" >\r\n        \r\n        <DialogContent >\r\n            <div className=\"d-flex flex-column text-center\">\r\n                <div className=\"fs-20\"> Here is your Cashback </div>\r\n                <div className=\"fs-26 text-green font-weight-semibold\"> {cashbackAmount} {currency} </div>\r\n                <div className=\"text-center\">\r\n                    <img className=\"bonus-icon-popup\" alt=\"bonus icon\" src=\"./images/bonusPopup.svg\"></img>\r\n                </div>\r\n            </div>\r\n            <div className= \"d-flex mt-2\">\r\n                <div>\r\n                    <Button\r\n                    type=\"button\"\r\n                    className = \"save-for-later-btn fs-16\"\r\n                    variant=\"contained\"\r\n                    onClick={closeModal}\r\n                    > Save for later </Button>\r\n                </div>\r\n                <div className= \"pl-2\">\r\n                    <Button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    className = \"accept-cashback-btn fs-16\"\r\n                    variant=\"contained\"\r\n                    onClick={()=> {\r\n                        getCashbackSucess();\r\n                        closeModal();\r\n                    }}\r\n                    > Accept Now </Button>\r\n\r\n                </div>\r\n            </div>\r\n        </DialogContent>\r\n    </Dialog>\r\n);\r\n\r\nexport default CashbackModal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { depositAmount,resetDepositAmount, getUser } from '../../store/actions/user.actions';\r\nimport { Translate } from '../../localization';\r\nimport QRCode from 'react-qr-code'\r\n\r\nclass DepositModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            amount: 0,\r\n            error: null,\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.qr_code !== this.props.qr_code\r\n            || prevProps.depositError !== this.props.depositError){\r\n                this.setState({ ...this.state, loading: false })\r\n            }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.getUser();\r\n        this.props.resetDepositAmount()\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const { amount } = this.state\r\n        if (amount <= 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                error: 'Amount should be greater than zero'\r\n            })\r\n        } else {\r\n            this.props.depositAmount(amount)\r\n            this.setState({ ...this.state, loading: true })\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            amount: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.props.hideDepositForm} aria-labelledby=\"change-password-dialog-title\" open={true} className=\"auth__modal\" scroll=\"body\">\r\n                <DialogTitle id=\"change-password-dialog-title\" disableTypography>\r\n                    { this.props.qr_code ? '' : <h3 className=\"m-0 fs-17\">{Translate.deposit}</h3> }\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={this.props.hideDepositForm}>\r\n                        <i className=\" material-icons fs-22\"> close </i>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    { this.props.qr_code\r\n                        ? (\r\n                            <div className='qr_code'>\r\n                                <QRCode value={ this.props.qr_code } />\r\n                                <h3>{ Translate.qrScan }</h3>\r\n                            </div>\r\n                        )\r\n                        : (<form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                this.handleSubmit();\r\n                            }}\r\n                        >\r\n                            <div className={`mt-1`}>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    autoFocus\r\n                                    className=\"auth__input\"\r\n                                    placeholder={Translate.enterAmount}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {\r\n                                    !!this.props.depositError ? <p className=\"auth__error sm\">{ this.props.depositError }</p>\r\n                                        : this.state.error && <p className=\"auth__error sm\">{ this.state.error }</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"auth__btn-wrap\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                                    type=\"submit\"\r\n                                    disabled={ this.state.loading }\r\n                                >\r\n                                    {this.state.loading ? <LoadingIcon /> : Translate.continue }\r\n                                </Button>\r\n                            </div>\r\n                        </form>)\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDepositModal.propTypes = {\r\n    hideDepositForm: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        qr_code: state.user.qr_code,\r\n        depositError: state.user.depositError,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        depositAmount: (amount) => dispatch(depositAmount(amount)),\r\n        resetDepositAmount: () => dispatch(resetDepositAmount()),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositModal);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ChangePassword from './ChangePassword';\r\nimport { getCashbackData, getCashbackSucess, logoutUser } from '../../store/actions/user.actions';\r\nimport CashbackModal from './CashbackModal';\r\nimport DepositModal from './DepositModal';\r\nimport { toastr } from 'react-redux-toastr';\r\n\r\nclass MyAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showChangePassword: false,\r\n            showCashbackModal: false,\r\n            showDepositModal: false,\r\n            oddType: 'decimal'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.getCashbackData();\r\n        if(this.props.userData?.username && localStorage.getItem('oddType')) {\r\n            this.setState({oddType: localStorage.getItem('oddType')});\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.qr_code !== this.props.qr_code\r\n            || prevProps.depositError !== this.props.depositError) {\r\n            this.handleDepositAmount();\r\n        }\r\n    }\r\n    \r\n    handleDepositAmount = () => {\r\n        const { qr_code, depositError } = this.props;\r\n        if(depositError){\r\n            toastr.error('', depositError);\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.logoutUser();\r\n        this.GoToPage('/');\r\n    };\r\n\r\n    GoToPage = (path) => {\r\n        this.props.history.push(path);\r\n    };\r\n\r\n    showChangePasswordForm = (e) => {\r\n        this.setState({ showChangePassword: true });\r\n    };\r\n\r\n    showDepositForm = (e) => {\r\n        this.setState({ showDepositModal: true });\r\n    };\r\n\r\n    showBonus = () => {\r\n        this.setState({ showCashbackModal: true});\r\n    }\r\n\r\n    closeBonus = () => {\r\n        this.setState({ showCashbackModal: false});\r\n    } \r\n\r\n    hideChangePassword = () => {\r\n        this.setState({ showChangePassword: false });\r\n    };\r\n\r\n    hideDepositForm = () => {\r\n        this.setState({ showDepositModal: false });\r\n    };\r\n\r\n    redirectToTermsPage = () => {\r\n        this.GoToPage('/terms-page');\r\n    }\r\n\r\n    handelOddsTypeChange = (e) => {\r\n        this.setState({oddType: e.target.value}, () => {\r\n            localStorage.setItem('oddType', e.target.value);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { userData, cashbackData, getCashbackSucess } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';        \r\n        let { showChangePassword, showCashbackModal, showDepositModal, oddType } = this.state;\r\n\r\n        let depositAllowedUser = ['player1', 'player2', 'player3'];\r\n       \r\n        return (\r\n            <div className=\"bg-gradient my-account-section\">\r\n                <div className=\"main-container my-account-detail\">\r\n                    <div className=\"userimg-div\">\r\n                        <img src=\"/images/user.png\" className=\"user-img\"/>\r\n                    </div>\r\n                    <Grid container className=\"my-account__header mx-auto bg-head-gray text-white align-items-center\">\r\n                        {/* <Grid item xs={12} className=\"pl-2 pr-1 text-center \">\r\n                            <span className=\"my-account__header-icon\">\r\n                                <i className=\"icon-my-account\"></i>\r\n                                <img src = \"/images/banner_casino 2.png\" className=\"user-img\"/>\r\n                            </span>\r\n                        </Grid> */}\r\n                        <Grid item xs={12} className=\"pr-0 text-left user-name\">\r\n                            <span className=\"my-account__text player-name d-block ellipsis\">{userData && userData.username}</span>\r\n                        </Grid>\r\n                        {/* <Grid item xs={5} className=\"my-account__text text-right\">\r\n                            {userData && Util.toFixedDecimal(userData.balance)} {currency}\r\n                        </Grid> */}\r\n                        {/* <div className=\"user-bg-img\">\r\n                            <img src=\"/images/user-1.png\" className=\"w-100\"/>\r\n                        </div> */}\r\n                    </Grid>\r\n\r\n                    <Link to=\"/my-account/transactions\" className=\"d-block\">\r\n                        <Grid container className=\"line-height-40 mx-auto icon-gray py-3 cursor-pointer align-items-center\">\r\n                            <Grid item xs={10} md={10} className=\"pr-0 text-left my-account__text\">\r\n                                {Translate.transaction}\r\n                            </Grid> \r\n                            <Grid item xs={2} className=\"pl-2 pr-1 text-center my-account__icon d-flex align-items-center justify-content-center\">\r\n                                {/* <i className=\"icon-transaction  color-dark\"></i> */}\r\n                                <img src=\"/images/sports-img.svg\" className=\"color-dark\" style={{width: '25px'}}/>\r\n                            </Grid>                           \r\n                        </Grid>\r\n                    </Link>\r\n\r\n                    <div className=\"my-account__divider\"></div>\r\n\r\n                    <Grid container className=\"line-height-40 mx-auto icon-gray py-3 cursor-pointer d-flex align-items-center justify-content-center\" onClick={this.showChangePasswordForm}>\r\n                        <Grid item xs={10} md={10} className=\"pr-0 text-left my-account__text\">\r\n                            {Translate.changePassword}\r\n                        </Grid>\r\n                        <Grid item xs={2} className=\"pl-2 pr-1 text-center my-account__icon\">\r\n                            {/* <i className=\"icon-password\"></i> */}\r\n                            <img src=\"/images/lock.svg\" className=\"color-dark\" style={{width: '25px'}}/>\r\n                        </Grid>                       \r\n                    </Grid>\r\n\r\n                    <div className=\"my-account__divider\"></div>\r\n                    <Grid container className=\" line-height-40 mx-auto icon-gray py-3 cursor-pointer align-items-center\" >\r\n                        <Grid item xs={7} className=\"pr-0 text-left my-account__text\" > \r\n                            Odds Type\r\n                        </Grid>\r\n\r\n                    \r\n                        <Grid item xs={5} className=\"pl-2 pr-1 d-flex justify-content-end align-items-center text-center my-account__icon\">\r\n                            <Select value={oddType} onChange={this.handelOddsTypeChange}>\r\n                                <MenuItem value=\"decimal\">\r\n                                    <em> Decimal </em>\r\n                                </MenuItem>\r\n                                <MenuItem value=\"fraction\">\r\n                                    <em> Fraction </em>\r\n                                </MenuItem>\r\n                                <MenuItem value=\"american\">\r\n                                    <em> American Odds </em>\r\n                                </MenuItem>\r\n                            </Select>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    {\r\n                    userData && depositAllowedUser.includes(userData.username) && (\r\n                        <Grid container className=\"mx-auto icon-gray py-3 cursor-pointer align-items-center disabled\" onClick={this.showDepositForm}>  \r\n                            <Grid item xs={10} md={10} className=\"pr-0 text-left my-account__text\">\r\n                                {Translate.deposit}\r\n                            </Grid>\r\n                            <Grid item xs={2} className=\"pl-2 pr-1 text-center my-account__icon\">\r\n                                <i className=\"icon-transaction\"></i>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                }\r\n                \r\n\r\n                    <Grid container className={`line-height-40 mx-auto icon-gray py-3 cursor-pointer justify-content-center d-flex align-items-center ${cashbackData?.is_cashback_available? '' : 'disabled'}`} onClick={this.showBonus}>\r\n                        <Grid item xs={10} className=\"pr-0 text-left my-account__text\">\r\n                            {Translate.bonus}\r\n                        </Grid>\r\n                        <Grid item xs={2} className=\"pl-2 pr-1 d-flex justify-content-center align-items-center text-center my-account__icon\">\r\n                            {cashbackData?.is_cashback_available ? <img className=\"account-icons\" alt=\"bonus icon\" src=\"./images/bonus.svg\" style={{width: '25px'}}></img> : \r\n                            <img  src=\"/images/bonus-img.svg\" style={{width: '30px'}}></img> }\r\n                                \r\n                        </Grid>                       \r\n                    </Grid>\r\n                        \r\n                    <div className=\"my-account__divider\"></div>\r\n\r\n                    <Grid container className=\" line-height-40 disabled mx-auto icon-gray py-3 cursor-pointer align-items-center\" >\r\n                        <Grid item xs={10} className=\"pr-0 text-left my-account__text\" > \r\n                            {Translate.termsAndConditon}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className=\"pl-2 pr-1 d-flex justify-content-center align-items-center text-center my-account__icon\">\r\n                            <img className=\"account-icons\" alt=\"Terms and Conditions\" src=\"/images/tc.svg\" style={{width: '20px'}}></img> \r\n                        </Grid>\r\n                        {/* TODO: onClick={this.redirectToTermsPage} */}                       \r\n                    </Grid>\r\n\r\n                    <div className=\"my-account__divider\"></div>\r\n\r\n                    <Grid container className=\" line-height-40 mx-auto icon-gray py-3 cursor-pointer align-items-center\" onClick={this.logout}>\r\n                        <Grid item xs={10} className=\"pr-0 text-left my-account__text\">\r\n                            {Translate.logout}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className=\"pl-2 pr-1 text-center my-account__icon\">\r\n                            <i className=\"icon-logout color-dark\"></i>\r\n                        </Grid>                        \r\n                    </Grid>\r\n\r\n                    \r\n\r\n\r\n                    {/* <div className=\"my-account__divider\"></div> */}\r\n\r\n                    {showChangePassword && <ChangePassword hideChangePassword={this.hideChangePassword} />}\r\n                    {showDepositModal && <DepositModal hideDepositForm={this.hideDepositForm} />}\r\n                    {showCashbackModal && <CashbackModal getCashbackSucess={getCashbackSucess} currency={currency} cashbackAmount={cashbackData.cashback_amount} closeModal={this.closeBonus} /> }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyAccount.propTypes = {\r\n    userData: PropTypes.object,\r\n    logoutUser: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n        cashbackData: state.user.cashbackData,\r\n        qr_code: state.user.qr_code,\r\n        depositError: state.user.depositError\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logoutUser: () => dispatch(logoutUser()),\r\n        getCashbackData: () => dispatch(getCashbackData()),\r\n        getCashbackSucess: () => dispatch(getCashbackSucess()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccount);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport map from 'lodash.map';\r\nimport { isValid, differenceInDays } from 'date-fns';\r\nimport { CASINO_TYPES, getTransactionTypes } from '../../config';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MuiPickersUtilsProvider from '@material-ui/pickers/MuiPickersUtilsProvider';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers/DatePicker';\r\nimport { getTransactions, setTransactionsFilter, clearTransactions } from '../../store/actions/transaction.actions';\r\nimport { Translate } from '../../localization';\r\n\r\n\r\nlet yesterday = new Date();\r\nyesterday.setDate(yesterday.getDate() - 1);\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dateFrom: yesterday,\r\n            dateTo: new Date(),\r\n            activityType: 'all',\r\n            activityTypesMobile: <div></div>,\r\n            activityTypesDesktop: <div></div>\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTransactions();\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        let { tab } = this.props;\r\n        if(prevProps.tab !== tab) {\r\n            this.props.clearTransactions();\r\n            let defaultActivityType = 'all';\r\n            this.setState({ dateTo: new Date(), dateFrom: yesterday, activityType: defaultActivityType }, () => {\r\n                this.setTransactions();\r\n            });\r\n        }\r\n\r\n        if(prevProps.language !== this.props.language) {\r\n            this.setTransactions();\r\n        }\r\n\r\n    }\r\n\r\n    setTransactions() {\r\n        let { dateFrom, dateTo, activityType } = this.state;\r\n        let { tab } = this.props;\r\n        let params = { dateFrom, dateTo, activityType };\r\n        this.setActivityType(tab);\r\n        this.props.getTransactions(tab, params, true);\r\n        this.props.setTransactionsFilter(params);\r\n    }\r\n    \r\n\r\n\r\n    setActivityType = (tab) => {\r\n        let activityTypes;\r\n        if(tab === 'sports book') {\r\n            activityTypes = getTransactionTypes();\r\n        }\r\n        else activityTypes = CASINO_TYPES;\r\n\r\n        const activityTypesMobile = map(activityTypes, (type, index) => (\r\n            <option key={index} value={type.value}>\r\n                {type.label}\r\n            </option>\r\n        ));\r\n        \r\n        const activityTypesDesktop = map(activityTypes, (type, index) => (\r\n            <MenuItem key={index} value={type.value}>\r\n                {type.label}\r\n            </MenuItem>\r\n        ));\r\n\r\n        this.setState({ activityTypesMobile, activityTypesDesktop });\r\n    }\r\n    handleChangeDateFrom = (date) => {\r\n        this.setState({ dateFrom: date });\r\n    };\r\n\r\n    handleChangeDateTo = (date) => {\r\n        this.setState({ dateTo: date });\r\n    };\r\n\r\n    handleChangeSelect = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    onSearchTransactions = () => {\r\n        let { dateFrom, dateTo } = this.state;\r\n\r\n        // if date to is invalid\r\n        if (dateTo !== null) {\r\n            if (!isValid(dateTo)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date from is invalid\r\n        if (dateFrom !== null) {\r\n            if (!isValid(dateFrom)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if date range is invalid\r\n        if (dateTo !== null && dateFrom !== null) {\r\n            if (differenceInDays(dateTo, dateFrom) < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        this.setTransactions();\r\n\r\n    };\r\n\r\n    render() {\r\n        let { dateFrom, dateTo, activityType, activityTypesMobile, activityTypesDesktop } = this.state;\r\n\r\n        return (\r\n            <div className=\"transaction__filters\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container className=\"m-0\">\r\n                        {/* From Date - start */}\r\n                        <Grid item xs={6} className=\"mb-2 pr-2\">\r\n                            <InputLabel shrink>{Translate.fromDate}</InputLabel>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={dateFrom}\r\n                                onChange={this.handleChangeDateFrom}\r\n                                minDateMessage=\"Invalid Date\"\r\n                                maxDateMessage=\"Invalid Date\"\r\n                                maxDate={dateTo}\r\n                            />\r\n                        </Grid>\r\n                        {/* From Date - end */}\r\n\r\n                        {/* To Date - start */}\r\n                        <Grid item xs={6} className=\"mb-2 pl-2\">\r\n                            <InputLabel shrink>{Translate.toDate}</InputLabel>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={dateTo}\r\n                                onChange={this.handleChangeDateTo}\r\n                                minDateMessage=\"Invalid Date\"\r\n                                maxDateMessage=\"Invalid Date\"\r\n                            />\r\n                        </Grid>\r\n                        {/* To Date - end */}\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <Grid container className=\"m-0 align-items-end\">\r\n                    {/* Activity Type - start */}\r\n                    <Grid item xs={6} className={`pr-2 `}>\r\n                        <FormControl className=\"select select_mobile\">\r\n                            <InputLabel shrink>{Translate.activityType}</InputLabel>\r\n                            <NativeSelect value={activityType} onChange={this.handleChangeSelect} inputProps={{ name: 'activityType' }}>\r\n                                {activityTypesMobile}\r\n                            </NativeSelect>\r\n                        </FormControl>\r\n\r\n                        <FormControl className=\"select select_desktop\">\r\n                            <InputLabel shrink>{Translate.activityType}</InputLabel>\r\n                            <Select value={activityType} name=\"activityType\" onChange={this.handleChangeSelect}>\r\n                                {activityTypesDesktop}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    {/* Activity Type - end */}\r\n\r\n                    <Grid item xs={6} className=\"text-right pl-2\">\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth size=\"medium\" onClick={this.onSearchTransactions}>\r\n                            {Translate.show}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    getTransactions: PropTypes.func,\r\n    setTransactionsFilter: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearTransactions: () => dispatch(clearTransactions()),\r\n        getTransactions: (tab, params, firstPage) => dispatch(getTransactions(tab, params, firstPage)),\r\n        setTransactionsFilter: (params) => dispatch(setTransactionsFilter(params)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filters);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { format, parseISO } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { getTransactions, clearTransactions } from '../../store/actions/transaction.actions';\r\nimport { Translate } from '../../localization';\r\n\r\nclass Table extends Component {\r\n    componentWillUnmount() {\r\n        this.props.clearTransactions();\r\n    }\r\n\r\n    fetchMoreData = () => {\r\n        let { filterParams, tab, countBets, totalResultCount, fetchMore} = this.props;\r\n\r\n        if(countBets < totalResultCount && fetchMore)\r\n        {\r\n            this.props.getTransactions(tab, filterParams, false);\r\n        }\r\n\r\n        // if (hasNextPage) {\r\n        //     this.props.getTransactions(tab, filterParams, false);\r\n        // }\r\n    };\r\n\r\n    render() {\r\n        let { transactions, loadingTransactions, userData, countBets, totalResultCount, fetchMore } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n        let transactionsList =\r\n            transactions && transactions.length > 0\r\n                ? map(transactions, (transaction) => {\r\n                      let amount = Util.toFixedDecimal(transaction.amount);\r\n                      let amountClassname = amount >= 0 ? '' : 'text-red';\r\n                      return (\r\n                          <tr key={transaction.id}>\r\n                              <td>\r\n                                  <div className=\"transaction__date\">\r\n                                      <div>\r\n                                          <time>{format(parseISO(transaction.created), 'dd/MM/yy')}</time>\r\n                                      </div>\r\n                                      <div>\r\n                                          <time>{format(parseISO(transaction.created), 'kk:mm')}</time>\r\n                                      </div>\r\n                                  </div>\r\n                              </td>\r\n                              <td>{transaction.trans_type ? transaction.trans_type : '-'}</td>\r\n                              <td className=\"text-capitalize\">\r\n                                  {transaction.journal_entry === 'credet'\r\n                                      ? Translate.credit\r\n                                      : transaction.journal_entry === 'debet'\r\n                                      ? Translate.debit\r\n                                      : transaction.journal_entry}\r\n                              </td>\r\n                              <td className={amountClassname}>\r\n                                  {amount} {currency}\r\n                              </td>\r\n                          </tr>\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n                let runAgain ;\r\n                if(countBets < totalResultCount )\r\n                {\r\n                    runAgain = true;\r\n                }\r\n                if(!fetchMore)\r\n                {\r\n                    runAgain = false;\r\n                }\r\n\r\n        let drawTransactions = loadingTransactions ? (\r\n            <Loading />\r\n        ) : transactionsList.length > 0 ? (\r\n            <>\r\n                <InfiniteScroll\r\n                    dataLength={transactionsList.length}\r\n                    next={this.fetchMoreData}\r\n                    hasMore={runAgain}\r\n                    loader={<LoadingIcon theme=\"dark centered\" />}\r\n                >\r\n                    <table className=\"transaction__table mb-1\">\r\n                        <thead>\r\n                            <tr className=\"transaction__table-head\">\r\n                                <th>{Translate.dateTime}</th>\r\n                                <th>{Translate.gameType}</th>\r\n                                <th>{Translate.type}</th>\r\n                                <th>{Translate.amount}</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{transactionsList}</tbody>\r\n                    </table>\r\n                </InfiniteScroll>\r\n            </>\r\n        ) : (\r\n            <Fragment>\r\n                <img src=\"/images/no-data.png\" alt=\"no-data\" className=\"w-25 text-center\"/>\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">{Translate.nothingFound}</div>\r\n            </Fragment>\r\n        );\r\n\r\n        return (\r\n            <div className=\"pb-3\">\r\n                <div className=\"transaction__table-wrap text-center\">\r\n                    {drawTransactions}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    transactions: PropTypes.array,\r\n    loadingTransactions: PropTypes.bool,\r\n    //hasNextPage: PropTypes.bool,\r\n    fetchMore: PropTypes.bool,\r\n    filterParams: PropTypes.object,\r\n    getTransactions: PropTypes.func,\r\n    clearTransactions: PropTypes.func,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactions: state.transaction.transactions,\r\n        loadingTransactions: state.transaction.loadingTransactions,\r\n       // hasNextPage: state.transaction.hasNextPage,\r\n        countBets : state.transaction.countBets,\r\n        totalResultCount : state.transaction.totalResultCount,\r\n        fetchMore : state.transaction.fetchMore,\r\n        filterParams: state.transaction.filterParams,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTransactions: (params, firstPage) => dispatch(getTransactions(params, firstPage)),\r\n        clearTransactions: () => dispatch(clearTransactions()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Filters from './Filters';\r\nimport Table from './Table';\r\nimport { selectTransactionTab } from '../../store/actions/transaction.actions';\r\nimport { Translate } from '../../localization';\r\nimport { CASINO_TRANSACTION_OPTIONS, LIVE_CASINO_TRANSACTION_OPTIONS } from '../../config';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { map } from 'lodash';\r\nclass Transactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: 'sports book',\r\n            selectedOption: '',\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { isActive } = this.state;\r\n        this.props.selectTransactionTab(isActive);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { isActive } = this.state;\r\n        if (prevProps.language !== this.props.language) {\r\n            this.setActiveTab(isActive);\r\n        }\r\n    }\r\n\r\n    setActiveTab = (tab) => {\r\n        this.setState({ isActive: tab });\r\n        this.props.selectTransactionTab(tab);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n      if(this.state.selectedOption !== e.target.value) {\r\n          this.setState({ selectedOption: e.target.value });\r\n          this.setActiveTab(e.target.value);\r\n      }\r\n  }\r\n\r\n  getCasinoTransactionOptions = () => {\r\n      const { isActive } = this.state;\r\n\r\n      if (CASINO_TRANSACTION_OPTIONS.map(type => type.id).includes(isActive)) {\r\n          return CASINO_TRANSACTION_OPTIONS;\r\n      } else if (LIVE_CASINO_TRANSACTION_OPTIONS.map(type => type.id).includes(isActive)) {\r\n          return LIVE_CASINO_TRANSACTION_OPTIONS;\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n    render() {\r\n      let { isActive, selectedOption } = this.state;\r\n      return (\r\n            <>\r\n                <div className=\"main-container mybet\" >\r\n                    <Grid container className=\"mybet__result\">\r\n                        <Grid item xs={3} className={`${isActive === 'sports book' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('sports book')}>\r\n                            {Translate.sportsBook}\r\n                        </Grid>\r\n                        <Grid item xs={3} className={`${isActive === 'casino' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('GG-Slot casino')}>\r\n                            Casino\r\n                        </Grid>\r\n                        <Grid item xs={3} className={`${isActive === 'live casino' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('live casino')}>\r\n                            Live Casino\r\n                        </Grid>\r\n                        {/* <Grid item xs={3} className={`${isActive === 'GG-Slot casino' ? 'active' : ''}`} onClick={(e) => this.setActiveTab('GG-Slot casino')}>\r\n                            GG-Slot\r\n                        </Grid> */}\r\n            \r\n                    </Grid>\r\n                    \r\n                    <Filters tab={isActive} language={this.props.language}/>\r\n                    {[\r\n                        ...CASINO_TRANSACTION_OPTIONS.map(type => type.id),\r\n                        ...LIVE_CASINO_TRANSACTION_OPTIONS.map(type => type.id)]\r\n                        .includes(isActive) && (\r\n                            <FormControl className=\"transaction__filters ml-3 mb-2 select select_mobile\">\r\n                                <InputLabel shrink>Casino Type</InputLabel>\r\n                                <NativeSelect value={selectedOption} onChange={this.handleChange} inputProps={{ name: 'casinoType' }}>\r\n                                    {map(this.getCasinoTransactionOptions(), (type) => (\r\n                                        <option key={type.id} value={type.id}>{type.label}</option>\r\n                                    ))}\r\n                                </NativeSelect>\r\n                            </FormControl>\r\n                    )}\r\n                    <Table tab={isActive} />\r\n                </div>\r\n            \r\n            </>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectTransactionTab: (tab) => dispatch(selectTransactionTab(tab)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Transactions);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\nimport { isEmpty } from 'lodash';\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, isSortedMarkets) => {\r\n        if (isSortedMarkets) {\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            props.openMarketsModal(event);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    let { event, mainSelectedMarket, language } = props;\r\n    let lang = `name_${language?.toLowerCase()}`;\r\n    let leagueName = event.league[lang] ? event.league[lang] : event.league.Name;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let isSortedMarkets = !isEmpty(event.market);\r\n    if (mainMarketEvent === undefined) return null;\r\n    return (\r\n        <div className=\"match__panel\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} />\r\n                    <MatchDateTime fixture={event} showDate={true} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                        <Participants participants={[ event.participant_one_full,event.participant_two_full]} />\r\n                        {/* {cards}\r\n                        <MatchResult isLive={isLive} livescore={livescore} /> */}\r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        <ExtraMarkets onClick={(e) => openExtraOddsModal(event, isSortedMarkets)} />\r\n                    </Grid>\r\n\r\n                    <MainMarket market={mainMarketEvent} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.prematch.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Match));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague, setLocationsActive, setPrematchActive } from '../../store/actions/prematchActions';\r\nimport { isEmpty } from 'lodash';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        // If league is not in search results\r\n        if (props.searchStarted) {\r\n            props.removeLeague(leagueId);\r\n        } else {\r\n            props.setLocationsActive(true);\r\n            props.setPrematchActive(false);\r\n        }\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, setExtraMarkets, selectExtraMarket } = props;\r\n    let lastLeagueId = null;\r\n\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n\r\n                  if (!isEmpty(e.league) && lastLeagueId === e.league.Id) {\r\n                      divider = null;\r\n                  } else if(!isEmpty(e.league)) {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = leagueId;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && !isEmpty(e.market) && !isEmpty(e.league) &&  (\r\n                          <div className='my-2'  key={'panel_' + e.fixture_id}>\r\n                              {groupInfo}\r\n                              {divider}\r\n                              <Match event={e} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setPrematchActive: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchStarted: state.prematch.searchStarted,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setPrematchActive: (value) => dispatch(setPrematchActive(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../Shared/MainMarketSelector';\r\nimport Loading from '../Common/NewLoading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport { selectMainMarket, getPrematchLeagueEvents, setPrematchResetPage, clearLeagueEvents, getMarketData, searchEvents } from '../../store/actions/prematchActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\n\r\nlet sportEventInterval;\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        sportEventInterval = setInterval(() => {\r\n            let { mainEvents } = this.props;\r\n            forEach(mainEvents, (event, i) => {\r\n                this.props.getMarketData(event.fixture_id, 0, i, mainEvents.length, false, i === 0 ? true : false);\r\n            });\r\n        }, 300000);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setPrematchResetPage();\r\n\r\n            if (!this.props.searchValue !== '') {\r\n                // this.props.getPrematchLeagueEvents(this.props.selectedLeague);\r\n            } else {\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearLeagueEvents();\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            if (this.props.searchValue === '') {\r\n                this.props.getPrematchLeagueEvents(this.props.nextIndex);\r\n                // if is in main page\r\n            } else {\r\n                // if is in search page\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event } = this.state;\r\n        let { selectMainMarket, mainSelectedMarket, mainEvents, noSearchResults, noEvents, hasNextPage, searchValue, selectedSport, setExtraMarkets, selectExtraMarket } = this.props;\r\n\r\n        let groupedEventsBySport =\r\n            mainEvents &&\r\n            mainEvents[0] &&\r\n            mainEvents[0].sport_id &&\r\n            groupBy(mainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        // let groupedEventsByStatusAndSport = {};\r\n\r\n        // forEach(groupedEventsByStatus, (group, status) => {\r\n        //     let eventsGroup = groupBy(group, function (event) {\r\n        //         return `_${event.sport_id}`;\r\n        //     });\r\n\r\n        //     groupedEventsByStatusAndSport[status] = eventsGroup;\r\n        // });\r\n\r\n        let matchesInplay = [];\r\n        let matchesPrematch = [];\r\n\r\n\r\n            \r\n                forEach(groupedEventsBySport, (gr, sportId) => {\r\n                    if (gr.length > 0) {\r\n                        let marketSelector = (\r\n                            <MainMarketSelector selectMainMarket={selectMainMarket} mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedSport]} mainSelectedMarket={mainSelectedMarket} />\r\n                        );\r\n\r\n                        let groupMatches = <Matches selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={gr} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                        matchesPrematch.push(\r\n                            <div key={`${sportId}`}>\r\n                                {marketSelector}\r\n                                {groupMatches}\r\n                            </div>,\r\n                        );\r\n                    }\r\n                })\r\n\r\n        let matches = [...matchesInplay, ...matchesPrematch];\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <InfiniteScroll\r\n                        dataLength={mainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={hasNextPage}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {/* {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                </div>\r\n            ) : noSearchResults || noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            ) : (\r\n                searchValue === '' ? <Loading/> : <Loading/>\r\n            );\r\n\r\n        return <div className=\"events__wrap pre-match-wrapper\">{drawContent}</div>;\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedLeague: PropTypes.number,\r\n    searchValue: PropTypes.string,\r\n    mainEvents: PropTypes.array,\r\n    searchStarted: PropTypes.bool,\r\n    selectMainMarket: PropTypes.func,\r\n    getPrematchLeagueEvents: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    language: PropTypes.string,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    setPrematchResetPage: PropTypes.func,\r\n    clearLeagueEvents: PropTypes.func,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.prematch.selectedLeague,\r\n        searchValue: state.prematch.searchValue,\r\n        mainEvents: state.prematch.mainEvents,\r\n        searchStarted: state.prematch.searchStarted,\r\n        mainSelectedMarket: state.prematch.mainSelectedMarket,\r\n        noSearchResults: state.prematch.noSearchResults,\r\n        noEvents: state.prematch.noEvents,\r\n        language: state.general.language,\r\n        hasNextPage: state.prematch.hasNextPage,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        selectedSport: state.prematch.selectedSport,\r\n        nextIndex: state.prematch.nextIndex,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getPrematchLeagueEvents: (leagueId) => dispatch(getPrematchLeagueEvents(leagueId)),\r\n        search: (value) => dispatch(searchEvents(value)),\r\n        setPrematchResetPage: () => dispatch(setPrematchResetPage()),\r\n        clearLeagueEvents: () => dispatch(clearLeagueEvents()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        getMarketData: (fixture_id, startIndex, i, count, isSearch, clear) => dispatch(getMarketData(fixture_id, startIndex, i, count, isSearch, clear))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='footer-50'>\r\n\r\n\r\n<footer className=\"footer\" style={{\"color\":\"#ffffff\",\"borderTop\":\"1px solid rgb(13 129 89)\",\"background\":\"none\"}}>\r\n    <div className=\"footer-wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2 flex-first footer-licenses\">\r\n            <img\r\n              src=\"/images/logo.png\"\r\n              alt=\"18 Plus\"\r\n\r\n              \r\n            />\r\n          </div>\r\n          <div className=\"col-2 hidden-md-down footer-menu\">\r\n            <h4 className=\"footer-title\">Links</h4>\r\n            <ul className=\"vertical-nav footer-nav-wrapper\">\r\n              <li className=\"footer-nav\">\r\n                <a href=\"http://localhost:3000/d/About\" title=\"About Us\">\r\n                  About Us\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/promotions\"\r\n                  title=\"Promotions\"\r\n                >\r\n                  Promotions\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/affiliates\"\r\n                  title=\"Affiliates\"\r\n                >\r\n                  Affiliates\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/customer-service\"\r\n                  title=\"Customer Service\"\r\n                >\r\n                  Customer Service\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/terms-conditions\"\r\n                  title=\"Terms & Conditions\"\r\n                >\r\n                  Terms &amp; Conditions\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/terms-of-use\"\r\n                  title=\"Terms of Use\"\r\n                >\r\n                  Terms of Use\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/privacy-policy\"\r\n                  title=\"Privacy Policy\"\r\n                >\r\n                  Privacy Policy\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.maxbet.tn/en/responsible-gaming\"\r\n                  title=\"Responsible Gaming\"\r\n                >\r\n                  Responsible Gaming\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-12 col-lg-4 flex-last footer-copyright\">\r\n            <div className=\"footer-copyright-top\">\r\n              <div\r\n                id=\"ceg-fcefd863-0c3f-459a-8611-fcaaa39c1b75\"\r\n                data-ceg-seal-id=\"fcefd863-0c3f-459a-8611-fcaaa39c1b75\"\r\n                data-ceg-image-size={100}\r\n                data-ceg-image-type=\"basic-large\"\r\n              />\r\n              <b>Copyright 2023 Verbet. All Rights Reserved 2023</b>\r\n            </div>\r\n            <p>\r\n              &nbsp;\r\n              <a\r\n                href=\"https://marbouha365.tn/\"\r\n                title=\"Link: verbet365.com\"\r\n              >\r\n              </a>\r\n              \r\n              <br />\r\n            </p>\r\n            <div>\r\n              Le gain maximal est 100.000 dinars dans un mois , voir termes et\r\n              conditions\r\n            </div>\r\n            <div>\r\n              <br />\r\n            </div>\r\n            <p />\r\n          </div>\r\n          <div className=\"col-2 hidden-md-down flex-unordered footer-payment\">\r\n            <h4 className=\"footer-title\">Payment methods</h4>\r\n            <img\r\n              src=\"https://www.starsbet365.com/remote-assets/1655388399_f3bfee33-ce8b-4e08-8926-81d960f8b7d11.png\"\r\n              alt=\"Footer payment image\"\r\n              className=\"payment-image-footer\"\r\n              />\r\n          </div>\r\n          \r\n          <div className=\"col-2 hidden-md-down flex-last footer-social\">\r\n            <h4 className=\"footer-title\">Social Media</h4>\r\n            <a\r\n              href=\"#/\"\r\n              title=\"facebook\"\r\n              className=\"footer-like\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n            </a>\r\n            <a\r\n              href=\"/ggslot\"\r\n              title=\"youtube\"\r\n              className=\"footer-icon\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-youtube-square\" aria-hidden=\"true\" />\r\n            </a>\r\n            <a\r\n              href=\"/ggslot\"\r\n              title=\"instagram\"\r\n              className=\"footer-icon\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </footer>\r\n            \r\n            \r\n\r\n\r\n   \r\n        </div>\r\n                \r\n         \r\n    )\r\n}\r\nexport default Footer\r\n\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from '../Components/Common/Header';\r\nimport DesktopHeader from '../Desktop/Common/Header';\r\nimport Navigator from '../Components/Common/Navigator';\r\nimport Footer from './Footer';\r\n\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n    let headerClassname = rest.headerClass ? rest.headerClass : '';\r\n    let pageTitle = rest.title ? rest.title : '';\r\n    const component = (props) => (\r\n        <>\r\n            { rest.isMobileOnly ? (\r\n                <Header {...props} headerClassname={headerClassname} pageTitle={pageTitle} />\r\n            ) : (\r\n                <DesktopHeader { ...props } />\r\n            )}\r\n            <Component {...props} extraMarketChild={ rest.extraMarketChild } />\r\n            { rest.isMobileOnly && (<Navigator {...props} title={pageTitle}/> )}\r\n            { rest.isMobileOnly || <Footer/>}\r\n        </>\r\n    );\r\n    return <Route {...rest} component={component} />;\r\n}\r\n\r\nexport default PublicRoute;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport {Translate} from '../../localization';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from 'react-router-dom';\r\nimport Login from '../Login';\r\nimport SignUp from '../SignUp';\r\nimport {isEmpty} from 'lodash';\r\nimport {getDeviceLocation, setLanguage} from '../../store/actions/general.actions';\r\nimport {setLocationsActive, setPrematchActive} from '../../store/actions/prematchActions';\r\nimport {getCashbackData} from '../../store/actions/user.actions';\r\nimport { getJackPot } from '../../store/actions/user.actions';\r\nimport { differenceInMinutes } from 'date-fns';\r\nimport Confetti from 'react-confetti'\r\n\r\nlet jackpotInterval;\r\nconst options = ['fr','en', 'de' ];\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.header = React.createRef();\r\n\r\n        this.state = {\r\n            anchorEl: null,\r\n            selectedIndex: 0,\r\n            showLogin: false,\r\n            showSignUp: false,\r\n            showMenu: false,\r\n            cashbackAvailable: false,\r\n            theme: '',\r\n            limit:0,\r\n            jackPotClass: 'disabled',\r\n            showConfetti: false,\r\n            jackpotMsg:'',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userSelectedLang = this.props.language;\r\n        let userSelectedLangIndex = options.indexOf(userSelectedLang);\r\n\r\n        this.props.getDeviceLocation();\r\n\r\n        if (userSelectedLangIndex !== this.state.selectedIndex) {\r\n\r\n            Translate.setLanguage(userSelectedLang);\r\n            this.setState({\r\n                selectedIndex: userSelectedLangIndex,\r\n            });\r\n        }\r\n\r\n        if (this.props.userData) {\r\n            // this.props.getCashbackData();\r\n        }\r\n\r\n        if (!isEmpty(this.props.cashbackData)) {\r\n            this.setState({cashbackAvailable: this.props.cashbackData.is_cashback_available});\r\n        }\r\n\r\n\r\n        window.addEventListener('scroll', this.toggleHeader, false);\r\n        if (!localStorage.getItem('theme')) {\r\n            document.body.classList.remove('dark-mode');\r\n            localStorage.setItem('theme', 'light-mode');\r\n            this.setState({theme: 'light-mode'});\r\n        } else if (localStorage.getItem('theme') && localStorage.getItem('theme') === 'dark-mode') {\r\n            document.body.classList.add('dark-mode');\r\n            this.setState({theme: 'dark-mode'});\r\n        }\r\n         if (this.props.userData && this.props.userData.is_jackpot_enabled && this.props.userData.last_jackpot_run) {\r\n            let currentTimeDiff = differenceInMinutes(new Date(), new Date(this.props.userData.last_jackpot_run)) * 60;\r\n            let addLimit = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            let amountPerSec = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            this.setState({ limit: currentTimeDiff * amountPerSec });\r\n\r\n            jackpotInterval = setInterval(() => {\r\n                this.setState({ limit: this.state.limit + addLimit });\r\n                if (this.state.limit >= this.props.userData.jackpot_amount) {\r\n                    this.setState({ jackPotClass: '' });\r\n                    clearInterval(jackpotInterval);\r\n                    this.props.getJackPot();\r\n                }\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let {userData, cashbackData} = this.props;\r\n\r\n        if (prevProps.country !== this.props.country && (this.props.country === 'NL' || this.props.country === 'DE') && !localStorage.getItem('language')) {\r\n            let lang = this.props.country === 'NL' ? 'nl' : 'de';\r\n            Translate.setLanguage(lang);\r\n            let userSelectedLangIndex = options.indexOf(lang);\r\n            this.changeLanguage(null, userSelectedLangIndex);\r\n            this.setState({\r\n                selectedIndex: userSelectedLangIndex,\r\n            });\r\n        }\r\n\r\n        if (prevProps.userData !== userData && userData) {\r\n            // getCashbackData();\r\n        }\r\n\r\n        if (prevProps.cashbackData !== cashbackData && !isEmpty(cashbackData)) {\r\n            this.setState({cashbackAvailable: this.props.cashbackData.is_cashback_available});\r\n        }\r\n\r\n        if(localStorage.getItem('refCode') && !this.state.showSignUp && !this.isLoggedIn() && localStorage.getItem('firstRefCodeHit')){\r\n            this.showSignUpForm();\r\n            localStorage.removeItem('firstRefCodeHit');\r\n        }\r\n         if (!prevProps.userData && prevProps.userData !== this.props.userData && this.props.userData.last_jackpot_run && this.props.userData.is_jackpot_enabled) {\r\n            let currentTimeDiff = differenceInMinutes(new Date(), new Date(this.props.userData.last_jackpot_run)) * 60;\r\n            let addLimit = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            let amountPerSec = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            this.setState({ limit: currentTimeDiff * amountPerSec });\r\n\r\n            jackpotInterval = setInterval(() => {\r\n                this.setState({ limit: this.state.limit + addLimit });\r\n                if (this.state.limit >= this.props.userData.jackpot_amount) {\r\n                    this.setState({ jackPotClass: '' });\r\n                    clearInterval(jackpotInterval);\r\n                    this.props.getJackPot();\r\n                }\r\n            }, 1000);\r\n        }\r\n\r\n        if (prevProps.jackPotError !== this.props.jackPotError && this.props.jackPotError) {\r\n            clearInterval(jackpotInterval);\r\n            this.setState({ jackPotClass: 'disabled' });\r\n             if(this.props.jackPotError ==='success') {\r\n                this.setState({showConfetti:true})\r\n                   setTimeout(()=>{                           // show animation if user wins jackpot for 10 sec\r\n                       this.setState({showConfetti:false})\r\n                   },10000)\r\n                this.setState({jackpotMsg:`${this.props.jackpotUserName} won the jackpot`});\r\n                setTimeout(()=>{                          \r\n                       this.setState({jackpotMsg:''});\r\n                   },10000)\r\n            }\r\n            setTimeout(() => {\r\n                // restart jackpot after 10 sec\r\n\r\n                let currentTimeDiff = differenceInMinutes(new Date(), new Date(this.props.userData.last_jackpot_run)) * 60;\r\n                let addLimit = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n                let amountPerSec = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n                this.setState({ limit: currentTimeDiff * amountPerSec });\r\n\r\n                jackpotInterval = setInterval(() => {\r\n                    this.setState({ limit: this.state.limit + addLimit });\r\n                    if (this.state.limit >= this.props.userData.jackpot_amount) {\r\n                        this.setState({ jackPotClass: '' });\r\n                        clearInterval(jackpotInterval);\r\n                         this.props.getJackPot();\r\n                    }\r\n                }, 1000);\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(jackpotInterval);\r\n        this.header.current.classList.remove('header_dark');\r\n        window.removeEventListener('scroll', this.toggleHeader, false);\r\n    }\r\n\r\n    toggleHeader = () => {\r\n        if (this.props.headerClassname === 'header_transparent') {\r\n            if (window.pageYOffset > this.header.current.clientHeight) {\r\n                this.header.current.classList.add('header_dark');\r\n            } else {\r\n                this.header.current.classList.remove('header_dark');\r\n            }\r\n        }\r\n    };\r\n\r\n    goToPage = (path) => {\r\n        this.props.history.push(path);\r\n    };\r\n\r\n    onGoBack = () => {\r\n        if (this.props.location.pathname === '/sports' && !this.props.isLocationsActive) {\r\n            this.props.setLocationsActive(true);\r\n            this.props.setPrematchActive(false);\r\n        } else this.props.history.goBack();\r\n    };\r\n\r\n    handleClickMenu = (event) => {\r\n        this.setState({\r\n            anchorEl: event.currentTarget,\r\n        });\r\n    };\r\n\r\n    changeLanguage = (event, index) => {\r\n        let language = options[index];\r\n        // FIXME: For the temp work we will be sending fr as code for Portuguese language (pt)\r\n        //if  (language === 'pt') language = 'fr';\r\n        Translate.setLanguage(language);\r\n        this.props.setLanguage(Translate.getLanguage());\r\n        localStorage.setItem('language', language);\r\n\r\n        this.setState({\r\n            anchorEl: null,\r\n            selectedIndex: index,\r\n        });\r\n    };\r\n\r\n    changeLanguageMobile = (event) => {\r\n        let index = parseInt(event.target.value);\r\n        let language = options[index];\r\n        // FIXME: For the temp work we will be sending fr as code for Portuguese language \"pt\"\r\n        //if  (language === 'pt') language = 'fr';\r\n        Translate.setLanguage(language);\r\n        this.props.setLanguage(Translate.getLanguage());\r\n        localStorage.setItem('language', language);\r\n\r\n        this.setState({\r\n            selectedIndex: index,\r\n        });\r\n    };\r\n\r\n    handleCloseMenu = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({showLogin: true});\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({showLogin: false});\r\n    };\r\n\r\n    showSignUpForm = (e) => {\r\n        this.setState({showSignUp: true});\r\n    };\r\n\r\n    hideSignUp = () => {\r\n        this.setState({showSignUp: false});\r\n    };\r\n\r\n    isLoggedIn = () => {\r\n        const {access_token} = Util.getAccessToken();\r\n        const isUserLoggedIn = Util.isAuthTokenValid(access_token);\r\n        return isUserLoggedIn;\r\n    };\r\n    handleToggle = () => {\r\n        if (localStorage.getItem('theme') && localStorage.getItem('theme') === 'dark-mode') {\r\n            localStorage.setItem('theme', 'light-mode');\r\n            document.body.classList.remove('dark-mode');\r\n            this.setState({theme: 'light-mode'});\r\n        } else if (localStorage.getItem('theme') && localStorage.getItem('theme') === 'light-mode') {\r\n            localStorage.setItem('theme', 'dark-mode');\r\n            document.body.classList.add('dark-mode');\r\n            this.setState({theme: 'dark-mode'});\r\n        } else {\r\n            localStorage.setItem('theme', 'light-mode');\r\n            document.body.classList.remove('dark-mode');\r\n            this.setState({theme: 'light-mode'});\r\n        }\r\n    }\r\n\r\n    menuToggle = () => {\r\n        if (!this.state.showMenu)\r\n            this.setState({showMenu: true});\r\n        else this.setState({showMenu: false});\r\n    }\r\n\r\n    render() {\r\n        let {anchorEl, selectedIndex, showLogin, showSignUp, jackpotMsg} = this.state;\r\n        let {userData, location, headerClassname} = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'R$' : userData.currency : 'R$';\r\n\r\n        const languageList = options.map((option, index) => (\r\n            <MenuItem key={option} selected={index === selectedIndex}\r\n                      onClick={(event) => this.changeLanguage(event, index)} className=\"text-uppercase\">\r\n                {option}\r\n            </MenuItem>\r\n        ));\r\n\r\n        const languageListMobile = options.map((option, index) => (\r\n            <option key={option} value={index} className=\"text-uppercase\">\r\n                {option.toUpperCase()}\r\n            </option>\r\n        ));\r\n\r\n        let isNotHome = false;\r\n        if (location.pathname !== '/') {\r\n            isNotHome = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n              {this.state.showConfetti &&  <div style={{zIndex:'99999'}}> <Confetti\r\n                  width={window.innerWidth||300}\r\n                  height={window.innerHeight ||200}\r\n                  numberOfPieces={1000}\r\n               /></div>}\r\n                {this.state.showMenu &&\r\n                <>\r\n                    <div className=\"show-mobile\" onClick={this.menuToggle} />\r\n                    <div className=\"runinmobile\">\r\n                        <ul className=\"nav-menu-items\">\r\n                            <li>\r\n                                <Link to='/'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/home-gray.svg\" alt=\"home-gray\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.home}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/sports'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/sportsf.svg\" alt=\"sportsf\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.sports}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/live'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/liveF.svg\" alt=\"liveF\" liveF className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.live}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/upcoming'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/todayf.svg\" alt=\"todayf\" todayf className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.today}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/ggslot'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/live-casinof.svg\" alt=\"live-casinof\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.casino}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            {/* <li>\r\n                                <Link to='/live-casino'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/virtual-sportf.png\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.liveCasino}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li> */}\r\n                            {/* <li>\r\n                                <Link to='/new-casino'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/pragmaticf.png\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.pragmaticPlay}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li> */}\r\n                            {/* <li>\r\n                                <Link to='/virtual-sports'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/virtual-gamesf.png\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.virtualSports}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li> */}\r\n                            <li>\r\n                                <Link to='/favorites'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/starf.svg\" alt=\"starf\" startf className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.favorites}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/results'>\r\n                                    <div className=\"menu-box\">\r\n                                        <img src=\"images/resultf.svg\" alt=\"resultf\" className=\"menu_img\"/>\r\n                                        <div className=\"text-menu\">{Translate.results}</div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n\r\n\r\n                        </ul>\r\n                    </div>\r\n                </>}\r\n\r\n                <div\r\n                    className={`container header_fix d-flex align-items-center justify-content-between bg-white mui-fixed ${headerClassname}`}\r\n                    ref={this.header}>\r\n                    <div className=\"menu-mobile\" onClick={this.menuToggle}>\r\n                        <img src=\"/images/menu.png\" alt=\"menu\" style={{paddingTop: \"5px\", width: '33px', paddingRight: '5px'}}/>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        {\r\n                            isNotHome && (\r\n                                <div>\r\n                                    {/* <span onClick={(e) => this.goToPage('/')}>\r\n                                    <img src=\"/images/logo-mark.png\" style={{ paddingTop: \"5px\", width: '20px', paddingRight: '5px'}}/>\r\n                                </span> */}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        {/*  {showBackBtn && (\r\n                        <button className=\"header__back-btn btn-icon text-white p-1\" onClick={this.onGoBack}>\r\n                            <i className=\"material-icons text-white\"> keyboard_arrow_left </i>\r\n                        </button>\r\n                    )}\r\n                    {pageTitle ? (\r\n                        <p className=\"header__title my-0\">{Translate[pageTitle]}</p>\r\n                    ) : (\r\n                        <span className=\"text-white font-weight-bold disable-select header__logo-wrap\" onClick={(e) => this.goToPage('/')}>\r\n                            <img src=\"./images/logo2.png\" alt=\"Logo\" />\r\n                        </span>\r\n                    )}*/}\r\n                        <span className=\"text-white font-weight-bold disable-select header__logo-wrap\"\r\n                              onClick={(e) => this.goToPage('/')}>\r\n                            <img  style={{width:'167px'}} src=\"/images/logo.png\" alt=\"Logo\"/>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"fs-22 d-flex align-items-center justify-content-end\">\r\n                        <div className=\"language-select\">\r\n                        <span\r\n                            aria-haspopup=\"true\"\r\n                            aria-controls=\"language-menu\"\r\n                            className=\"language-select__selected text-uppercase\"\r\n                            onClick={this.handleClickMenu}\r\n                        >\r\n                            {options[selectedIndex]}\r\n                        </span>\r\n\r\n                            <Menu\r\n                                id=\"language-menu\"\r\n                                className=\"language-select__menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={this.handleCloseMenu}\r\n                            >\r\n                                {languageList}\r\n                            </Menu>\r\n                        </div>\r\n                        {/* <label for='time' class=\"mb-0 mr-2\">\r\n                        <input className='toggle-checkbox' type='checkbox' checked={ this.state.theme === 'dark-mode' } id='time' onClick={ this.handleToggle }></input>\r\n                        <div className='toggle-slot'>\r\n                            <div className='toggle-button'></div>\r\n                        </div>\r\n                    </label> */}\r\n                        {this.isLoggedIn() ? (\r\n                            <Link className=\"header__balance\" to=\"/my-account\">\r\n                                <span>{userData ? `${Util.toFixedDecimal(userData.balance)}` : 'Loading...'}</span>\r\n                                <br/>\r\n                                <span className=\"currency-text\">{currency}</span>\r\n                            </Link>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <img src=\"/images/us.png\" alt=\"us\" width='35px' height='35px' style={{marginRight:'18px'}} onClick={this.showLoginForm}/>\r\n                                {/*<button className=\"btn-in-header\" onClick={this.showLoginForm}>*/}\r\n                                {/*    {Translate.login}*/}\r\n                                {/*</button>*/}\r\n                                {/* <button className=\"btn-in-header\" onClick={this.showSignUpForm}>\r\n                                {Translate.signup}\r\n                            </button> */}\r\n                            </Fragment>\r\n                        )}\r\n\r\n                        <div className=\"language-drop\">\r\n                            <select className=\"language-select_mobile text-uppercase\" value={selectedIndex}\r\n                                    onChange={this.changeLanguageMobile}>\r\n                                {languageListMobile}\r\n                            </select>\r\n                            <div>\r\n                                <img src=\"/images/bottom-arrow.svg\" alt=\"bottom-arrow\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {showLogin && <Login hideLogin={this.hideLogin}/>}\r\n                    {showSignUp && <SignUp hideSignUp={this.hideSignUp}/>}\r\n                </div>\r\n                 {userData && userData.is_jackpot_enabled && userData.last_jackpot_run &&  (\r\n                            <div id=\"w-100\">\r\n                                <div id=\"jackpotMobile\">\r\n                                    {/* <a href=\"/jackpot\" class=\"  \"> */}\r\n                                    <span id=\"ss\" className={this.state.jackPotClass}>\r\n                                        Jackpot\r\n                                    </span>\r\n                                    {/* </a> */}\r\n                                    <span id=\"s\">{Util.toFixedDecimal(+this.state.limit)}</span>\r\n                                    <span id=\"ss\">TND</span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {jackpotMsg &&<span className='jackpotmsg'>{this.state.jackpotMsg}</span>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLanguage: PropTypes.func,\r\n    language: PropTypes.string,\r\n    headerClassname: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n        isLocationsActive: state.prematch.isLocationsActive,\r\n        country: state.general.country,\r\n        cashbackData: state.user.cashbackData,\r\n        jackPotError: state.user.jackPotError,\r\n        jackpotUserName:state.user.jackpotUserName,\r\n        jackpotAmount:state.user.jackpotAmount\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLanguage: (value) => dispatch(setLanguage(value)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setPrematchActive: (value) => dispatch(setPrematchActive(value)),\r\n        getDeviceLocation: () => dispatch(getDeviceLocation()),\r\n        getCashbackData: () => dispatch(getCashbackData()),\r\n         getJackPot: () => dispatch(getJackPot()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from '../../localization';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { submitSignUp } from '../../store/actions/user.actions';\r\nimport { validation } from '../../Desktop/SignUp/validation';\r\nimport { Link } from 'react-router-dom';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { agentCode } from '../../config';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputUsername: '',\r\n            inputPassword: '',\r\n            inputPhoneNo: '',\r\n            inputConfirmPassword: '',\r\n            currencyName: 'EUR',\r\n            bankAccountNo: '',\r\n            bankAccountName: 'HANA BANK',\r\n            agentCode: agentCode,\r\n            code: '',\r\n            checked: true,\r\n            checkedError: false,\r\n            usernameError: false,\r\n            passwordError: false,\r\n            confirmPasswordError: false,\r\n            misMatchError: false,\r\n            bankAccountNoError: false,\r\n            agentCodeError: false,\r\n            loading: false,\r\n            phonenoError: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.signupError !== this.props.signupError) {\r\n            this.setState({ ...this.state, loading: false })\r\n        }\r\n        if (prevState.inputUsername !== this.state.inputUsername) {\r\n\r\n            if (!this.state.inputUsername) {\r\n                this.setState({ usernameError: true });\r\n            } else if (this.state.inputUsername.length < validation.userName.min_length || this.state.inputUsername.length > validation.userName.max_length) {\r\n                 this.setState({ usernameError: true });\r\n            } else{\r\n                this.setState({ usernameError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputPassword !== this.state.inputPassword) {\r\n\r\n            if (!this.state.inputPassword) {\r\n                this.setState({ passwordError: true });\r\n            } else if (this.state.inputPassword.length < validation.passWord.min_length || this.state.inputPassword.length>validation.passWord.max_length) {\r\n                this.setState({ passwordError: true });\r\n            } else {\r\n                this.setState({ passwordError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputConfirmPassword !== this.state.inputConfirmPassword) {\r\n\r\n            if (!this.state.inputConfirmPassword) {\r\n                this.setState({ confirmPasswordError: true });\r\n            } else {\r\n                this.setState({ confirmPasswordError: false });\r\n            }\r\n        }\r\n        if (prevState.inputConfirmPassword !== this.state.inputConfirmPassword) {\r\n\r\n            if (this.state.inputPassword !== this.state.inputConfirmPassword) {\r\n                this.setState({ misMatchError: true });\r\n            } else {\r\n                this.setState({ misMatchError: false });\r\n            }\r\n        }\r\n        //  if (prevState.inputPhoneNo !== this.state.inputPhoneNo) {\r\n\r\n        //     if (this.state.inputPhoneNo !== this.state.inputPhoneNo) {\r\n        //         this.setState({ phonenoError: true });\r\n        //     } else  if (this.state.inputPhoneNo.length != validation.PhoneNo.length) {\r\n        //         this.setState({ phonenoError: true });\r\n        //     } else {\r\n        //           this.setState({ phonenoError: false });\r\n        //     }\r\n        // }\r\n        if (prevState.bankAccountNo !== this.state.bankAccountNo) {\r\n\r\n            if (!this.state.bankAccountNo) {\r\n                this.setState({ bankAccountNoError: true });\r\n            } else {\r\n                this.setState({ bankAccountNoError: false });\r\n            }\r\n        }\r\n        if (prevState.agentCode !== this.state.agentCode) {\r\n\r\n            if (!this.state.agentCode) {\r\n                this.setState({ agentCodeError: true });\r\n            } else {\r\n                this.setState({ agentCodeError: false });\r\n            }\r\n        }\r\n        if (prevState.checked !== this.state.checked) {\r\n\r\n            if (!this.state.checked) {\r\n                this.setState({ checkedError: true });\r\n            } else {\r\n                this.setState({ checkedError: false });\r\n            }\r\n        }\r\n\r\n   }\r\n   \r\n    handleSubmit = () => {\r\n        const { inputUsername, inputPassword, inputConfirmPassword, inputPhoneNo, bankAccountNo ,  agentCode,currencyName,bankAccountName,code} = this.state \r\n        let check = true;\r\n        if(inputUsername.length < validation.userName.min_length || inputUsername.length > validation.userName.max_length ) {\r\n            check = false;\r\n            this.setState({\r\n                     usernameError: true,\r\n                 });\r\n        } \r\n          \r\n         if(inputPassword.length < validation.passWord.min_length || inputPassword.length > validation.passWord.max_length) {\r\n             check = false;\r\n             this.setState({\r\n                   passwordError : true,\r\n                 });\r\n        }  \r\n         if(inputConfirmPassword.length < validation.passWord.min_length || inputConfirmPassword.length > validation.passWord.max_length) {\r\n             check = false;\r\n             this.setState({\r\n                   confirmPasswordError : true,\r\n                 });\r\n        }  \r\n         if (inputPassword !== inputConfirmPassword) {\r\n             check = false;\r\n                 this.setState({\r\n                     misMatchError: true,\r\n                 });\r\n        }    \r\n        // if(bankAccountNo.length === 0) {\r\n        //     check = false;\r\n        //     this.setState({\r\n        //         bankAccountNoError: true,\r\n        //     })\r\n        // }  \r\n        \r\n        if(!this.state.checked){\r\n            check = false;\r\n            this.setState({checkedError: true})\r\n        }\r\n         if (check)\r\n             {\r\n               this.setState({ ...this.state, loading: true }); \r\n               const obj = {inputUsername, inputPhoneNo, inputPassword, inputConfirmPassword, currencyName, bankAccountNo,bankAccountName,code, agentCode}\r\n                this.props.submitSignUp(obj)\r\n             } \r\n    \r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    handlePhone = (value , data) => {\r\n     this.setState({inputPhoneNo:value.slice(data.dialCode.length)});\r\n     this.setState({code:data.dialCode})\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n       if(this.state.checked){\r\n           this.setState({checked:false})\r\n       }else{\r\n           this.setState({checked:true})\r\n       }\r\n    }\r\n    render() {\r\n        let { userData } = this.props;\r\n        let show = userData === null;\r\n        \r\n        let { usernameError, passwordError, confirmPasswordError, misMatchError, loading, phonenoError, checkedError, checked} = this.state;\r\n        return (\r\n            <Dialog onClose={this.props.hideSignUp} aria-labelledby=\"login-dialog-title\" open={show} className=\"auth__modal login-modal desktop-signup\" scroll=\"body\">\r\n                <DialogTitle id=\"login-dialog-title\" disableTypography>\r\n                    <div className=\"dialog-logo-wrap\">\r\n                        <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n                    </div>\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={this.props.hideSignUp}>\r\n                        <i className=\" material-icons fs-22\"> close </i>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent style = {{overflowX:\"hidden\"}}className=\"pt-0\">\r\n                    <form\r\n                          onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            this.handleSubmit();\r\n                        }}\r\n                    >\r\n                        <div className={`mt-1 ${usernameError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoFocus\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.username}\r\n                                id=\"inputUsername\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"username\"\r\n                            />\r\n                            {usernameError && <p className=\"auth__error sm\">Name  Should be between 4 to 26 character</p>}\r\n                        </div>\r\n                        <div className={`mt-2 ${phonenoError ? 'auth__error-field' : ''}`}>\r\n                            <PhoneInput\r\n                                 inputProps={{\r\n                                 name: \"inputPhoneNo\",\r\n                                 required: true,\r\n                                 }}\r\n                                 country={'us'}\r\n                                 inputStyle = {{color:'white', backgroundColor:'#423934', width:'100%',borderStyle:\"none\" ,height: \"2.6vh\"}}\r\n                                 buttonClass = \"button_class\"\r\n                                 containerClass = \"auth__input\"\r\n                                 enableSearch\r\n                                 onChange={(value , code) => this.handlePhone(value , code)}\r\n                             />\r\n                        </div>\r\n                        <div className={`mt-2 ${passwordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.password}\r\n                                id=\"inputPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            {passwordError && <p className=\"auth__error sm\">Password  should be between 6 to 14 character</p>}\r\n                        </div>\r\n                        <div className={`mt-2 ${confirmPasswordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.passwordAgain}\r\n                                id=\"inputConfirmPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            {confirmPasswordError ? <p className=\"auth__error sm\">This field is required</p>\r\n                            : misMatchError ? <p className=\"auth__error sm\">Password did not match.</p> : null}\r\n                        </div>\r\n                        {/*<div className = 'mt-2'>\r\n                             <select value = {currencyName} onChange={this.handleChange} id=\"currencyName\" className=\"auth__input\">\r\n                               {currencyList}\r\n                             </select>\r\n                        </div>\r\n                         <div className={`mt-2 ${bankAccountNoError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"auth__input\"\r\n                                placeholder=\"Bank Account No\"\r\n                                id=\"bankAccountNo\"\r\n                                onChange={this.handleChange}\r\n                               // onKeyPress={(e)=>isNaN(e.key)  ? e.preventDefault() : e.key}\r\n                                autoComplete=\"bank-account-no\"\r\n                            />\r\n                             {bankAccountNoError ? <p className=\"auth__error sm\">This field is required</p> : null}\r\n                        </div>\r\n                        <div className = 'mt-2'>\r\n                             <select value = {bankAccountName} onChange={this.handleChange} id=\"bankAccountName\" className=\"auth__input\">\r\n                               {bankList}\r\n                             </select>\r\n                         </div> */}\r\n                         <div className={`mt-2 ${checkedError ? 'auth__error-field' : ''}`}>\r\n                             <input\r\n                                type=\"checkbox\"\r\n                                checked = {checked}\r\n                                onChange={this.handleToggle}\r\n                            /> <label style = {{color:\"white\"}}>Please read all the <Link to =\"\" className = \"terms_condition\"> terms and condition</Link></label>\r\n                            {checkedError ? <p className=\"auth__error sm\">Please accept the terms and condition</p> :null}\r\n                         </div>\r\n                        <div className=\"auth__btn-wrap\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                                type=\"submit\"\r\n                                disabled={loading}\r\n                            >\r\n                                { loading ? <LoadingIcon />:Translate.signup}\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    userData: PropTypes.object,\r\n    signupError: PropTypes.string,\r\n    submitSignUp: PropTypes.func,\r\n    hideSignUp: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        signupError: state.user.signupError,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        submitSignUp: (obj) => dispatch(submitSignUp(obj)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu'\r\n// import { Link } from 'react-router-dom';\r\n// import Login from '../../../Components/Login';\r\nimport { getDeviceLocation, setLanguage, getTenentStatus } from '../../store/actions/general.actions';\r\nimport { setLocationsActive, setPrematchActive } from '../../store/actions/prematchActions';\r\nimport Login from '../Login';\r\nimport SignUp from '../SignUp';\r\nimport MyAccount from '../MyAccount';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginPop from '../../Components/Login';\r\nimport { getJackPot } from '../../store/actions/user.actions';\r\nimport { differenceInMinutes } from 'date-fns';\r\nimport Confetti from 'react-confetti'\r\nlet jackpotInterval;\r\n\r\nconst options = ['en', 'de', 'fr'];\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.header = React.createRef();\r\n\r\n        this.state = {\r\n            date: new Date().toLocaleString('fr-FR', {\r\n                year: 'numeric', month: '2-digit', day: '2-digit',\r\n                weekday: \"long\", hour: '2-digit',\r\n                hour12: false, minute: '2-digit'\r\n            }),\r\n            anchorEl: null,\r\n            selectedIndex: 0,\r\n            showSignUp: false,\r\n            showMyAccount: false,\r\n            theme: '',\r\n            ShowleftItems: true,\r\n            showLogin: false,\r\n            redirectLink: '',\r\n            limit: 0,\r\n            jackPotClass: 'disabled',\r\n            showConfetti: false,\r\n            jackpotMsg: '',\r\n\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userSelectedLang = this.props.language;\r\n        let currentPath = this.props.location.pathname;\r\n        let pathIndex = currentPath.split('/');\r\n        if (pathIndex[2] === 'live-casino' || pathIndex[2] === 'casino' || pathIndex[2] === 'virtual-sports') {\r\n            this.setState({\r\n                ShowleftItems: false\r\n            });\r\n        }\r\n        let userSelectedLangIndex = options.indexOf(userSelectedLang);\r\n        this.props.getTenentStatus();\r\n        this.props.getDeviceLocation();\r\n        if (userSelectedLangIndex !== this.state.selectedIndex) {\r\n\r\n            Translate.setLanguage(userSelectedLang);\r\n            this.setState({\r\n                selectedIndex: userSelectedLangIndex,\r\n            });\r\n        }\r\n\r\n        window.addEventListener('scroll', this.toggleHeader, false);\r\n        if (!localStorage.getItem('theme')) {\r\n            document.body.classList.remove('dark-mode');\r\n            localStorage.setItem('theme', 'light-mode');\r\n            this.setState({ theme: 'light-mode' });\r\n        }\r\n        else if (localStorage.getItem('theme') && localStorage.getItem('theme') === 'dark-mode') {\r\n            document.body.classList.add('dark-mode');\r\n            this.setState({ theme: 'dark-mode' });\r\n        }\r\n\r\n        // if(this.props.location.pathname === '/d/promotion')\r\n        // {\r\n        //     sessionStorage.setItem('isPromotionActive', true);\r\n        // }\r\n        if (this.props.userData && this.props.userData.is_jackpot_enabled && this.props.userData.last_jackpot_run) {\r\n            let currentTimeDiff = differenceInMinutes(new Date(), new Date(this.props.userData.last_jackpot_run)) * 60;\r\n            let addLimit = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            let amountPerSec = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            this.setState({ limit: currentTimeDiff * amountPerSec });\r\n\r\n            jackpotInterval = setInterval(() => {\r\n                this.setState({ limit: this.state.limit + addLimit });\r\n                if (this.state.limit >= this.props.userData.jackpot_amount) {\r\n                    this.setState({ jackPotClass: '' });\r\n                    clearInterval(jackpotInterval);\r\n                    this.props.getJackPot();\r\n                }\r\n            }, 1000);\r\n        }\r\n        setInterval(() => {\r\n            this.setState({\r\n                date: new Date().toLocaleString('fr-FR', {\r\n                    year: 'numeric', month: '2-digit', day: '2-digit',\r\n                    weekday: \"long\", hour: '2-digit',\r\n                    hour12: false, minute: '2-digit'\r\n                })\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.country !== this.props.country && this.props.country === 'NL' && !localStorage.getItem('language')) {\r\n            Translate.setLanguage('nl');\r\n            let userSelectedLangIndex = options.indexOf('nl');\r\n            this.changeLanguage(null, userSelectedLangIndex);\r\n            this.setState({\r\n                selectedIndex: userSelectedLangIndex,\r\n            });\r\n        }\r\n        if (!prevProps.userData && prevProps.userData !== this.props.userData && this.props.userData.last_jackpot_run && this.props.userData.is_jackpot_enabled) {\r\n            let currentTimeDiff = differenceInMinutes(new Date(), new Date(this.props.userData.last_jackpot_run)) * 60;\r\n            let addLimit = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            let amountPerSec = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n            this.setState({ limit: currentTimeDiff * amountPerSec });\r\n\r\n            jackpotInterval = setInterval(() => {\r\n                this.setState({ limit: this.state.limit + addLimit });\r\n                if (this.state.limit >= this.props.userData.jackpot_amount) {\r\n                    this.setState({ jackPotClass: '' });\r\n                    clearInterval(jackpotInterval);\r\n                    this.props.getJackPot();\r\n                }\r\n            }, 1000);\r\n        }\r\n\r\n        if (prevProps.jackPotError !== this.props.jackPotError && this.props.jackPotError) {\r\n            clearInterval(jackpotInterval);\r\n            this.setState({ jackPotClass: 'disabled' });\r\n            if (this.props.jackPotError === 'success') {\r\n                this.setState({ showConfetti: true })\r\n                setTimeout(() => {                           // show animation if user wins jackpot for 10 sec\r\n                    this.setState({ showConfetti: false })\r\n                }, 10000)\r\n                this.setState({ jackpotMsg: `${this.props.jackpotUserName} won the jackpot` });\r\n                setTimeout(() => {\r\n                    this.setState({ jackpotMsg: '' });\r\n                }, 10000)\r\n            }\r\n            setTimeout(() => {\r\n                // restart jackpot after 10 sec\r\n\r\n                let currentTimeDiff = differenceInMinutes(new Date(), new Date(this.props.userData.last_jackpot_run)) * 60;\r\n                let addLimit = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n                let amountPerSec = this.props.userData.jackpot_amount / (this.props.userData.jackpot_time_limit * 60 * 60);\r\n                this.setState({ limit: currentTimeDiff * amountPerSec });\r\n\r\n                jackpotInterval = setInterval(() => {\r\n                    this.setState({ limit: this.state.limit + addLimit });\r\n                    if (this.state.limit >= this.props.userData.jackpot_amount) {\r\n                        this.setState({ jackPotClass: '' });\r\n                        clearInterval(jackpotInterval);\r\n                        this.props.getJackPot();\r\n                    }\r\n                }, 1000);\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(jackpotInterval);\r\n        if (this.header.current) this.header.current.classList.remove('header_dark');\r\n        const lastUrl = localStorage.getItem('lastUrl');\r\n        localStorage.setItem('lastUrl', this.props.location.pathname);\r\n        localStorage.setItem('secondLastUrl', lastUrl);\r\n        window.removeEventListener('scroll', this.toggleHeader, false);\r\n        localStorage.setItem('LastUrl', this.props.location.pathname);\r\n    }\r\n\r\n    toggleHeader = () => {\r\n        if (this.props.headerClassname === 'header_transparent') {\r\n            if (window.pageYOffset > this.header.current.clientHeight) {\r\n                this.header.current.classList.add('header_dark');\r\n            } else {\r\n                this.header.current.classList.remove('header_dark');\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClickMenu = (event) => {\r\n        this.setState({\r\n            anchorEl: event.currentTarget,\r\n        });\r\n    };\r\n\r\n    changeLanguage = (event, index) => {\r\n        let language = options[index];\r\n        // FIXME: For the temp work we will be sending fr as code for Portuguese language (pt)\r\n        // if  (language == 'pt') language = 'fr';\r\n        Translate.setLanguage(language);\r\n        this.props.setLanguage(Translate.getLanguage());\r\n        localStorage.setItem('language', language);\r\n\r\n        this.setState({\r\n            anchorEl: null,\r\n            selectedIndex: index,\r\n        });\r\n    };\r\n\r\n    changeLanguageMobile = (event) => {\r\n        let index = parseInt(event.target.value);\r\n        let language = options[index];\r\n        // FIXME: For the temp work we will be sending fr as code for Portuguese language (pt)\r\n        //if  (language == 'pt') language = 'fr';\r\n        Translate.setLanguage(language);\r\n        this.props.setLanguage(Translate.getLanguage());\r\n        localStorage.setItem('language', language);\r\n\r\n        this.setState({\r\n            selectedIndex: index,\r\n        });\r\n    };\r\n\r\n    handleCloseMenu = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n    showLoginForm = (path) => {\r\n        if (Util.isLoggedIn()) {\r\n            this.setState({ showLogin: false });\r\n            this.props.history.push(path);\r\n        }\r\n        else {\r\n            this.setState({\r\n                showLogin: true,\r\n                redirectLink: path\r\n            });\r\n            ;\r\n        }\r\n\r\n    };\r\n\r\n    hideLogin = () => {\r\n\r\n        if (Util.isLoggedIn()) {\r\n            this.setState({ showLogin: false });\r\n            this.props.history.push(this.state.redirectLink);\r\n        }\r\n        else {\r\n            this.setState({ showLogin: false });\r\n        }\r\n    };\r\n\r\n\r\n    showSignUpForm = (e) => {\r\n        this.setState({ showSignUp: true });\r\n    };\r\n\r\n    hideSignUp = () => {\r\n        this.setState({ showSignUp: false });\r\n    };\r\n\r\n    isLoggedIn = () => {\r\n        const { access_token } = Util.getAccessToken();\r\n        const isUserLoggedIn = Util.isAuthTokenValid(access_token);\r\n        return isUserLoggedIn;\r\n    };\r\n\r\n    handleToggle = () => {\r\n        if (localStorage.getItem('theme') && localStorage.getItem('theme') === 'dark-mode') {\r\n            localStorage.setItem('theme', 'light-mode');\r\n            document.body.classList.remove('dark-mode');\r\n            this.setState({ theme: 'light-mode' });\r\n        }\r\n        else if (localStorage.getItem('theme') && localStorage.getItem('theme') === 'light-mode') {\r\n            localStorage.setItem('theme', 'dark-mode');\r\n            document.body.classList.add('dark-mode');\r\n            this.setState({ theme: 'dark-mode' });\r\n        } else {\r\n            localStorage.setItem('theme', 'light-mode');\r\n            document.body.classList.remove('dark-mode');\r\n            this.setState({ theme: 'light-mode' });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { anchorEl, selectedIndex, showSignUp, showMyAccount, jackpotMsg } = this.state;\r\n        let { userData } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n        const languageList = options.map((option, index) => (\r\n            <MenuItem key={option} selected={index === selectedIndex} onClick={(event) => this.changeLanguage(event, index)} className=\"text-uppercase\">\r\n                {option}\r\n            </MenuItem>\r\n        ));\r\n\r\n        let liveCasinoClass = '';\r\n        let casinoClass = '';\r\n\r\n        if (userData) {\r\n            liveCasinoClass = userData.is_live_casino_enabled ? '' : 'disabled';\r\n            casinoClass = userData.is_casino_enabled ? '' : 'disabled';\r\n        }\r\n\r\n        let extraMarketPre = this.props.location.pathname?.includes('/extra-market');\r\n        let extraMarketLive = this.props.location.pathname?.includes('live-bettingextra-market');\r\n        return (\r\n            <Fragment>\r\n                {this.state.showConfetti && <div style={{ zIndex: '99999' }}> <Confetti\r\n                    width={window.innerWidth || 300}\r\n                    height={window.innerHeight || 200}\r\n                    numberOfPieces={1000}\r\n                /></div>}\r\n                <header id=\"header-50\" className=\"d-flex  align-items-center \">\r\n                    <div className=\"logo d-flex\">\r\n                        <a href=\"/d\">\r\n                            <img className='top-header__logo' src=\"/images/logo.png\" alt=\"Logo\" />\r\n                        </a>\r\n                        {/*\r\n                        <span className=\"text-white font-weight-bold\">\r\n                            <i className=\"icon-logo-1\"></i>\r\n                            <i className=\"icon-logo-2\"></i>\r\n                        </span> */}\r\n                    </div>\r\n                    {/* <ul className=\" menu d-flex flex-grow-1\">\r\n                        <li className={`${this.props.location.pathname === '/d' && 'active'}`}><Link to=\"/d\">{Translate.home}</Link></li>\r\n                        <li className={`${(this.props.location.pathname === '/d/sports' || extraMarketPre) && 'active'}`}><Link to=\"/d/sports\">{ Translate.sports }</Link></li>\r\n                        <li className={`${(this.props.location.pathname === '/d/live-betting'|| extraMarketLive) && 'active'}`}><Link to=\"/d/live-betting\">{ Translate.inplay }</Link></li>\r\n                        {userData && userData.is_gg_slot_casino_enabled && <li className={`${this.props.location.pathname === '/d/ggslot' && 'active'}`}><a onClick={ ()=>this.showLoginForm('/d/ggslot')}>{Translate.casino}</a></li>}\r\n                        {this.props.isShowCasino && <li className={`${this.props.location.pathname === '/d/live-casino' && 'active'} ${liveCasinoClass}`}><a onClick={ ()=>this.showLoginForm('/d/live-casino')}>{Translate.liveCasino}</a></li>}\r\n                        {this.props.isShowCasino && <li className={`${this.props.location.pathname === '/d/new-casino' && 'active'} ${liveCasinoClass}`}><a onClick={ ()=>this.showLoginForm('/d/new-casino')}>{Translate.pragmaticPlay}</a></li>}\r\n                        {this.props.isShowCasino &&<li className={`${this.props.location.pathname === '/d/virtual-sports' && 'active'} ${casinoClass}`}><a onClick={ ()=>this.showLoginForm('/d/virtual-sports')}>{Translate.virtualSports}</a></li>}\r\n                        <li className={`${this.props.location.pathname?.includes('/d/promotion') && 'active'} `}><Link to=\"/d/promotion\">{Translate.promotion}</Link></li>\r\n                        <li className={`${this.props.location.pathname === '/d/results' && 'active'}`}><Link to=\"/d/results\">{Translate.results }</Link></li>\r\n                    </ul> */}\r\n\r\n                    {/* <label for='time' class=\"mb-0 mr-2\">\r\n                        <input className='toggle-checkbox' type='checkbox' id='time' checked={ this.state.theme === 'dark-mode' } onClick={ this.handleToggle }></input>\r\n                        <div className='toggle-slot'>\r\n                            <div className='toggle-button'></div>\r\n                        </div>\r\n                    </label> */}\r\n\r\n                    {this.state.ShowleftItems && <div className=\"head-right d-flex\">\r\n                        {userData && userData.is_jackpot_enabled && userData.last_jackpot_run && (\r\n                            <div id=\"w-100\">\r\n                                <div id=\"jackpotMobile\">\r\n                                    {/* <a href=\"/jackpot\" class=\"  \"> */}\r\n                                    <span id=\"ss\" className={this.state.jackPotClass}>\r\n                                        Jackpot\r\n                                    </span>\r\n                                    {/* </a> */}\r\n                                    <span id=\"s\">{Util.toFixedDecimal(+this.state.limit)}</span>\r\n                                    <span id=\"ss\">TND</span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {jackpotMsg && <span className='jackpotmsg'>{this.state.jackpotMsg}</span>}\r\n                        {this.isLoggedIn() ? (\r\n                            <React.Fragment>\r\n                                <div className=\"user-detail\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"user-p\">\r\n                                            <span><i className=\"icon-my-account\"></i></span>\r\n                                        </div>\r\n                                        <p>\r\n                                            {userData?.username}\r\n                                            <span> {userData ? `${Util.toFixedDecimal(userData.balance)} ${currency}` : `Loading... ${currency}`} </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='btn-group d-flex align-items-center'>\r\n                                    <button onClick={() => this.setState({ showMyAccount: true })}>\r\n                                        {Translate.myAccount}\r\n                                    </button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <Login />\r\n                                {/* <div className=\"btn-group\">\r\n                                    <button\r\n                                        onClick={ this.showSignUpForm }\r\n                                    >\r\n                                        {Translate.signup}\r\n                                    </button>\r\n                                </div> */}\r\n                            </Fragment>\r\n                        )}\r\n                        <div className=\"btn-group\">\r\n                            <div className=\"dropdown country-btn\">\r\n                                <a\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-controls=\"language-menu\"\r\n                                    className=\"btn language-select__selected text-uppercase\"\r\n                                    onClick={this.handleClickMenu}\r\n                                    role=\"button\"\r\n                                    href\r\n                                >\r\n                                    {options[selectedIndex < 0 ? 0 : selectedIndex]}\r\n                                </a>\r\n                                <Menu\r\n                                    id=\"language-menu\"\r\n                                    style={{ height: '300px', overflowY: 'auto' }}\r\n                                    //className=\"dropdown-menu show\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={this.handleCloseMenu}\r\n                                >\r\n                                    {languageList}\r\n                                </Menu>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n                    {showMyAccount && <MyAccount onClose={() => this.setState({ showMyAccount: false })} />}\r\n                </header>\r\n                <div className=\"sub-header\">\r\n                    <div className=\"sub-header__center\">\r\n                        <div className=\"main-menu\">\r\n                            {/* <a className=\"main-menu__item main-menu__item_active\" href=\"/\">Accueil</a> */}\r\n                            <Link className={`main-menu__item ${this.props.location.pathname === '/d' && 'main-menu__item_active'} `} to=\"/d\">Accueil</Link>\r\n                            <Link className={`main-menu__item ${(this.props.location.pathname === '/d/sports' || extraMarketPre) && 'main-menu__item_active'}`} to=\"/d/sports\">{Translate.sports}</Link>\r\n                            <Link className={`main-menu__item ${(this.props.location.pathname === '/d/live-betting' || extraMarketLive) && 'main-menu__item_active'} `} to=\"/d/live-betting\">Live</Link>\r\n                            <Link className={`main-menu__item ${this.props.location.pathname === '/d/casino' && 'main-menu__item_active'} `} to=\"/d\">Casino</Link>\r\n                            <Link className={`main-menu__item ${this.props.location.pathname === '/d/live-casino' && 'main-menu__item_active'} `} to=\"/d\">Live Casino</Link>\r\n                            {\r\n                                userData && userData.is_gg_slot_casino_enabled &&\r\n                                <Link to='/d/ggslot' onClick={() => this.showLoginForm('/d/casino')} className={`main-menu__item ${this.props.location.pathname === '/d/ggslot' && 'active'} ${casinoClass}`}>\r\n                                    {Translate.casino}\r\n                                </Link>\r\n                            }\r\n                            {/* {this.props.isShowCasino && <Link to=\"/d/live-casino\" className={`main-menu__item ${this.props.location.pathname === '/d/live-casino' && 'main-menu__item_active'} ${liveCasinoClass}`} onClick={ ()=>this.showLoginForm('/d/live-casino')}>{Translate.liveCasino}</Link>} */}\r\n                            {/* {this.props.isShowCasino &&<Link to='/d/virtual-sports'  className={`main-menu__item ${this.props.location.pathname === '/d/virtual-sports' && 'main-menu__item_active'} ${casinoClass}`} onClick={ ()=>this.showLoginForm('/d/virtual-sports')}>{Translate.virtualSports}</Link>} */}\r\n                            {/* {this.props.isShowCasino &&<Link to='/d/pragmatic-play'  className={`main-menu__item ${this.props.location.pathname === '/d/pragmatic-play' && 'main-menu__item_active'} ${casinoClass}`} onClick={ ()=>this.showLoginForm('/d/pragmatic-play')}>CASINO SLOT</Link>} */}\r\n\r\n                            {/* {this.props.isShowCasino && <Link to=\"/d/new-casino\" className={`main-menu__item ${this.props.location.pathname === '/d/new-casino' && 'main-menu__item_active'} ${liveCasinoClass}`} onClick={ ()=>this.showLoginForm('/d/new-casino')}>{Translate.pragmaticPlay}</Link>} */}\r\n                            {/*   <Link to=\"/d/promotion\" className={`main-menu__item ${this.props.location.pathname?.includes('/d/promotion') && 'main-menu__item_active'} `}>{Translate.promotion}</Link> */}\r\n\r\n                            {userData && userData.is_pcasino_enabled &&<Link to='/d/p-casino'  className={`main-menu__item ${this.props.location.pathname === '/d/p-casino' && 'main-menu__item_active'}`} onClick={ ()=>this.showLoginForm('/d/p-casino')}>{Translate.pCasino}</Link>}\r\n\r\n                            {userData && userData.is_ezugi_casino_enabled && <Link to='/d/casino/lobby/ezugi' className={`main-menu__item ${this.props.location.pathname === '/d/casino/lobby/ezugi' && 'main-menu__item_active'} `} onClick={() => this.showLoginForm('/d/casino/lobby/ezugi')}>{Translate.ezugiCasino}</Link>}\r\n\r\n                            {userData && userData.is_ezugi_casino_enabled && <Link to=\"/d/casino/lobby/evo\" className={`main-menu__item ${this.props.location.pathname === '/d/casino/lobby/evo' && 'main-menu__item_active'} `} onClick={() => this.showLoginForm('/d/casino/lobby/evo')}>{Translate.evoCasino}</Link>}\r\n\r\n\r\n                            <Link to=\"/d/results\" className={`main-menu__item ${this.props.location.pathname === '/d/results' && 'main-menu__item_active'}`}>{Translate.results}</Link>\r\n\r\n                            {/* <a className=\"main-menu__item\" href=\"/bc?type=0\">Sport</a>\r\n                            <a className=\"main-menu__item\" href=\"/slots\">Jeux d'adresses</a>\r\n                            <a className=\"main-menu__item\" href=\"/virtual-games/golden-race\">Jeux virtuels</a>\r\n                            <a className=\"main-menu__item\" href=\"/liveGames?sP=evolution\">JEUX TV LIVE</a>\r\n                            <a className=\"main-menu__item\" href=\"/bc/results\">Résultats</a> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-header__block\">\r\n                        <span className=\"time\"> {this.state.date.replaceAll('/', '.').replace(',', '')}</span>\r\n                    </div>\r\n                    {/* <div className=\"sub-header__settings-language\">Langue: <div className=\"set-language\">\r\n                            <div className=\"set-language__top\">\r\n                            <img className=\"set-language__item\" src=\"/img/src/shared/locale/img/fr.png\" alt=\"Le français\" />\r\n                            <span className=\"SVGInline set-language__arrow\">\r\n                                <svg className=\"SVGInline-svg set-language__arrow-svg\" viewBox=\"0 0 8 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0.976562 0H7.02344C7.22656 0 7.36719 0.101562 7.44531 0.304688C7.52344 0.492188 7.49219 0.65625 7.35156 0.796875L4.32812 3.82031C4.23438 3.91406 4.125 3.96094 4 3.96094C3.875 3.96094 3.76562 3.91406 3.67188 3.82031L0.648438 0.796875C0.507812 0.65625 0.476562 0.492188 0.554688 0.304688C0.632812 0.101562 0.773438 0 0.976562 0Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </span>\r\n                            </div>\r\n                            <div className=\"set-language__items\">\r\n                            <img className=\"set-language__item\" src=\"/img/src/shared/locale/img/en.png\" alt=\"English\" />\r\n                            </div>\r\n                        </div>\r\n                        </div> */}\r\n                </div>\r\n                {showSignUp && <SignUp hideSignUp={this.hideSignUp} />}\r\n                {this.state.showLogin && <LoginPop hideLogin={this.hideLogin} />}\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLanguage: PropTypes.func,\r\n    language: PropTypes.string,\r\n    headerClassname: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n        country: state.general.country,\r\n        isShowCasino: state.general.isShowCasino,\r\n        jackPotError: state.user.jackPotError,\r\n        jackpotUserName: state.user.jackpotUserName,\r\n        jackpotAmount: state.user.jackpotAmount\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLanguage: (value) => dispatch(setLanguage(value)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setPrematchActive: (value) => dispatch(setPrematchActive(value)),\r\n        getDeviceLocation: () => dispatch(getDeviceLocation()),\r\n        getTenentStatus: () => dispatch(getTenentStatus()),\r\n        getJackPot: () => dispatch(getJackPot()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from '../../localization';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { submitSignUp } from '../../store/actions/user.actions';\r\nimport { validation } from './validation.js';\r\nimport { Link } from 'react-router-dom';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { agentCode } from '../../config';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputUsername: '',\r\n            inputPassword: '',\r\n            inputPhoneNo: '',\r\n            inputConfirmPassword: '',\r\n            currencyName: 'EUR',\r\n            bankAccountNo: '',\r\n            bankAccountName: 'HANA BANK',\r\n            agentCode: agentCode,\r\n            code: '',\r\n            checked: true,\r\n            checkedError: false,\r\n            usernameError: false,\r\n            passwordError: false,\r\n            confirmPasswordError: false,\r\n            misMatchError: false,\r\n            bankAccountNoError: false,\r\n            agentCodeError: false,\r\n            loading: false,\r\n            phonenoError: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.signupError !== this.props.signupError) {\r\n            this.setState({ ...this.state, loading: false })\r\n        }\r\n        if (prevState.inputUsername !== this.state.inputUsername) {\r\n\r\n            if (!this.state.inputUsername) {\r\n                this.setState({ usernameError: true });\r\n            } else if (this.state.inputUsername.length < validation.userName.min_length || this.state.inputUsername.length > validation.userName.max_length) {\r\n                 this.setState({ usernameError: true });\r\n            } else{\r\n                this.setState({ usernameError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputPassword !== this.state.inputPassword) {\r\n\r\n            if (!this.state.inputPassword) {\r\n                this.setState({ passwordError: true });\r\n            } else if (this.state.inputPassword.length < validation.passWord.min_length || this.state.inputPassword.length>validation.passWord.max_length) {\r\n                this.setState({ passwordError: true });\r\n            } else {\r\n                this.setState({ passwordError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputConfirmPassword !== this.state.inputConfirmPassword) {\r\n\r\n            if (!this.state.inputConfirmPassword) {\r\n                this.setState({ confirmPasswordError: true });\r\n            } else {\r\n                this.setState({ confirmPasswordError: false });\r\n            }\r\n        }\r\n        if (prevState.inputConfirmPassword !== this.state.inputConfirmPassword) {\r\n\r\n            if (this.state.inputPassword !== this.state.inputConfirmPassword) {\r\n                this.setState({ misMatchError: true });\r\n            } else {\r\n                this.setState({ misMatchError: false });\r\n            }\r\n        }\r\n        //  if (prevState.inputPhoneNo !== this.state.inputPhoneNo) {\r\n\r\n        //     if (this.state.inputPhoneNo !== this.state.inputPhoneNo) {\r\n        //         this.setState({ phonenoError: true });\r\n        //     } else  if (this.state.inputPhoneNo.length != validation.PhoneNo.length) {\r\n        //         this.setState({ phonenoError: true });\r\n        //     } else {\r\n        //           this.setState({ phonenoError: false });\r\n        //     }\r\n        // }\r\n        if (prevState.bankAccountNo !== this.state.bankAccountNo) {\r\n\r\n            if (!this.state.bankAccountNo) {\r\n                this.setState({ bankAccountNoError: true });\r\n            } else {\r\n                this.setState({ bankAccountNoError: false });\r\n            }\r\n        }\r\n        if (prevState.agentCode !== this.state.agentCode) {\r\n\r\n            if (!this.state.agentCode) {\r\n                this.setState({ agentCodeError: true });\r\n            } else {\r\n                this.setState({ agentCodeError: false });\r\n            }\r\n        }\r\n        if (prevState.checked !== this.state.checked) {\r\n\r\n            if (!this.state.checked) {\r\n                this.setState({ checkedError: true });\r\n            } else {\r\n                this.setState({ checkedError: false });\r\n            }\r\n        }\r\n\r\n   }\r\n   \r\n    handleSubmit = () => {\r\n        const { inputUsername, inputPassword, inputConfirmPassword, inputPhoneNo, bankAccountNo ,  agentCode,currencyName,bankAccountName,code} = this.state \r\n        let check = true;\r\n        if(inputUsername.length < validation.userName.min_length || inputUsername.length > validation.userName.max_length ) {\r\n            check = false;\r\n            this.setState({\r\n                     usernameError: true,\r\n                 });\r\n        } \r\n          \r\n         if(inputPassword.length < validation.passWord.min_length || inputPassword.length > validation.passWord.max_length) {\r\n             check = false;\r\n             this.setState({\r\n                   passwordError : true,\r\n                 });\r\n        }  \r\n         if(inputConfirmPassword.length < validation.passWord.min_length || inputConfirmPassword.length > validation.passWord.max_length) {\r\n             check = false;\r\n             this.setState({\r\n                   confirmPasswordError : true,\r\n                 });\r\n        }  \r\n         if (inputPassword !== inputConfirmPassword) {\r\n             check = false;\r\n                 this.setState({\r\n                     misMatchError: true,\r\n                 });\r\n        }    \r\n        // if(bankAccountNo.length === 0) {\r\n        //     check = false;\r\n        //     this.setState({\r\n        //         bankAccountNoError: true,\r\n        //     })\r\n        // }  \r\n       \r\n        if(!this.state.checked){\r\n            check = false;\r\n            this.setState({checkedError: true})\r\n        }\r\n         if (check)\r\n             {\r\n               this.setState({ ...this.state, loading: true }); \r\n               const obj = {inputUsername, inputPhoneNo, inputPassword, inputConfirmPassword, currencyName, bankAccountNo,bankAccountName,code, agentCode}\r\n                this.props.submitSignUp(obj)\r\n             } \r\n    \r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    handlePhone = (value , data) => {\r\n     this.setState({inputPhoneNo:value.slice(data.dialCode.length)});\r\n     this.setState({code:data.dialCode})\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n       if(this.state.checked){\r\n           this.setState({checked:false})\r\n       }else{\r\n           this.setState({checked:true})\r\n       }\r\n    }\r\n    render() {\r\n        let { userData } = this.props;\r\n        let show = userData === null;\r\n        let { usernameError, passwordError, confirmPasswordError, misMatchError, loading, phonenoError, checkedError,checked} = this.state;\r\n        return (\r\n            <Dialog onClose={this.props.hideSignUp} aria-labelledby=\"login-dialog-title\" open={show} className=\"auth__modal login-modal desktop-signup\" scroll=\"body\">\r\n                <DialogTitle id=\"login-dialog-title\" disableTypography>\r\n                    <div className=\"dialog-logo-wrap\">\r\n                        <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n                    </div>\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={this.props.hideSignUp}>\r\n                        <i className=\" material-icons fs-22\"> close </i>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent className=\"pt-0\">\r\n                    <form\r\n                          onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            this.handleSubmit();\r\n                        }}\r\n                    >\r\n                        <div className={`mt-1 ${usernameError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoFocus\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.username}\r\n                                id=\"inputUsername\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"username\"\r\n                            />\r\n                            {usernameError && <p className=\"auth__error sm\">Name  Should be between 4 to 26 character</p>}\r\n                        </div>\r\n                        <div className={`mt-2 ${phonenoError ? 'auth__error-field' : ''}`}>\r\n                            <PhoneInput\r\n                                 inputProps={{\r\n                                 name: \"inputPhoneNo\",\r\n                                 required: true,\r\n                                 }}\r\n                                 country={'us'}\r\n                                 inputStyle = {{color:'white', backgroundColor:'#423934', width:'100%',borderStyle:\"none\" ,height: \"2.6vh\"}}\r\n                                 buttonClass = \"button_class\"\r\n                                 containerClass = \"auth__input\"\r\n                                 enableSearch\r\n                                 onChange={(value , code) => this.handlePhone(value , code)}\r\n                             />\r\n                        </div>\r\n                        <div className={`mt-2 ${passwordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.password}\r\n                                id=\"inputPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            {passwordError && <p className=\"auth__error sm\">Password  should be between 6 to 14 character</p>}\r\n                        </div>\r\n                        <div className={`mt-2 ${confirmPasswordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.passwordAgain}\r\n                                id=\"inputConfirmPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            {confirmPasswordError ? <p className=\"auth__error sm\">This field is required</p>\r\n                            : misMatchError ? <p className=\"auth__error sm\">Password did not match.</p> : null}\r\n                        </div>\r\n                        {/* <div >\r\n                             <select value = {currencyName} onChange={this.handleChange} id=\"currencyName\" className=\"auth__input\">\r\n                               {currencyList}\r\n                             </select>\r\n                        </div>\r\n                         <div className={`mt-0 ${bankAccountNoError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"auth__input\"\r\n                                placeholder=\"Bank Account No\"\r\n                                id=\"bankAccountNo\"\r\n                                onChange={this.handleChange}\r\n                               // onKeyPress={(e)=>isNaN(e.key)  ? e.preventDefault() : e.key}\r\n                                autoComplete=\"bank-account-no\"\r\n                            />\r\n                             {bankAccountNoError ? <p className=\"auth__error sm\">This field is required</p> : null}\r\n                        </div>\r\n                        <div >\r\n                             <select value = {bankAccountName} onChange={this.handleChange} id=\"bankAccountName\" className=\"auth__input\">\r\n                               {bankList}\r\n                             </select>\r\n                       </div> */}\r\n                         <div className={`mt-0 ${checkedError ? 'auth__error-field' : ''}`}>\r\n                             <input\r\n                                type=\"checkbox\"\r\n                                checked = {checked}\r\n                                onChange={this.handleToggle}\r\n                            /> <label style = {{color:\"white\"}}>Please read all the <Link to =\"\" className = \"terms_condition\"> terms and condition</Link></label>\r\n                            {checkedError ? <p className=\"auth__error sm\">Please accept the terms and condition</p> :null}\r\n                         </div>\r\n                        <div className=\"auth__btn-wrap\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                                type=\"submit\"\r\n                                disabled={loading}\r\n                            >\r\n                                { loading ? <LoadingIcon />:Translate.signup}\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    userData: PropTypes.object,\r\n    signupError: PropTypes.string,\r\n    submitSignUp: PropTypes.func,\r\n    hideSignUp: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        signupError: state.user.signupError,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        submitSignUp: (obj) => dispatch(submitSignUp(obj)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addBet, removeBet } from '../../store/actions/betslip.actions';\r\nimport { lSportsConfig } from '../../config';\r\nimport { handicapMarkets } from '../../config/markets';\r\n\r\nclass Bet extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bet.Price !== this.props.bet.Price) {\r\n            let diffType = +this.props.bet.Price - +prevProps.bet.Price > 0 ? 'increased' : +this.props.bet.Price - +prevProps.bet.Price < 0 ? 'decreased' : '' ;\r\n            \r\n            if (diffType === 'increased') {\r\n                if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                        document.getElementById('bet-' + this.props.bet.Id).classList.add('increased');\r\n                    }\r\n                }, 100);\r\n            }\r\n\r\n            if (diffType === 'decreased') {\r\n                if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                        document.getElementById('bet-' + this.props.bet.Id).classList.add('decreased');\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { bet, fixture, market, provider, fixtures, leagueName } = this.props;\r\n\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            });\r\n\r\n        if (isActive) {\r\n            this.props.removeBet(fixture, market, bet, provider?.Id);\r\n        } else {\r\n            this.props.addBet(fixture, market, bet, provider?.Id, leagueName);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { bet, isCentered, fixture, market, fixtures, type, language, userData } = this.props;\r\n        const lan = `name_${ language }`;\r\n        let isEuropeanHandicap = handicapMarkets.indexOf(market.Id) > -1;\r\n        let colClass = isCentered ? 'mb-1 border pr-1 pl-1  ' : 'pr-1 pl-1 mr-1 mb-1 border';\r\n        let span1Class = isCentered ? 'odd__left odd__name' : 'text-center odd__left py-1 odd__name';\r\n        let span2Class = isCentered ? 'odd__right odd__price' : 'text-center  odd__right py-1 odd__price';\r\n\r\n        let span3Class = isEuropeanHandicap ? 'handicap' : '';\r\n        let gridClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) gridClassName = 'decreased';\r\n            if (bet.diff < 0)  gridClassName = 'increased';\r\n        }\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId ,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            })\r\n                ? 'active'\r\n                : '';\r\n        let betStatus = bet.Status;\r\n        let disableClass = '';\r\n\r\n        let oddType = userData?.username && localStorage.getItem('oddType') ? localStorage.getItem('oddType') : '' ;\r\n\r\n        let drawBet =\r\n        betStatus === lSportsConfig.betStatus.active ? (\r\n            <Grid\r\n                item\r\n                xs\r\n                id={'bet-' + bet.Id}\r\n                className={`${colClass}  ${ type === 'live' ? 'live__background' : 'prematch__background'} ripple-bet anim ${isActive} ${gridClassName} ${disableClass} ${span3Class}`}\r\n                onClick={ betStatus === lSportsConfig.betStatus.active ? this.handleToggle : null}\r\n                key={bet.Id}\r\n            >\r\n                <span className={span1Class}>\r\n                    { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                </span>\r\n                <span className={span2Class}>{Util.toFixedDecimal(bet.Price, oddType)}</span>\r\n            </Grid>\r\n            ) : (betStatus === lSportsConfig.betStatus.suspended || betStatus === lSportsConfig.betStatus.deactivated) && !isEuropeanHandicap  ? (\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={'nbet-' + bet.Id}\r\n                    className={`${colClass} ${ type === 'live' ? 'live__background' : 'prematch__background'} text-center ripple-bet d-flex align-items-center justify-content-center ${isActive}`}\r\n                    key={bet.Id}\r\n                >\r\n                    <i className=\"material-icons\"> lock </i>\r\n                </Grid>\r\n            ) :\r\n             null;\r\n\r\n        return drawBet;\r\n    }\r\n}\r\n\r\nBet.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    addBet: PropTypes.func,\r\n    removeBet: PropTypes.func,\r\n    bet: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    provider: PropTypes.object,\r\n    isCentered: PropTypes.bool,\r\n    count: PropTypes.number,\r\n    // type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        count: state.betslip.count,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        addBet: (fixture, market, bet, provider, leagueName) => dispatch(addBet(fixture, market, bet, provider, leagueName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bet);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport groupBy from 'lodash.groupby';\r\nimport filter from 'lodash.filter';\r\nimport orderBy from 'lodash.orderby';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bet from './Bet';\r\nimport { find } from 'lodash';\r\nimport { lSportsConfig } from '../../config';\r\nimport { useSelector } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { OnlyActiveBets, SortBySecondary, TwoColumnMarketIds, UnderOverPairMarketIds, handicapMarkets, showScore, dynamicMarkets, stableMarketOnExtraMarket } from '../../config/markets';\r\n\r\n// const BetBody = (props) => {\r\n//     let { Market, fixture, type, leagueName, flex, count } = props;\r\n//     let columns = 3;\r\n//     if ([59, 338, 238, 247, 13, 339].indexOf(Market.Id) > -1) columns = 4;\r\n//     if (Market.Id === 427) columns = 5;\r\n//     if ([128,134 ,145 ,146 ,147 ,148 ,149 ,150, 163].indexOf(Market.Id) > -1) {\r\n//         columns = Market.Bets.length;\r\n//     }\r\n\r\n//     let filterItems = (arr, query) => {\r\n//         return arr.filter(el => {\r\n//             return el.Name.indexOf(query) !== -1;\r\n//         });\r\n//     }\r\n//     //if (Market.Id === 415) columns = 6;\r\n//     // Separate structure for Market 1X2 and Under Over\r\n//     if (Market.Id === 427) {\r\n//         let newFlexObj = {};\r\n//         newFlexObj['Under'] = filterItems(flex, 'Under');\r\n//         newFlexObj['Over'] = filterItems(flex, 'Over');\r\n//         let get427Bets = () => {\r\n//             return (\r\n//                 <>\r\n//                     <div >\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${columns})` }}>\r\n//                         <span>Under</span>\r\n//                     </Grid>\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${columns})` }}>\r\n//                         <span>Over</span>\r\n//                     </Grid>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div className=\"d-flex\">\r\n//                     {newFlexObj['Under'].map((item) => {\r\n//                         return (\r\n//                             <CustomBet\r\n//                                 fixture={fixture}\r\n//                                 market={Market}\r\n//                                 bet={item}\r\n//                                 provider={Market}\r\n//                                 isCentered={flex.length < 3}\r\n//                                 type={type}\r\n//                                 leagueName={leagueName}\r\n//                                 key={item.Id}\r\n//                                 column={columns}\r\n//                             />\r\n//                         );\r\n//                     })}\r\n//                     </div>\r\n//                     <div className=\"d-flex\">\r\n//                     {newFlexObj['Over'].map((item) => {\r\n//                         return (\r\n//                             <CustomBet\r\n//                                 fixture={fixture}\r\n//                                 market={Market}\r\n//                                 bet={item}\r\n//                                 provider={Market}\r\n//                                 isCentered={flex.length < 3}\r\n//                                 type={type}\r\n//                                 leagueName={leagueName}\r\n//                                 key={item.Id}\r\n//                                 column={columns}\r\n//                             />\r\n//                         );\r\n//                     })}\r\n//                     </div>\r\n//                     </div>\r\n//                 </>\r\n//             );\r\n//         };\r\n//         return (\r\n//             <>\r\n//                 {flex[0].BaseLine && (\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${columns})` }}>\r\n//                         <span>{flex[0].BaseLine}</span>\r\n//                     </Grid>\r\n//                 )}\r\n//                 {get427Bets()}\r\n//             </>\r\n//         );\r\n//     } else if (Market.Id === 415) {\r\n//         // Separate logic for Market 1X2 and Both Team To Score\r\n//         let newFlexObj = {};\r\n//         newFlexObj['Yes'] = filterItems(flex, 'Both Teams To Score');\r\n//         newFlexObj['No'] = flex.filter( item => item.Name.indexOf(\"To Nil\") !== -1 || item.Name.indexOf(\"Not To Score\") !== -1);\r\n//         let getMarket415Bets = () => {\r\n//             return (\r\n//                 <>\r\n//                     <div>\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${4})` }}>\r\n//                         <span>Yes</span>\r\n//                     </Grid>\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${4})` }}>\r\n//                         <span>No</span>\r\n//                     </Grid>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div className=\"d-flex\">\r\n//                     {newFlexObj['Yes'].map((item) => {\r\n//                         return (\r\n//                             <CustomBet\r\n//                                 fixture={fixture}\r\n//                                 market={Market}\r\n//                                 bet={item}\r\n//                                 provider={Market}\r\n//                                 isCentered={flex.length < 3}\r\n//                                 type={type}\r\n//                                 leagueName={leagueName}\r\n//                                 key={item.Id}\r\n//                                 column={columns}\r\n//                             />\r\n//                         );\r\n//                     })}\r\n//                     </div>\r\n//                     <div className=\"d-flex\">\r\n//                     {newFlexObj['No'].map((item) => {\r\n//                         return (\r\n//                             <CustomBet\r\n//                                 fixture={fixture}\r\n//                                 market={Market}\r\n//                                 bet={item}\r\n//                                 provider={Market}\r\n//                                 isCentered={flex.length < 3}\r\n//                                 type={type}\r\n//                                 leagueName={leagueName}\r\n//                                 key={item.Id}\r\n//                                 column={columns}\r\n//                             />\r\n//                         );\r\n//                     })}\r\n//                     </div>\r\n//                     </div>\r\n//                 </>\r\n//             );\r\n//         };\r\n//         return (\r\n//             <>\r\n//                 {flex[0].BaseLine && (\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${columns})` }}>\r\n//                         <span>{flex[0].BaseLine}</span>\r\n//                     </Grid>\r\n//                 )}\r\n//                 {getMarket415Bets()}\r\n//             </>\r\n//         );\r\n//     } else\r\n//         return (\r\n//             <>\r\n//                 {flex[0].BaseLine && (\r\n//                     <Grid className=\"match__bets_baseline\" style={{ minWidth: `calc((100% - 12px) / ${columns})` }}>\r\n//                         <span>{flex[0].BaseLine}</span>\r\n//                     </Grid>\r\n//                 )}\r\n//                 {flex.map((item) => {\r\n//                     return (\r\n//                         <CustomBet\r\n//                             fixture={fixture}\r\n//                             market={Market}\r\n//                             bet={item}\r\n//                             provider={Market}\r\n//                             isCentered={flex.length < 3}\r\n//                             type={type}\r\n//                             leagueName={leagueName}\r\n//                             key={item.Id}\r\n//                             column={columns}\r\n//                         />\r\n//                     );\r\n//                 })}\r\n//             </>\r\n//         );\r\n// }\r\n\r\nconst CustomMarket = React.memo((props) => {\r\n    let { Market, column, fixture, type, leagueName } = props;\r\n    const lan = `name_${ useSelector((state) => state.general.language) }`;\r\n    const participants = [ fixture?.participants[0][lan] || '', fixture?.participants[1][lan] || '' ];\r\n    let Bets = Market ? Market.Bets : null;\r\n    Bets = Util.sortBet(Bets, Market.Id, lan);\r\n    const activeBet = lSportsConfig.betStatus.active;\r\n    const isLive = fixture.fixture_status === lSportsConfig.statuses.inplay;\r\n\r\n    let isShowScore = showScore.indexOf(Market.Id) > -1;\r\n    let score = null;\r\n\r\n    Bets = filter(Bets, (bet) => bet.Status !== lSportsConfig.betStatus.settled);\r\n\r\n    if (isLive && stableMarketOnExtraMarket.indexOf(+Market.Id) > -1) {\r\n        Bets = filter(Bets, (bet) => bet.isFavorite);\r\n    }\r\n\r\n    if (isShowScore && Bets.length > 0 && Bets[0].specifier && Bets[0].specifier?.score) {\r\n        const activeOutcomes = Bets.filter(bet => bet.Status === lSportsConfig.betStatus.active);\r\n        if(activeOutcomes.length > 0) score = activeOutcomes[0].specifier.score;\r\n        else score = Bets[Bets.length - 1].specifier.score;\r\n    }\r\n\r\n    let slicedBets = null;\r\n    // if (Market.status === lSportsConfig.marketStatus.settled || Market.status === lSportsConfig.marketStatus.cancelled) return null;\r\n   \r\n    // showing outcomes in 2 columns\r\n    if (TwoColumnMarketIds.indexOf(Market.Id) > -1) {\r\n        column = 2;\r\n    }\r\n\r\n    //This market id should be included in lSportsConfig sort\r\n    if (SortBySecondary.indexOf(Market.Id) > -1) {\r\n        Bets = orderBy(Bets, ['secondarySort', 'outcome_id'], 'asc');\r\n    }\r\n\r\n    slicedBets = new Array(Math.ceil(Bets.length / column)).fill('').map(function () {\r\n        return this.splice(0, column);\r\n    }, Bets.slice());\r\n        \r\n    // Only Active bets\r\n    if (OnlyActiveBets.indexOf(Market.Id) > -1) {\r\n        slicedBets = filter(slicedBets, (flex) => {\r\n            return flex.some((bet) => bet.Status === activeBet);\r\n        });\r\n    }\r\n\r\n    // Temp fix for remaining match & next goal markets \r\n    if ([7,8,61,62].indexOf(Market.Id) > -1) {\r\n        let groupedBets = groupBy(slicedBets, 'BaseLine');\r\n        slicedBets = filter(Object.values(groupedBets)[0], (flex) => {\r\n            return flex.every((bet) => bet.Status === activeBet);\r\n        });\r\n    }\r\n\r\n    // under over name sorting.\r\n    if (UnderOverPairMarketIds.indexOf(Market.Id) > -1) {\r\n        slicedBets = map(slicedBets, (betArray) => (\r\n            orderBy(betArray, (bet) => (\r\n                bet.name_en\r\n            ), 'desc')\r\n        ));\r\n    }\r\n\r\n    let count = 0;\r\n    const isHandicap = handicapMarkets.indexOf( Market.Id ) > -1 ? true : false;\r\n    \r\n    let isActive = false;\r\n    for(let i=0; i<slicedBets.length; i++) {\r\n        let check = find(slicedBets[i], (bet) => bet.Status === activeBet);\r\n        if(check) {\r\n            isActive = true;\r\n            break;\r\n        }\r\n    }\r\n    const drawBets = slicedBets\r\n        ? slicedBets.map((flex) => {\r\n            count++;\r\n            const isHandicapVisible = !isHandicap || (isHandicap && flex.every((b) => b.Status === activeBet)) ? true : false;\r\n                return (\r\n                    <Grid container className={`mx-0 pl-1 ${isHandicap && 'handicap'} `} key={count}>\r\n                        {\r\n                            isHandicap && flex.every((b) => b.Status === activeBet) && <Grid item xs className={'ripple-bet anim handicap small-width'} >\r\n                                { `(${flex[0].BaseLine})`}\r\n                            </Grid> \r\n                        } \r\n                        {isHandicapVisible && flex.map((item) => {\r\n                            return (\r\n                                <Bet\r\n                                    fixture={fixture}\r\n                                    market={Market}\r\n                                    bet={item}\r\n                                    provider={Market}\r\n                                    isCentered={flex.length < 3}\r\n                                    type={type}\r\n                                    leagueName={leagueName}\r\n                                    key={item.Id}\r\n                                    isAnyBetActive = {isActive}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                );\r\n          })\r\n        : null;\r\n\r\n    let line = Market.Line ? <span>{Market.Line}</span> : null;\r\n\r\n    let marketSpecifier = Bets[Bets.length - 1]?.specifier || {};\r\n\r\n    if (dynamicMarkets.indexOf(+Market.Id) > -1) {\r\n        const activeOutcomes = Bets.filter(bet => bet.Status === lSportsConfig.betStatus.active);\r\n        if (activeOutcomes.length) marketSpecifier = activeOutcomes[0]?.specifier;\r\n    }\r\n\r\n\r\n    return (\r\n        slicedBets &&\r\n        slicedBets.length > 0 && (\r\n            <div className=\"mx-auto match__bets market__odds pt-2\">\r\n                <span className=\"odd__title\">\r\n                    { Util.marketNameFormatter(Market[lan] || Market.name_en, marketSpecifier || {}, participants)} {line}\r\n                </span>\r\n                {drawBets}\r\n            </div>\r\n        )\r\n    );\r\n});\r\n\r\nCustomMarket.propTypes = {\r\n    column: PropTypes.number,\r\n    fixture: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default CustomMarket;\r\n","import React from 'react';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nfunction NewLoading(props) {\r\n    return (\r\n            <div className={`loading-modal ${props.customClass}`}>                \r\n                <LoadingIcon theme=\"centered\"/>\r\n            </div>        \r\n    );\r\n}\r\n\r\nexport default NewLoading;\r\n","import axios from 'axios';\r\nimport { apiConfig, CASINO_GAME_LIST_QTECH } from '../config';\r\nimport EventEmitter from '../helper/EventEmitter';\r\nimport publicIp from 'react-public-ip';\r\n\r\nclass casinoService extends EventEmitter {\r\n\r\n    getCasinoGames = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.getCasinoGames, {\r\n                    params: {\r\n                        game_type: 'slot',\r\n                        unique_id: process.env.REACT_APP_UNIQUE_ID,\r\n                    } \r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    initCasinoUser = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.initCasinoUser)\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getLiveCasinoGames = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.getLiveCasinoGames, {\r\n                    params: {\r\n                        game_type: 'live-casino',\r\n                        unique_id: process.env.REACT_APP_UNIQUE_ID,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getpCasinoGames = (lang) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.getpCasinoGames, {\r\n                    params: {\r\n                      language: lang,\r\n                      unique_id: process.env.REACT_APP_UNIQUE_ID,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                  \r\n                    resolve(response.data.Games);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getIPAddress = async () => {\r\n        let ipAddress=await publicIp.v4()\r\n        return ipAddress;\r\n    };\r\n\r\n    getpGameData = (game, language, country, currency,history) => {\r\n      return new Promise((resolve, reject) => {\r\n        let lobbyUrl=window.location.href;\r\n        const  ipAddrees= this.getIPAddress();\r\n        ipAddrees.then((ip) => {\r\n            axios\r\n              .post(apiConfig.routes.pcasinoAPI, {\r\n                game_code: game.GameCode,\r\n                currency_code: currency,\r\n                language:language,\r\n                player_ip:ip,\r\n                country_name_code: country || 'TN',\r\n                casino_lobby_url:lobbyUrl,\r\n                platform_type: game.Vendor === 'PariplayRgs2Rgs' ? game.Platform : null,\r\n              },{ params: {\r\n                  unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n              }\r\n              })\r\n              .then((response) => {\r\n                  resolve(response.data);\r\n              })\r\n              .catch((error) => {            \r\n                  console.error(error);\r\n                  reject(error);\r\n              });\r\n        });\r\n      });\r\n  };\r\n\r\n    getGameData = (name, language, country, currency) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .post(apiConfig.routes.casinoAPI, {\r\n                    // game_id: game.id,\r\n                    game_name:name,\r\n                    lang: 'en',\r\n                    // mode: 'real',\r\n                    // device: 'mobile',\r\n                },{ params: {\r\n                    unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                }\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {            \r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n    \r\n    getLiveCasinoGameData = (game) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .post(apiConfig.routes.getLiveGameData, {\r\n                    game_id: game.id,\r\n                    lang: `en_US`,\r\n                    mode: 'real',\r\n                    device: 'mobile',\r\n                },{ params: {\r\n                    unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                }\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n\r\n    getEzugiLobbyURL = () => {\r\n      \r\n      return new Promise((resolve, reject) => {\r\n          axios\r\n              .get(apiConfig.routes.ezugiCasinoLobby, { \r\n                  params: {\r\n                      unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                      language: 'en',\r\n                      open_table:-1,\r\n                  }\r\n              })\r\n              .then((response) => {\r\n                  resolve(response.data);\r\n              })\r\n              .catch((error) => {\r\n                  console.error(error);\r\n                  reject(error);\r\n              });\r\n      });\r\n  };\r\n\r\n  getEvoLobbyURL = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(apiConfig.routes.ezugiCasinoLobby, { \r\n                params: {\r\n                    unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                    language: 'en',\r\n                    open_table:1000000,\r\n                }\r\n            })\r\n            .then((response) => {\r\n                resolve(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                reject(error);\r\n            });\r\n    });\r\n};\r\n\r\n\r\n    getVirtualSports = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.getVirtualSports, {\r\n                    params: {\r\n                        game_type: 'virtual',\r\n                        unique_id: process.env.REACT_APP_UNIQUE_ID,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getLobbyURL = (type) => {\r\n      \r\n      if (type === 'ezugi') {\r\n        return this.getEzugiLobbyURL();\r\n    }\r\n    if (type === 'evo') {\r\n      return this.getEvoLobbyURL();\r\n    }\r\n        const isPragmatic = type === 'pragmatic-play';\r\n        const gameType = isPragmatic ? ['SLOT_GAMES'] : CASINO_GAME_LIST_QTECH;\r\n      return new Promise((resolve, reject) => {\r\n              axios\r\n                  .post(apiConfig.routes.lobbyURL, {\r\n                      // \"playerId\": 9,\r\n                      // \"unique_id\": \"eab42d8e-9feb-4d0e-8d78-4f26fc96e107\",\r\n                      // \"displayName\": \"CNY\",\r\n                      // \"currency\": \"EUR\",\r\n                      // \"lang\": \"en_US\",\r\n                        'device': 'mobile',\r\n                      // \"mode\": \"real\",\r\n                      // \"country\": \"IN\",\r\n                      'gameLaunchTarget': 'SELF',\r\n                      'gameTypes': gameType,                   \r\n                  }, { params: {\r\n                      unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                  }\r\n                  })\r\n                  .then((response) => {\r\n                      resolve(response.data);\r\n                  })\r\n                  .catch((error) => {\r\n                      console.error(error);\r\n                      reject(error);\r\n                  });\r\n          });\r\n  };\r\n\r\n  initGgSlotUser = () => {\r\n      return new Promise((resolve, reject) => {\r\n            axios\r\n                .post(apiConfig.routes.initGgSlotUser, {\r\n                },{ params: {\r\n                    unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                }\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n  }\r\n\r\n  getAllGgGamesList = () => {\r\n    return new Promise((resolve, reject) => {\r\n          axios\r\n              .post(apiConfig.routes.getGgAllGamesList, {\r\n              },{ params: {\r\n                  unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n              }\r\n              })\r\n              .then((response) => {\r\n                  resolve(response.data);\r\n              })\r\n              .catch((error) => {\r\n                 \r\n                  reject(error);\r\n              });\r\n      });\r\n}\r\n\r\n  ggSlotURL = (lobby_id) => {\r\n      return new Promise((resolve, reject) => {\r\n            axios\r\n                .post(apiConfig.routes.ggSlotURL, {\r\n                   lobby_id:lobby_id,\r\n                },{ params: {\r\n                    unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                }\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n  }\r\n\r\n    getNewCasinoGames = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(apiConfig.routes.getNewCasinoGames, {\r\n                    params: {\r\n                        game_type: 'slot',\r\n                        unique_id: process.env.REACT_APP_UNIQUE_ID,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data.slot);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n    getNewCasinoGameData = (game) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .post(apiConfig.routes.getNewGameData, {\r\n                    game_id: game.id,\r\n                    lang: 'en_US',\r\n                    mode: 'real',\r\n                    device: 'mobile',\r\n                },{ params: {\r\n                        unique_id:  process.env.REACT_APP_UNIQUE_ID,\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n\r\n}\r\n\r\nconst instance = new casinoService();\r\n\r\nexport default instance;\r\n","import {toastr} from 'react-redux-toastr';\r\nimport Util from '../../helper/Util';\r\nimport {isMobileOnly} from 'react-device-detect';\r\nimport casinoService from '../../services/casinoService';\r\nimport jwtService from '../../services/jwtService';\r\nimport * as Actions from './actionTypes';\r\nimport {setLoading} from './general.actions';\r\nimport {lobby_id} from '../../config/general.config';\r\n\r\nlet casinoGameTimer;\r\n\r\n// Get casino games list\r\nexport const getCasinoGames = () => {\r\n    return (dispatch) => {\r\n        casinoService\r\n            .getCasinoGames()\r\n            .then((games) => {\r\n                dispatch(setCasinoGames(games));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n\r\nexport const getGGCasinoGames = () => {\r\n    return (dispatch) => {\r\n        casinoService.initGgSlotUser().then((res) => {\r\n            casinoService\r\n                .getAllGgGamesList()\r\n                .then((games) => {\r\n                    dispatch(setCasinoGames(games.data));\r\n                });\r\n        }).catch((error) => {\r\n            console.error(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                toastr.error('', 'Something went wrong.');\r\n            }\r\n        });\r\n    };\r\n};\r\n// Set casino games list\r\nexport const setCasinoGames = (games) => {\r\n    clearInterval(casinoGameTimer);\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_CASINO_GAMES, games});\r\n    };\r\n};\r\n\r\n// Get live casino games list\r\nexport const getLiveCasinoGames = () => {\r\n    return (dispatch) => {\r\n        casinoService\r\n            .getLiveCasinoGames()\r\n            .then((games) => {\r\n                dispatch(setLiveCasinoGames(games));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const getpCasinoGames = () => {\r\n\r\n  return (dispatch,getState) => {\r\n    let language = getState().general.language;\r\n\r\n      casinoService\r\n          .getpCasinoGames(language)\r\n          .then((games) => {\r\n              dispatch(setPCasinoGames(games));\r\n          })\r\n          .catch((error) => {\r\n              console.error(error);\r\n              if (error && error.response && error.response.status && error.response.status === 401) {\r\n                  Util.handleRepeatedLogin(error.response);\r\n              } else {\r\n                  toastr.error('', 'Something went wrong.');\r\n              }\r\n          });\r\n  };\r\n};\r\n\r\n// Set live casino games list\r\nexport const setLiveCasinoGames = (games) => {\r\n    clearInterval(casinoGameTimer);\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_LIVE_CASINO_GAMES, games});\r\n    };\r\n};\r\n\r\nexport const setPCasinoGames = (games) => {\r\n  clearInterval(casinoGameTimer);\r\n  return (dispatch) => {\r\n      dispatch({ type: Actions.SET_P_CASINO_GAMES, games });\r\n  };\r\n};\r\n\r\n// Set casino active category\r\nexport const setCasinoActiveCategory = (category) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_CASINO_ACTIVE_CATEGORY, category});\r\n    };\r\n};\r\n\r\n// Set live casino active category\r\nexport const setLiveCasinoActiveCategory = (category) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_LIVE_CASINO_ACTIVE_CATEGORY, category});\r\n    };\r\n};\r\n\r\nexport const setPCasinoActiveCategory = (category) => {\r\n  return (dispatch) => {\r\n      dispatch({ type: Actions.SET_P_CASINO_ACTIVE_CATEGORY, category });\r\n  };\r\n};\r\n\r\n// Set search started\r\nexport const setSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_CASINO_SEARCH_STARTED, value});\r\n    };\r\n};\r\n\r\n// Set live search started\r\nexport const setLiveSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_LIVE_CASINO_SEARCH_STARTED, value});\r\n    };\r\n};\r\n\r\n// Serach game by name\r\nexport const searchCasino = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_CASINO_SEARCH, value});\r\n    };\r\n};\r\n\r\n// Serach live game by name\r\nexport const searchLiveCasino = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_LIVE_CASINO_SEARCH, value});\r\n    };\r\n};\r\n\r\n// Serach pcasino game by name\r\nexport const searchPCasino = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PCASINO_SEARCH, value });\r\n    };\r\n};\r\n\r\n// Get game data\r\nexport const getSlotGameData = (game, history) => {\r\n    ;\r\n    return (dispatch, getState) => {\r\n\r\n        let language = getState().general.language;\r\n        let country = getState().general.country;\r\n        let userData = getState().user.data;\r\n        let gameName= game.menu_title;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'R$' : userData.currency : 'R$';\r\n        casinoService\r\n            .getGameData(gameName, language, country, currency)\r\n            .then((data) => {\r\n                // sessionStorage.setItem('casino_url', data.url);\r\n                // window.location.href = data.url;\r\n                let  game_url = `${data.GAME_URL}?game=${data.game}&hash=${data.hash}&api_id=${data.api_id}&lang=en&exit=${data.exiturl}>`;\r\n                sessionStorage.setItem('casino_url',game_url);\r\n\r\n                window.location.href = game_url;\r\n                dispatch(setLoading(false));\r\n                dispatch(setSlotGameData(data));\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n\r\n// Set game data\r\nexport const setSlotGameData = (data) => {\r\n    // If user is playing a game in casion, refresh token every 30 minutes\r\n    let time = 30 * 60 * 24 * 1000;\r\n    if (!casinoGameTimer) {\r\n        casinoGameTimer = setInterval(() => {\r\n            let {access_token} = jwtService.getAccessToken();\r\n            jwtService.refreshToken(access_token);\r\n            let now = new Date();\r\n            sessionStorage.setItem('last_request_date', now);\r\n        }, time);\r\n    }\r\n\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_GAME_DATA, data});\r\n    };\r\n};\r\n\r\n// Get live game data\r\nexport const getLiveGameData = (game, history) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoading(true));\r\n        casinoService\r\n            .getLiveCasinoGameData(game)\r\n            .then((data) => {\r\n                dispatch(setLiveGameData(data));\r\n                sessionStorage.setItem('casino_url', data.url);\r\n                window.location.href = data.url;\r\n                dispatch(setLoading(false));\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error.response.status && error.response.status === 403) {\r\n                    if (history.location.pathname !== 'live-casino') {\r\n                        if (isMobileOnly) history.push('/live-casino');\r\n                        else history.push('/d/live-casino');\r\n                    }\r\n                    toastr.error('', 'The casino is disabled for you. Please contact your agent!');\r\n                } else if (error.response.status && error.response.status === 503) {\r\n                    toastr.error('', 'Server Timed out.');\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n                dispatch(setLoading(false));\r\n            });\r\n    };\r\n};\r\n\r\n// Get live game data\r\nexport const getpCasinoGameData = (game, history) => {\r\n  return (dispatch, getState) => {\r\n     let language = getState().general.language;\r\n     let country = getState().general.country;\r\n     let userData = getState().user.data;\r\n     let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'TND' : userData.currency : 'TND';\r\n      dispatch(setLoading(true));\r\n      casinoService\r\n          .getpGameData(game, language, country, currency,history)\r\n          .then((data) => {\r\n            \r\n              dispatch(setLiveGameData(data));\r\n              sessionStorage.setItem('casino_url', data.url);\r\n              window.location.href = data.url;\r\n              dispatch(setLoading(false));\r\n          })\r\n          .catch((error) => {\r\n              console.error(error);\r\n              if (error && error.response && error.response.status && error.response.status === 401) {\r\n                  Util.handleRepeatedLogin(error.response);\r\n              } else if (error.response.status && error.response.status === 403) {\r\n                  if (history.location.pathname !== 'p-casino') {\r\n                      if (isMobileOnly) history.push('/p-casino');\r\n                      else history.push('/d/p-casino');\r\n                  }\r\n                  toastr.error('', 'The casino is disabled for you. Please contact your agent!');\r\n              } else if (error.response.status && error.response.status === 503) {\r\n                  toastr.error('', 'Server Timed out.');\r\n              } else {\r\n                  toastr.error('', 'Something went wrong.');\r\n              }\r\n              dispatch(setLoading(false));\r\n          });\r\n  };\r\n};\r\n\r\n\r\n// export const geSlotGameData = (id, history) => {\r\n//   debugger;\r\n//     return (dispatch, getState) => {\r\n//         let hash = getState().user.data.user_hash;\r\n//         dispatch(setLoading(true));\r\n//         casinoService\r\n//             .getLiveGameData(id, hash)\r\n//             .then((data) => {\r\n//                 dispatch(setLiveGameData(data));\r\n//                 sessionStorage.setItem('casino_url', data.url);\r\n//                 window.location.href = data.url;\r\n//                 dispatch(setLoading(false));\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(error);\r\n//                 if (error && error.response && error.response.status && error.response.status === 401) {\r\n//                     Util.handleRepeatedLogin(error.response);\r\n//                 } else if (error.response.status && error.response.status === 403) {\r\n//                     if (history.location.pathname !== '/casino') {\r\n//                         history.push('/casino');\r\n//                     }\r\n//                     toastr.error('', 'The casino is disabled for you. Please contact your agent!');\r\n//                 } else if (error.response.status && error.response.status === 503) {\r\n//                     toastr.error('', 'Server Timed out.');\r\n//                 } else {\r\n//                     toastr.error('', 'Something went wrong.');\r\n//                 }\r\n//                 dispatch(setLoading(false));\r\n//             });\r\n//     };\r\n// };\r\n\r\n// Set live game data\r\nexport const setLiveGameData = (data) => {\r\n    // If user is playing a game in casion, refresh token every 30 minutes\r\n    let time = 30 * 60 * 1000;\r\n    if (!casinoGameTimer) {\r\n        casinoGameTimer = setInterval(() => {\r\n            let {access_token} = jwtService.getAccessToken();\r\n            jwtService.refreshToken(access_token);\r\n            let now = new Date();\r\n            sessionStorage.setItem('last_request_date', now);\r\n        }, time);\r\n    }\r\n\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_LIVE_GAME_DATA, data});\r\n    };\r\n};\r\n\r\n// Clear casino games\r\nexport const clearCasinoGames = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.CLEAR_CASINO_GAMES});\r\n    };\r\n};\r\n\r\n// Clear live casino games\r\nexport const clearLiveCasinoGames = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.CLEAR_LIVE_CASINO_GAMES});\r\n    };\r\n};\r\n\r\n\r\n//Getting Virtual sports\r\nexport const getVirtualSports = () => {\r\n    return (dispatch) => {\r\n        casinoService\r\n            .getVirtualSports()\r\n            .then((sports) => {\r\n                dispatch(setVirtualSports(sports));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const postHeartBeat = () => {\r\n    return (dispatch) => {\r\n        jwtService\r\n            .postHeartBeat()\r\n            .then(() => {\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Get live game data\r\nexport const getVirtualSportsData = (game, history) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoading(true));\r\n        casinoService\r\n            .getLiveCasinoGameData(game)\r\n            .then((data) => {\r\n                dispatch(setLiveGameData(data));\r\n                sessionStorage.setItem('casino_url', data.url);\r\n                window.location.href = data.url;\r\n                dispatch(setLoading(false));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error.response.status && error.response.status === 403) {\r\n                    if (history.location.pathname !== 'virtual-sports') {\r\n                        if (isMobileOnly) history.push('/virtual-sports');\r\n                        else history.push('/d/virtual-sports');\r\n                    }\r\n                    toastr.error('', 'The virtual sport is disabled for you. Please contact your agent!');\r\n                } else if (error.response.status && error.response.status === 503) {\r\n                    toastr.error('', 'Server Timed out.');\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n                dispatch(setLoading(false));\r\n            });\r\n    };\r\n};\r\n\r\n// Set virtual sports list\r\nexport const setVirtualSports = (sports) => {\r\n    // clearInterval(casinoGameTimer);\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_VIRTUAL_SPORTS, sports});\r\n    };\r\n};\r\n\r\n//CLEAR VIRTUAL SPORTS\r\nexport const clearVirtualSports = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.CLEAR_VIRTUAL_SPORTS});\r\n    };\r\n};\r\n\r\n// Set virtual search started\r\nexport const setVirtualSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_VIRTUAL_SEARCH_STARTED, value});\r\n    };\r\n};\r\n\r\n// Serach virtual sport by name\r\nexport const searchVirtualSports = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_VIRTUAL_SPORTS_SEARCH, value});\r\n    };\r\n};\r\n\r\n// Set virtual sports active category\r\nexport const setVirtualSportsCategory = (category) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_VIRTUAL_SPORTS_CATEGORY, category});\r\n    };\r\n};\r\n\r\n\r\nexport const getLobbyURL = (type) => {\r\n  return (dispatch) => {\r\n      casinoService\r\n          .getLobbyURL(type)\r\n          .then((data) => {\r\n            const lobbyUrl = type === 'ezugi' || type === 'evo'? data : data.url;\r\n\r\n              dispatch(setCasinoLobby(lobbyUrl));\r\n          })\r\n          .catch((error) => {\r\n              console.error(error);\r\n              if (error && error.response && error.response.status && error.response.status === 401) {\r\n                  Util.handleRepeatedLogin(error.response);\r\n              } else {\r\n                  toastr.error('', 'Something went wrong.');\r\n              }\r\n          });\r\n  };\r\n};\r\n\r\n\r\nexport const setCasinoLobby = (url) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_CASINO_LOBBY, url});\r\n    };\r\n};\r\n\r\nexport const initGgSlotUser = () => {\r\n    return (dispatch) => {\r\n        dispatch(setLoadingGgSlot(true));\r\n        casinoService.initGgSlotUser().then((res) => {\r\n            casinoService.ggSlotURL(lobby_id).then((data) => {\r\n                dispatch(setLoadingGgSlot(false));\r\n                //  window.location.href = data;\r\n            });\r\n        }).catch((error) => {\r\n            console.error(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                toastr.error('', 'Something went wrong.');\r\n            }\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const setLoadingGgSlot = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_LOADING_SLOT, value});\r\n    };\r\n};\r\n\r\n// Get live casino games list\r\nexport const getNewCasinoGames = () => {\r\n    return (dispatch) => {\r\n        casinoService\r\n            .getNewCasinoGames()\r\n            .then((games) => {\r\n                dispatch(setNewCasinoGames(games));\r\n            })\r\n            .catch((error) => {\r\n                console.error('error');\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set new casino games list\r\nexport const setNewCasinoGames = (games) => {\r\n    clearInterval(casinoGameTimer);\r\n    console.log(games);\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_NEW_CASINO_GAMES, games});\r\n    };\r\n};\r\n\r\n// Set live casino active category\r\nexport const setNewCasinoActiveCategory = (category) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_NEW_CASINO_ACTIVE_CATEGORY, category});\r\n    };\r\n};\r\n\r\n// Set live search started\r\nexport const setNewSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_NEW_CASINO_SEARCH_STARTED, value});\r\n    };\r\n};\r\n\r\n// Serach live game by name\r\nexport const searchNewCasino = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_NEW_CASINO_SEARCH, value});\r\n    };\r\n};\r\n\r\n// Get live game data\r\nexport const getNewGameData = (game, history) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoading(true));\r\n        casinoService\r\n            .getNewCasinoGameData(game)\r\n            .then((data) => {\r\n                dispatch(setNewGameData(data));\r\n                sessionStorage.setItem('casino_url', data.url);\r\n                window.location.href = data.url;\r\n                dispatch(setLoading(false));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error.response.status && error.response.status === 403) {\r\n                    if (history.location.pathname !== 'live-casino') {\r\n                        if (isMobileOnly) history.push('/live-casino');\r\n                        else history.push('/d/live-casino');\r\n                    }\r\n                    toastr.error('', 'The casino is disabled for you. Please contact your agent!');\r\n                } else if (error.response.status && error.response.status === 503) {\r\n                    toastr.error('', 'Server Timed out.');\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n                dispatch(setLoading(false));\r\n            });\r\n    };\r\n};\r\n\r\n// Set live game data\r\nexport const setNewGameData = (data) => {\r\n    // If user is playing a game in casion, refresh token every 30 minutes\r\n    let time = 30 * 60 * 1000;\r\n    if (!casinoGameTimer) {\r\n        casinoGameTimer = setInterval(() => {\r\n            let {access_token} = jwtService.getAccessToken();\r\n            jwtService.refreshToken(access_token);\r\n            let now = new Date();\r\n            sessionStorage.setItem('last_request_date', now);\r\n        }, time);\r\n    }\r\n\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_NEW_GAME_DATA, data});\r\n    };\r\n};\r\n\r\n// Clear live casino games\r\nexport const clearNewCasinoGames = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.CLEAR_NEW_CASINO_GAMES});\r\n    };\r\n};\r\n","import find from 'lodash.find';\r\nimport filter from 'lodash.filter';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { getTodayLocations } from './lsports.today.location.actions';\r\nimport { setTodayResetPage } from './lsports.today.general.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Set search started\r\nexport const setSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_SEARCH_STARTED, value });\r\n    };\r\n};\r\n\r\nexport const setTodaySearch = (events, hasNextPage, selectedLocations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_SEARCH, events, hasNextPage, selectedLocations });\r\n    };\r\n};\r\n\r\nexport const setTodaySearchLoadMore = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_SEARCH_LOAD_MORE, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Search events by participant\r\nexport const search = (value) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        let page = getState().today.currentPage;\r\n        let searchValue = getState().today.searchValue;\r\n        let selectedLocations = getState().today.selectedLocations;\r\n        let locations = selectedLocations.toString();\r\n\r\n        if (searchValue === value) {\r\n            lSportsService\r\n                .todaySearchEvents(value, locations, language, page + 1)\r\n                .then((data) => {\r\n                    if (data.results.length === 0) {\r\n                        dispatch({ type: Actions.ON_TODAY_NO_SEARCH_RESULTS });\r\n                    } else {\r\n                        dispatch(setTodaySearchLoadMore(data.results, data.next));\r\n                        dispatch(getTodayLocations(''));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch(setTodayResetPage());\r\n            let page = getState().today.currentPage;\r\n            let selectedLocations = getState().today.selectedLocations;\r\n\r\n            lSportsService\r\n                .todaySearchEvents(value, locations, language, page + 1)\r\n                .then((data) => {\r\n                    dispatch({ type: Actions.ON_TODAY_SEARCH, searchValue: value });\r\n                    if (data.results.length === 0) {\r\n                        dispatch({ type: Actions.ON_TODAY_NO_SEARCH_RESULTS });\r\n                    } else {\r\n                        let selected_locations = filter(selectedLocations, (locationId) => {\r\n                            return find(data.results, ['location_lsport_id', parseInt(locationId)]);\r\n                        });\r\n                        let selectedLocationsList = selected_locations ? selected_locations : [];\r\n\r\n                        dispatch(getTodayLocations(''));\r\n                        dispatch(setTodaySearch(data.results, data.next, selectedLocationsList));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\n\r\n// Clear search input value\r\nexport const clearSearch = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_CLEAR_TODAY_SEARCH });\r\n    };\r\n};\r\n\r\nexport const searchTodayEvents = (value) => {\r\n    if (value.length) {\r\n        return (dispatch) => {\r\n            dispatch({ type: Actions.SEARCH_TODAY_EVENTS, value });\r\n        };\r\n    } else {\r\n        return (dispatch) => {\r\n            dispatch({ type: Actions.ON_CLEAR_TODAY_SEARCH });\r\n        };\r\n    }\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { setTodaySearchLoadMore } from './lsports.today.search.actions';\r\nimport { getTodayLocations } from './lsports.today.location.actions';\r\nimport { getSportEvents } from './lsports.today.sport.actions';\r\nimport Util from '../../../helper/Util';\r\nimport { setTodayResetPage } from './lsports.today.general.actions';\r\nimport {  getMarketData } from './lsports.today.location.actions';\r\n\r\n// Remove league from main events on 'x' icon click\r\nexport const removeLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_TODAY_REMOVE_LEAGUE, leagueId: leagueId });\r\n\r\n        let hasNextPage = getState().today.hasNextPage;\r\n        let mainEvents = getState().today.mainEvents;\r\n\r\n        if (mainEvents.length < 20 && hasNextPage) {\r\n            // get new events\r\n            let language = getState().general.language;\r\n            let selectedLocations = getState().today.selectedLocations;\r\n            let sportId = getState().today.selectedSport;\r\n            let searchStarted = getState().today.searchStarted;\r\n            let page = getState().today.currentPage;\r\n            let searchValue = getState().today.searchValue;\r\n            let locations = selectedLocations.toString();\r\n\r\n            if (searchStarted) {\r\n                lSportsService\r\n                    .todaySearchEvents(searchValue, locations, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0) {\r\n                            dispatch({ type: Actions.ON_TODAY_NO_SEARCH_RESULTS });\r\n                        } else {\r\n                            dispatch(setTodaySearchLoadMore(data.results, data.next));\r\n                            dispatch(getTodayLocations(''));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            } else {\r\n                dispatch(getSportEvents(sportId));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const selectLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        let selectedLeagues = getState().today.selectedLeagues;\r\n        let selectedLocationList = getState().today.selectedLocationList;\r\n        dispatch(setTodayResetPage());\r\n\r\n        dispatch({ type: Actions.SET_TODAY_SPORT_LEAGUES, leagues: leagueId });\r\n        const partialEvents = getState().today.partialAllEvents;\r\n        let leagueEvent = partialEvents.filter(event => (event.league_id == leagueId || event.league?.Id == leagueId || selectedLocationList.indexOf(`${event.location_id}`) > -1));\r\n        // if(!selectedLeagueArray.length && !selectedLocationList.length) leagueEvent = partialEvents.slice(0, 20);\r\n        if (leagueId && !leagueEvent.length) {\r\n            dispatch({type: Actions.SET_TODAY_NOEVENT, data: true});\r\n            return null;\r\n        }\r\n        dispatch(getMarketData(leagueEvent,0 ,leagueEvent.length));\r\n    };\r\n};\r\n\r\nexport const clearSelectedLeagues = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.CLEAR_TODAY_LEAGUES });\r\n    };\r\n};","import { toastr } from 'react-redux-toastr';\r\nimport Util from '../../helper/Util';\r\nimport lSportsService from '../../services/lSportsService';\r\nimport * as Actions from './actionTypes';\r\nimport { logoutUser } from './user.actions';\r\n\r\n// Select extra markets slider (tabs)\r\nexport const selectExtraMarket = (marketName) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_EXTRA_MARKET_SELECTED, marketName });\r\n    };\r\n};\r\n\r\n// Get extra market bets\r\nexport const getExtraMarkets = (eventId) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        lSportsService\r\n            .getExtraMarkets(eventId, language)\r\n            .then((markets) => {\r\n                dispatch(setExtraMarkets(markets));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', error);\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set extra market bets\r\nexport const setExtraMarkets = (markets) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_EXTRA_MARKETS, markets });\r\n    };\r\n};\r\n\r\n// Set extra market event\r\nexport const setCurrentEvent = (fixture) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_CURRENT_EVENT, fixture });\r\n    };\r\n};\r\n\r\n// Clear extra market bets\r\nexport const clearExtraMarkets = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_EXTRA_MARKETS });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateExtraMarketsEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_EXTRA_MARKETS_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update livescore (time and score)\r\nexport const updateExtraMarketsEventsLivescore = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_EXTRA_MARKETS_EVENTS_LIVESCORE, events });\r\n    };\r\n};\r\n\r\n// Get Statistics data\r\n// export const getStatistics = (eventId, statsType) => {\r\n//     return (dispatch, getState) => {\r\n//         let language = getState().general.language;\r\n//         lSportsService\r\n//             .getStatistics(eventId, language)\r\n//             .then((data) => {\r\n//                 dispatch(setStatistics(data.fixture_id, statsType));\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(error);\r\n//                 if (error && error.response && error.response.status && error.response.status === 401) {\r\n//                     Util.handleRepeatedLogin(error.response);\r\n//                 } else if (error && error.response && error.response.status && error.response.status === 404) {\r\n//                     toastr.error('', 'No Statistics for this game');\r\n//                 } else {\r\n//                     toastr.error('', error.response.statusText);\r\n//                 }\r\n//             });\r\n//     };\r\n// };\r\n\r\n// Set Statistics data\r\nexport const setStatistics = (fixtureId, statsType, statsTemplateType) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_STATISTICS, fixtureId, statsType, statsTemplateType });\r\n    };\r\n};\r\n\r\n// Clear Statistics bets\r\nexport const clearStatistics = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_STATISTICS });\r\n    };\r\n};\r\n\r\nexport const setExtraMarketLeagueName = (league) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_EXTRA_MARKET_LEAGUE_NAME, league });\r\n    };\r\n};\r\n\r\nexport const setExtraMarketLocationName = (location) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_EXTRA_MARKET_LOCATION_NAME, location });\r\n    };\r\n}","import find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Util from '../../helper/Util';\r\nimport jwtService from '../../services/jwtService';\r\nimport * as Actions from '../actions/actionTypes';\r\nimport {filter, forEach, isEmpty} from 'lodash';\r\nimport { getUser, logoutUser } from './user.actions';\r\nimport { paramsMarketData,paramsMarketDataIndex  } from '../../dynamo/params';\r\nimport { dynamoClient } from '../../App';\r\nimport { lSportsConfig, MAX_BET_COUNT } from '../../config';\r\n\r\n// Add bet to betslip page\r\nexport const addBet = (fixture, market, bet, provider, leagueName) => {\r\n    return (dispatch, getState) => {\r\n        const count = getState().betslip.count;\r\n        if (count >= MAX_BET_COUNT ) {\r\n            toastr.error('', `Cannot place more than ${ MAX_BET_COUNT } bets.`);\r\n            return;\r\n        }\r\n        dispatch({\r\n            type: Actions.ADD_BET,\r\n            fixture,\r\n            market,\r\n            bet,\r\n            provider,\r\n            leagueName,\r\n        });\r\n    };\r\n};\r\n\r\n// Check for saved bets in localstorage to show in betslip page\r\nexport const checkSavedBets = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: Actions.CHECK_SAVED_BETS,\r\n        });\r\n    };\r\n};\r\n\r\n// Remove bet from betslip page\r\nexport const removeBet = (fixture, market, bet, provider) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: Actions.REMOVE_BET,\r\n            fixture,\r\n            market,\r\n            bet,\r\n            provider,\r\n        });\r\n    };\r\n};\r\n\r\n// Clear bets from betslip and localstorage\r\nexport const clearBets = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_BETS });\r\n    };\r\n};\r\n\r\n// Set amount of multiple bet\r\nexport const setMultiStake = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_MULTI_STAKE, value });\r\n    };\r\n};\r\n\r\n// Set amount of single bet\r\nexport const setBetStake = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_BET_STAKE, value });\r\n    };\r\n};\r\n\r\n// Get betting limits\r\nexport const getBetLimits = () => {\r\n    return (dispatch ,getState) => {\r\n         let language = getState().general.language; \r\n        jwtService\r\n            .getBetLimits(language)\r\n            .then((limits) => {\r\n                dispatch(setLimits(limits));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set betting limits for user\r\nexport const setLimits = (limits) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LIMITS, limits });\r\n    };\r\n};\r\n\r\n// WebSocket - update bets if bet is settled/suspended (cannot be placed)\r\nexport const updateBets = (bets) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_BETS, bets });\r\n    };\r\n};\r\n\r\nexport const updateBetslipEvent = (event) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_BET_FIXTURE, event });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateBetslipEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_BETSLIP_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update livescore (score)\r\nexport const updateBetslipEventsLivescore = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_BETSLIP_EVENTS_LIVESCORE, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updateBetslipEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_BETSLIP_EVENTS_STATUS, events });\r\n    };\r\n};\r\n\r\n// Place a bet\r\nexport const placeBet = (data, unsubscribe) => {\r\n    return (dispatch, getState) => {\r\n        const betslipID = getState().betslip.lastBetId;\r\n        const newData = { ...data, betslip_id: betslipID };\r\n        let language = getState().general.language\r\n\r\n        dispatch(setPlaceBetError(null));\r\n        dispatch(setPlaceBetDisabled(true));\r\n        jwtService\r\n            .placeLiveBet(newData, language)\r\n            .then((data) => {\r\n                unsubscribe();\r\n                dispatch(setPlaceBetDisabled(false));\r\n                dispatch(setLastBetslipId(data.betslip_id[data.betslip_id.length -1]));\r\n                dispatch(setPlaceBetSuccess(false));\r\n                dispatch(setPlaceBetCountdown(false));\r\n                dispatch(setBetPlacedMessage(true)); // Bet placed\r\n                dispatch(setBetslipLoading(false));\r\n                dispatch(clearBets());\r\n                dispatch(getUser());\r\n\r\n                setTimeout(() => {\r\n                    dispatch(setBetPlacedMessage(false)); // Hide bet placed message\r\n                }, 3000);\r\n            })\r\n            .catch((error) => {\r\n                dispatch(setPlaceBetDisabled(false));\r\n                dispatch(setBetslipLoading(false));\r\n                dispatch(setPlaceBetCountdown(false));\r\n                if (error && error.response && error.response.status === 400) {\r\n                    let message = error.response.data.non_field_errors[0];\r\n\r\n                    if (message?.includes('Price')) {\r\n                        let converted1 = message.replace(/'/g, '\"');\r\n                        let converted2 = converted1.replace(/\"$/, '\\'');\r\n                        let converted3 = converted2.replace(/^\"/, '\\'');\r\n                        dispatch(updateBets(JSON.parse(converted3)));\r\n                        dispatch(setPlaceBetError('Bet can not be placed'));\r\n                    } else {\r\n                        dispatch(setPlaceBetError(message));\r\n                    }\r\n                } else if (error && error.response && error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error && error.response && error && error.response && error.response.status && error.response.status === 489) {\r\n                    dispatch(setPlaceBetError(error.response.message));    \r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Place a bet\r\nexport const placeBetWithOutLoader = (data, timer) => {\r\n    return (dispatch, getState) => {        \r\n        const fixtures = getState().betslip.fixtures;\r\n         let language = getState().general.language\r\n        dispatch(setPlaceBetError(null));\r\n        dispatch(setPlaceBetDisabled(true));\r\n\r\n        jwtService\r\n            .placeBet(data, language)\r\n            .then((data) => {\r\n                dispatch(setLastBetslipId(data.betslip_id));\r\n                let containsLiveEvent = find(fixtures, (fixture) => {\r\n                    if (fixture.fixture.fixture_status) return fixture.fixture.fixture_status === lSportsConfig.statuses.inplay; \r\n                    else return fixture.fixture?.Fixture?.Status === lSportsConfig.statuses.inplay;\r\n                });\r\n                if (!containsLiveEvent) {           // Only Prematch then accept the bet\r\n                    dispatch(setPlaceBetDisabled(false));\r\n                    dispatch(setLastBetslipId(data.betslip_id));\r\n                    dispatch(setPlaceBetSuccess(false));\r\n                    dispatch(setPlaceBetCountdown(false));\r\n                    dispatch(setBetPlacedMessage(true)); // Bet placed\r\n                    dispatch(setBetslipLoading(false));\r\n                    dispatch(clearBets());\r\n                    dispatch(getUser());\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setBetPlacedMessage(false)); // Hide bet placed message\r\n                    }, 3000);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                clearTimeout(timer); // Clear the countdown timer on betslip page in case of error.\r\n                dispatch(setPlaceBetDisabled(false));\r\n                dispatch(setBetslipLoading(false));\r\n                dispatch(setPlaceBetCountdown(false));\r\n                if (error && error.response && error.response.status === 400) {\r\n                    let message = error.response.data.non_field_errors &&  error.response.data.non_field_errors[0];\r\n\r\n                    if (message?.includes('Price')) {\r\n                        let converted1 = message.replace(/'/g, '\"');\r\n                        let converted2 = converted1.replace(/\"$/, '\\'');\r\n                        let converted3 = converted2.replace(/^\"/, '\\'');\r\n                        dispatch(updateBets(JSON.parse(converted3)));\r\n                        dispatch(setPlaceBetError('Bet can not be placed'));\r\n                    } else {\r\n                        dispatch(setPlaceBetError(error.response.data.message));\r\n                    }\r\n                } else if (error && error.response && error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set betslip loading\r\nexport const setBetslipLoading = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_BETSLIP_LOADING, value });\r\n    };\r\n};\r\n// Set place bet error message\r\nexport const setPlaceBetError = (error) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PLACE_BET_ERROR, error });\r\n    };\r\n};\r\n\r\n// Set place bet button disabled during request\r\nexport const setPlaceBetSuccess = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PLACE_BET_SUCCESS, value });\r\n    };\r\n};\r\n// Set place bet success value\r\nexport const setPlaceBetDisabled = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PLACE_BET_DISABLED, value });\r\n    };\r\n};\r\n\r\n// Set place bet countdown (start - true, end - false)\r\nexport const setPlaceBetCountdown = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PLACE_BET_COUNTDOWN, value });\r\n    };\r\n};\r\n\r\n// Set 'Bet Placed' message\r\nexport const setBetPlacedMessage = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_BET_PLACED_MESSAGE, value });\r\n    };\r\n};\r\n\r\n// Set last placed betslip id\r\nexport const setLastBetslipId = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LAST_BET_ID, value });\r\n    };\r\n};\r\n\r\n// Get last placed betslip\r\nexport const getLastBetslip = (id) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        jwtService\r\n            .getLastBetslip(id, language)\r\n            .then((betslips) => {\r\n                let repeatBetAvailable = true; \r\n                forEach(betslips, (e) => {\r\n                    e.event = (typeof e.event == 'string') ? JSON.parse(e.event) : e.event;\r\n                    let market = (typeof e.market == 'string') ? JSON.parse(e.market) : e.market;\r\n                    let fMarket = Util.marketFormatter([market], market.match_id);\r\n                    e.market = fMarket[`id_${e.market_id}`];\r\n                    if(isEmpty(e.event)){\r\n                        repeatBetAvailable = false;\r\n                    }\r\n                });\r\n                if(repeatBetAvailable) {\r\n                forEach(betslips, async (e, i) => {\r\n                    if(e.event.fixture_status !== lSportsConfig.statuses.inplay ) {\r\n                    const fixtureId = e.event.fixture_id;\r\n                    await dynamoClient.query(paramsMarketDataIndex(fixtureId.toString()), (err, data) => {\r\n                        if(err){\r\n                            console.log(err);\r\n                        }\r\n                        else {\r\n                            if (data.Items.length) betslips[i].event.market = Util.marketFormatter(data.Items, fixtureId);\r\n                            betslips[i].event.participants = [betslips[i].event.participant_one_full, betslips[i].event.participant_two_full];\r\n                        }\r\n                    });\r\n                } else {\r\n                  betslips[i].event.participants = [betslips[i].event.participant_one_full, betslips[i].event.participant_two_full];\r\n                  betslips[i].event.Livescore = betslips[i].livescore; \r\n                }\r\n                });\r\n                dispatch(setLastBetslip(betslips));\r\n                }\r\n                else {\r\n                    toastr.error('', 'Repeat Bet Not Available');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set last placed betslip\r\nexport const setLastBetslip = (betslips) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LAST_BETSLIP, betslips });\r\n    };\r\n};\r\n","import * as Actions from '../actions/actionTypes';\r\nimport forEach from 'lodash.foreach';\r\nimport jwtService from '../../services/jwtService';\r\nimport { pick } from 'lodash';\r\nimport genralServices from '../../services/genralServices';\r\nimport { dynamoClient } from '../../App';\r\nimport { getFavEvents } from '../../dynamo/favoriteParams';\r\n\r\n// Show loading overlay\r\nlet statsData = [];\r\nlet statsLoading = false;\r\nexport const setLoading = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LOADING, value });\r\n    };\r\n};\r\n\r\n// Set language\r\nexport const setLanguage = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LANGUAGE, value });\r\n    };\r\n};\r\n\r\n// Get user object data\r\nexport const getBanners = () => {\r\n    return (dispatch) => {\r\n        jwtService.getBanners().then((data) => {\r\n            let banners = [];\r\n            if (data.banners) {\r\n                banners = data.banners;\r\n                // data.img_urls.forEach(url => banners.push({ image_url: url }));\r\n                dispatch({ type: Actions.SET_BANNERS, data: banners});\r\n            }\r\n        });\r\n        jwtService.getMatchBanners().then((data) => {\r\n            let banners = [];\r\n            if (data.data) {\r\n                banners = data.data;\r\n                let eventObj = {};\r\n                if (banners.length > 0) {\r\n                    banners.map((event,i) => eventObj[`:evt${i}`] = { fixture_id: `${event.fixture_id}` });\r\n                }\r\n                dynamoClient.batchGet(getFavEvents(eventObj), (err, res) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    } else {\r\n                        let { Responses: { PartialDevent } } = res;\r\n                        if (PartialDevent?.length) {\r\n                            PartialDevent = PartialDevent.map(match => {\r\n                                // match.fixture_id = +match.fixture_id;\r\n                                match.league = JSON.parse(match.league);\r\n                                if(match.location) {\r\n                                    match.location = JSON.parse(match.location);\r\n                                }\r\n                                eventObj[match.fixture_id] = match;\r\n                                return match;\r\n                            });\r\n                            let updatedBanner = [];\r\n                            banners = banners.map(evt => {\r\n                                const match = eventObj?.[evt.fixture_id];\r\n                                if (match) {\r\n                                    updatedBanner.push({\r\n                                        ...evt,\r\n                                        sport_id: match.sport_id,\r\n                                        redirection: `d/extra-market/${match.sport_id}/${ match.fixture_id }`\r\n                                        // redirection: '/d/sports'\r\n                                    });\r\n                                } return null;\r\n                            });\r\n                            // banners = banners.filter(banner => banner);\r\n                            return dispatch({ type: Actions.SET_BANNERS, data: updatedBanner, isMatchBanner: true });\r\n                        }\r\n                    }\r\n                });\r\n                dispatch({ type: Actions.SET_BANNERS, data: banners, isMatchBanner: true });\r\n                // data.img_urls.forEach(url => banners.push({ image_url: url }));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const getDeviceLocation = () =>  {\r\n    return (dispatch) => {\r\n        genralServices.getDeviceLocation().then(data => dispatch({\r\n            type: Actions.SET_COUNTRY_CODE, countryCode: data.country\r\n        }));\r\n    };\r\n};\r\n\r\n\r\nexport const getStatsData = (url) => {\r\n    if (true) return (dispatch, getState) => {}; \r\n    return (dispatch) => {\r\n        statsLoading = true;\r\n        genralServices.getStatsStatus(url).then(res => {\r\n            if(res?.api) {\r\n                const { data, method } = res.api;\r\n                const { booked_events } = data;\r\n                if (booked_events) statsData = [ ...statsData, ...booked_events];\r\n                if (method.next_page) {\r\n                    dispatch(getStatsData(method.next_page));\r\n                } else {\r\n                    let evtWithData = {};\r\n                    forEach(statsData, (evt) => {\r\n                        const { client_event_id } = evt;\r\n                        const event = pick(evt, ['id', 'name', 'start_date', 'client_event_id', 'status_type' ]);\r\n                        evtWithData[client_event_id] = event;\r\n                        // if (['live', 'scheduled'].includes(evt['status_type'])) {\r\n                        // }\r\n                    });\r\n                    statsLoading = false;\r\n                    dispatch({type: Actions.SET_STATS_DATA, data: evtWithData });\r\n                    sessionStorage.setItem('stats_data', JSON.stringify({ date: new Date(), data: evtWithData }));\r\n                    return null;\r\n                }\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport const getTenentStatus = () => {\r\n      return (dispatch) => {\r\n          genralServices.tenetCasinoStatus().then((res)=>{\r\n            dispatch({type:Actions.SET_TENET_STATUS, isShowCasino: res})\r\n          })\r\n          .catch((err)=>{\r\n              console.log(err)\r\n          })\r\n      }\r\n}\r\n","import * as Actions from '../actionTypes';\r\n\r\n// Select main market from markets slider (tabs)\r\nexport const selectMainMarket = (marketId) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: Actions.ON_MAIN_MARKET_SELECTED,\r\n            marketId: marketId,\r\n        });\r\n    };\r\n};\r\n\r\n// Set Locations component active\r\nexport const setLocationsActive = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LOCATIONS_ACTIVE, value });\r\n    };\r\n};\r\n\r\n// Set main component active\r\nexport const setPrematchActive = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_ACTIVE, value });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setPrematchResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_PREMATCH_RESET_PAGE });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updatePrematchEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_PREMATCH_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update livescore (time and score)\r\nexport const updatePrematchEventsLivescore = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_PREMATCH_EVENTS_LIVESCORE, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updatePrematchEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_PREMATCH_EVENTS_STATUS, events });\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport * as Actions from '../actionTypes';\r\nimport Util from '../../../helper/Util';\r\nimport forEach from 'lodash.foreach';\r\nimport jwtService from '../../../services/jwtService';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsPrematchCount } from '../../../dynamo/params';\r\nimport { differenceInDays } from 'date-fns';\r\n\r\n// Get sports list\r\nlet countObj = {};\r\n\r\nexport const getPrematchSports = (clear, nextToken) => {\r\n    return (dispatch, getState) => {\r\n        if(clear){\r\n            countObj = {};\r\n        }\r\n        dynamoClient.scan(paramsPrematchCount(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                forEach(data.Items, (event) => {\r\n                    if(!countObj[event.sport_id]) {\r\n                        countObj[event.sport_id] = 0;\r\n                    }\r\n                    if(differenceInDays(Util.getFormattedDate(event.start_date),new Date())>= 0) {\r\n                        countObj[event.sport_id]++;\r\n                    }\r\n                }); \r\n                if(data.LastEvaluatedKey) {\r\n                    dispatch(getPrematchSports(false, data.LastEvaluatedKey));\r\n                } else {\r\n                    dispatch({ type: Actions.SET_PREMATCH_SPORTS_COUNT_OBJECT, sportsCountObj: countObj });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n// Set sports list\r\nexport const setPrematchSports = (sports) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_SPORTS, sports });\r\n    };\r\n};\r\n\r\n// Select active sport\r\nexport const selectPreSport = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let locationObj = getState().prematch.locationObj;\r\n        let locationArray = [];\r\n        let dateFilter = getState().prematch.dateFilter;\r\n       // dispatch(getPrematchSports());\r\n        dispatch({ type: Actions.ON_SPORT_SELECTED, sportId });\r\n        \r\n        // if(!isEmpty(locationObj)) {\r\n        //     forEach(Object.keys(locationObj[sportId]), (location) => {\r\n        //         if(location !== 'count')\r\n        //         locationArray.push({location_id: location, name: locationObj[sportId][location].name, fixtures_count: locationObj[sportId][location].count});\r\n        //     });\r\n        //     locationArray = sortedLocations(locationArray);\r\n        //     dispatch(setPrematchLocations(locationArray));\r\n        //     dispatch(setDateFilter(dateFilter));\r\n        //     }\r\n        // dispatch(getPrematchLocations());\r\n    };\r\n};\r\n\r\n\r\nexport const getPrematchSportsMobile = (clear, i) => {\r\n    return (dispatch, getState) => {\r\n        if(clear){\r\n            countObj = {};\r\n        }\r\n        dispatch(getSportsCount(1));\r\n    };\r\n};\r\n\r\nconst getSportsCount = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        countObj = {};\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                let { sport_count: sportCountMeta } = data;\r\n                countObj = JSON.parse(sportCountMeta);\r\n                dispatch({ type: Actions.SET_PREMATCH_SPORTS_COUNT_OBJECT, sportsCountObj: countObj });                    \r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport Util from '../../../helper/Util';\r\nimport * as Actions from '../actionTypes';\r\nimport map from 'lodash.map';\r\nimport forEach from 'lodash.foreach';\r\nimport { forIn, isEmpty } from 'lodash';\r\nimport { sortedLocations } from '../../../config/sports';\r\nimport { format } from 'date-fns';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsPrematchLocations } from '../../../dynamo/params';\r\nimport { MARKET_FOR_OUTER_SLIDER, MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\nimport { differenceInDays } from 'date-fns/esm';\r\nimport { prematchEventBatchSize } from '../../../config';\r\nimport { getPartialEventsBatch } from '../../../dynamo/todaysParam/getTodayEventsParams';\r\nimport jwtService from '../../../services/jwtService';\r\n\r\nlet eventCount = 0;\r\nlet noOfBatches = 1;\r\n\r\n// Get locations list\r\nlet previousSportId = null\r\nexport const getPrematchLocations = (nextToken) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().prematch.selectedSport;\r\n        dynamoClient.scan(paramsPrematchLocations(sportId, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                if(previousSportId !== sportId) {\r\n                    previousSportId = sportId\r\n                    dispatch(clearPartialLocations())\r\n                    return dispatch(getPrematchLocations())\r\n                }\r\n                dispatch(setPartialLocations(data.Items));\r\n                if(data.LastEvaluatedKey) {\r\n                    dispatch(fetchMore(data.LastEvaluatedKey));\r\n                } else {\r\n                    dispatch(fetchedAllData());\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const clearPartialLocations = () => {\r\n    return (dispatch) => {\r\n        eventCount = 0;\r\n        dispatch({ type: Actions.SET_PREMATCH_PARTIAL_LOCATIONS, clear: true });\r\n    };\r\n};\r\n\r\nconst fetchMore = (token) => {\r\n    return (dispatch) => {\r\n        dispatch(getPrematchLocations(token));\r\n    };\r\n}; \r\n\r\nconst fetchedAllData = () => {\r\n    return (dispatch, getState) => {\r\n        let partialLocations = getState().prematch.partialLocations;\r\n        let lan = `name_${ getState().general.language }`;\r\n        let locationObj = {};\r\n        let dateFilter = getState().prematch.dateFilter;\r\n        let newPartialLocations = partialLocations.filter(event => differenceInDays(Util.getFormattedDate(event.start_date),new Date())>= 0);\r\n                \r\n                let locationArray = [];\r\n                forEach(!isEmpty(locationObj) && Object.keys(locationObj), (location) => {\r\n                    if(location !== 'count')\r\n                    locationArray.push({\r\n                        location_id: location,\r\n                        name: locationObj[location].name,\r\n                        fixtures_count: locationObj[location].count,\r\n                        name_en: locationObj[location].name_en,\r\n                        name_tr: locationObj[location].name_tr,\r\n                        name_nl: locationObj[location].name_nl,\r\n                        name_de: locationObj[location].name_de,\r\n                        name_ru: locationObj[location].name_ru,\r\n                    });\r\n                });\r\n                dispatch({ type: Actions.SET_PREMATCH_PARTIAL_LOCATIONS, sort: true });\r\n                locationArray = sortedLocations(locationArray);\r\n                dispatch(setPrematchLocations(locationArray));\r\n                dispatch(setLocationObj(locationObj));\r\n                dispatch(setDateFilter(dateFilter));\r\n        // dispatch({ type: Actions.SET_PREMATCH_ALL_EVENTS, allEvents: allData });        \r\n    };\r\n};\r\n\r\nconst setPartialLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_PARTIAL_LOCATIONS, locations });        \r\n    };\r\n};\r\n\r\n\r\nexport const setLocationObj = (locationObj) => {\r\n    // let sportsCountObj = {};\r\n    // forEach(Object.keys(locationObj), (location) => {\r\n    //     if(location !== 'count')\r\n    //     sportsCountObj[location]= locationObj[location].count; \r\n    // });\r\n    return (dispatch) => {\r\n        // dispatch({ type: Actions.SET_PREMATCH_SPORTS_COUNT_OBJECT, sportsCountObj });\r\n        dispatch({ type: Actions.SET_PREMATCH_LOCACTIONS_OBJECT, locationObj });\r\n    };\r\n};\r\n\r\nexport const setClearLocations = () => {\r\n    return (dispatch) => {\r\n        eventCount = 0;\r\n        dispatch({ type: Actions.SET_PREMATCH_CLEAR_LOCATIONS });\r\n    };\r\n}\r\n// Get leagues for a particular location\r\nexport const getPrematchLeagueForLocation = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        // let language = getState().general.language;\r\n        // let dateFilter = getState().prematch.dateFilter;\r\n        let locationObj = getState().prematch.locationObj;\r\n        let dateFilter = getState().prematch.dateFilter;\r\n        // dispatch(setLoading(true));\r\n        // awsAppsyncService.getSportsLocations.then((sports) => console.log(sports));\r\n        const leaguesArray = [];\r\n        if(format(new Date(), 'yyyy-MM-dd') === dateFilter) {\r\n\r\n            forEach(Object.keys(locationObj[locationId]), (league) => {\r\n                if(!isNaN(league)) {\r\n                    leaguesArray.push({location_id: parseInt(league), name: locationObj[locationId][league].name || locationObj[locationId][league].name_en, fixtures_count: locationObj[locationId][league].count, start_date: locationObj[locationId][league].start_date, ...locationObj[locationId][league]})\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            forEach(Object.keys(locationObj[locationId]), (league) => {\r\n                if(!isNaN(league) && locationObj[locationId][league].start_date[dateFilter])\r\n                leaguesArray.push({location_id: parseInt(league), name: locationObj[locationId][league].name || locationObj[locationId][league].name_en, fixtures_count: locationObj[locationId][league].start_date[dateFilter]})\r\n            });\r\n\r\n        }\r\n        dispatch(setPrematchLeaguesForLocation([{leagues: leaguesArray}]));\r\n\r\n    };\r\n};\r\n\r\n// Set locations list\r\nexport const setPrematchLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_LOCATIONS, locations });\r\n    };\r\n};\r\n\r\n// Set locations list\r\nexport const setPrematchLeaguesForLocation = (leagues) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_LEAGUE_FOR_LOCATION, leagues });\r\n    };\r\n};\r\n\r\n// Clear locations list\r\nexport const clearLocations = () => {\r\n    return (dispatch) => {\r\n        eventCount = 0;\r\n        dispatch({ type: Actions.CLEAR_PREMATCH_LOCATIONS });\r\n    };\r\n};\r\n\r\n// Set selected location\r\nexport const selectLocation = (locationId) => {\r\n    return (dispatch) => {\r\n        eventCount = 0;\r\n        dispatch({ type: Actions.ON_LOCATION_SELECTED, locationId });\r\n    };\r\n};\r\n\r\n// Set selected location\r\nexport const setDateFilter = (value) => {\r\n    return (dispatch, getState) => {\r\n        let locationObj = getState().prematch.locationObj;\r\n        let locationArray = [];\r\n        //dispatch(selectLocation(null));\r\n        if(format(new Date(), 'yyyy-MM-dd') !== value) {\r\n            forIn(locationObj, (leagueObj, key) => {\r\n            let count = 0;\r\n            forIn(leagueObj, (leagues, key2) => {\r\n                if(typeof leagues === 'object' && leagues.start_date[value]){\r\n                    count = count + leagues.start_date[value];\r\n                }\r\n                }); \r\n                if( count > 0)\r\n                    locationArray.push({\r\n                        location_id: key,\r\n                        name: locationObj[key].name,\r\n                        fixtures_count: count,\r\n                        name_en: locationObj[key].name_en,\r\n                        name_tr: locationObj[key].name_tr,\r\n                        name_nl: locationObj[key].name_nl,\r\n                        name_de: locationObj[key].name_de,\r\n                        name_ru: locationObj[key].name_ru,\r\n                    });\r\n            });\r\n        }      \r\n        else {\r\n            forEach(Object.keys(locationObj), (location) => {\r\n                if(location !== 'count')\r\n                locationArray.push({\r\n                    location_id: location,\r\n                    name: locationObj[location].name,\r\n                    fixtures_count: locationObj[location].count,\r\n                    name_en: locationObj[location].name_en,\r\n                    name_tr: locationObj[location].name_tr,\r\n                    name_nl: locationObj[location].name_nl,\r\n                    name_de: locationObj[location].name_de,\r\n                    name_ru: locationObj[location].name_ru,\r\n\r\n                });\r\n            });\r\n        }\r\n        locationArray = sortedLocations(locationArray);\r\n        dispatch(setPrematchLocations(locationArray));\r\n        dispatch({ type: Actions.SET_PREMATCH_DATE_FILTER, value });\r\n    };\r\n};\r\n\r\nexport const getPrematchLocationsMobile = (nextToken) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().prematch.selectedSport;\r\n        dispatch(getTodaySportEvents(sportId));\r\n    };\r\n};\r\n\r\nexport const setPrematchDateFilter = (value = format(new Date(), 'yyyy-MM-dd')) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_DATE_FILTER, value });\r\n    };\r\n};\r\n\r\nexport const resetPrematch = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.RESET_PREMATCH });\r\n    };\r\n};\r\n\r\nconst getTodaySportEvents = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                let { sport } = data;\r\n                sport = JSON.parse(sport) || {};\r\n                let prematchData = [];\r\n                Object.entries(sport).forEach(([key,value]) => {\r\n                    let { start_date } = value;\r\n                    return prematchData.push({ fixture_id: key, start_date });\r\n                });\r\n                noOfBatches = 1;\r\n                if (prematchData.length) {\r\n                    noOfBatches = Math.ceil(prematchData.length / prematchEventBatchSize);\r\n                    let j = 0;\r\n                    for (let i = 1; i <=noOfBatches; i++) {\r\n                        let segmentData = prematchData.slice(j, i*prematchEventBatchSize);\r\n                        j = i*prematchEventBatchSize;\r\n                        dispatch(getSportEventsMobile_2(segmentData, sportId));\r\n                    }\r\n                } else {\r\n                    dispatch(getSportEventsMobile_2(prematchData, sportId));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nconst getSportEventsMobile_2 = (fixtureArray, sportId = 1) => {\r\n    return (dispatch, getState) => {\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        const eventObj = {};\r\n        if (fixtureArray.length > 0) {\r\n            fixtureArray.map((event,i) => eventObj[`:evt${i}`] = { fixture_id: `${event.fixture_id}` });\r\n        }\r\n        dynamoClient.batchGet(getPartialEventsBatch(eventObj), async (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { PartialDevent: Items } = data.Responses;\r\n                eventCount++;\r\n                dispatch(setPartialLocations(Items));\r\n                if( eventCount === noOfBatches) {\r\n                    dispatch(fetchedAllData());\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport { lSportsConfig } from '../../../config';\r\nimport * as Actions from '../actionTypes';\r\nimport { search, setPrematchSearchStatus, setPrematchSearchLoadMore } from './lsports.prematch.search.actions';\r\nimport Util from '../../../helper/Util';\r\nimport { map, isEmpty, filter, forEach, slice } from 'lodash';\r\nimport { differenceInDays, format } from 'date-fns';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsMarketDataIndex } from '../../../dynamo/params';\r\nimport { setPrematchSearch } from '.';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\n\r\nlet eventCount;\r\nlet marketsArray = [];\r\n// Get league events list\r\nexport const getPrematchLeagueEvents = (startIndex) => {\r\n    return (dispatch, getState) => {\r\n        let partialLeagueEvents = getState().prematch.partialLeagueEvents;\r\n        let events = slice(partialLeagueEvents ,startIndex, startIndex + 20);\r\n        eventCount = 0;\r\n        forEach(events, (event, i) => {\r\n            dispatch(getMarketData(event.fixture_id, startIndex, i ,events.length));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getMarketData = (fixture_id, startIndex, i, count, isSearch, clear) => {\r\n    return (dispatch, getState) => {\r\n    if(clear) {\r\n        marketsArray = [];\r\n        eventCount = 0;\r\n    }\r\n    dynamoClient.query(paramsMarketDataIndex(`${ fixture_id }`), (err, data) => {\r\n        if (err) {\r\n            console.log(err);\r\n        } else {\r\n            let markets = {};\r\n            let Items = data?.Items;\r\n            if (Items.length) markets = Util.marketFormatter(Items, fixture_id);\r\n            let livescore = sessionStorage.getItem('liveScore');\r\n            if (livescore) {\r\n                livescore = JSON.parse(livescore);\r\n                sessionStorage.removeItem('liveScore');\r\n            }\r\n            marketsArray[i] = { [fixture_id]: {\r\n                market: markets ? markets : {},\r\n                livescore,\r\n            }};\r\n            eventCount++;\r\n        }\r\n        \r\n        if(eventCount === count && !isSearch) {\r\n            let partialLeagueEvents = getState().prematch.partialLeagueEvents;\r\n            // If fixtures id's are same club the data\r\n            marketsArray = map(marketsArray, (market , i) =>{\r\n                if(market && partialLeagueEvents && !isEmpty(Object.values(market)[0]) && Object.keys(market)[0] == partialLeagueEvents[startIndex + i]?.fixture_id) {\r\n                    let mktData = Object.values(market)[0];\r\n                    return {\r\n                        ...partialLeagueEvents[startIndex + i],\r\n                        ...mktData,\r\n                        market: { ...partialLeagueEvents[startIndex + i].market, ...mktData.market},\r\n                        livescore: mktData?.livescore || null\r\n                    };\r\n                }\r\n            });\r\n\r\n            marketsArray = filter(marketsArray, (market) => market && !isEmpty(Object.values(market)[0]));\r\n            dispatch(setPrematchLeagueEvents(marketsArray, startIndex + count));\r\n\r\n        } else if(eventCount === count && isSearch) {\r\n            let partialSearchResults = getState().prematch.partialSearchResults;\r\n            marketsArray = map(marketsArray, (market , i) =>{\r\n                const mktData = Object.values(market)[0];\r\n                if(mktData.fixture_status === undefined) return null;\r\n                if(market && partialSearchResults && !isEmpty(mktData) && Object.keys(market)[0] == partialSearchResults[startIndex + i]?.fixture_id) {\r\n                    return { ...partialSearchResults[startIndex + i], market: { ...partialSearchResults[startIndex + i].market, ...mktData.market}, ...mktData };\r\n                }\r\n            });\r\n\r\n            marketsArray = filter(marketsArray, (market) => market);\r\n            dispatch(setPrematchSearch(marketsArray, startIndex + count));\r\n        }\r\n    }); \r\n};\r\n};\r\n\r\n// Set league events list\r\nexport const setPrematchLeagueEvents = (events, nextIndex) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_LEAGUE_EVENTS, events, nextIndex });\r\n    };\r\n};\r\n\r\n// Remove league from main events on 'x' icon click\r\nexport const removeLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_PREMATCH_REMOVE_LEAGUE, leagueId });\r\n\r\n        let searchStarted = getState().prematch.searchStarted;\r\n\r\n        if (searchStarted) {\r\n            let hasNextPage = getState().prematch.hasNextPage;\r\n            let mainEvents = getState().prematch.mainEvents;\r\n            let language = getState().general.language;\r\n            let page = getState().prematch.currentPage;\r\n            let searchValue = getState().prematch.searchValue;\r\n            let searchStatus = getState().prematch.searchStatus;\r\n\r\n            if (mainEvents.length < 20 && hasNextPage) {\r\n                // get new events\r\n                lSportsService\r\n                    .prematchSearchEvents(searchValue, searchStatus, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0) {\r\n                            if (searchStatus === lSportsConfig.statuses.inplay) {\r\n                                dispatch(setPrematchSearchStatus(lSportsConfig.statuses.prematch));\r\n                                dispatch(search(searchValue));\r\n                            } else if (searchStatus === lSportsConfig.statuses.prematch) {\r\n                                dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n                            }\r\n                        } else {\r\n                            dispatch(setPrematchSearchLoadMore(data.results, data.next));\r\n\r\n                            if (data.next === null || data.results.length < 20) {\r\n                                if (searchStatus === lSportsConfig.statuses.inplay) {\r\n                                    dispatch({ type: Actions.SET_PREMATCH_HAS_NEXT_PAGE, value: true });\r\n                                    dispatch(setPrematchSearchStatus(lSportsConfig.statuses.prematch));\r\n                                } else if (searchStatus === lSportsConfig.statuses.prematch) {\r\n                                    dispatch({ type: Actions.SET_PREMATCH_HAS_NEXT_PAGE, value: false });\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n// Clear league events list\r\nexport const clearLeagueEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_LEAGUE_EVENTS });\r\n    };\r\n};\r\n\r\n\r\nexport const setPartialLeagueData = (leagues) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PARTIAL_LEAGUE_DATA, leagues });\r\n        dispatch(getPrematchLeagueEvents(0));\r\n    };\r\n};\r\n// Set selected league\r\nexport const selectLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_LEAGUE_SELECTED, leagueId });\r\n        let selectedSport = getState().prematch.selectedSport;\r\n        let partialLocations = getState().prematch.partialLocations;\r\n        let dateFilter = getState().prematch.dateFilter;\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedSport]; \r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        let leagues;\r\n        if(format(new Date(), 'yyyy-MM-dd') === dateFilter) {\r\n            leagues = filter(partialLocations, (event) => event.league?.Id === leagueId && event?.sport_id === selectedSport);\r\n        }\r\n        else {\r\n            leagues = filter(partialLocations, (event) => event.league?.Id === leagueId && event?.sport_id === selectedSport && format(new Date(event.start_date), 'yyyy-MM-dd') === dateFilter);\r\n        }\r\n        leagues = leagues.filter(event => differenceInDays(Util.getFormattedDate(event.start_date),new Date())>= 0);\r\n        dispatch(setPartialLeagueData(leagues));\r\n        eventCount = 0;\r\n    };\r\n};\r\n","import generalService from '../../../services/genralServices';\r\nimport * as Actions from '../actionTypes';\r\nimport { clearLeagueEvents, getMarketData } from './lsports.prematch.league.actions';\r\nimport { setPrematchResetPage } from './lsports.prematch.general.actions';\r\nimport Util from '../../../helper/Util';\r\nimport filter from 'lodash.filter';\r\nimport {forEach, slice} from 'lodash';\r\nimport { dynamoClient } from '../../../App';\r\nimport { getFavEvents } from '../../../dynamo/favoriteParams';\r\n\r\n// Set search started\r\nexport const setSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_SEARCH_STARTED, value });\r\n    };\r\n};\r\n\r\nexport const setPrematchSearch = (events, nextIndex) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_SEARCH, events, nextIndex });\r\n    };\r\n};\r\n\r\nexport const setPrematchSearchLoadMore = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_SEARCH_LOAD_MORE, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Set status of events to search (first inplay - 2, then prematch - 1)\r\nexport const setPrematchSearchStatus = (status) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_SEARCH_STATUS, status });\r\n    };\r\n};\r\n\r\nexport const setPrematchPartialSearchResults = (results) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_PARTIAL_SEARCH_RESULTS, results});\r\n    };\r\n};\r\n// Search events by participant\r\nexport const search = (value) => {\r\n    return (dispatch, getState) => {\r\n        let searchValue = getState().prematch.searchValue;\r\n        let partialLocations = getState().prematch.partialLocations;\r\n        let partialSearchResults = getState().prematch.partialSearchResults;\r\n        let nextIndex=getState().prematch.nextIndex;\r\n        if (value === '') {\r\n            dispatch(setSearchStarted(false));\r\n            dispatch(clearSearch());\r\n            dispatch(clearLeagueEvents());\r\n        } else if (searchValue === value) {\r\n            dispatch(setSearchStarted(true));\r\n            const data = slice(partialSearchResults, nextIndex+0, nextIndex+20);\r\n                forEach(data, (e, i) => dispatch(getMarketData(e.fixture_id, nextIndex, i, data.length, true, i===0 ? true: false))); \r\n            // let filteredEvents = filter(partialLocations, (me) => {\r\n            //     let searchParam = `${me.participants[0].Name} ${me.participants[1].Name}` ;\r\n            //     let lowercaseEventName = searchParam.toLowerCase();\r\n            //     let lowercaseSearchVal = action.value.toLowerCase();\r\n            //     return lowercaseEventName.includes(lowercaseSearchVal);\r\n            // });\r\n            // lSportsService\r\n            //     .prematchSearchEvents(value, searchStatus, language, page + 1, sportId)\r\n            //     .then((data) => {\r\n            //         dispatch(setSearchStarted(false));\r\n            //         if (data.results.length === 0) {\r\n            //             // if (searchStatus === lSportsConfig.statuses.inplay) {\r\n            //             //     dispatch(setPrematchSearchStatus(lSportsConfig.statuses.prematch));\r\n            //             //     dispatch(search(value));\r\n            //             // } else if (searchStatus === lSportsConfig.statuses.prematch) {\r\n            //                 dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n            //             //}\r\n            //         } else {\r\n            //             dispatch(setPrematchSearchLoadMore(data.results, data.next));\r\n\r\n            //             if (data.next === null ) {\r\n            //                 // if (searchStatus === lSportsConfig.statuses.inplay) {\r\n            //                 //     dispatch({ type: Actions.SET_PREMATCH_HAS_NEXT_PAGE, value: true });\r\n            //                 //     dispatch(setPrematchSearchStatus(lSportsConfig.statuses.prematch));\r\n            //                 // } else if (searchStatus === lSportsConfig.statuses.prematch) {\r\n            //                     dispatch({ type: Actions.SET_PREMATCH_HAS_NEXT_PAGE, value: false });\r\n            //                 //}\r\n            //             }\r\n            //         }\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         dispatch(setSearchStarted(false));\r\n            //         console.error(error);\r\n            //         if (error && error.response && error.response.status && error.response.status === 401) {\r\n            //             Util.handleRepeatedLogin(error.response);\r\n            //         } else if (error.message === 'canceled') {\r\n            //             // Do nothing if pervious request was canceled.\r\n            //         } else {\r\n            //             toastr.error('', 'Something went wrong.');\r\n            //         }\r\n            //     });\r\n        } else {\r\n            dispatch(setPrematchResetPage());\r\n            dispatch(setSearchStarted(true));\r\n            let filteredEvents = filter(partialLocations, (me) => {\r\n                let searchParam = `${me.participant_one_full.Name} ${me.participant_two_full.Name}` ;\r\n                let lowercaseEventName = searchParam.toLowerCase();\r\n                let lowercaseSearchVal = value.toLowerCase();\r\n                return lowercaseEventName.includes(lowercaseSearchVal);\r\n            });\r\n            if(filteredEvents.length > 0){\r\n                dispatch({ type: Actions.ON_SEARCH, searchValue: value });\r\n                dispatch(setPrematchPartialSearchResults(filteredEvents));\r\n                const data = slice(filteredEvents, 0 ,20);\r\n                forEach(data, (e, i) => dispatch(getMarketData(e.fixture_id, 0, i, data.length,true, i===0 ? true: false))); \r\n            }\r\n            else \r\n                dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n            // lSportsService\r\n            //     .prematchSearchEvents(value, searchStatus, language, page + 1, sportId)\r\n            //     .then((data) => {\r\n            //         dispatch(setSearchStarted(false));\r\n            //         dispatch({ type: Actions.ON_SEARCH, searchValue: value });\r\n            //         if (data.results.length === 0) {\r\n            //             // if (searchStatus === lSportsConfig.statuses.inplay) {\r\n            //             //     dispatch(setPrematchSearchStatus(lSportsConfig.statuses.prematch));\r\n            //             //     dispatch(search(value));\r\n            //             // } else if (searchStatus === lSportsConfig.statuses.prematch) {\r\n            //                 dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n            //             //}\r\n            //         } else {\r\n            //             dispatch(setPrematchSearch(data.results, data.next));\r\n\r\n            //             if (data.results.length < 20) {\r\n            //                 if (searchStatus === lSportsConfig.statuses.inplay) {\r\n            //                     dispatch(setPrematchSearchStatus(lSportsConfig.statuses.prematch));\r\n            //                     dispatch(search(value));\r\n            //                 }\r\n            //             }\r\n            //         }\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         dispatch(setSearchStarted(false));\r\n            //         console.error(error);\r\n            //         if (error && error.response && error.response.status && error.response.status === 401) {\r\n            //             Util.handleRepeatedLogin(error.response);\r\n            //         } else if (error.message === 'canceled') {\r\n            //             // Do nothing if pervious request was canceled.\r\n            //         } else {\r\n            //             toastr.error('', 'Something went wrong.');\r\n            //         }\r\n            //     });\r\n        }\r\n    };\r\n};\r\n\r\nexport const getEventsData = (events) => {\r\n    return (dispatch, getState) => {\r\n        let nextIndex = getState().prematch.nextIndex;\r\n        let searchValue = getState().prematch.searchValue;\r\n        let partialSearchResults = getState().prematch.partialSearchResults;\r\n        let nextPage = getState().prematch.nextPage;\r\n        const eventObj = {};\r\n        events.map((event,i) => eventObj[`:evt${event.fixture_id}`] = { fixture_id: `${event.fixture_id}` });\r\n        dynamoClient.batchGet(getFavEvents(eventObj), (err, res) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { Responses: { PartialDevent } } = res;\r\n                if (PartialDevent?.length) {\r\n                    PartialDevent = PartialDevent.map(match => {\r\n                        match.fixture_id = +match.fixture_id;\r\n                        match.market = {};\r\n                        match.market_count = 0;\r\n                        match.livescore = {};\r\n                        match.participant_one_full = {};\r\n                        match.participant_two_full = {};\r\n                        match.participants = [match.participant_one_full, match.participant_two_full];\r\n                        match.league = { ...JSON.parse(match.league), Id: match.league_id };\r\n                        if(match.location) {\r\n                            match.location = JSON.parse(match.location);\r\n                            if (match.location_id) match.location = {...match.location, Id: match.location_id };\r\n                        }\r\n                        return match;\r\n                    });\r\n                    const totalLength = partialSearchResults.length + PartialDevent.length;\r\n                    if (totalLength < 5 && nextPage) dispatch(searchMore(searchValue, nextPage));\r\n                    dispatch(setPrematchPartialSearchResults(PartialDevent));\r\n                    forEach(PartialDevent, (e, i) => dispatch(getMarketData(`${e.fixture_id}`, nextIndex, i, PartialDevent.length, true, i===0 ? true: false))); \r\n                } else {\r\n                    if (!nextPage) dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n                    else {\r\n                        dispatch(searchMore(searchValue, nextPage));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const searchEvents = (value) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().prematch.selectedSport;\r\n        if (value === '') {\r\n            dispatch(setSearchStarted(false));\r\n            dispatch(clearSearch());\r\n            dispatch(clearLeagueEvents());\r\n        } else {\r\n            dispatch(setSearchStarted(true));\r\n            dispatch({ type: Actions.ON_SEARCH, searchValue: value });\r\n            generalService\r\n                .getSearchEvents({value, sportId})\r\n                .then((data) => {\r\n                    if (data.results.length === 0 && !data.next) {\r\n                        dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n                    } else {\r\n                        let { results } = data;\r\n                        let payload = { value: false };\r\n                        if (data.next) payload = { value: true, next: data.next };\r\n                        dispatch({ type: Actions.SET_PREMATCH_HAS_NEXT_PAGE, ...payload });\r\n                        dispatch(getEventsData(results));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(setSearchStarted(false));\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\n\r\nexport const searchMore = (value, nextPage) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().prematch.selectedSport;\r\n        let searchValue = getState().prematch.searchValue;\r\n        // dispatch({ type: Actions.ON_SEARCH, searchValue: value });\r\n        dispatch(setSearchStarted(true));\r\n            generalService\r\n                .getSearchEvents({value, sportId}, nextPage)\r\n                .then((data) => {\r\n                    if (data.results.length === 0 && !data.next) {\r\n                        dispatch({ type: Actions.ON_PREMATCH_NO_SEARCH_RESULTS });\r\n                    } else {\r\n                        let nextUrl = new URL(nextPage);\r\n                        let params = new URLSearchParams(nextUrl.search);\r\n                        if (!(params.get('participant') === searchValue)) {\r\n                            dispatch(setSearchStarted(false));\r\n                            return null;\r\n                        }\r\n                        let { results } = data;\r\n                        let payload = { value: false };\r\n                        if (data.next) {\r\n                            payload = { value: true, next: data.next };\r\n                        }\r\n                        dispatch({ type: Actions.SET_PREMATCH_HAS_NEXT_PAGE, ...payload });\r\n                        dispatch(getEventsData(results));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(setSearchStarted(false));\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    }\r\n                });\r\n    };\r\n}\r\n// Clear search input value\r\nexport const clearSearch = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_CLEAR_SEARCH });\r\n    };\r\n};\r\n","import map from 'lodash.map';\r\nimport forEach from 'lodash.foreach';\r\nimport * as Actions from './actionTypes';\r\n// import lSportsService from '../../services/lSportsService';\r\n// import { logoutUser } from './user.actions';\r\n// import { setLoading } from './general.actions';\r\nimport { homePageLeagues } from '../../config/sports';\r\nimport { dynamoClient } from '../../App';\r\nimport { paramsHomeLeaguesEvents, paramsHomeLeaguesEventsMobile, paramsHomeLeaguesEventsDesktop, paramsMarketDataIndex } from '../../dynamo/params';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport { differenceInDays } from 'date-fns';\r\nimport Util from '../../helper/Util';\r\nimport { totalSegments } from '../../config';\r\n\r\n\r\n// Get home page main leagues list\r\n// export const getHomeLeagues = () => {\r\n//     return (dispatch) => {\r\n//         dispatch(setLoading(true));\r\n\r\n//         lSportsService\r\n//             .getHomeLeagues()\r\n//             .then((leagues) => {\r\n//                 dispatch(setLoading(false));\r\n//                 dispatch(setHomeLeagues(leagues));\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(error);\r\n//                 dispatch(setLoading(false));\r\n//                 if (error && error.response && error.response.status && error.response.status === 401) {\r\n//                     Util.handleRepeatedLogin(error.response);\r\n//                 } else {\r\n//                     toastr.error('', 'Something went wrong.');\r\n//                 }\r\n//             });\r\n//     };\r\n// };\r\n\r\nlet eventCount = 0;\r\nlet eventCountDesktop = 0\r\n\r\n\r\n// Set home page main leagues list\r\nexport const setHomeLeagues = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_HOME_LEAGUES, leagues: homePageLeagues });\r\n    };\r\n};\r\n\r\n// Set home items grid active\r\nexport const setHomeActive = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_HOME_ACTIVE, value });\r\n    };\r\n};\r\n\r\n// Set league events active\r\nexport const setHomeLeaguesActive = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_HOME_LEAGUES_ACTIVE, value });\r\n    };\r\n};\r\n\r\n// Select active league\r\nexport const selectHomeActiveLeague = (leagueId) => {\r\n    return (dispatch) => {\r\n        eventCountDesktop = 0\r\n        eventCount = 0;\r\n        dispatch({ type: Actions.ON_SELECT_HOME_ACTIVE_LEAGUE, leagueId });\r\n    };\r\n};\r\n\r\n// Deselect active league\r\nexport const removeHomeActiveLeague = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_REMOVE_HOME_ACTIVE_LEAGUE });\r\n    };\r\n};\r\n\r\n// Get market data for set of fixture\r\nexport const getMarketData = (data, startIndex, count) => {\r\n    return (dispatch, getState) => {\r\n        let eventCount = 0;\r\n        let marketsArray = [];\r\n        if (!data.length) return null;\r\n        const { sport_id: sportId } = data[0];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        forEach(data, (event, i) => {\r\n            let markets = {};\r\n            const fixtureId = event.fixture_id;\r\n            dynamoClient.query(paramsMarketDataIndex(`${fixtureId}`), (err, res) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    let Items = res?.Items;\r\n                    if(Items.length) markets = Util.marketFormatter(Items, fixtureId);\r\n                    let livescore = sessionStorage.getItem('liveScore');\r\n                    if (livescore) {\r\n                        livescore = JSON.parse(livescore);\r\n                        sessionStorage.removeItem('liveScore');\r\n                    }\r\n                    marketsArray[i] = { [event.fixture_id]: {\r\n                        market: markets,\r\n                        livescore,\r\n                    }};\r\n                    eventCount++;\r\n                }\r\n                if(eventCount === count) {\r\n                    let allData  = getState().home.partialAllEvents;\r\n                    allData = allData.reduce((ac, a) => ({ ...ac, [ a.fixture_id ]: a }), {});\r\n                    marketsArray = map(marketsArray, (market, idx) => {\r\n                        let mktData = Object.values(market)[0];\r\n                        return {\r\n                            ...allData[Object.keys(market)[0]],\r\n                            ...mktData,\r\n                            market: {\r\n                                ...defaultMktObj,\r\n                                ...mktData.market,\r\n                            },\r\n                            livescore: mktData?.livescore || null,\r\n\r\n                        };\r\n                    });\r\n                    dispatch({ type: Actions.SET_EVENTS_MARKETS_DATA, events: marketsArray, nextIndex: startIndex + count });\r\n                }\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\n// Get home league events list\r\nexport const getHomeActiveLeagueEvents = (leagueId, nextToken) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = 1; // sportID for football as all leagues are of football\r\n        dynamoClient.scan(paramsHomeLeaguesEvents(leagueId, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { Items, LastEvaluatedKey } = data;\r\n                if (Items?.length > 0) sportId = Items[0].sport_id;\r\n                const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId]; \r\n                const defaultMktObj = {};\r\n                defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n                Items = Items.map(match => {\r\n                    match.market = defaultMktObj;\r\n                    match.market_count = 0;\r\n                    match.livescore = {};\r\n                    match.participant_one_full = {};\r\n                    match.participant_two_full = {};\r\n                    match.participants = [match.participant_one_full, match.participant_two_full];\r\n                    match.league = { ...JSON.parse(match.league), Id: match.league_id };\r\n                    if(match.location) {\r\n                        match.location = JSON.parse(match.location);\r\n                        if (match.location_id) match.location = {...match.location, Id: match.location_id };\r\n                    }\r\n                    return match;\r\n                });\r\n                if (LastEvaluatedKey) dispatch(fetchMore(getHomeActiveLeagueEvents, LastEvaluatedKey, leagueId));\r\n                Items = Items.filter(event => differenceInDays(Util.getFormattedDate(event.start_date),new Date())>= 0);\r\n                dispatch(setHomeActiveLeagueEvents(Items, LastEvaluatedKey));\r\n            }\r\n        }); \r\n    };\r\n};\r\n\r\nconst fetchMore = (action, token, params) => {\r\n    return (dispatch) => {\r\n        dispatch(action( params, token));\r\n    };\r\n};\r\n\r\n// Set home league events list\r\nexport const setHomeActiveLeagueEvents = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_HOME_ACTIVE_LEAGUE_EVENTS, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Select main market from markets slider (tabs)\r\nexport const selectMainMarket = (marketId) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: Actions.ON_HOME_MAIN_MARKET_SELECTED,\r\n            marketId: marketId,\r\n        });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setHomeResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_HOME_RESET_PAGE });\r\n    };\r\n};\r\n\r\n// Clear home league events list\r\nexport const clearHomeActiveLeagueEvents = (dontClearLeagueId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_HOME_ACTIVE_LEAGUE_EVENTS, dontClearLeagueId });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateHomeEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_HOME_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updateHomeEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_HOME_EVENTS_STATUS, events });\r\n    };\r\n};\r\n\r\nexport const getHomeActiveLeagueEventsMobile = (leagueId, i) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = 1; // sportID for football as all leagues are of football\r\n        dynamoClient.scan(paramsHomeLeaguesEventsMobile(leagueId, i, totalSegments), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { Items } = data;\r\n                if (Items?.length > 0) sportId = Items[0].sport_id;\r\n                const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId]; \r\n                const defaultMktObj = {};\r\n                defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n                Items = Items.map(match => {\r\n                    match.market = defaultMktObj;\r\n                    match.market_count = 0;\r\n                    match.livescore = {};\r\n                    match.participant_one_full = JSON.parse(match.participant_one_full);\r\n                    match.participant_two_full = JSON.parse(match.participant_two_full);\r\n                    match.participants = [match.participant_one_full, match.participant_two_full];\r\n                    match.league = { ...JSON.parse(match.league), Id: match.league_id };\r\n                    if(match.location) {\r\n                        match.location = JSON.parse(match.location);\r\n                        if (match.location_id) match.location = {...match.location, Id: match.location_id };\r\n                    }\r\n                    return match;\r\n                });\r\n                eventCount++;\r\n                Items = Items.filter(event => differenceInDays(Util.getFormattedDate(event.start_date),new Date())>= 0);\r\n                let hasNextPage = eventCount === totalSegments ? null : true;\r\n                dispatch(setHomeActiveLeagueEvents(Items, hasNextPage));\r\n            }\r\n        }); \r\n    };\r\n};\r\nexport const getHomeActiveLeagueEventsDesktop = (leagueId, i) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = 1; // sportID for football as all leagues are of football\r\n        dynamoClient.scan(paramsHomeLeaguesEventsDesktop(leagueId, i, totalSegments), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { Items } = data;\r\n                if (Items?.length > 0) sportId = Items[0].sport_id;\r\n                const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId]; \r\n                const defaultMktObj = {};\r\n                defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n                Items = Items.map(match => {\r\n                    match.market = defaultMktObj;\r\n                    match.market_count = 0;\r\n                    match.livescore = {};\r\n                    match.participant_one_full = JSON.parse(match.participant_one_full);\r\n                    match.participant_two_full = JSON.parse(match.participant_two_full);\r\n                    match.participants = [match.participant_one_full, match.participant_two_full];\r\n                    match.league = { ...JSON.parse(match.league), Id: match.league_id };\r\n                    if(match.location) {\r\n                        match.location = JSON.parse(match.location);\r\n                        if (match.location_id) match.location = {...match.location, Id: match.location_id };\r\n                    }\r\n                    return match;\r\n                });\r\n                eventCountDesktop++;\r\n                Items = Items.filter(event => differenceInDays(Util.getFormattedDate(event.start_date),new Date())>= 0);\r\n                let hasNextPage = eventCountDesktop === totalSegments ? null : true;\r\n                dispatch(setHomeActiveLeagueEvents(Items, hasNextPage));\r\n            }\r\n        }); \r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Util from '../../../helper/Util';\r\nimport { lSportsConfig } from '../../../config';\r\nimport { withRouter } from 'react-router';\r\nimport { includes } from 'lodash';\r\nimport { betradarConfig } from '../../../config/betradar.config';\r\n\r\nfunction MatchDateTime(props) {\r\n    let { fixture, showDate } = props;\r\n    let isLive, time, halfTime, extraTime, currentTime, currentDate, dateString, timeString, matchDateTime, sportId, overTime;\r\n    if (fixture.fixture_status !== lSportsConfig.statuses.inplay) {\r\n        isLive = fixture.fixture_status === lSportsConfig.statuses.inplay;\r\n\r\n        time = fixture.livescore && fixture.livescore.clock && fixture.livescore.clock.match_time ? fixture.livescore.clock.match_time : 0;\r\n        time = fixture.livescore && fixture.livescore.clock && fixture.livescore.clock.match_time ? parseInt(time * 0.0166666667) + 1 : 0; // Convert to seconds\r\n        halfTime = false;\r\n\r\n\r\n        if (fixture.livescore && fixture.livescore.match_status === 31) {\r\n            time = 'HT'; // Break Time\r\n            halfTime = true;\r\n        }\r\n        currentTime = (\r\n            <span className={`match__time ${halfTime ? 'match__time_ht' : ''}`}>\r\n                {time}\r\n                {!halfTime && \"'\"}\r\n            </span>\r\n        );\r\n        if(fixture.start_date) {\r\n\r\n        currentDate = Util.convertToLocalTimezone(fixture.start_date);\r\n\r\n        dateString = currentDate.dateString;\r\n        timeString = currentDate.timeString;\r\n        }\r\n        matchDateTime = (\r\n            <span className=\"text-black match__datetime\">\r\n                {showDate && <time className=\"d-block\">{dateString}</time>}\r\n                <time className=\"d-block\">{timeString}</time>\r\n            </span>\r\n        );\r\n\r\n    }\r\n    else {\r\n\r\n        isLive = fixture.fixture_status === lSportsConfig.statuses.inplay;\r\n        halfTime = false;\r\n        overTime = false;\r\n        sportId = fixture.sport_id;\r\n        \r\n\r\n        switch (sportId) {\r\n            case 1: // Football\r\n                time = fixture.Livescore && fixture.Livescore.clock && fixture.Livescore.clock.match_time ? fixture.Livescore.clock.match_time.split(':')?.[0] : 0;\r\n                extraTime = fixture.Livescore && fixture.Livescore.clock && fixture.Livescore.clock.stoppage_time ? fixture.Livescore.clock.stoppage_time.split(':')?.[0] : 0\r\n                if (extraTime) {\r\n                    let { match_status } = fixture.Livescore;\r\n                    if ((match_status == '6' && time >= '45') || (match_status == '7' && time >= '90')) time = `${ time }+${ +extraTime+1 }`;\r\n                }\r\n                if (time && fixture.Livescore.clock.match_time.split(':')?.[1] !== '00') time = isNaN(+time) ? time : +time + 1;\r\n                // time = Math.ceil(time / 60);\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 31) {\r\n                    time = 'HT'; // Break Time\r\n                    halfTime = true;\r\n                }\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 50) {\r\n                    time = 'Pen'; // Penalties\r\n                    halfTime = true;\r\n                }\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 41) {\r\n                    time = 'OT 1HT'; // Penalties\r\n                    halfTime = true;\r\n                }\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 42) {\r\n                    time = 'OT 2HT'; // Penalties\r\n                    halfTime = true;\r\n                }\r\n                currentTime = (\r\n                    <span className={`match__time ${halfTime ? 'match__time_ht' : ''}`}>\r\n                        {time}\r\n                        {!halfTime && \"'\"}\r\n                    </span>\r\n                );\r\n                break;\r\n            case 2: //Basketball\r\n                time = fixture.Livescore && fixture.Livescore.clock && fixture.Livescore.clock.match_time ? fixture.Livescore.clock.match_time.split(':')?.[0] : 0;\r\n                if (time) time = isNaN(+time) ? time : +time + 1;\r\n                // time = Math.ceil(time / 60);\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 31) {\r\n                    time = 'HT'; // Break Time\r\n                }\r\n\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 40) {\r\n                    time = 'OT'; // Over Time\r\n                }\r\n                let quarter = '';\r\n                if (betradarConfig.quarterPeriods.indexOf(+fixture?.Livescore?.match_status) > -1) {\r\n                    quarter = betradarConfig.period[fixture.Livescore.match_status]?.period_number;\r\n                }\r\n                currentTime = (\r\n                    <div style={{ display: \"flex\", alignItems: \"center\"}}>\r\n                        {!isNaN(time) && <span className={``}>{`Q${quarter}`}</span>}\r\n                        <span className={`match__time ${isNaN(time) ? 'match__time_ht' : ''}`}>\r\n                            {time}\r\n                            {!isNaN(time) && \"'\"}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 4: // Ice Hockey\r\n                time = fixture.Livescore && fixture.Livescore.clock && fixture.Livescore.clock.match_time ? fixture.Livescore.clock.match_time.split(':')?.[0] : 0;\r\n                if (time) time = isNaN(+time) ? time : +time + 1;\r\n                // time = Math.ceil(time / 60);\r\n                let hset = '';\r\n                \r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 31) {\r\n                    time = 'HT'; // Break Time\r\n                }\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 40) {\r\n                    time = 'OT'; // Over Time\r\n                }\r\n\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 50) {\r\n                    time = 'Pen'; // Penalties\r\n                }\r\n\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 301) {\r\n                    time = '1Brk'; // First Break\r\n                }\r\n\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 302) {\r\n                    time = '2Brk'; // Second Break\r\n                }\r\n\r\n                hset = time;\r\n\r\n                if (betradarConfig.iceHockeyPeriods.indexOf(+fixture?.Livescore?.match_status) > -1) {\r\n                    hset = `P${betradarConfig.period[fixture.Livescore.match_status]?.period_number || ''}`;\r\n                }\r\n                currentTime = (\r\n                    <div>\r\n                        <span className={`match__time ${isNaN(time) ? 'match__time_ht' : ''}`}>\r\n                            {hset}\r\n                            {!isNaN(time) && \"'\"}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 5: // Tennis\r\n                time = fixture.Livescore && fixture.Livescore.clock && fixture.Livescore.clock.match_time ? fixture.Livescore.clock.match_time.split(':')?.[0] : 0;\r\n                if (time) time = isNaN(+time) ? time : +time + 1;\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 31) {\r\n                    time = 'HT'; // Break Time\r\n                }\r\n\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 60) {\r\n                    time = 'Game';\r\n                }\r\n                let set = '';\r\n                if (betradarConfig.setPeriods.indexOf(+fixture?.Livescore?.match_status) > -1) {\r\n                    set = `${betradarConfig.period[fixture.Livescore.match_status]?.period_number || ''}`;\r\n                }\r\n                currentTime = (\r\n                    <div>\r\n                        <span className={` ${isNaN(time) ? 'match__time_ht' : ''}`}>\r\n                            {!isNaN(time) ? `Set ${set}` : time}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 23: // Volleyball\r\n                time = fixture.Livescore && fixture.Livescore.clock && fixture.Livescore.clock.match_time ? fixture.Livescore.clock.match_time.split(':')?.[0] : 0;\r\n                if (time) time = isNaN(+time) ? time : +time + 1;\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 31) {\r\n                    time = 'HT'; // Break Time\r\n                }\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 17) {\r\n                    time = 'Golden Set';\r\n                }\r\n\r\n                if (fixture.Livescore && +fixture.Livescore.match_status === 60) {\r\n                    time = 'Game';\r\n                }\r\n\r\n                let vset = '';\r\n                if (betradarConfig.setPeriods.indexOf(+fixture?.Livescore?.match_status) > -1) {\r\n                    vset = `${betradarConfig.period[fixture.Livescore.match_status]?.period_number || ''}`;\r\n                }\r\n\r\n                currentTime = (\r\n                    <div>\r\n                        <span className={` ${isNaN(time) ? 'match__time_ht' : ''}`}>\r\n                            {!isNaN(time) ? `Set ${vset}` : time}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 10: // Boxing\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n       \r\n    }\r\n\r\n    const fromExtraMarket = includes(props.location.pathname, '/extra-market/'); \r\n    return <div className={`match__time-wrap ${!fromExtraMarket ? 'pb-1' : ''}`}>{isLive ? currentTime : matchDateTime}</div>;\r\n}\r\n\r\nMatchDateTime.propTypes = {\r\n    fixture: PropTypes.object,\r\n    showDate: PropTypes.bool,\r\n};\r\n\r\nexport default withRouter(MatchDateTime);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from '../../localization';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport { setLoginError, submitLogin } from '../../store/actions/user.actions';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputUsername: '',\r\n            inputPassword: '',\r\n            checked: true,\r\n            usernameError: false,\r\n            passwordError: false,\r\n            loginLoading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.userData !== null) {\r\n            this.props.hideLogin();\r\n            this.props.setLoginError('');\r\n        }\r\n\r\n        if (prevState.inputUsername !== this.state.inputUsername) {\r\n            this.props.setLoginError('');\r\n\r\n            if (!this.state.inputUsername) {\r\n                this.setState({ usernameError: true });\r\n            } else {\r\n                this.setState({ usernameError: false });\r\n            }\r\n        }\r\n\r\n        if (prevState.inputPassword !== this.state.inputPassword) {\r\n            this.props.setLoginError('');\r\n\r\n            if (!this.state.inputPassword) {\r\n                this.setState({ passwordError: true });\r\n            } else {\r\n                this.setState({ passwordError: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setLoginError('');\r\n    }\r\n\r\n    stayLoggedIn = (e) => {\r\n        this.setState({ checked: e.target.checked });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        if (!this.state.usernameError && !this.state.passwordError) {\r\n            if (this.state.inputUsername.length > 0 && this.state.inputPassword.length > 0) {\r\n                this.setState({ loginLoading: true });\r\n                this.props.submitLogin(this.state.inputUsername, this.state.inputPassword, this.state.checked);\r\n            } else {\r\n                if (this.state.inputUsername.length === 0) {\r\n                    this.setState({\r\n                        usernameError: true,\r\n                    });\r\n                }\r\n                if (this.state.inputPassword.length === 0) {\r\n                    this.setState({\r\n                        passwordError: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value,\r\n            loginLoading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { loginError, userData } = this.props;\r\n        let show = userData === null;\r\n        let { checked, usernameError, passwordError, loginLoading } = this.state;\r\n\r\n        return (\r\n            <Dialog onClose={this.props.hideLogin} aria-labelledby=\"login-dialog-title\" open={show} className=\"auth__modal login-modal\" scroll=\"body\">\r\n                <DialogTitle id=\"login-dialog-title\" disableTypography>\r\n                    <div className=\"dialog-logo-wrap\">\r\n                        <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n                    </div>\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={this.props.hideLogin}>\r\n                        <i className=\"material-icons text-white fs-22\"> close </i>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent className=\"pt-0\">\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            this.handleSubmit();\r\n                        }}\r\n                    >\r\n                        <div className={`mt-1 dd ${usernameError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoFocus\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.username}\r\n                                id=\"inputUsername\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"username\"\r\n                            />\r\n                            {usernameError && <p className=\"auth__error sm\">This field is required</p>}\r\n                        </div>\r\n                        <div className={`mt-2 dd ${passwordError ? 'auth__error-field' : ''}`}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"auth__input\"\r\n                                placeholder={Translate.password}\r\n                                id=\"inputPassword\"\r\n                                onChange={this.handleChange}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            {passwordError && <p className=\"auth__error sm\">This field is required</p>}\r\n                        </div>\r\n                        <div className=\"fs-13 pt-2\">\r\n                            <label className=\"stay-login\">\r\n                                <input type=\"checkbox\" checked={checked} name=\"remember\" onChange={this.stayLoggedIn} /> {Translate.stayLoggedIn}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"auth__btn-wrap\">\r\n                            {loginError && (\r\n                                <p className=\"auth__error auth__error_with-icon md\">\r\n                                    <span className=\"material-icons icon mr-2 align-middle fs-22\">error_outline</span>\r\n                                    <span className=\"d-inline-block align-middle\">{loginError}</span>\r\n                                </p>\r\n                            )}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"auth__btn d-flex justify-content-center align-items-center\"\r\n                                type=\"submit\"\r\n                                disabled={loginLoading && !loginError}\r\n                            >\r\n                                {Translate.login}\r\n                                {loginLoading && !loginError && <LoadingIcon />}\r\n                            </Button>\r\n                            {/* <Button variant=\"contained\" className=\"auth__btn sm d-flex justify-content-center align-items-center mt-2\" type=\"button\">\r\n                                {Translate.signup}\r\n                            </Button> */}\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLoginError: PropTypes.func,\r\n    loginError: PropTypes.string,\r\n    submitLogin: PropTypes.func,\r\n    hideLogin: PropTypes.func,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        loginError: state.user.loginError,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLoginError: (error) => dispatch(setLoginError(error)),\r\n        submitLogin: (username, password, rememberMe) => dispatch(submitLogin(username, password, rememberMe)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import * as Actions from '../actionTypes';\r\n\r\n// Set Locations component active\r\nexport const setLocationsActive = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_LOCATIONS_ACTIVE, value });\r\n    };\r\n};\r\n\r\n// Set main component active\r\nexport const setResultsActive = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_ACTIVE, value });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setResultsResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_RESULTS_RESET_PAGE });\r\n    };\r\n};\r\n","\r\nimport { resultTotalSegments } from '../../../config';\r\nimport * as Actions from '../actionTypes';\r\nimport {map, forEach, isEmpty, filter, orderBy} from 'lodash';\r\nimport { dynamoClient } from '../../../App';\r\nimport { getResultLocationsParams ,getResultLocationsParamsMobile} from '../../../dynamo/resultsParams/getResultLocations';\r\nimport { getResultsCountParams ,getResultsCountParamsMobile} from '../../../dynamo/resultsParams/getResultsCountParam';\r\nimport { sortedLocationsResults } from '../../../config/sports';\r\n\r\n// /Get locations list\r\nlet resultCount = 0;\r\nlet getResultLocationCount = 0;\r\n\r\nexport const getResultsLocations = (sportId, nextToken) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLocationLoading(true));\r\n        dynamoClient.scan(getResultLocationsParams(nextToken, sportId), (err, data) => {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                dispatch(setPartialLocations(data.Items));\r\n                if(data.LastEvaluatedKey) {\r\n                    dispatch(fetchMore(data.LastEvaluatedKey));\r\n                } else {\r\n                    dispatch(fetchedAllData());\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n// Set locations list\r\nexport const setResultsLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch(setLocationLoading(false));\r\n        dispatch({ type: Actions.SET_RESULTS_LOCATIONS, locations });\r\n    };\r\n};\r\n\r\nlet countObj = {};\r\nexport const getResultsLocationsCount = (clearCount, nextToken) => {\r\n    return (dispatch, getState) => {\r\n        if(clearCount){\r\n            countObj = {};\r\n        }\r\n        dynamoClient.scan(getResultsCountParams(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                forEach(data.Items, (event) => {\r\n                    if(!countObj[event.sport_id]) {\r\n                        countObj[event.sport_id] = 0;\r\n                    }\r\n                    countObj[event.sport_id]++;\r\n                }); \r\n                if(data.LastEvaluatedKey) {\r\n                    dispatch(getResultsLocationsCount(false, data.LastEvaluatedKey));\r\n                } else {\r\n                    dispatch({ type: Actions.SET_RESULT_SPORTS_COUNT_OBJECT, sportsCountObj: countObj });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\nconst fetchMore = (token) => {\r\n    return (dispatch, getState) => {\r\n        let selectedSport = getState().results.selectedSport;\r\n        dispatch(getResultsLocations(selectedSport, token));\r\n    };\r\n}; \r\n\r\nconst fetchedAllData = () => {\r\n    return (dispatch, getState) => {\r\n        let partialLocations = getState().results.partialLocations;\r\n\r\n        let lan = `name_${ getState().general.language }`;\r\n        let locationObj = {};\r\n\r\n                let locationArray = [];\r\n                forEach(!isEmpty(locationObj) && Object.keys(locationObj), (location) => {\r\n                    if(location !== 'count' )\r\n                    locationArray.push({\r\n                        location_id: location,\r\n                        location_name: locationObj[location][lan] || locationObj[location].name_en,\r\n                        name: locationObj[location][lan] || locationObj[location].name_en,\r\n                        fixtures_count: locationObj[location].count,\r\n                        name_en: locationObj[location].name_en,\r\n                        name_tr: locationObj[location].name_tr,\r\n                        name_nl: locationObj[location].name_nl,\r\n                        name_de: locationObj[location].name_de,\r\n                        name_ru: locationObj[location].name_ru,\r\n                    });\r\n                });\r\n                let selectedSport = getState().results.selectedSport;\r\n                locationArray = sortedLocationsResults(locationArray, selectedSport);\r\n                dispatch(setResultsLocations(locationArray));       \r\n    };\r\n};\r\n\r\n\r\nconst setPartialLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_PARTIAL_LOCATIONS, locations });        \r\n    };\r\n};\r\n\r\n// Clear locations list\r\nexport const clearLocations = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_RESULTS_LOCATIONS });\r\n    };\r\n};\r\n\r\n// Set selected location\r\nexport const selectLocation = (locationId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_RESULTS_LOCATION_SELECTED, locationId });\r\n    };\r\n};\r\n\r\nexport const setLocationLoading = (data) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_LOCATION_LOADING, data });\r\n    };\r\n}\r\n\r\n// Get events of selected location\r\nexport const getResultsLocationEvents = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        // let language = getState().general.language;\r\n        // let page = getState().results.currentPage;\r\n        // let sportId = getState().results.selectedSport;\r\n        // lSportsService\r\n        //     .getResultsLocationEvents(sportId, locationId, language, page + 1)\r\n        //     .then((data) => {\r\n        //         dispatch(setResultsLocationEvents(data.results, data.next));\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.error(error);\r\n        //         if (error && error.response && error.response.status && error.response.status === 401) {\r\n        //             Util.handleRepeatedLogin(error.response);\r\n        //         } else {\r\n        //             toastr.error('', 'Something went wrong.');\r\n        //         }\r\n        //     });\r\n    };\r\n};\r\n\r\n// Set events of selected location\r\nexport const setResultsLocationEvents = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(clearLocationEvents());\r\n        let partialLocations = getState().results.partialLocations;\r\n        let events = filter(partialLocations, (e) => e.location_id == locationId);\r\n        events = orderBy(events,[ 'start_date', (e) => e.league.Name ], ['desc', 'asc'] );\r\n        dispatch({ type: Actions.SET_RESULTS_LOCATION_EVENTS, events});\r\n    };\r\n};\r\n\r\n// Clear events of location\r\nexport const clearLocationEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_RESULTS_LOCATION_EVENTS });\r\n    };\r\n};\r\n\r\nexport const getResultsLocationsCountMobile = (clearCount, nextToken , i) => {\r\n    return (dispatch, getState) => {\r\n        if(clearCount){\r\n            countObj = {};\r\n            resultCount = 0;\r\n        }\r\n        dynamoClient.scan(getResultsCountParamsMobile(nextToken, i, resultTotalSegments), (err, data) => {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                resultCount++;\r\n                forEach(data.Items, (event) => {\r\n                    if(!countObj[event.sport_id]) {\r\n                        countObj[event.sport_id] = 0;\r\n                    }\r\n                    countObj[event.sport_id]++;\r\n                }); \r\n                if(resultCount === resultTotalSegments)  {\r\n                    dispatch({ type: Actions.SET_RESULT_SPORTS_COUNT_OBJECT, sportsCountObj: countObj });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getResultsLocationsMobile = (sportId, nextToken, i, clear) => {\r\n    return (dispatch, getState) => {\r\n        if(clear){\r\n            getResultLocationCount = 0;\r\n        }\r\n        dispatch(setLocationLoading(true));\r\n        dynamoClient.scan(getResultLocationsParamsMobile(nextToken, sportId, i, resultTotalSegments), (err, data) => {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                getResultLocationCount++;\r\n                dispatch(setPartialLocations(data.Items));\r\n                if(resultTotalSegments === getResultLocationCount) {\r\n                    dispatch(fetchedAllData());\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n","export const getResultLocationsParams = (nextToken, sportId) => {\r\n    return {\r\n      TableName: 'FinishedEvent',\r\n      ProjectionExpression: 'fixture_id, fixture_status, livescore, league, league_id, #locations, participant_one_full, participant_two_full, sport, sport_id, start_date, location_id, sport_event_status',\r\n      FilterExpression: 'fixture_status = :s AND sport_id= :sportId',\r\n      ExclusiveStartKey: nextToken,\r\n      ExpressionAttributeValues: {\r\n        ':s': 3,\r\n        ':sportId': sportId\r\n      },\r\n      ExpressionAttributeNames: {\r\n        '#locations': 'location',\r\n      }\r\n    };\r\n  };\r\n  export const getResultLocationsParamsMobile = (nextToken, sportId, segmentNo, totalSegments) => {\r\n    return {\r\n      TableName: 'FinishedEvent',\r\n      ProjectionExpression: 'fixture_id, fixture_status, livescore, league, league_id, #locations, participant_one_full, participant_two_full, sport, sport_id, start_date, location_id, sport_event_status',\r\n      FilterExpression: 'fixture_status = :s AND sport_id= :sportId',\r\n      ExclusiveStartKey: nextToken,\r\n      ExpressionAttributeValues: {\r\n        ':s': 3,\r\n        ':sportId': sportId\r\n      },\r\n      ExpressionAttributeNames: {\r\n        '#locations': 'location',\r\n      },\r\n      Segment: segmentNo,\r\n      TotalSegments: totalSegments,\r\n    };\r\n  };\r\n","export const getResultsCountParams = (nextToken) => {\r\n    return {\r\n      TableName: 'FinishedEvent',\r\n      ProjectionExpression: 'fixture_id, sport_id',\r\n      FilterExpression: 'fixture_status = :s',\r\n      ExclusiveStartKey: nextToken,\r\n      ExpressionAttributeValues: {\r\n        ':s': 3,\r\n      }\r\n    };\r\n  };\r\n  export const getResultsCountParamsMobile = (nextToken, segmentNo, totalSegments) => {\r\n    return {\r\n      TableName: 'FinishedEvent',\r\n      ProjectionExpression: 'fixture_id, sport_id',\r\n      FilterExpression: 'fixture_status = :s',\r\n      ExclusiveStartKey: nextToken,\r\n      ExpressionAttributeValues: {\r\n        ':s': 3,\r\n      },\r\n      Segment: segmentNo,\r\n      TotalSegments: totalSegments,\r\n    };\r\n  };\r\n","import { getResultsLocations , getResultsLocationsMobile} from './lsports.results.location.actions';\r\nimport * as Actions from '../actionTypes';\r\nimport { resultTotalSegments } from '../../../config';\r\n\r\n// Get sports list\r\n// export const getResultsSports = () => {\r\n//     return (dispatch, getState) => {\r\n//         let language = getState().general.language;\r\n//         lSportsService\r\n//             .getSports(language)\r\n//             .then((sports) => {\r\n//                 dispatch(setResultsSports(sports));\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(error);\r\n//                 if (error && error.response && error.response.status && error.response.status === 401) {\r\n//                     Util.handleRepeatedLogin(error.response);\r\n//                 } else {\r\n//                     toastr.error('', 'Something went wrong.');\r\n//                 }\r\n//             });\r\n//     };\r\n// };\r\n\r\n// Set sports list\r\nexport const setResultsSports = (sports) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_SPORTS, sports });\r\n    };\r\n};\r\n\r\n// Select active sport\r\nexport const selectSport = (sportId) => {\r\n    return (dispatch) => {\r\n        // dispatch(getResultsSports());\r\n        dispatch({ type: Actions.ON_RESULTS_SPORT_SELECTED, sportId });\r\n        dispatch(getResultsLocations(sportId));\r\n    };\r\n};\r\n\r\nexport const selectSportMobile = (sportId) => {\r\n    return (dispatch) => {\r\n        // dispatch(getResultsSports());\r\n        dispatch({ type: Actions.ON_RESULTS_SPORT_SELECTED, sportId });\r\n        let clear = true;\r\n        for(let i=0; i<resultTotalSegments; i++) {\r\n            dispatch(getResultsLocationsMobile(sportId, null, i, clear));\r\n            clear = false;\r\n        }\r\n        \r\n    };\r\n};\r\n\r\n","import * as Actions from '../actionTypes';\r\nimport { setResultsResetPage } from './lsports.results.general.actions';\r\nimport filter from 'lodash.filter';\r\n\r\n// Set search started\r\nexport const setSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_SEARCH_STARTED, value });\r\n    };\r\n};\r\n\r\nexport const setResultsSearch = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_SEARCH, events, hasNextPage });\r\n    };\r\n};\r\n\r\nexport const setResultsSearchLoadMore = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_RESULTS_SEARCH_LOAD_MORE, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Search events by participant\r\nexport const search = (value) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        const lan = `name_${ language.toLowerCase() }`;\r\n        let partialLocations = getState().results.partialLocations;\r\n        // if (searchValue === value) {\r\n        //     lSportsService\r\n        //         .resultsSearchEvents(value, language, page + 1)\r\n        //         .then((data) => {\r\n        //             if (data.results.length === 0) {\r\n        //                 dispatch({ type: Actions.ON_RESULTS_NO_SEARCH_RESULTS });\r\n        //             } else {\r\n        //                 dispatch(setResultsSearchLoadMore(data.results, data.next));\r\n        //             }\r\n        //         })\r\n        //         .catch((error) => {\r\n        //             console.error(error);\r\n        //             if (error && error.response && error.response.status && error.response.status === 401) {\r\n        //                 Util.handleRepeatedLogin(error.response);\r\n        //             } else {\r\n        //                 toastr.error('', 'Something went wrong.');\r\n        //             }\r\n        //         });\r\n        // } else {\r\n            dispatch(setResultsResetPage());\r\n            let filteredEvents = filter(partialLocations, (me) => {\r\n                let searchParam = `${me.participant_one_full[lan] || me.participant_one_full.name_en} ${me.participant_two_full[lan] || me.participant_two_full.name_en}` ;\r\n                let lowercaseEventName = searchParam.toLowerCase();\r\n                let lowercaseSearchVal = value.toLowerCase();\r\n                return lowercaseEventName.includes(lowercaseSearchVal);\r\n            });\r\n\r\n            if(filteredEvents.length > 0){\r\n                dispatch({ type: Actions.ON_RESULTS_SEARCH, searchValue: value });\r\n                dispatch(setResultsSearch(filteredEvents));\r\n            } \r\n            else \r\n                dispatch({ type: Actions.ON_RESULTS_NO_SEARCH_RESULTS });\r\n            // let page = getState().results.currentPage;\r\n\r\n            // lSportsService\r\n            //     .resultsSearchEvents(value, language, page + 1)\r\n            //     .then((data) => {\r\n            //         dispatch({ type: Actions.ON_RESULTS_SEARCH, searchValue: value });\r\n            //         if (data.results.length === 0) {\r\n            //             dispatch({ type: Actions.ON_RESULTS_NO_SEARCH_RESULTS });\r\n            //         } else {\r\n            //             dispatch(setResultsSearch(data.results, data.next));\r\n            //         }\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         console.error(error);\r\n            //         if (error && error.response && error.response.status && error.response.status === 401) {\r\n            //             Util.handleRepeatedLogin(error.response);\r\n            //         } else {\r\n            //             toastr.error('', 'Something went wrong.');\r\n            //         }\r\n            //     });\r\n        // }\r\n    };\r\n};\r\n\r\n// Clear search input value\r\nexport const clearSearch = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_RESULTS_CLEAR_SEARCH });\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { setResultsSearchLoadMore } from './lsports.results.search.actions';\r\nimport { setResultsLocationEvents } from './lsports.results.location.actions';\r\nimport { logoutUser } from '../user.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Remove league from main events on 'x' icon click\r\nexport const removeLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_RESULTS_REMOVE_LEAGUE, leagueId });\r\n\r\n        let hasNextPage = getState().results.hasNextPage;\r\n        let mainEvents = getState().results.mainEvents;\r\n\r\n        if (mainEvents.length < 20 && hasNextPage) {\r\n            // get new events\r\n            let language = getState().general.language;\r\n            let locationId = getState().results.selectedLocation;\r\n            let searchStarted = getState().results.searchStarted;\r\n            let page = getState().results.currentPage;\r\n            let searchValue = getState().results.searchValue;\r\n\r\n            if (searchStarted) {\r\n                lSportsService\r\n                    .resultsSearchEvents(searchValue, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0) {\r\n                            dispatch({ type: Actions.ON_RESULTS_NO_SEARCH_RESULTS });\r\n                        } else {\r\n                            dispatch(setResultsSearchLoadMore(data.results, data.next));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            } else {\r\n                dispatch(setResultsLocationEvents(locationId));\r\n            }\r\n        }\r\n    };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport { sportAndLocationData } from '../../config/sports';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nfunction LeagueHeader(props) {\r\n    let { event, showStripe, language } = props;\r\n    let iconName, locationId, leagueName, stripeClassname;\r\n        let lang = `name_${language.toLowerCase()}`;\r\n        iconName = Util.getSportIconByName(sportAndLocationData()[event.sport_id].Name);\r\n        locationId = event.location.Id;\r\n        leagueName = event.league[lang] ? event.league[lang] : event.league.name_en;\r\n        stripeClassname = showStripe ? (event.fixture_status === lSportsConfig.statuses.inplay ? 'stripe_green' : 'stripe_blue') : '';\r\n\r\n    return (\r\n        <>\r\n            {/*<a href=\"#\">*/}\r\n            {/*    <div className=\"arrow-div\">*/}\r\n            {/*        <img className=\"arrow-img\" src=\"/images/arrow-left.png\"/>*/}\r\n            {/*    </div>*/}\r\n            {/*</a>*/}\r\n            <div className={`country ${stripeClassname}`}>\r\n\r\n                <Grid container className='bg-gray-league-header mx-0  px-0  justify-content-between align-items-center flex-nowrap country__content'>\r\n                    <a href=\"#\">\r\n                        <div className=\"arrow-div\">\r\n                            <img className=\"arrow-img\" src=\"/images/arrow-left.png\"/>\r\n                        </div>\r\n                    </a>\r\n                    <Grid item xs={11} className=\"pl-2 text-overflow d-flex align-items-center\">\r\n                        {/* <i className={iconName + ' pr-1 align-middle'}></i> */}\r\n                        <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"flag live-flag-25\"></div>\r\n                        <span className=\"pl-league-header text-light text-bold\">{leagueName}</span>\r\n                    </Grid>\r\n\r\n                    {/* <Grid item xs={1} className=\"d-flex justify-content-end\">\r\n                    <i className=\"header__close-btn material-icons\" onClick={remove}>\r\n                        close\r\n                    </i>\r\n                </Grid> */}\r\n                </Grid>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nLeagueHeader.propTypes = {\r\n    event: PropTypes.object,\r\n    showStripe: PropTypes.bool,\r\n    remove: PropTypes.func,\r\n    isLive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeagueHeader);\r\n","import React from 'react';\r\n\r\nfunction Loading(props) {\r\n    return (\r\n            <div className={`loading-modal ${props.customClass}`}>                \r\n                <div className=\"loader\"></div>\r\n            </div>        \r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { addFavorite, removeFavorite } from '../../../store/actions/favorites.actions';\r\nimport { lSportsConfig } from '../../../config';\r\n\r\nclass Favorite extends Component {\r\n    setStarActive = () => {\r\n        if (this.isLoggedIn()) {\r\n            let { fixture, favorites, unsubscribeSingleEvents, favoritesLiveMatches } = this.props;\r\n            favorites = [ ...favorites , ...favoritesLiveMatches];\r\n            unsubscribeSingleEvents && unsubscribeSingleEvents(fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId);\r\n            let isFavorite =\r\n                favorites.length > 0 &&\r\n                find(favorites, {\r\n                    fixture_id: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId,\r\n                });\r\n                \r\n            // Remove the existing favorite\r\n            if (isFavorite) {\r\n                this.props.removeFavorite(isFavorite.id ? isFavorite.id : isFavorite.fixture_id, isFavorite.fixture_id);                \r\n            }\r\n\r\n            // Add the match to the favorite\r\n            else if (fixture.fixture_status !== lSportsConfig.statuses.inplay) {\r\n                this.props.addFavorite(fixture.id, fixture.fixture_id);\r\n            } else {\r\n                // Live match\r\n                this.props.addFavorite(null, fixture?.fixture_id || fixture.FixtureId);\r\n            }\r\n        }\r\n    };\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    render() {\r\n        let { fixture, favorites, favoritesLiveMatches } = this.props;\r\n        favorites = [ ...favorites , ...favoritesLiveMatches]\r\n        let isFavorite = false;\r\n\r\n        if (this.isLoggedIn()) {\r\n            isFavorite =\r\n                favorites.length > 0 &&\r\n                find(favorites, {\r\n                    fixture_id: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId,\r\n                });\r\n        }\r\n\r\n        return (\r\n            <div className=\"match__favorite p-2\">\r\n                <IconButton aria-label=\"favorite\" className=\"p-0\" onClick={this.setStarActive}>\r\n                    <i className={`material-icons ${isFavorite ? 'text-yellow' : ''}`}>{isFavorite ? 'star' : 'star_border'}</i>\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFavorite.propTypes = {\r\n    fixture: PropTypes.object,\r\n    favorites: PropTypes.array,\r\n    favoritesLiveMatches: PropTypes.array,\r\n    userData: PropTypes.object,\r\n    addFavorite: PropTypes.func,\r\n    removeFavorite: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        favorites: state.favorites.favorites,\r\n        favoritesLiveMatches: state.favorites.favoritesLiveMatches,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addFavorite: (id, fixtureId) => dispatch(addFavorite(id, fixtureId)),\r\n        removeFavorite: (id, fixtureId) => dispatch(removeFavorite(id, fixtureId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\r\n","import React, { useEffect, useReducer } from 'react';\r\n\r\nfunction reducer(currentSrc, action) {\r\n    if (action.type === 'MAIN_IMAGE_LOADED') {\r\n        return action.src;\r\n    }\r\n    if (!currentSrc) {\r\n        return action.src;\r\n    }\r\n    return currentSrc;\r\n}\r\n\r\nfunction useProgressiveImage({ src, fallbackSrc }) {\r\n    const [currentSrc, dispatch] = useReducer(reducer);\r\n\r\n    useEffect(() => {\r\n        const mainImage = new Image();\r\n        const fallbackImage = new Image();\r\n\r\n        mainImage.onload = () => {\r\n            dispatch({ type: 'MAIN_IMAGE_LOADED', src });\r\n        };\r\n        fallbackImage.onload = () => {\r\n            dispatch({ type: 'FALLBACK_IMAGE_LOADED', src: fallbackSrc });\r\n        };\r\n\r\n        mainImage.src = src;\r\n        fallbackImage.src = fallbackSrc;\r\n    }, [src, fallbackSrc]);\r\n\r\n    return currentSrc === undefined ? fallbackSrc : currentSrc;\r\n}\r\n\r\nexport function LazyImage(props) {\r\n    const img = useProgressiveImage({\r\n        src: props.image,\r\n        fallbackSrc: props.fallbackImage,\r\n    });\r\n\r\n    return <img className={props.className} src={img} alt={props.altText} />;\r\n}\r\n\r\nexport function LazyBackgroundImage(props) {\r\n    const img = useProgressiveImage({\r\n        src: props.image,\r\n        fallbackSrc: props.fallbackImage,\r\n    });\r\n\r\n    return <div className={props.className} style={{ backgroundImage: 'url(' + img + ')' }} />;\r\n}\r\n","/* eslint-disable */\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const onCreateDeventMarkets = /* GraphQL */ `\r\n  subscription OnCreateDeventMarkets(\r\n    $fixture_id: String\r\n    $fixture_status: Int\r\n    $livescore: String\r\n    $market: String\r\n  ) {\r\n    onCreateDeventMarkets(\r\n      fixture_id: $fixture_id\r\n      fixture_status: $fixture_status\r\n      livescore: $livescore\r\n      market: $market\r\n    ) {\r\n      fixture_id\r\n      fixture_status\r\n      livescore\r\n      market\r\n    }\r\n  }\r\n`;\r\nexport const onUpdateLiveDeventMarkets = /* GraphQL Live*/ `\r\nsubscription MySubscription {\r\n  onUpdateLiveMarkets {\r\n    fixture_id\r\n    fixture_status\r\n    sport_event_status\r\n    outcomes\r\n    market_status\r\n    match_id\r\n  }\r\n}\r\n`;\r\n\r\nexport const onUpdateMatchMarkets = (matchId) => `\r\nsubscription MySubscription {\r\n  onUpdateLiveMarkets(match_id: \"${matchId}\") {\r\n    fixture_id\r\n    fixture_status\r\n    outcomes\r\n    match_id\r\n    market_status\r\n    sport_event_status\r\n  }\r\n}\r\n`;\r\n\r\nexport const onDeleteDeventMarkets = /* GraphQL */ `\r\n  subscription OnDeleteDeventMarkets(\r\n    $fixture_id: String\r\n    $fixture_status: Int\r\n    $livescore: String\r\n    $market: String\r\n  ) {\r\n    onDeleteDeventMarkets(\r\n      fixture_id: $fixture_id\r\n      fixture_status: $fixture_status\r\n      livescore: $livescore\r\n      market: $market\r\n    ) {\r\n      fixture_id\r\n      fixture_status\r\n      livescore\r\n      market\r\n    }\r\n  }\r\n`;\r\n","import { toastr } from 'react-redux-toastr';\r\nimport forEach from 'lodash.foreach';\r\nimport map from 'lodash.map';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport { selectSportMobile } from './lsports.today.sport.actions';\r\nimport { setTodayResetPage } from './lsports.today.general.actions';\r\nimport Util from '../../../helper/Util';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsMarketDataIndex } from '../../../dynamo/params';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\nimport { updateBetslipEventsMarket } from '../betslip.actions';\r\n// Get locations top list\r\nexport const getTodayLocations = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        dispatch(setLocationLoading(true));\r\n        lSportsService\r\n            .getTodayLocations(language, sportId)\r\n            .then((locations) => {\r\n                // set locations top list\r\n                dispatch(setTodayLocations(locations));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error.message === 'canceled') {\r\n                // Do nothing if pervious request was canceled.\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set locations top list\r\nexport const setTodayLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch(setLocationLoading(false));\r\n        dispatch({ type: Actions.SET_TODAY_SPORT_LOCATIONS, locations });\r\n    };\r\n};\r\n\r\nexport const setLocationLoading = (data) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_SPORT_LOCATIONS_LOADING, data });\r\n    };\r\n};\r\n\r\nexport const clearPartialLocations = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_TODAY_PARTIAL_LOCATIONS });\r\n    };\r\n};\r\n// Clear locations top list\r\nexport const clearLocations = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_TODAY_LOCATIONS });\r\n    };\r\n};\r\n\r\n// Set selected locations top list\r\nexport const setTodaySelectedLocations = (location) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_SELECTED_LOCATIONS, location });\r\n    };\r\n};\r\n\r\n// Get market data for set of fixture\r\n// Get market data for set of fixture\r\nexport const getMarketData = (data, startIndex, count) => {\r\n    return (dispatch, getState) => {\r\n        let betFixtures = getState().betslip.fixtures;\r\n        let eventCount = 0;\r\n        let marketsArray = [];\r\n        if (!data.length) return null;\r\n        const { sport_id: sportId } = data[0];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        forEach(data, (event, i) => {\r\n            let markets = {};\r\n            // 25715992\r\n            const fixtureId = event.fixture_id;\r\n            dynamoClient.query(paramsMarketDataIndex(`${fixtureId}`), (err, res) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    let Items = res?.Items;\r\n                    if (Items.length) markets = Util.marketFormatter(Items, fixtureId);\r\n                    // });\r\n                    if(Object.keys(markets).length && betFixtures.length) {\r\n                        // dispatch(updateBetslipEvent({FixtureId: fixtureId, Market: JSON.parse(market) }));\r\n                        dispatch(updateBetslipEventsMarket({[fixtureId]: { FixtureId: fixtureId, Market: markets }}));\r\n                    }\r\n                    let livescore = sessionStorage.getItem('liveScore');\r\n                        if (livescore) {\r\n                            livescore = JSON.parse(livescore);\r\n                            sessionStorage.removeItem('liveScore');\r\n                        }\r\n                    marketsArray[ i ] = { [fixtureId] : { market: markets,  livescore }};\r\n                    eventCount++;\r\n                }\r\n                if(eventCount === count) {\r\n                    let allData  = getState().today.partialAllEvents;\r\n                    allData = allData.reduce((ac, a) => ({ ...ac, [ a.fixture_id ]: a }), {});\r\n                    marketsArray = map(marketsArray, (market, idx) => {\r\n                    let values = Object.values(market);\r\n                    let mktData = values[0]?.market || {};\r\n                    let score = values[0]?.livescore || null;\r\n                    return {\r\n                        ...allData[Object.keys(market)[0]],\r\n                        market: {\r\n                            ...defaultMktObj,\r\n                            ...mktData,\r\n                        },\r\n                        livescore: score,\r\n                        };\r\n                    });\r\n                    dispatch(setTodayLocationEvents(marketsArray));\r\n                }\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\n\r\n// On location top list item click (filter by location)\r\nexport const selectLocation = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setTodayResetPage());\r\n\r\n        let selectedLocation = locationId;\r\n\r\n        dispatch(setTodaySelectedLocations(selectedLocation));\r\n\r\n        let location = selectedLocation?.toString();\r\n\r\n        const partialEvents = getState().today.partialAllEvents;\r\n        let locationEvent = partialEvents.filter(event => event.location.Id == location);\r\n        if(!location) locationEvent = partialEvents.slice(0,20);\r\n        if (!locationEvent.length) {\r\n            return dispatch({type: Actions.SET_TODAY_NOEVENT, data: true});\r\n        }\r\n        dispatch(getMarketData(locationEvent,0 ,locationEvent.length));\r\n    };\r\n};\r\n\r\n// Set events of selected locations\r\nexport const setTodayLocationEvents = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_LOCATION_EVENTS, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// On All locations click\r\nexport const resetSelectedLocations = (fromLivePage) => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().today.selectedSport;\r\n        dispatch(setTodayResetPage());\r\n        if(!fromLivePage) {\r\n            dispatch(selectSportMobile(sportId));\r\n        }\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiStrictModeTheme';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { Translate } from '../../localization';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#0f673d',\r\n        },\r\n    },\r\n});\r\n\r\nclass MainMarketSelector extends Component {\r\n    handleClick = (value) => {\r\n        this.props.selectMainMarket(value);\r\n    };\r\n\r\n    render() {\r\n        let { mainMarket, mainSelectedMarket } = this.props;\r\n        let currentMainMarket = mainMarket;\r\n        let selectedTab = 0;\r\n\r\n        let marketToSelectList =\r\n            currentMainMarket && currentMainMarket.length > 1 &&  // greater than 1 check because we won't show slider for single market\r\n            map(currentMainMarket, (value, key) => {\r\n                if (mainSelectedMarket === value.Id) {\r\n                    selectedTab = key;\r\n                }\r\n                return (\r\n                    <Tab\r\n                        label={Translate.markets[value.Id]}\r\n                        key={value.Id}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.handleClick(value.Id);\r\n                            document.activeElement.blur();\r\n                        }}\r\n                    />\r\n                );\r\n            });\r\n\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <AppBar position={'sticky'} color=\"default\">\r\n                    <Tabs\r\n                        ref={this.refTabs}\r\n                        value={selectedTab}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        aria-label=\"scrollable auto tabs\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                        className=\"market-tab-parent\"\r\n                    >\r\n                        {marketToSelectList}\r\n                    </Tabs>\r\n                </AppBar>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nMainMarketSelector.propTypes = {\r\n    mainMarket: PropTypes.array,\r\n    mainSelectedMarket: PropTypes.string,\r\n    selectMainMarket: PropTypes.func,\r\n    events: PropTypes.array,\r\n};\r\n\r\nexport default MainMarketSelector;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Participants(props) {\r\n    let { participants, isInplay, language } = props;\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    return (\r\n        <Grid item xs={isInplay ? 5 : 8} className=\"participants__wrap p-2 text-gray-darker\">\r\n            <span className=\"d-block ellipsis ls-0\">{participants[0] && (participants[0][lang] ? participants[0][lang] : participants[0].name_en) }</span>\r\n            <span className=\"d-block ellipsis ls-0\">{participants[1] && (participants[1][lang] ? participants[1][lang] : participants[1].name_en) }</span> \r\n        </Grid>\r\n    );\r\n}\r\n\r\nParticipants.propTypes = {\r\n    participants: PropTypes.array,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nfunction ExtraMarkets(props) {\r\n    let { onClick, isInplay } = props;\r\n\r\n    return (\r\n        <Grid item xs={isInplay ? 4 : 4} className=\"p-1 text-right d-flex align-items-center justify-content-end\" onClick={onClick}>\r\n            <img className=\"plus-icon\" alt=\"plus icon\" src=\"./images/plus.svg\"></img> \r\n        </Grid>\r\n    );\r\n}\r\n\r\nExtraMarkets.propTypes = {\r\n    extraMarketsNumber: PropTypes.number,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport default ExtraMarkets;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Util from '../../helper/Util';\r\nimport {MarketIdMapping} from '../../config/markets';\r\nimport CustomMarket from './CustomMarket';\r\n\r\nfunction Markets(props) {\r\n    let { markets, fixture, type, leagueName, currentlySelectedMarket = 'All' } = props;\r\n    const [prematchMarkets, setPrematchMarkets] = useState([]);\r\n    useEffect(() => {\r\n        setPrematchMarkets(markets);\r\n    },[markets]);\r\n\r\n    useEffect(() => {\r\n        markets && setPrematchMarkets(Object.values(markets));\r\n    },[markets, fixture]);\r\n    \r\n    const sortMarkets = (array, key) => {\r\n        let sportId = props.fixture.sport_id;\r\n        let order = Util.getExtraMarketNamePrematch(sportId)[MarketIdMapping[currentlySelectedMarket]].marketIds;\r\n        array.sort( (a, b) => {\r\n          var A = a[key],\r\n              B = b[key];\r\n          let indA = order.indexOf(A);\r\n          let indB = order.indexOf(B);\r\n          if (indA == -1) indA = order.length - 1;\r\n          if (indB == -1) indB = order.length - 1;\r\n\r\n          if (indA < indB) {\r\n              return -1;\r\n          } else if (indA > indB) {\r\n              return 1;\r\n          }\r\n          return 0;\r\n          \r\n        });\r\n        \r\n        return array;\r\n      };\r\n\r\n    const sortedMarkets = sortMarkets(prematchMarkets, 'Id');\r\n\r\n\r\n    //const sortedMarkets = orderBy(liveMarkets, ['Id'], 'asc');\r\n    const drawMarkets = prematchMarkets ? (\r\n        <div className=\"match-panel-bottom px-1 pb-4\">\r\n            {sortedMarkets.map((market) => {\r\n                return <CustomMarket \r\n                Market={market}\r\n                fixture={fixture}\r\n                column={3} \r\n                key={market.Id} \r\n                type={type} \r\n                leagueName={leagueName} \r\n                />;\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n    );\r\n\r\n    return drawMarkets;\r\n}\r\n\r\nMarkets.propTypes = {\r\n    fixture: PropTypes.object,\r\n    markets: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Markets;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Loading from '../Common/Loading';\r\nimport Markets from './MarketsPrematch';\r\nimport ExtraMarketSelector from './ExtraMarketSelector';\r\nimport { getExtraMarkets, clearExtraMarkets, selectExtraMarket, setStatistics, clearStatistics } from '../../store/actions/lsports.global.actions';\r\n\r\nlet extraMarkets = {};\r\nclass ExtraOddsModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marketsUpdated: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { extraMarketEvent } = this.props;\r\n        \r\n        let sportId = extraMarketEvent.sport_id;\r\n        Util.getExtraMarketNamePrematch(sportId).extraMarketNames.forEach( e => {\r\n            extraMarkets[e] = {};\r\n        });\r\n        extraMarkets = Util.getExtraMarketsPrematch(extraMarkets, extraMarketEvent, sportId);\r\n        this.setState({marketsUpdated: extraMarkets});\r\n        // this.props.getExtraMarkets(fixtureId);\r\n\r\n        // if (extraMarketEvent.has_live_statistics || extraMarketEvent.has_prematch_statistics) {\r\n        //     let statsTemplateType = extraMarketEvent.has_live_statistics ? 'live' : extraMarketEvent.has_prematch_statistics ? 'prematch' : '';\r\n        //     let eventId = extraMarketEvent.fixture_id;\r\n        //     this.props.setStatistics(eventId, 'forPopup', statsTemplateType);\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { extraMarketEvent } = this.props;\r\n        if(prevProps.extraMarketEvent !== extraMarketEvent) {\r\n            let sportId = extraMarketEvent.sport_id;\r\n            Util.getExtraMarketNamePrematch(sportId).extraMarketNames.forEach( e => {\r\n                extraMarkets[e] = {};\r\n            });\r\n            extraMarkets = Util.getExtraMarketsPrematch(extraMarkets, extraMarketEvent, sportId);\r\n            this.setState({marketsUpdated: extraMarkets});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearExtraMarkets();\r\n        this.props.clearStatistics();\r\n    }\r\n\r\n    openStatistics = () => {\r\n        let { extraMarketEvent, statsData } = this.props;\r\n        if (extraMarketEvent.has_live_statistics || statsData?.[+extraMarketEvent.fixture_id]) {\r\n            let eventId = extraMarketEvent.fixture_id;\r\n            this.props.setStatistics(eventId, 'forPopup', 'prematch');\r\n        }\r\n    };\r\n\r\n    closeStatistics = () => {\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            closeModal,\r\n            selectExtraMarket,\r\n            extraSelectedMarket,\r\n            extraMarketsLoading,\r\n            extraMarketEvent,\r\n            language,\r\n        } = this.props;\r\n        let lang = `name_${ language?.toLowerCase() }`;\r\n        let type =\r\n            extraMarketEvent?.fixture_status === lSportsConfig.statuses.inplay\r\n                ? 'live'\r\n                : extraMarketEvent?.fixture_status === lSportsConfig.statuses.prematch\r\n                ? 'sports'\r\n                : 'last-minute';\r\n        let leagueName = extraMarketEvent.league[lang] ? extraMarketEvent.league[lang] : extraMarketEvent.league.name_en;\r\n        let results =\r\n            extraMarketEvent.livescore && extraMarketEvent.livescore.Scoreboard && extraMarketEvent.livescore.Scoreboard.Results\r\n                ? extraMarketEvent.livescore.Scoreboard.Results\r\n                : null;\r\n        let currentDate = Util.convertToLocalTimezone(extraMarketEvent.start_date);\r\n        let timeString = currentDate.timeString;\r\n\r\n        let matchInfo = type === 'live' ? results ? results[0].Value + ' : ' + results[1].Value : '' : \r\n        <time className=\"d-block lh-18\">{timeString}</time>;\r\n\r\n        let drawEventHeader = (\r\n            <div>\r\n                <p className=\"league-name\">{leagueName}</p>\r\n                <div className=\"extra-odd__title\">                \r\n                    <div className=\"team-name\">\r\n                        <span className=\"extra-odd__participant name-one ellipsis\">{extraMarketEvent.participant_one_full && (extraMarketEvent.participant_one_full[lang] || extraMarketEvent.participant_one_full.name_en)}</span>\r\n                        <span className=\"extra-odd__score score\"><span className=\"score-num\">0:0</span>{matchInfo}</span>\r\n                        <span className=\"extra-odd__participant ellipsis name-two\">{extraMarketEvent.participant_two_full && (extraMarketEvent.participant_two_full[lang] || extraMarketEvent.participant_two_full.name_en)}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        let extraMarketEventsList = this.state.marketsUpdated[extraSelectedMarket];\r\n        // check if all bets are settled\r\n        let areBetsAllSettled = Util.checkSettledBetsPrematch(extraMarketEventsList);\r\n\r\n        let drawMarkets =\r\n            extraMarketEventsList && Object.keys(extraMarketEventsList).length > 0 ? (\r\n                areBetsAllSettled ? (\r\n                    <div className=\"no-data fs-15 pt-3 pb-3\">All the Odds are settled for this event.</div>\r\n                ) : (\r\n                    <Markets markets={extraMarketEventsList} fixture={extraMarketEvent} type={type} leagueName={leagueName} />\r\n                )\r\n            ) : (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n            );\r\n\r\n        return extraMarketsLoading ? (\r\n            <Loading />\r\n        ) : (\r\n            <Dialog onClose={closeModal} aria-labelledby=\"extra-odds-dialog-title\" open={true} scroll=\"paper\" className=\"extra-odds__modal\">\r\n                <DialogTitle id=\"extra-odds-dialog-title\" className=\"p-0 dialog-tab pre-match-wrapper\" disableTypography>\r\n                    <div className=\"pr-6 line-height-5\">\r\n                        <ExtraMarketSelector\r\n                            selectExtraMarket={selectExtraMarket}\r\n                            extraSelectedMarket={extraSelectedMarket}\r\n                            extraMarketNames={Util.getExtraMarketName(extraMarketEvent.sport_id).extraMarketNames}\r\n                        />\r\n                    </div>\r\n\r\n                    {drawEventHeader}\r\n                    {/* <IconButton className={`data-icon ${disbaledStatClass}`}>\r\n                        {statisticsEventId > 0 && statisticsType === 'forPopup' ? (\r\n                      //<img className={`statistics-icon ${disbaledStatClass}`} src=\"./images/statistics-icon.png\" onClick={(e) => this.closeStatistics()}></img>\r\n                            <i className={`icon-statistics text-green ${disbaledStatClass}`} onClick={(e) => this.closeStatistics()} />\r\n                    ) : (\r\n                        <i className={`icon-statistics ${disbaledStatClass}`} onClick={(e) => this.openStatistics()} />\r\n                       // <img className={`statistics-icon ${disbaledStatClass}`} src=\"./images/statistics-icon.png\" onClick={(e) => this.openStatistics()}></img>\r\n                    )}\r\n                    </IconButton> */}\r\n                    \r\n\r\n                    <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                        <i className=\" material-icons close-icon fs-22\"> close </i>\r\n                        {/* <img className=\"cancel-icon\" src=\"./images/cancel-icon.png\"></img>  */}\r\n                    </IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent className=\"modal-min-height extra-odd__bets p-0\">\r\n                    {/* {statisticsEventId > 0 && statisticsType === 'forPopup' && <Statistics />} */}\r\n                    {drawMarkets}\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nExtraOddsModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    // event: PropTypes.object,\r\n    extraMarkets: PropTypes.object,\r\n    extraSelectedMarket: PropTypes.string,\r\n    extraMarketsLoading: PropTypes.bool,\r\n    selectExtraMarket: PropTypes.func,\r\n    getExtraMarkets: PropTypes.func,\r\n    clearExtraMarkets: PropTypes.func,\r\n    extraMarketEvent: PropTypes.object,\r\n    setStatistics: PropTypes.func,\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        extraMarkets: state.lsportsGlobal.extraMarkets,\r\n        extraMarketsLoading: state.lsportsGlobal.extraMarketsLoading,\r\n        extraSelectedMarket: state.lsportsGlobal.extraSelectedMarket,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        statsData: state.general.statsData,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getExtraMarkets: (eventId) => dispatch(getExtraMarkets(eventId)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        clearExtraMarkets: () => dispatch(clearExtraMarkets()),\r\n        setStatistics: (eventId, statsType, statsTemplateType) => dispatch(setStatistics(eventId, statsType, statsTemplateType)),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtraOddsModal);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addBet, removeBet } from '../../store/actions/betslip.actions';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nclass MainBet extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bet.Price !== this.props.bet.Price) {\r\n            let diffType = +this.props.bet.Price - +prevProps.bet.Price > 0 ? 'increased' : +this.props.bet.Price - +prevProps.bet.Price < 0 ? 'decreased' : '' ;\r\n            if (diffType === 'increased') {\r\n                if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                        document.getElementById('mainbet-' + this.props.bet.Id).classList.add('increased');\r\n                    }\r\n                }, 100);\r\n            }\r\n\r\n            if (diffType === 'decreased') {\r\n                if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                        document.getElementById('mainbet-' + this.props.bet.Id).classList.add('decreased');\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { bet, fixture, market, provider, fixtures, leagueName } = this.props;\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.FixtureId ? fixture.FixtureId : fixture.fixture_id,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            });\r\n\r\n        if (isActive) {\r\n            this.props.removeBet(fixture, market, bet, provider?.Id);\r\n        } else {\r\n            this.props.addBet(fixture, market, bet, provider?.Id, leagueName);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { bet, fixture, market, fixtures, type, userData, language } = this.props;\r\n        const lan = `name_${ language.toLowerCase() }`;\r\n        let oddType = userData?.username && localStorage.getItem('oddType') ? localStorage.getItem('oddType') : '' ;\r\n        // remove the line for markets remaining match and Next goal\r\n        // if ([59, 238, 247, 338].indexOf(market.Id) !== -1) { \r\n        //     line = null;\r\n        // }\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.FixtureId ? fixture.FixtureId : fixture.fixture_id,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            })\r\n                ? 'active'\r\n                : '';\r\n\r\n        let gridClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n            if (bet.diff > 0) gridClassName = 'decreased';\r\n            if (bet.diff < 0)  gridClassName = 'increased';\r\n        }\r\n\r\n        let betStatus = bet.Status;\r\n        let disableClass = betStatus === lSportsConfig.betStatus.active ? '' : 'disabled';\r\n\r\n        let drawBet =\r\n            betStatus === lSportsConfig.marketStatus.settled ? ( // FIX: need to fix with actual status\r\n                null\r\n                // <Grid item xs className={'mx-xs border text-center ripple-bet d-flex align-items-center justify-content-center'}>\r\n                //     <i className=\" material-icons\"> remove </i>\r\n                // </Grid>\r\n            ) : betStatus !== lSportsConfig.betStatus.active ? (\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={'mainbet-' + bet.Id}\r\n                    className={`p-1 pl-2 pr-2 mx-xs border ${ type === 'live' ? 'live__background' : 'prematch__background'} text-center ripple-bet d-flex align-items-center justify-content-center ${isActive}`}\r\n                    key={bet.Id}\r\n                >\r\n                    <i className=\"material-icons\"> lock </i>\r\n                </Grid>\r\n            ) :(\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={`mainbet-${bet.Id}`}\r\n                    className={`p-1 pl-2 pr-2 mx-xs border ${ type === 'live' ? 'live__background' : 'prematch__background'} ripple-bet anim  MuiGrid-item ${gridClassName} ${isActive} ${disableClass}`}\r\n                    onClick={ betStatus === lSportsConfig.betStatus.active ? this.handleToggle : null}\r\n                    key={bet.Id}\r\n                >\r\n                    <span className=\"odd__left odd__name\">\r\n                        { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                        {/* {line} */}\r\n                    </span>\r\n                    <span className=\"odd__right odd__price\">\r\n                        {bet.Price ? Util.toFixedDecimal(bet.Price, oddType) : ''}\r\n                    </span>\r\n                </Grid>\r\n            );\r\n\r\n        return drawBet;\r\n    }\r\n}\r\n\r\nMainBet.propTypes = {\r\n    bet: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    provider: PropTypes.object,\r\n    fixtures: PropTypes.array,\r\n    addBet: PropTypes.func,\r\n    removeBet: PropTypes.func,\r\n    count: PropTypes.number,\r\n    // type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        count: state.betslip.count,\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        addBet: (fixture, market, bet, provider, leagueName) => dispatch(addBet(fixture, market, bet, provider, leagueName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainBet);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport filter from 'lodash.filter';\r\nimport take from 'lodash.take';\r\nimport orderBy from 'lodash.orderby';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainBet from './MainBet';\r\nimport { lSportsConfig } from '../../config';\r\nimport { marketIds } from '../../config/markets';\r\nimport { useSelector } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\n\r\nfunction MainMarket(props) {\r\n    let { market, fixture, type, leagueName, areBetsAllSettled } = props;\r\n    const lan = `name_${ useSelector((state) => state.general.language) }`;\r\n    // let orderedProviders = market.Providers ? Util.orderProviders(market.Providers) : [];\r\n    // let selectedProvider = orderedProviders.length > 0 ? orderedProviders[0] : [];\r\n    let bets = market.Bets;\r\n    // bets = filter(bets, (bet) => bet)\r\n    let orderedBets = Util.sortBet(bets, market.Id, lan);\r\n    // let orderedBets = orderBy(bets, ['BaseLine', 'Sort'], 'asc');\r\n    const { settled, suspended } = lSportsConfig.betStatus;\r\n    orderedBets = filter(orderedBets, (bet) => bet.Status !== settled);\r\n    // if (stableMarketsOnMainPage.indexOf(+market.Id) > -1) {\r\n    //     orderedBets = orderedBets.filter((bet) => bet.isFavorite);\r\n    //     areBetsAllSettled = true;\r\n    // }\r\n    let countOfBets = 0;\r\n\r\n    // market Under/Over - show started form line 2.5\r\n    if (market.Id == marketIds.total) {\r\n        orderedBets = filter(orderedBets, (bet) => +bet?.specifier?.total > 2.25);\r\n    }\r\n\r\n    // fix to show only active lines for remaining match & next goal market\r\n    if ([7, 8, 61, 62].indexOf(market.Id) > -1 && orderedBets.length) {\r\n        let groupedBets = groupBy(orderedBets, 'BaseLine');\r\n        let filteredBets = filter(Object.values(groupedBets), (flex) => {\r\n            return flex.every((bet) => bet.Status == lSportsConfig.betStatus.active);\r\n        });\r\n        if (filteredBets.length) orderedBets = filteredBets[0];\r\n    }\r\n\r\n    // FIXME: Temp fix for remaining match market.\r\n    if (market.Id == marketIds.teamWinRest || market.Id == marketIds.handicap || market.Id == marketIds.firstHalfTeamWinRest) {\r\n        orderedBets = orderBy(orderedBets, ['Status', 'BaseLine', 'Sort'], 'asc');\r\n        if(orderedBets.length > 0) {\r\n            const [firstBet, secondBet, thirdBet, ...remainingBets] = orderedBets;\r\n            const mainBets = orderBy([firstBet, secondBet, thirdBet], ['Sort'], 'asc');\r\n            if( mainBets.length > 0 && remainingBets.length > 0 ){\r\n                orderedBets = [...mainBets, ...remainingBets];\r\n            }\r\n            else if(mainBets.length > 0) {\r\n                orderedBets = mainBets;\r\n            }\r\n        }\r\n    } else \r\n    if (market.Id == marketIds.total || market.Id == marketIds.firstHalfTotal || market.Id == marketIds.underOverInclOvertime) {\r\n        if(orderedBets.length > 0) {\r\n            const [firstBet, secondBet, ...remainingBets] = orderedBets;\r\n            let mainBets = orderBy([firstBet, secondBet], ['name_en'], 'desc');\r\n            if( mainBets.length > 0 && remainingBets.length > 0 ){\r\n                orderedBets = [...mainBets, ...remainingBets];\r\n            }\r\n            else if(mainBets.length > 0) {\r\n                orderedBets = mainBets;\r\n            }\r\n        }\r\n    }\r\n\r\n    let betsCount = market.Id == marketIds.total || market.Id == marketIds.firstHalfTotal || market.Id == marketIds.exactGoal || market.Id == marketIds.underOverInclOvertime ? 2 : 3; // For any market with Under/Over we only want 2 fields\r\n    let drawBets =\r\n        orderedBets.length > 0 ? (\r\n            map(take(orderedBets, betsCount), (bet) => {\r\n                if (!bet) {\r\n                    return;\r\n                }\r\n                if (bet.Status !== settled) {\r\n                    countOfBets++;\r\n                }\r\n                if (countOfBets === suspended && bet.Status === settled) {\r\n                    return;\r\n                }\r\n\r\n                return <MainBet fixture={fixture} market={market} bet={bet} key={bet.Id} type={type} leagueName={leagueName} />;\r\n            })\r\n        ) : areBetsAllSettled && type === 'live' ? (\r\n            <Grid\r\n                item\r\n                xs\r\n                className={`p-1 pl-2 pr-2 mx-xs border ${\r\n                    type === 'live' ? 'live__background' : 'prematch__background'\r\n                } text-center ripple-bet d-flex align-items-center justify-content-center `}\r\n            >\r\n                <i className=\"material-icons\"> lock </i>\r\n            </Grid>\r\n        ) : type !== 'sports' ? null : (\r\n            <Grid\r\n                item\r\n                xs\r\n                className={`p-1 pl-2 pr-2 mx-xs border ${\r\n                    type === 'live' ? 'live__background' : 'prematch__background'\r\n                } text-center ripple-bet d-flex align-items-center justify-content-center `}\r\n            >\r\n                <i className=\"material-icons\"> lock </i>\r\n            </Grid>\r\n        );\r\n\r\n    return (\r\n        <Grid container className=\"pl-xs mx-auto match__bets main-market__odds\">\r\n            <div className=\"pb-1 d-flex align-items-center w-100\">{drawBets}</div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nMainMarket.propTypes = {\r\n    market: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default MainMarket;\r\n","import { toastr } from 'react-redux-toastr';\r\nimport Util from '../../helper/Util';\r\nimport jwtService from '../../services/jwtService';\r\nimport * as Actions from '../actions/actionTypes';\r\nimport { logoutUser } from './user.actions';\r\n\r\n// Get transactions list\r\nexport const getTransactions = (tab, params, firstPage) => {\r\n    return (dispatch, getState) => {\r\n        let page = getState().transaction.currentPage;\r\n          let language = getState().general.language; \r\n        if (firstPage) {\r\n            page = 0;\r\n        }\r\n        jwtService\r\n            .getTransactions(tab, params, page ,language)\r\n            .then((data) => {\r\n                dispatch(setTransactions(data, firstPage));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    dispatch(setTransactionsError());\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set transactions list\r\nexport const setTransactions = (transactions, firstPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TRANSACTIONS, transactions, firstPage });\r\n    };\r\n};\r\n\r\n// Set transactions filter params\r\nexport const setTransactionsFilter = (params) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TRANSACTIONS_FILTER, params });\r\n    };\r\n};\r\n\r\n// Set transactions error\r\nexport const setTransactionsError = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TRANSACTIONS_ERROR });\r\n    };\r\n};\r\n\r\n// Clear transactions list\r\nexport const clearTransactions = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_TRANSACTIONS });\r\n    };\r\n};\r\n\r\nexport const selectTransactionTab = (tab) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.SET_TRANSACTIONS_TAB, tab });\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport find from 'lodash.find';\r\nimport filter from 'lodash.filter';\r\nimport orderby from 'lodash.orderby';\r\nimport { Translate } from '../../localization';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SportsList(props) {\r\n    let { sports, selectedSport, selectSport, searchPath, type, isDisable, sportsObj } = props;\r\n    // debugger    \r\n    if(['tomorrow', 'today', 'prematch', 'seven_days_finished'].includes(type)) {\r\n        \r\n        const football = find(sports, (item) => item.sport_id === 1);\r\n        if (football && sportsObj[1] > 0) {\r\n            let remSportsArray = filter(sports, (item) => item.sport_id !== 1);\r\n            remSportsArray = orderby(remSportsArray, [(sport) => sportsObj[sport.sport_id] > 0], ['desc']);\r\n            sports = [football, ...remSportsArray];\r\n        }\r\n        else if(football) {\r\n            sports = orderby(sports, [(sport) => sportsObj[sport.sport_id] > 0], ['desc']);\r\n            let selectedSportCount;\r\n            if(sportsObj[selectedSport]){\r\n                selectedSportCount = sportsObj[selectedSport];\r\n            }\r\n            if(selectedSport !== sports[0].sport_id && selectedSportCount === 0 ) {\r\n                selectSport(sports[0].sport_id);\r\n            }\r\n        }\r\n    }\r\n\r\n    const sportList = map(sports, (item, i) => {\r\n        // if (props?.blockedSports?.includes(item.sport_id)) return null;\r\n        let sportId = item.sport_id;\r\n        let sportName = item.name;\r\n        let disabledClass =  '';\r\n        let activeClass = selectedSport === sportId ? 'sports__box_active' : '';\r\n        let count;\r\n        let type_sport = selectedSport === sportId \r\n        if(['tomorrow', 'today', 'prematch', 'seven_days_finished'].includes(type)) {\r\n            count = sportsObj[sportId] > 0 ? sportsObj[sportId] : 0;\r\n            disabledClass = count === 0 ? 'sports__item_disabled' : '';\r\n            activeClass = count === 0 ? '' : activeClass ;\r\n        }\r\n        //let activeClass = selectedSport === sportId && count !== 0 ? 'sports__box_active' : '';\r\n\r\n        return (\r\n            <div className={`sports__item ${disabledClass}`} onClick={ !isDisable ? (e) => selectSport(sportId) : null } key={sportId} >\r\n                <div className={`sports__box ${activeClass}`}>\r\n                    { ['tomorrow', 'today', 'prematch', 'seven_days_finished'].includes(type) && <div className=\"sports__counter\"> {count > 0 && count} </div> }\r\n                    <img className = {`${type_sport ? 'd-none ':''} sports_img`}  alt=\"stream-icon\" src={`/images/sports/${item.icon_name}-desktop-white.svg`}></img>\r\n                    <img className = {`${!type_sport ? 'd-none ':''} sports_img`} alt=\"stream-icon\" src={`/images/sports/${item.icon_name}-desktop.svg`}></img>\r\n                    <div className=\"mt-1 sports__name\">{sportName}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"sports py-2 pbb disable-select\">\r\n            <div className=\"sports__content\">\r\n\r\n                {searchPath && (\r\n                    <Link className=\"sports__item\" to={searchPath}>\r\n                        <div className=\"sports__box\">\r\n                            <i className=\"icon-search d-inline-block\"></i>\r\n                            <div className=\"pt-1 lh-12p\">{Translate.search}</div>\r\n                        </div>\r\n                    </Link>\r\n                )}\r\n                {sportList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSportsList.propTypes = {\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    selectSport: PropTypes.func,\r\n    language: PropTypes.string,\r\n    searchPath: PropTypes.string,\r\n    type: PropTypes.string,\r\n    sort: PropTypes.bool,\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // blockedSports: state.settings.sports,\t\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps) (SportsList);\r\n","import * as Actions from '../actionTypes';\r\n\r\n// Select main market from markets slider (tabs)\r\nexport const selectMainMarket = (marketId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_INPLAY_MAIN_MARKET_SELECTED, marketId });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setInplayResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_INPLAY_RESET_PAGE });\r\n    };\r\n};\r\n\r\n// Set status of events to load (first inplay - 2, then today)\r\nexport const setInplayEventsStatus = (status) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_EVENTS_STATUS, status });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateInplayEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_INPLAY_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update livescore (time and score)\r\nexport const updateInplayEventsLivescore = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_INPLAY_EVENTS_LIVESCORE, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updateInplayEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_INPLAY_EVENTS_STATUS, events });\r\n    };\r\n};\r\n\r\nexport const setInplayLoading = (bool) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_INPLAY_LOADING, bool});\r\n    };\r\n};\r\n\r\nexport const setLiveMatchesObject = (liveMatchesObj) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ type: Actions.SET_LIVE_MATCHES_OBJECT, liveMatchesObj });\r\n            resolve();\r\n        });\r\n    };\r\n};\r\n\r\nexport const setLiveMatches = (liveMatches) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ type: Actions.SET_LIVE_MATCHES, liveMatches });\r\n            resolve();\r\n        });\r\n    };\r\n};\r\n\r\nexport const setSelectedLocation = (locationId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_LOCATION, locationId });\r\n    };\r\n}\r\n\r\nexport const setCurrentSelectedSport = (selectedSport) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_CURRENT_SELECTED_SPORT, selectedSport });\r\n    };\r\n};\r\n\r\nexport const setPartialEvents = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PARTIAL_EVENTS, events });\r\n    };\r\n};\r\n\r\nexport const removeLiveEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_REMOVE_EVENTS});\r\n    };\r\n};","import find from 'lodash.find';\r\nimport filter from 'lodash.filter';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport { lSportsConfig } from '../../../config';\r\nimport * as Actions from '../actionTypes';\r\nimport { getInplayLocations } from './lsports.inplay.location.actions';\r\nimport { setInplayResetPage, setInplayEventsStatus } from './lsports.inplay.general.actions';\r\nimport { clearSportEvents } from './lsports.inplay.sport.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Set search started\r\nexport const setSearchStarted = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SEARCH_STARTED, value });\r\n    };\r\n};\r\n\r\nexport const setInplaySearch = (events, hasNextPage, selectedLocations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SEARCH, events, hasNextPage, selectedLocations });\r\n    };\r\n};\r\n\r\nexport const setInplaySearchLoadMore = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SEARCH_LOAD_MORE, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Search events by participant\r\nexport const search = (value) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        let page = getState().inplay.currentPage;\r\n        let searchValue = getState().inplay.searchValue;\r\n        let eventsStatus = getState().inplay.eventsStatus;\r\n        let selectedLocations = getState().inplay.selectedLocations;\r\n        let mainEvents = getState().inplay.mainEvents;\r\n        let filteredEvents = getState().inplay.filteredEvents;\r\n        let locations = selectedLocations.toString();\r\n\r\n        if (searchValue === value) {\r\n            if (eventsStatus === lSportsConfig.statuses.inplay) {\r\n                lSportsService\r\n                    .inplaySearchEvents(value, locations, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0) {\r\n                            dispatch(setInplayEventsStatus('today'));\r\n                            dispatch(search(value));\r\n                        } else {\r\n                            dispatch(setInplaySearchLoadMore(data.results, data.next));\r\n                            dispatch(getInplayLocations(''));\r\n\r\n                            if (data.next === null || data.results.length < 20) {\r\n                                dispatch({ type: Actions.SET_INPLAY_HAS_NEXT_PAGE, value: true });\r\n                                dispatch(setInplayEventsStatus('today'));\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            } else {\r\n                lSportsService\r\n                    .todaySearchEvents(value, locations, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0) {\r\n                            if (mainEvents.length === 0 && filteredEvents.length === 0) {\r\n                                dispatch({ type: Actions.ON_INPLAY_NO_SEARCH_RESULTS });\r\n                            }\r\n                        } else {\r\n                            dispatch(setInplaySearchLoadMore(data.results, data.next));\r\n                            dispatch(getInplayLocations(''));\r\n\r\n                            if (data.next === null || data.results.length < 20) {\r\n                                dispatch({ type: Actions.SET_INPLAY_HAS_NEXT_PAGE, value: false });\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            }\r\n        } else {\r\n            if (value === '') {\r\n                dispatch(setSearchStarted(true));\r\n                dispatch(clearSearch());\r\n                dispatch(clearSportEvents());\r\n            } else {\r\n                dispatch(setInplayResetPage());\r\n                let page = getState().inplay.currentPage;\r\n                let selectedLocations = getState().inplay.selectedLocations;\r\n                let eventsStatus = getState().inplay.eventsStatus;\r\n                let mainEvents = getState().inplay.mainEvents;\r\n                let filteredEvents = getState().inplay.filteredEvents;\r\n\r\n                if (eventsStatus === lSportsConfig.statuses.inplay) {\r\n                    lSportsService\r\n                        .inplaySearchEvents(value, locations, language, page + 1)\r\n                        .then((data) => {\r\n                            dispatch({ type: Actions.ON_INPLAY_SEARCH, searchValue: value });\r\n                            if (data.results.length === 0) {\r\n                                dispatch(setInplayEventsStatus('today'));\r\n                                dispatch(search(value));\r\n                            } else {\r\n                                let selected_locations = filter(selectedLocations, (locationId) => {\r\n                                    return find(data.results, ['location_lsport_id', parseInt(locationId)]);\r\n                                });\r\n                                let selectedLocationsList = selected_locations ? selected_locations : [];\r\n\r\n                                dispatch(getInplayLocations(''));\r\n                                dispatch(setInplaySearch(data.results, data.next, selectedLocationsList));\r\n\r\n                                if (data.results.length < 20 || data.next === null) {\r\n                                    dispatch(setInplayEventsStatus('today'));\r\n                                    dispatch(search(value));\r\n                                }\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                                Util.handleRepeatedLogin(error.response);\r\n                            } else {\r\n                                toastr.error('', 'Something went wrong.');\r\n                            }\r\n                        });\r\n                } else {\r\n                    lSportsService\r\n                        .todaySearchEvents(value, locations, language, page + 1)\r\n                        .then((data) => {\r\n                            if (data.results.length === 0) {\r\n                                if (mainEvents.length === 0 && filteredEvents.length === 0) {\r\n                                    dispatch({ type: Actions.ON_INPLAY_NO_SEARCH_RESULTS });\r\n                                }\r\n                            } else {\r\n                                let selected_locations = filter(selectedLocations, (locationId) => {\r\n                                    return find(data.results, ['location_lsport_id', parseInt(locationId)]);\r\n                                });\r\n                                let selectedLocationsList = selected_locations ? selected_locations : [];\r\n\r\n                                dispatch(getInplayLocations(''));\r\n                                dispatch(setInplaySearch(data.results, data.next, selectedLocationsList));\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                                Util.handleRepeatedLogin(error.response);\r\n                            } else {\r\n                                toastr.error('', 'Something went wrong.');\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n// Clear search input value\r\nexport const clearSearch = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_CLEAR_INPLAY_SEARCH });\r\n    };\r\n};\r\n","import includes from 'lodash.includes';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport { lSportsConfig } from '../../../config';\r\nimport * as Actions from '../actionTypes';\r\nimport { selectSport } from './lsports.inplay.sport.actions';\r\nimport { setInplaySearch, search } from './lsports.inplay.search.actions';\r\nimport { setInplayResetPage } from './lsports.inplay.general.actions';\r\nimport { setInplayEventsStatus } from './lsports.inplay.general.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Get locations top list\r\nexport const getInplayLocations = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        let status = lSportsConfig.statuses.inplay;\r\n\r\n        let liveLocations;\r\n        let todayLocations;\r\n\r\n        lSportsService\r\n            .getLocations(status, language, sportId)\r\n            .then((locations) => {\r\n                liveLocations = locations;\r\n                lSportsService\r\n                    .getTodayLocations(language, sportId)\r\n                    .then((locations) => {\r\n                        todayLocations = locations;\r\n                        let allLocations = liveLocations.concat(todayLocations);\r\n                        // set locations top list\r\n                        dispatch(setInplayLocations(allLocations));\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set locations top list\r\nexport const setInplayLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SPORT_LOCATIONS, locations });\r\n    };\r\n};\r\n\r\n// Clear locations top list\r\nexport const clearLocations = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_INPLAY_LOCATIONS });\r\n    };\r\n};\r\n\r\n// Set selected locations top list\r\nexport const setInplaySelectedLocations = (locations) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SELECTED_LOCATIONS, locations });\r\n    };\r\n};\r\n\r\n// On location top list item click (filter by location)\r\nexport const selectLocation = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setInplayResetPage());\r\n\r\n        let language = getState().general.language;\r\n        let selectedLocations = getState().inplay.selectedLocations;\r\n        let sportId = getState().inplay.selectedSport;\r\n        let searchStarted = getState().inplay.searchStarted;\r\n        let page = getState().inplay.currentPage;\r\n        let eventsStatus = getState().inplay.eventsStatus;\r\n        let containsLocation = includes(selectedLocations, locationId.toString());\r\n\r\n        if (containsLocation) {\r\n            selectedLocations = filter(selectedLocations, (l) => {\r\n                return locationId !== l;\r\n            });\r\n        } else {\r\n            selectedLocations = [...selectedLocations, locationId];\r\n        }\r\n\r\n        dispatch(setInplaySelectedLocations(selectedLocations));\r\n\r\n        let locations = selectedLocations.toString();\r\n\r\n        if (searchStarted) {\r\n            dispatch(setInplayResetPage());\r\n            let page = getState().inplay.currentPage;\r\n            let searchValue = getState().inplay.searchValue;\r\n            let selectedLocations = getState().inplay.selectedLocations;\r\n\r\n            lSportsService\r\n                .inplaySearchEvents(searchValue, locations, language, page + 1)\r\n                .then((data) => {\r\n                    dispatch({ type: Actions.ON_INPLAY_SEARCH, searchValue });\r\n                    if (data.results.length === 0) {\r\n                        dispatch(setInplayEventsStatus('today'));\r\n                        dispatch(search(searchValue));\r\n                    } else {\r\n                        let selected_locations = filter(selectedLocations, (locationId) => {\r\n                            return find(data.results, ['location_lsport_id', parseInt(locationId)]);\r\n                        });\r\n                        let selectedLocationsList = selected_locations ? selected_locations : [];\r\n\r\n                        dispatch(getInplayLocations(''));\r\n                        dispatch(setInplaySearch(data.results, data.next, selectedLocationsList));\r\n\r\n                        if (data.results.length < 20 || data.next === null) {\r\n                            dispatch(setInplayEventsStatus('today'));\r\n                            dispatch(search(searchValue));\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        } else {\r\n            if (eventsStatus === lSportsConfig.statuses.inplay) {\r\n                lSportsService\r\n                    .inplayGetLocationEvents(sportId, locations, language, page + 1)\r\n                    .then((data) => {\r\n                        if (data.results.length === 0 || data.results.length < 20 || data.next === null) {\r\n                            dispatch(setInplayLocationEvents(data.results, data.next));\r\n                            dispatch(setInplayEventsStatus('today'));\r\n                            let page = getState().inplay.currentPage;\r\n\r\n                            // get Today events\r\n                            lSportsService\r\n                                .todayGetSportEvents(sportId, locations, language, page + 1)\r\n                                .then((data) => {\r\n                                    dispatch(setInplayLocationEvents(data.results, data.next));\r\n                                })\r\n                                .catch((error) => {\r\n                                    console.error(error);\r\n                                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                                        Util.handleRepeatedLogin(error.response);\r\n                                    } else {\r\n                                        toastr.error('', 'Something went wrong.');\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            dispatch(setInplayLocationEvents(data.results, data.next));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            } else {\r\n                // get Today events\r\n                lSportsService\r\n                    .todayGetSportEvents(sportId, locations, language, page + 1)\r\n                    .then((data) => {\r\n                        dispatch(setInplayLocationEvents(data.results, data.next));\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error && error.response && error.response.status && error.response.status === 401) {\r\n                            Util.handleRepeatedLogin(error.response);\r\n                        } else {\r\n                            toastr.error('', 'Something went wrong.');\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n// Set events of selected locations\r\nexport const setInplayLocationEvents = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_LOCATION_EVENTS, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// On All locations click\r\nexport const resetSelectedLocations = () => {\r\n    return (dispatch, getState) => {\r\n        let sportId = getState().inplay.selectedSport;\r\n        dispatch(setInplayResetPage());\r\n        dispatch(selectSport(sportId));\r\n    };\r\n};\r\n","import lSportsService from '../../../services/lSportsService';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { lSportsConfig } from '../../../config/lsports.config';\r\nimport * as Actions from '../actionTypes';\r\nimport { getInplayLocations } from './lsports.inplay.location.actions';\r\nimport { setInplayEventsStatus } from './lsports.inplay.general.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Get sports list\r\n// export const getInplaySports = () => {\r\n//     return (dispatch, getState) => {\r\n//         let language = getState().general.language;\r\n//         lSportsService\r\n//             .getSports(language)\r\n//             .then((sports) => {\r\n//                 dispatch(setInplaySports(sports));\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(error);\r\n//                 if (error && error.response && error.response.status && error.response.status === 401) {\r\n//                     Util.handleRepeatedLogin();\r\n//                 } else {\r\n//                     toastr.error('', 'Something went wrong.');\r\n//                 }\r\n//             });\r\n//     };\r\n// };\r\n\r\n// Set sports list\r\nexport const setInplaySports = (sports) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SPORTS, sports });\r\n    };\r\n};\r\n\r\n// Select active sport\r\nexport const selectSport = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let page = getState().inplay.currentPage;\r\n        // dispatch(getInplaySports());\r\n        dispatch({ type: Actions.ON_INPLAY_SPORT_SELECTED, sportId });\r\n        dispatch(getSportEvents(sportId, page));\r\n        dispatch(getInplayLocations(sportId));\r\n    };\r\n};\r\n\r\nexport const setTotalEventCount = (count) => {\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch({ type: Actions.ON_INPLAY_EVENT_COUNT, count});\r\n\r\n    };\r\n};\r\n\r\nexport const setCurrentEventCount = (count) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_INPLAY_CURRENT_EVENT_COUNT, count});\r\n\r\n    };\r\n}\r\n\r\n// Get sport events list\r\nexport const getSportEvents = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        let page = getState().inplay.currentPage;\r\n        let selectedLocations = getState().inplay.selectedLocations;\r\n        let eventsStatus = getState().inplay.eventsStatus;\r\n        let locations;\r\n\r\n        if (selectedLocations.length > 0) {\r\n            locations = selectedLocations.toString();\r\n        }\r\n\r\n        if (eventsStatus === lSportsConfig.statuses.inplay) {\r\n            lSportsService\r\n                .inplayGetSportEvents(sportId, locations, language, page + 1)\r\n                .then((data) => {\r\n                    if (data.results.length === 0 || data.results.length < 20 || data.next === null) {\r\n                        dispatch(setSportEvents(data.results, data.next));\r\n                        dispatch(setInplayEventsStatus('today'));\r\n                        let page = getState().inplay.currentPage;\r\n\r\n                        // get Today events\r\n                        lSportsService\r\n                            .todayGetSportEvents(sportId, locations, language, page + 1)\r\n                            .then((data) => {\r\n                                dispatch(setSportEvents(data.results, data.next));\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(error);\r\n                                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                                    Util.handleRepeatedLogin(error.response);\r\n                                } else {\r\n                                    toastr.error('', 'Something went wrong.');\r\n                                }\r\n                            });\r\n                    } else {\r\n                        dispatch(setSportEvents(data.results, data.next));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        } else {\r\n            // get Today events\r\n            lSportsService\r\n                .todayGetSportEvents(sportId, locations, language, page + 1)\r\n                .then((data) => {\r\n                    dispatch(setSportEvents(data.results, data.next));\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    if (error && error.response && error.response.status && error.response.status === 401) {\r\n                        Util.handleRepeatedLogin(error.response);\r\n                    } else {\r\n                        toastr.error('', 'Something went wrong.');\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\n\r\n// Set sport events list\r\nexport const setSportEvents = (events, hasNextPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_INPLAY_SPORT_EVENTS, events, hasNextPage });\r\n    };\r\n};\r\n\r\n// Clear sport events list\r\nexport const clearSportEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_SPORT_EVENTS });\r\n    };\r\n};\r\n\r\nexport const resetLiveMatches = (liveEvents) => {\r\n    return (dispatch, getState) => {\r\n        lSportsService\r\n        .resetLiveMatches(liveEvents)\r\n        .then(() => {\r\n            dispatch({type: Actions.RESET_LIVE_MATCH});\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin();\r\n            }\r\n        });\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport { lSportsConfig } from '../../../config/lsports.config';\r\nimport * as Actions from '../actionTypes';\r\nimport { setInplaySearchLoadMore, search } from './lsports.inplay.search.actions';\r\nimport { getInplayLocations } from './lsports.inplay.location.actions';\r\nimport { getSportEvents } from './lsports.inplay.sport.actions';\r\nimport { setInplayEventsStatus } from './lsports.inplay.general.actions';\r\nimport Util from '../../../helper/Util';\r\n\r\n// Remove league from main events on 'x' icon click\r\nexport const removeLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_INPLAY_REMOVE_LEAGUE, leagueId });\r\n\r\n        let hasNextPage = getState().inplay.hasNextPage;\r\n        let mainEvents = getState().inplay.mainEvents;\r\n        let filteredEvents = getState().inplay.filteredEvents;\r\n\r\n        if (mainEvents.length < 20 && hasNextPage) {\r\n            // get new events\r\n            let language = getState().general.language;\r\n            let selectedLocations = getState().inplay.selectedLocations;\r\n            let sportId = getState().inplay.selectedSport;\r\n            let searchStarted = getState().inplay.searchStarted;\r\n            let page = getState().inplay.currentPage;\r\n            let searchValue = getState().inplay.searchValue;\r\n            let locations = selectedLocations.toString();\r\n            let eventsStatus = getState().inplay.eventsStatus;\r\n\r\n            if (searchStarted) {\r\n                if (eventsStatus === lSportsConfig.statuses.inplay) {\r\n                    lSportsService\r\n                        .inplaySearchEvents(searchValue, locations, language, page + 1)\r\n                        .then((data) => {\r\n                            if (data.results.length === 0) {\r\n                                dispatch(setInplayEventsStatus('today'));\r\n                                dispatch(search(searchValue));\r\n                            } else {\r\n                                dispatch(setInplaySearchLoadMore(data.results, data.next));\r\n                                dispatch(getInplayLocations(''));\r\n\r\n                                if (data.next === null || data.results.length < 20) {\r\n                                    dispatch({ type: Actions.SET_INPLAY_HAS_NEXT_PAGE, value: true });\r\n                                    dispatch(setInplayEventsStatus('today'));\r\n                                }\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                                Util.handleRepeatedLogin(error.response);\r\n                            } else {\r\n                                toastr.error('', 'Something went wrong.');\r\n                            }\r\n                        });\r\n                } else {\r\n                    lSportsService\r\n                        .todaySearchEvents(searchValue, locations, language, page + 1)\r\n                        .then((data) => {\r\n                            if (data.results.length === 0) {\r\n                                if (mainEvents.length === 0 && filteredEvents.length === 0) {\r\n                                    dispatch({ type: Actions.ON_INPLAY_NO_SEARCH_RESULTS });\r\n                                }\r\n                            } else {\r\n                                dispatch(setInplaySearchLoadMore(data.results, data.next));\r\n                                dispatch(getInplayLocations(''));\r\n\r\n                                if (data.next === null || data.results.length < 20) {\r\n                                    dispatch({ type: Actions.SET_INPLAY_HAS_NEXT_PAGE, value: false });\r\n                                }\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                                Util.handleRepeatedLogin(error.response);\r\n                            } else {\r\n                                toastr.error('', 'Something went wrong.');\r\n                            }\r\n                        });\r\n                }\r\n            } else {\r\n                dispatch(getSportEvents(sportId));\r\n            }\r\n        }\r\n    };\r\n};\r\n","import { format } from 'date-fns';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Util from '../../helper/Util';\r\nimport jwtService from '../../services/jwtService';\r\nimport * as Actions from './actionTypes';\r\nimport { logoutUser } from './user.actions';\r\n\r\n// Set betslips in \"My bets\" page\r\nexport const setBetslips = (betslips ,firstPage) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_BETSLIPS, betslips, firstPage });\r\n    };\r\n};\r\n\r\n// Get betslips for \"My bets\" page\r\nexport const getBetslips = (betslip_status, firstPage, params) => {\r\n    return (dispatch, getState) => {\r\n        let page = getState().bets.currentPage;\r\n        if(firstPage) {\r\n            page = 0;\r\n        }\r\n        if(!firstPage && betslip_status === '') {\r\n            params = getState().bets.mybetsFilterParams;\r\n        }\r\n        \r\n        let newParams = {};\r\n        \r\n        if(betslip_status !== '') {\r\n            newParams = null;\r\n        }\r\n        if(params && params.startDate) {\r\n            let startDate = params.startDate;\r\n            let endDate = params.endDate;\r\n            newParams.startDate = format(startDate, 'yyyy-MM-dd');\r\n            newParams.endDate = format(endDate, 'yyyy-MM-dd');\r\n            newParams.activityType = params.activityType;\r\n            newParams.timezone_offset = params.startDate.getTimezoneOffset() / (-60);\r\n        }\r\n\r\n        \r\n         let language = getState().general.language; \r\n        jwtService\r\n            .getBetslips(betslip_status, page , newParams, language)\r\n            .then((data) => {\r\n                dispatch(setBetslips(data, firstPage));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error.message === 'canceled') {\r\n                    // Do nothing if pervious request was canceled.\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Get betslip by id for \"My bets\" page popup\r\nexport const getSingleBetslip = (betslip_id) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        jwtService\r\n            .getSingleBetslip(betslip_id, language)\r\n            .then((singleBetslip) => {\r\n                dispatch(setSingleBetslip(singleBetslip));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set single betslip\r\nexport const setSingleBetslip = (singleBetslip) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_SINGLE_BETSLIP, singleBetslip });\r\n    };\r\n};\r\n\r\n// Select active tab in \"My bets\" page and get data\r\nexport const selectBetslip = (value) => {\r\n    return (dispatch,getState) => {\r\n        let params;\r\n        if (value === ''){\r\n            params = getState().bets.mybetsFilterParams;\r\n        }\r\n        dispatch({ type: Actions.ON_BETSLIP_SELECTED, value });\r\n        dispatch(getBetslips(value, false, params));\r\n    };\r\n};\r\n\r\nexport const setMybetsFilters = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_MYBET_FILTER_PARAMS, params: value });\r\n        dispatch(getBetslips('', true, value));\r\n    };\r\n};\r\n\r\nexport const removeMyBetsFilters = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.REMOVE_MYBET_FILTERS_PARAMS });\r\n    };\r\n};\r\n\r\n\r\n","import * as Actions from '../actionTypes';\r\n\r\n// Select main market from markets slider (tabs)\r\nexport const selectMainMarket = (marketId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_TODAY_MAIN_MARKET_SELECTED, marketId });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setTodayResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_TODAY_RESET_PAGE });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateTodayEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_TODAY_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updateTodayEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_TODAY_EVENTS_STATUS, events });\r\n    };\r\n};\r\n","import React from 'react';\r\n\r\nfunction LoaderLiveCasino(props) {\r\n    return (\r\n        <div className={`loading-modal casino-bg ${props.customClass}`}>\r\n            <div className=\"loader\"></div>\r\n        </div>                 \r\n    );\r\n}\r\n\r\nexport default LoaderLiveCasino;\r\n","import * as Actions from '../actionTypes';\r\nimport { forEach, isEmpty, filter, groupBy, orderBy } from 'lodash';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsLastMinute, paramsMarketData } from '../../../dynamo/params';\r\nimport map from 'lodash.map';\r\nimport { MARKET_FOR_OUTER_SLIDER, MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\n\r\n// Get sports list\r\nlet eventCount;\r\nlet marketsArray = [];\r\nexport const getLastMinuteSports = (nextToken) => {\r\n    return (dispatch, getState) => {\r\n        dynamoClient.scan(paramsLastMinute(nextToken), (err, data) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    if(data.LastEvaluatedKey) {\r\n                        dispatch(fetchMore(data.LastEvaluatedKey));\r\n                    } else {\r\n                        dispatch(fetchedAllData());\r\n                    }\r\n                    dispatch(setLastMinuteSports(data.Items, data.LastEvaluatedKey));\r\n                }\r\n            }); \r\n    };\r\n};\r\n\r\nexport const checkLastMin = (nextToken) => {\r\n    return (dispatch) => {\r\n        dynamoClient.scan(paramsLastMinute(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                if(data.Items.length > 0) {\r\n                    dispatch({ type: Actions.IS_LAST_MIN_AVAILABLE, isLastMinAvailable: true });\r\n                }\r\n                else if(data.LastEvaluatedKey) {\r\n                    dispatch(checkLastMin(data.LastEvaluatedKey));\r\n                } else {\r\n                    dispatch({ type: Actions.IS_LAST_MIN_AVAILABLE, isLastMinAvailable: false });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\n\r\nconst fetchMore = (token) => {\r\n    return (dispatch) => {\r\n        dispatch(getLastMinuteSports(token));\r\n    };\r\n}; \r\n\r\nconst fetchedAllData = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LAST_MINUTE_FETCHED_ALL });        \r\n    };\r\n};\r\n\r\nconst getMarketData = (fixture_id, startIndex, i, count) => {\r\n    return (dispatch, getState) => {\r\n    \r\n    dynamoClient.query(paramsMarketData(fixture_id), (err, data) => {\r\n        if (err) {\r\n            console.log(err);\r\n        } else {\r\n            marketsArray[i] = { [data.Items[0]?.fixture_id] : JSON.parse(data.Items[0]?.market)};\r\n            eventCount++;\r\n        }\r\n        if(eventCount === count) {\r\n            let allData  = getState().lastMinute.allData;\r\n            let selectedSport  = getState().lastMinute.selectedSport;\r\n            // If fixtures id's are same club the data\r\n            marketsArray = map(marketsArray, (market , i) =>{\r\n                if(market && !isEmpty(allData) && allData[selectedSport] && Object.keys(market)[0] == allData[selectedSport][startIndex + i].fixture_id) {\r\n                    return { ...allData[selectedSport][startIndex + i], market: {...allData[selectedSport][startIndex + i].market, ...Object.values(market)[0]}};\r\n                }\r\n            });\r\n            marketsArray = filter(marketsArray, (event) => event );\r\n    \r\n            if(marketsArray.length > 0) {\r\n                dispatch(setSportEvents(marketsArray, startIndex + count));\r\n            }\r\n        };\r\n    }); \r\n};\r\n};\r\nexport const setLastMinCount = (sportsCount) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_LAST_MINUTE_COUNT, sportsCount });        \r\n    }\r\n}\r\n\r\n// Set sports list\r\nexport const setLastMinuteSports = (sports, hasNext) => {\r\n    return (dispatch, getState) => {\r\n        let events = getState().lastMinute.sports;\r\n        let allData;\r\n        let sportsObj = {};\r\n        if(!hasNext && events) {\r\n            events = events.concat(sports);\r\n            allData = filter(events, (event) => {\r\n                return event && event.sport_id && event.location && event.participant_one_full && event.participant_two_full && event.league\r\n            });\r\n            allData = map(allData, (match) => {\r\n                match.league = match?.league && JSON.parse(match?.league);\r\n                match.location = match?.location && JSON.parse(match?.location);\r\n                match.participant_one_full = match?.participant_one_full && JSON.parse(match?.participant_one_full);\r\n                match.participant_two_full = match?.participant_two_full && JSON.parse(match?.participant_two_full);\r\n                match.sport = match?.sport && JSON.parse(match?.sport);\r\n                const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[match.sport_id];\r\n                const defaultMktObj = {};\r\n                defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n                match.market = defaultMktObj;\r\n                if(match?.sport_id && !sportsObj[match?.sport_id]){\r\n                    sportsObj[match?.sport_id] = 0;\r\n                }\r\n                if (match?.sport_id)\r\n                sportsObj[match?.sport_id] = sportsObj[match?.sport_id] + 1;\r\n                return match;\r\n            });\r\n            allData = groupBy(allData, function (event) {\r\n                return `${event?.sport_id}`;\r\n            });\r\n            forEach(Object.keys(allData), (sportId) => {\r\n                allData[sportId] = orderBy(allData[sportId], ['start_date'], ['asc']);\r\n            });\r\n            dispatch({ type: Actions.SET_LAST_MINUTE_SPORTS, sports: events, allData, sportsObj });\r\n        }\r\n        else {\r\n            dispatch({ type: Actions.SET_LAST_MINUTE_SPORTS, sports });\r\n        }\r\n    };\r\n};\r\n\r\nexport const setClearData = () => {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: Actions.SET_LAST_MINUTE_CLEAR_DATA });\r\n    };\r\n};\r\n\r\n// Select active sport\r\nexport const selectSport = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        // dispatch(getLastMinuteSports());\r\n        dispatch({ type: Actions.ON_LAST_MINUTE_SPORT_SELECTED, sportId, mainSelectedMarket: MARKET_FOR_OUTER_SLIDER[sportId][0].Id });\r\n        // dispatch(getSportEvents(sportId, page));\r\n    };\r\n};\r\n\r\n// Get sport events list\r\nexport const getSportEvents = (eventsArray, startIndex, count) => {\r\n    return (dispatch, getState) => {\r\n        eventCount = 0;\r\n        marketsArray = [];\r\n        forEach(eventsArray, (event, i) => {\r\n            dispatch(getMarketData(event.fixture_id, startIndex, i ,count));\r\n        });\r\n    };\r\n};\r\n\r\n// Set sport events list\r\nexport const setSportEvents = (events, nextIndex) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.SET_LAST_MINUTE_SPORT_EVENTS, events, nextIndex });\r\n    };\r\n};\r\n\r\n// Clear sport events list\r\nexport const clearSportEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_LAST_MINUTE_SPORT_EVENTS });\r\n    };\r\n};\r\n","import * as Actions from '../actionTypes';\r\n\r\n// Select main market from markets slider (tabs)\r\nexport const selectMainMarket = (marketId) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_LAST_MINUTE_MAIN_MARKET_SELECTED, marketId });\r\n    };\r\n};\r\n\r\n// Reset page number for request\r\nexport const setLastMinuteResetPage = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.ON_LAST_MINUTE_RESET_PAGE });\r\n    };\r\n};\r\n\r\n// WebSocket - update bet (price and status)\r\nexport const updateLastMinuteEventsMarket = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_LAST_MINUTE_EVENTS_MARKET, events });\r\n    };\r\n};\r\n\r\n// WebSocket - update event status\r\nexport const updateLastMinuteEventsStatus = (events) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.UPDATE_LAST_MINUTE_EVENTS_STATUS, events });\r\n    };\r\n};\r\n","import * as Actions from '../actionTypes';\r\nimport { getSportEvents } from './lsports.lastMinute.sport.actions';\r\n\r\n// Remove league from main events on 'x' icon click\r\nexport const removeLeague = (leagueId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_LAST_MINUTE_REMOVE_LEAGUE, leagueId });\r\n\r\n        let hasNextPage = getState().lastMinute.hasNextPage;\r\n        let mainEvents = getState().lastMinute.mainEvents;\r\n\r\n        if (mainEvents.length < 20 && hasNextPage) {\r\n            // get new events\r\n            let sportId = getState().lastMinute.selectedSport;\r\n            dispatch(getSportEvents(sportId));\r\n        }\r\n    };\r\n};\r\n","import { toastr } from 'react-redux-toastr';\r\nimport * as Actions from './actionTypes';\r\nimport jwtService from '../../services/jwtService';\r\nimport { logoutUser, getUser } from './user.actions';\r\nimport { selectBetslip } from './bets.actions';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\n\r\nexport const setCashoutData = (betslip_id, total_odds, stake_price) => {\r\n    return (dispatch) => {\r\n        \r\n        jwtService\r\n            .getCashoutData(betslip_id, total_odds, stake_price)\r\n            .then((value) => {\r\n                dispatch({ type:Actions.SET_CASHOUT_DATA, value });\r\n                dispatch({ type:Actions.SET_CASHOUT_LOADING, value: false });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                dispatch({ type:Actions.SET_CASHOUT_LOADING, value: false });\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else if (error && error.response && error.response.status && error.response.status === 406) {\r\n                    //toastr.error('', `${error.response.data.message}`); Disabling the error toaster\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });   \r\n    };\r\n};\r\n\r\nexport const processCashout = (betslipID, cashoutAmount) =>  {\r\n    return  (dispatch) => {\r\n        jwtService\r\n            .processCashout(betslipID, cashoutAmount)\r\n            .then((data) => {\r\n                if(data.status === true){\r\n                    //toastr.success(data.message);\r\n                    dispatch(showCashoutSuccess(true));\r\n                    dispatch(getUser());\r\n                    dispatch(selectBetslip(''));\r\n                    setTimeout(() => {\r\n                        dispatch(showCashoutSuccess(false));    \r\n                    }, 2000);\r\n                    setTimeout(()=> {\r\n                        dispatch(selectBetslip(''));\r\n                    }, 2001);\r\n                }\r\n                 else {\r\n                    showCashoutError(Translate.someThingWrong);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                }\r\n                else if (error && error.response && error.response.status && error.response.status === 406) {\r\n                    showCashoutError('Cashout Not Available, Please Try Again');\r\n                }\r\n                 else {\r\n                toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n        }\r\n\r\n};\r\n\r\nexport const setCashoutLoading = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_CASHOUT_LOADING, value });\r\n    };\r\n};\r\n\r\nexport const resetCashoutData = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.RESET_CASHOUT_DATA });\r\n    };\r\n};\r\n\r\nexport const showCashoutSuccess = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_CASHOUT_SUCCESS, value });\r\n    };\r\n};\r\n\r\nexport const showCashoutError = (msg) => {\r\n    return toastr.error(msg);\r\n}\r\n\r\n\r\n","import { toastr } from 'react-redux-toastr';\r\nimport lSportsService from '../../../services/lSportsService';\r\nimport * as Actions from '../actionTypes';\r\nimport map from 'lodash.map';\r\nimport forEach from 'lodash.foreach';\r\nimport {setTodayLocations} from './lsports.today.location.actions';\r\nimport jwtService from '../../../services/jwtService';\r\nimport Util from '../../../helper/Util';\r\nimport {endOfDay, endOfToday, endOfTomorrow, format, startOfDay} from 'date-fns';\r\nimport {dynamoClient} from '../../../App';\r\nimport {\r\n    getPartialEventsBatch,\r\n    getTodayEventsParams,\r\n    getTodayEventsParamsDesktop,\r\n    getTodayEventsParamsMobile\r\n} from '../../../dynamo/todaysParam/getTodayEventsParams';\r\nimport {paramsMarketDataIndex} from '../../../dynamo/params';\r\nimport {sortedLocations, staticPrematchSports} from '../../../config/sports';\r\nimport {MARKET_FOR_OUTER_SLIDER_PREMATCH} from '../../../config/markets';\r\nimport {\r\n    getAllSportsEventsCount,\r\n    getAllSportsEventsCountDesktop,\r\n    getAllSportsEventsCountMobile\r\n} from '../../../dynamo/todaysParam/getAllSportFixture';\r\nimport groupBy from 'lodash.groupby';\r\nimport {updateBetslipEventsMarket} from '../betslip.actions';\r\nimport {isMobileOnly} from 'react-device-detect';\r\nimport {prematchEventBatchSize, prematchMarketSize, totalSegments} from '../../../config';\r\nimport orderBy from 'lodash.orderby';\r\n\r\n// Get sports list\r\nlet sportEventCount = [];\r\nlet sportCount = 0;\r\nlet eventCount = 0;\r\n\r\nlet sportEventCountDesktop = [];\r\nlet sportCountDesktop = 0;\r\nlet eventCountDesktop = 0;\r\n\r\nlet sportObjectCount = {};\r\nlet noOfBatches = 1;\r\n\r\nexport const getTodaySportsMobile = () => {\r\n    return (dispatch, getState) => {\r\n        sportEventCount = [];\r\n        sportCount = 0;\r\n        const sportsArr = [];\r\n        Object.keys(staticPrematchSports()).forEach((key,i) => sportsArr.push(+key));\r\n        for(let i=0; i<sportsArr.length ; i++) {\r\n            dispatch(getTodaySportCount(sportsArr[i]));\r\n        }\r\n    };\r\n};\r\n\r\nconst getTodaySportCount = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        sportObjectCount = {};\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                sportCount++;\r\n                if (!data || !data.sport) {\r\n                    sportObjectCount[sportId] = 0;\r\n                } else {\r\n                    let { sport } = data;\r\n                    let todayData = [];\r\n                    sport = JSON.parse(sport);\r\n                    const dateRange = [new Date().toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n                    Object.entries(sport).forEach(([key,value]) => {\r\n                        let { start_date } = value;\r\n                        if (new Date(start_date) >= new Date(dateRange[0]) && new Date(start_date) <= new Date(dateRange[1])) {\r\n                            return todayData.push({ fixture_id: key, start_date });\r\n                        }\r\n                    });\r\n                    sportObjectCount[sportId] = todayData.length || 0;\r\n                }\r\n                if(sportCount === Object.keys(staticPrematchSports()).length) {\r\n                    dispatch({ type: Actions.SET_TODAY_SPORTS, sportCountObj: sportObjectCount });                    \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const getTodaySports = () => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        \r\n        lSportsService\r\n            .getSports(language)\r\n            .then((sports) => {\r\n                dispatch(setTodaySports(sports));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\n// Set sports list\r\nexport const setTodaySports = (sports, nextToken) => {\r\n    return (dispatch) => {\r\n        if (!sports) sportEventCount = [];\r\n        const sportObj = {};\r\n        Object.keys(staticPrematchSports()).map((key,i) => sportObj[`:sport${i}`] = +key);\r\n\r\n        // Getting events till the end of tomorrow as Upcoming section;\r\n        const dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n        dynamoClient.scan(getAllSportsEventsCount(sportObj, dateRange, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                const { LastEvaluatedKey, Items } = data;\r\n                sportEventCount.push( ...Items );\r\n                if (LastEvaluatedKey) {\r\n                    dispatch(fetchMore(setTodaySports, LastEvaluatedKey, sportObj));\r\n                } else {\r\n                    let sportCountObj = {};\r\n                    const sportGrp = groupBy(sportEventCount, 'sport_id');\r\n                    forEach(Object.values(sportObj), sport => {\r\n                        sportCountObj[sport] = sportGrp[sport]?.length || 0;\r\n                    });\r\n                    dispatch({ type: Actions.SET_TODAY_SPORTS, sportCountObj });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n// Select active sport\r\nexport const selectSport = (sportId, dontFetch) => {\r\n    return (dispatch, getState) => {\r\n        let page = getState().today.currentPage;\r\n        //dispatch(getTodaySports());\r\n        dispatch({ type: Actions.ON_TODAY_SPORT_SELECTED, sportId });\r\n        if(!dontFetch)\r\n        dispatch(getSportEvents(sportId, page));\r\n        // dispatch(getTodayLocations(sportId));\r\n    };\r\n};\r\n\r\nexport const selectSportMobile = (sportId, dontFetch, dontClearMainEvents) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: Actions.ON_TODAY_SPORT_SELECTED, sportId, dontClearMainEvents });\r\n        if(!dontFetch){\r\n            eventCount = 0;\r\n            eventCountDesktop = 0;\r\n            if (isMobileOnly) {\r\n                dispatch(getTodaySportEvents(sportId));\r\n            } else {\r\n                dispatch(getSportEvents(sportId));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nconst getTodaySportEvents = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                let { sport } = data;\r\n                let todayData = [];\r\n                sport = JSON.parse(sport);\r\n                const dateRange = [new Date().toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n                Object.entries(sport).forEach(([key,value]) => {\r\n                    let { start_date } = value;\r\n                    if (new Date(start_date) >= new Date(dateRange[0]) && new Date(start_date) <= new Date(dateRange[1])) {\r\n                        return todayData.push({ fixture_id: key, start_date });\r\n                    }\r\n                });\r\n                todayData = orderBy(todayData, ['start_date'], ['asc']);\r\n                noOfBatches = 1;\r\n                if (todayData.length) {\r\n                    noOfBatches = Math.ceil(todayData.length / prematchEventBatchSize);\r\n                    let j = 0;\r\n                    for (let i = 1; i <=noOfBatches; i++) {\r\n                        let segmentTodayData = todayData.slice(j, i*prematchEventBatchSize);\r\n                        j = i*prematchEventBatchSize;\r\n                        dispatch(getSportEventsMobile_2(segmentTodayData, sportId));\r\n                    }\r\n                } else {\r\n                    dispatch(getSportEventsMobile_2(todayData, sportId));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nconst getSportEventsMobile_2 = (fixtureArray, sportId = 1) => {\r\n    return (dispatch, getState) => {\r\n        const lan = getState().general.language;\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        const eventObj = {};\r\n        if (fixtureArray.length > 0) {\r\n            fixtureArray.map((event,i) => eventObj[`:evt${i}`] = { fixture_id: `${event.fixture_id}` });\r\n        }\r\n        dynamoClient.batchGet(getPartialEventsBatch(eventObj), async (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { PartialDevent: Items } = data.Responses;\r\n                let selectedSport = getState().today.selectedSport;\r\n                Items = await Util.partialMatchFormatter(Items, lan, defaultMktObj);\r\n                let sport = Items[0]?.sport_id;\r\n                if (Items.length && sport !== selectedSport) return null;\r\n                eventCount++;\r\n                let fetching = eventCount === noOfBatches ? false : true;\r\n                dispatch(setSportEvents(Items, fetching, fetching));\r\n                if( eventCount === noOfBatches) {\r\n                    let initialEvents = Items.slice(0, prematchMarketSize);\r\n                    dispatch({ type: Actions.SET_TODAY_EVENTS_MARKETS, events: initialEvents, nextIndex: 0 });\r\n                    let locations = {};\r\n                    let matches = getState().today.partialAllEvents;\r\n                    matches.map(match => locations[match.location.Id] = { ...match.location, name: match.location.name_en });\r\n                    let locationArr = sortedLocations(Object.values(locations));\r\n                    dispatch(setTodayLocations(locationArr));\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n// Set sports list\r\n// export const setTodaySportsWithDateRange = (sports, nextToken) => {\r\n//     return (dispatch, getState) => {\r\n//         const dateFilter = getState().today.dateFilter;\r\n//         if (!sports) sportEventCount = [];\r\n//         const sportObj = {};\r\n//         Object.keys(staticPrematchSports()).map((key,i) => sportObj[`:sport${i}`] = +key);\r\n\r\n//         // Getting events till the end of tomorrow as Upcoming section;\r\n//         let dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n\r\n//         // used for desktop date range\r\n//         if (dateFilter) {\r\n//             if (dateFilter === 'all' || dateFilter === format(new Date(), 'yyyy-MM-dd')) dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n//             else dateRange = [new Date(startOfDay(new Date(dateFilter))).toISOString(), new Date(endOfDay(new Date(dateFilter))).toISOString()];\r\n//         }\r\n//         dynamoClient.scan(getAllSportsEventsCount(sportObj, dateRange, nextToken), (err, data) => {\r\n//             if (err) {\r\n//                 console.log(err);\r\n//             } else {\r\n//                 const { LastEvaluatedKey, Items } = data;\r\n//                 sportEventCount.push( ...Items );\r\n//                 if (LastEvaluatedKey) {\r\n//                     dispatch(fetchMore(setTodaySportsWithDateRange, LastEvaluatedKey, sportObj));\r\n//                 } else {\r\n//                     let sportCountObj = {};\r\n//                     const sportGrp = groupBy(sportEventCount, 'sport_id');\r\n//                     forEach(Object.values(sportObj), sport => {\r\n//                         sportCountObj[sport] = sportGrp[sport]?.length || 0;\r\n//                     });\r\n//                     dispatch({ type: Actions.SET_TODAY_SPORTS, sportCountObj });\r\n//                 }\r\n//             }\r\n//         });\r\n//     };\r\n// };\r\n\r\n// Get market data for set of fixture\r\nexport const getMarketData = (data, startIndex, count) => {\r\n    return (dispatch, getState) => {\r\n        let betFixtures = getState().betslip.fixtures;\r\n        let eventCount = 0;\r\n        let marketsArray = [];\r\n        if (!data.length) return null;\r\n        const { sport_id: sportId } = data[0];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        forEach(data, (event, i) => {\r\n            let markets = {};\r\n            // 25715992\r\n            dynamoClient.query(paramsMarketDataIndex(`${event.fixture_id}`), (err, res) => {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    let Items = res?.Items;\r\n                    if(Items.length) markets = Util.marketFormatter(Items, event.fixture_id);\r\n                    // console.log('markets ', markets);\r\n                    \r\n                    // });\r\n                    if(Object.keys(markets).length && betFixtures.length) {\r\n                        // dispatch(updateBetslipEvent({FixtureId: event.fixture_id, Market: JSON.parse(market) }));\r\n                        dispatch(updateBetslipEventsMarket({[event.fixture_id]: { FixtureId: event.fixture_id, Market: markets }}));\r\n                    }\r\n                    let livescore = sessionStorage.getItem('liveScore');\r\n                    if (livescore) {\r\n                        livescore = JSON.parse(livescore);\r\n                        sessionStorage.removeItem('liveScore');\r\n                    }\r\n                    marketsArray[i] = { [event.fixture_id] : { market: markets, livescore }};\r\n                    eventCount++;\r\n                }\r\n            if(eventCount === count) {\r\n                let allData  = getState().today.partialAllEvents;\r\n                allData = allData.reduce((ac, a) => ({ ...ac, [ a.fixture_id ]: a }), {});\r\n                marketsArray = map(marketsArray, (market, idx) => {\r\n                    let values = Object.values(market);\r\n                    let mktData = values[0]?.market || {};\r\n                    let score = values[0]?.livescore || null;\r\n                    return {\r\n                        ...allData[Object.keys(market)[0]],\r\n                        market: {\r\n                            ...defaultMktObj,\r\n                            ...mktData,\r\n                        },\r\n                        livescore: score,\r\n                    };\r\n                });\r\n                dispatch({ type: Actions.SET_TODAY_EVENTS_MARKETS, events: marketsArray, nextIndex: startIndex + count });\r\n            }\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\n// Get sport events list\r\nexport const getSportEvents = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        const dateFilter = getState().today.dateFilter;\r\n        let nextToken = getState().today.nextToken;\r\n        let dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n\r\n        // used for desktop date range\r\n        if (!isMobileOnly && dateFilter) {\r\n            if (dateFilter === 'all') return null;\r\n            if (dateFilter === format(new Date(), 'yyyy-MM-dd')) dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n            else dateRange = [new Date(startOfDay(new Date(dateFilter))).toISOString(), new Date(endOfDay(new Date(dateFilter))).toISOString()];\r\n        }\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        dynamoClient.scan(getTodayEventsParams(sportId, dateRange, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { Items, LastEvaluatedKey } = data;\r\n                let selectedSport = getState().today.selectedSport;\r\n                Items = Items.map(match => {\r\n                    match.market = defaultMktObj;\r\n                    match.market_count = 0;\r\n                    match.livescore = {};\r\n                    match.participant_one_full = JSON.parse(match.participant_one_full);\r\n                    match.participant_two_full = JSON.parse(match.participant_two_full);\r\n                    match.participant_one_full = { ...match.participant_one_full };\r\n                    match.participant_two_full = { ...match.participant_two_full };\r\n                    match.participants = [match.participant_one_full, match.participant_two_full];\r\n                    match.league = { ...JSON.parse(match.league), Id: match.league_id };\r\n                    if (match.league_id) match.league = { ...match.league, Id: match.league_id };\r\n                    if(match.location) {\r\n                        match.location = JSON.parse(match.location);\r\n                        if (match.location_id) match.location = {...match.location, Id: match.location_id };\r\n                    }\r\n                    return match;\r\n                });\r\n                let sport = Items[0]?.sport_id;\r\n                if (Items.length && sport !== selectedSport) return null;\r\n                dispatch(setSportEvents(Items, LastEvaluatedKey, LastEvaluatedKey));\r\n                if (LastEvaluatedKey) {\r\n                    dispatch(fetchMore(getSportEvents, LastEvaluatedKey, sportId));\r\n                }\r\n                else {\r\n                    let locations = {};\r\n                    let matches = getState().today.partialAllEvents;\r\n                    matches.map(match => locations[match.location.Id] = { ...match.location, name: match.location.name_en });\r\n                    let locationArr = sortedLocations(Object.values(locations));\r\n                    dispatch(setTodayLocations(locationArr));\r\n                }\r\n            }\r\n        }); \r\n    };\r\n};\r\n\r\n\r\nconst fetchMore = (action, token, params) => {\r\n    return (dispatch) => {\r\n        dispatch(action(params, token));\r\n    };\r\n};\r\n\r\n// Set sport events list\r\nexport const setSportEvents = (events, hasNextPage, nextToken) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_SPORT_EVENTS, events, hasNextPage, nextToken });\r\n    };\r\n};\r\n\r\n// Clear sport events list\r\nexport const clearSportEvents = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.CLEAR_TODAY_SPORT_EVENTS });\r\n    };\r\n};\r\n\r\n// // Change date filter for desktop\r\n// export const setDateFilter = (value) => {\r\n//     return (dispatch) => {\r\n//         dispatch({ type: Actions.SET_TODAY_DATE_FILTER, value });\r\n//     };\r\n// };\r\n\r\n// set updated data for specific match\r\nexport const setUpdatedMatchData = (event) => {\r\n    return (dispatch) => {\r\n        dispatch({type: Actions.SET_UPDATED_MATCH_DATA, event });\r\n    };\r\n};\r\n\r\nexport const setTodaySportsMobile = (sports, i) => {\r\n    return (dispatch) => {\r\n        // if (!sports) sportEventCount = [];\r\n        const sportObj = {};\r\n        Object.keys(staticPrematchSports()).map((key,i) => sportObj[`:sport${i}`] = +key);\r\n\r\n        // Getting events till the end of tomorrow as Upcoming section;\r\n        const dateRange = [new Date().toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n        dynamoClient.scan(getAllSportsEventsCountMobile(sportObj, dateRange, i, totalSegments), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                sportCount++;\r\n                const { Items } = data;\r\n                sportEventCount.push( ...Items );\r\n\r\n                 if(sportCount === totalSegments) {\r\n                     // TODO to add condition of excess data from BE more than no of segments\r\n                    //  if(LastEvaluatedKey) {\r\n                    //     dispatch(setTodaySportsMobile(null, null , LastEvaluatedKey ));\r\n                    //  }\r\n                    //  else {\r\n                        let sportCountObj = {};\r\n                        const sportGrp = groupBy(sportEventCount, 'sport_id');\r\n                        forEach(Object.values(sportObj), sport => {\r\n                            sportCountObj[sport] = sportGrp[sport]?.length || 0;\r\n                        });\r\n                        dispatch({ type: Actions.SET_TODAY_SPORTS, sportCountObj });\r\n                    //  }\r\n                    \r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const getSportEventsMobile = (sportId, i) => {\r\n    return (dispatch, getState) => {\r\n        // let language = getState().general.language;\r\n        const dateFilter = getState().today.dateFilter;\r\n        let nextToken = getState().today.nextToken;\r\n        const lan = getState().general.language;\r\n        let dateRange = [new Date().toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        // used for desktop date range\r\n        if (dateFilter) {\r\n            if (dateFilter === 'all' || format(new Date(), 'yyyy-MM-dd')) dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n            else dateRange = [new Date(startOfDay(new Date(dateFilter))).toISOString(), new Date(endOfDay(new Date(dateFilter))).toISOString()];\r\n        }\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        const totalSeg = nextToken ? null : totalSegments;\r\n        dynamoClient.scan(getTodayEventsParamsMobile(+sportId, dateRange, nextToken, i, totalSeg ), async (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                \r\n                let { Items } = data;\r\n                let selectedSport = getState().today.selectedSport;\r\n                Items = await Util.partialMatchFormatter(Items, lan, defaultMktObj);\r\n                let sport = Items[0]?.sport_id;\r\n                if (Items.length && sport !== selectedSport) return null;\r\n                if(!nextToken)\r\n                eventCount++;\r\n                let fetching = eventCount === totalSegments ? false : true;\r\n                dispatch(setSportEvents(Items, fetching, fetching));\r\n                \r\n                if( eventCount === totalSegments) {\r\n                    // TODO to add condition of excess data from BE more than no of segments\r\n                    // if(LastEvaluatedKey) {\r\n                    //     dispatch(getSportEventsMobile(sportId, null , LastEvaluatedKey ));\r\n                    // } else {\r\n                        let locations = {};\r\n                        let matches = getState().today.partialAllEvents;\r\n                        matches.map(match => locations[match.location.Id] = { ...match.location, name: match.location.name_en });\r\n                        let locationArr = sortedLocations(Object.values(locations));\r\n                        dispatch(setTodayLocations(locationArr));\r\n                    // }\r\n                }\r\n            }\r\n        }); \r\n    };\r\n};\r\n\r\nexport const getSportEventsDesktop = () => {\r\n    return (dispatch,getState) => {    \r\n        const sportId = getState().today.selectedSport; \r\n        eventCountDesktop = 0;\r\n        dispatch(getTodaySportEventsDesktop(sportId));\r\n    };\r\n};\r\n\r\nconst getTodaySportEventsDesktop = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                if (!data || !data.sport) {\r\n                    dispatch(setSportEvents([], false, null));\r\n                    dispatch(setTodayLocations([]));\r\n                    return;\r\n                }\r\n\r\n                let { sport } = data;\r\n                let todayData = [];\r\n                sport = JSON.parse(sport);\r\n\r\n                let dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n\r\n                Object.entries(sport).forEach(([key,value]) => {\r\n                    let { start_date } = value;\r\n                    if (new Date(start_date) >= new Date(dateRange[0]) && new Date(start_date) <= new Date(dateRange[1])) {\r\n                        return todayData.push({ fixture_id: key, start_date });\r\n                    }\r\n                });\r\n                todayData = orderBy(todayData, ['start_date'], ['asc']);\r\n                noOfBatches = 1;\r\n                if (todayData.length) {\r\n                    noOfBatches = Math.ceil(todayData.length / prematchEventBatchSize);\r\n                    let j = 0;\r\n                    for (let i = 1; i <=noOfBatches; i++) {\r\n                        let segmentTodayData = todayData.slice(j, i*prematchEventBatchSize);\r\n                        j = i*prematchEventBatchSize;\r\n                        dispatch(getSportEventsForDesktop_2(segmentTodayData, sportId));\r\n                    }\r\n                } else {\r\n                    // dispatch(getSportEventsForDesktop_2(todayData, sportId));\r\n                    dispatch(setSportEvents([], false, null));\r\n                    dispatch(setTodayLocations([]));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nconst getSportEventsForDesktop_2 = (fixtureArray, sportId = 1) => {\r\n    return (dispatch, getState) => {\r\n        const lan = getState().general.language;\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        const eventObj = {};\r\n        if (fixtureArray.length > 0) {\r\n            fixtureArray.map((event,i) => eventObj[`:evt${i}`] = { fixture_id: `${event.fixture_id}` });\r\n        }\r\n        dynamoClient.batchGet(getPartialEventsBatch(eventObj), async (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { PartialDevent: Items } = data.Responses;\r\n                let selectedSport = getState().today.selectedSport;\r\n                Items = await Util.partialMatchFormatter(Items, lan, defaultMktObj);\r\n                let sport = Items[0]?.sport_id;\r\n                if (Items.length && sport !== selectedSport) return null;\r\n                eventCountDesktop++;\r\n                let fetching = eventCountDesktop === noOfBatches ? false : true;\r\n                dispatch(setSportEvents(Items, fetching, fetching));\r\n                if( eventCountDesktop === noOfBatches) {\r\n                    let initialEvents = Items.slice(0, prematchMarketSize);\r\n                    dispatch({ type: Actions.SET_TODAY_EVENTS_MARKETS, events: initialEvents, nextIndex: 0 });\r\n                    let locations = {};\r\n                    let matches = getState().today.partialAllEvents;\r\n                    matches.map(match => locations[match.location.Id] = { ...match.location, name: match.location.name_en });\r\n                    let locationArr = sortedLocations(Object.values(locations));\r\n                    dispatch(setTodayLocations(locationArr));\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getSportEventsForDesktop = (sportId, i) => {\r\n    return (dispatch, getState) => {\r\n        let lan = `name_${ getState().general.language }`;\r\n        const dateFilter = getState().today.dateFilter;\r\n        let nextToken = getState().today.nextToken;\r\n        let dateRange = [new Date().toISOString(), new Date(endOfTomorrow()).toISOString()];\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        // used for desktop date range\r\n        if (dateFilter) {\r\n            if (dateFilter === 'all'|| dateFilter === format(new Date(), 'yyyy-MM-dd')) dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n            else dateRange = [new Date(startOfDay(new Date(dateFilter))).toISOString(), new Date(endOfDay(new Date(dateFilter))).toISOString()];\r\n        }\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        const totalSeg = nextToken ? null : totalSegments;\r\n        dynamoClient.scan(getTodayEventsParamsDesktop(sportId, dateRange, nextToken, i, totalSeg ), async (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                \r\n                let { Items } = data;\r\n                let selectedSport = getState().today.selectedSport;\r\n                Items = await Util.partialMatchFormatter(Items, lan, defaultMktObj);\r\n                let sport = Items[0]?.sport_id;\r\n                if (Items.length && sport !== selectedSport) return null;\r\n                if(!nextToken)\r\n                eventCountDesktop++;\r\n                let fetching = eventCountDesktop === totalSegments ? false : true;\r\n                dispatch(setSportEvents(Items, fetching, fetching));\r\n                \r\n                if( eventCountDesktop === totalSegments) {\r\n                    // TODO to add condition of excess data from BE more than no of segments\r\n                    // if(LastEvaluatedKey) {\r\n                    //     dispatch(getSportEventsMobile(sportId, null , LastEvaluatedKey ));\r\n                    // } else {\r\n                        let locations = {};\r\n                        let matches = getState().today.partialAllEvents;\r\n                        matches.map(match => locations[match.location.Id] = { ...match.location, name: match.location.Name });\r\n                        let locationArr = sortedLocations(Object.values(locations));\r\n                        dispatch(setTodayLocations(locationArr));\r\n                    // }\r\n                }\r\n            }\r\n        }); \r\n    };\r\n};\r\n\r\nexport const setTodaySportsWithDateRangeDesktop = () => {\r\n    return (dispatch) => {    \r\n        sportEventCountDesktop = [];\r\n        sportCountDesktop = 0;\r\n        dispatch(getTodaySportCountDesktop(1));\r\n    };\r\n};\r\n\r\nconst getTodaySportCountDesktop = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        sportObjectCount = {};\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                if (!data || !data.sport_count) return;\r\n\r\n                let { sport_count } = data;\r\n                sportCount = JSON.parse(sport_count);\r\n\r\n                const sportsArr = [];\r\n                Object.keys(staticPrematchSports()).forEach((key,i) => sportsArr.push(+key));\r\n\r\n                sportsArr.forEach((id) => {\r\n                    sportCountDesktop++;\r\n                    sportObjectCount[id] = sportCount[id] || 0;\r\n                });\r\n\r\n                if(sportCountDesktop === sportsArr.length) {\r\n                    dispatch({ type: Actions.SET_TODAY_SPORTS, sportCountObj: sportObjectCount });                    \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const setTodaySportsDesktop = (sports, i) => {\r\n    return (dispatch,getState) => {\r\n        const dateFilter = getState().today.dateFilter;\r\n        if (!sports) sportEventCount = [];\r\n        const sportObj = {};\r\n        Object.keys(staticPrematchSports()).map((key,i) => sportObj[`:sport${i}`] = +key);\r\n\r\n        // Getting events till the end of tomorrow as Upcoming section;\r\n        let dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n\r\n        // used for desktop date range\r\n        if (dateFilter) {\r\n            if (dateFilter === 'all' || format(new Date(), 'yyyy-MM-dd')) dateRange = [new Date().toISOString(), new Date(endOfToday()).toISOString()];\r\n            else dateRange = [new Date(startOfDay(new Date(dateFilter))).toISOString(), new Date(endOfDay(new Date(dateFilter))).toISOString()];\r\n        }\r\n        \r\n        dynamoClient.scan(getAllSportsEventsCountDesktop(sportObj, dateRange, i, totalSegments), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                sportCountDesktop++;\r\n                const { Items } = data;\r\n                sportEventCountDesktop.push( ...Items );\r\n\r\n                 if(sportCountDesktop === totalSegments) {\r\n                     // TODO to add condition of excess data from BE more than no of segments\r\n                    //  if(LastEvaluatedKey) {\r\n                    //     dispatch(setTodaySportsMobile(null, null , LastEvaluatedKey ));\r\n                    //  }\r\n                    //  else {\r\n                        let sportCountObj = {};\r\n                        const sportGrp = groupBy(sportEventCountDesktop, 'sport_id');\r\n                        forEach(Object.values(sportObj), sport => {\r\n                            sportCountObj[sport] = sportGrp[sport]?.length || 0;\r\n                        });\r\n                        dispatch({ type: Actions.SET_TODAY_SPORTS, sportCountObj });\r\n                    //  }\r\n                    \r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\nexport const clearPartialEvents = () => {\r\n    return (dispatch) =>{\r\n        dispatch({type: Actions.CLEAR_PARTIAL_EVENTS})\r\n    }\r\n}\r\n","export const getAllSportsEventsCount = (sportIds, dateRange, nextToken) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, sport_id',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s) AND sport_id IN ('+Object.keys(sportIds)+') AND start_date BETWEEN :start AND :end',\r\n    ExclusiveStartKey: nextToken,\r\n    ExpressionAttributeValues: {\r\n      ':s': 0,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':hasMarket': true,\r\n      ...sportIds,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getAllSportsEventsCountDesktop = (sportIds, dateRange, segmentNo, totalSegments) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, sport_id',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s) AND sport_id IN ('+Object.keys(sportIds)+') AND start_date BETWEEN :start AND :end',\r\n    ExpressionAttributeValues: {\r\n      ':s': 0,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':hasMarket': true,\r\n      ...sportIds,\r\n    },\r\n    Segment: segmentNo,\r\n    TotalSegments: totalSegments,\r\n  };\r\n};\r\n\r\nexport const getAllSportsEventsCountMobile = (sportIds, dateRange, segmentNo, totalSegments) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, sport_id',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s) AND sport_id IN ('+Object.keys(sportIds)+') AND start_date BETWEEN :start AND :end',\r\n    ExpressionAttributeValues: {\r\n      ':s': 0,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':hasMarket': true,\r\n      ...sportIds,\r\n    },\r\n    Segment: segmentNo,\r\n    TotalSegments: totalSegments,\r\n  };\r\n};\r\n","export const getTodayEventsParams = (sportId, dateRange, nextToken) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, fixture_status, league, #locations, sport_id, start_date',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s)  AND sport_id = :sport_id AND start_date BETWEEN :start AND :end',\r\n    ExclusiveStartKey: nextToken,\r\n    ExpressionAttributeValues: {\r\n      ':s': 0,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':sport_id': sportId,\r\n      ':hasMarket': true,\r\n    },\r\n    ExpressionAttributeNames: {\r\n      '#locations': 'location',\r\n    }\r\n  };\r\n};\r\nexport const getTodayEventsParamsDesktop = (sportId, dateRange, nextToken, segmentNo, totalSegments) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, fixture_status, league, #locations, sport_id, start_date, participant_one_full, participant_two_full, league_id, location_id',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s)  AND sport_id = :sport_id AND start_date BETWEEN :start AND :end',\r\n    ExpressionAttributeValues: {\r\n      ':s': 0,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':sport_id': sportId,\r\n      ':hasMarket': true,\r\n    },\r\n    ExpressionAttributeNames: {\r\n      '#locations': 'location',\r\n    },\r\n    Segment: segmentNo,\r\n    TotalSegments: totalSegments,\r\n  };\r\n};\r\n\r\nexport const getTodayEventsParamsMobile = (sportId, dateRange, nextToken, segmentNo, totalSegments) => {\r\n  return {\r\n    TableName: 'PartialDevent',\r\n    ProjectionExpression: 'fixture_id, fixture_status, league, #locations, sport_id, start_date, participant_one_full, participant_two_full, league_id, location_id',\r\n    FilterExpression: 'is_market_present = :hasMarket AND fixture_status IN (:s)  AND sport_id = :sport_id AND start_date BETWEEN :start AND :end',\r\n    ExpressionAttributeValues: {\r\n      ':s': 0,\r\n      ':start': dateRange[0],\r\n      ':end': dateRange[1],\r\n      ':sport_id': sportId,\r\n      ':hasMarket': true,\r\n    },\r\n    ExpressionAttributeNames: {\r\n      '#locations': 'location',\r\n    },\r\n    Segment: segmentNo,\r\n    TotalSegments: totalSegments,\r\n  };\r\n};\r\n\r\nexport const getPartialEventsBatch = (eventIds, nextToken) => {\r\n  let queryParams = {RequestItems: {}};\r\n  queryParams.RequestItems['PartialDevent'] = {\r\n    Keys: [...Object.values(eventIds)],\r\n    ProjectionExpression: 'fixture_id, fixture_status, is_market_present, league, #locations, sport_id, start_date, participant_one_full, participant_one, participant_two_full, participant_two, league_id, location_id',\r\n    ExpressionAttributeNames: {\r\n      '#locations': 'location',\r\n    }\r\n  };\r\n  return queryParams;\r\n};\r\n","import Util from '../../../helper/Util';\r\nimport * as Actions from '../actionTypes';\r\nimport map from 'lodash.map';\r\nimport forEach from 'lodash.foreach';\r\nimport { forIn, isEmpty } from 'lodash';\r\nimport { sortedLocations } from '../../../config/sports';\r\nimport { format, differenceInMinutes } from 'date-fns';\r\nimport { dynamoClient } from '../../../App';\r\nimport { paramsPrematchLocations } from '../../../dynamo/params';\r\nimport { setTodayLocations } from './lsports.today.location.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER, MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../../config/markets';\r\nimport orderBy from 'lodash.orderby';\r\nimport jwtService from '../../../services/jwtService';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { getPartialEventsBatch } from '../../../dynamo/todaysParam/getTodayEventsParams';\r\nimport { prematchEventBatchSize } from '../../../config';\r\n\r\nlet count =0;\r\nlet noOfBatches = 1;\r\n\r\nexport const getPrematchLocationsDesktop = () => {\r\n    return (dispatch, getState)=>{\r\n        let sportId = getState().today.selectedSport;\r\n        count=0;\r\n        dispatch(getTodaySportEvents(sportId));\r\n    };\r\n};\r\n\r\nconst getTodaySportEvents = (sportId) => {\r\n    return (dispatch, getState) => {\r\n        jwtService\r\n            .getPrematches(sportId)\r\n            .then((data) => {\r\n                if (!data || !data.sport) {\r\n                    dispatch(fetchedAllData());\r\n                    return;\r\n                }\r\n                let { sport } = data;\r\n                sport = JSON.parse(sport) || {};\r\n                let prematchData = [];\r\n                Object.entries(sport).forEach(([key,value]) => {\r\n                    let { start_date } = value;\r\n                    return prematchData.push({ fixture_id: key, start_date });\r\n                });\r\n                noOfBatches = 1;\r\n                if (prematchData.length) {\r\n                    noOfBatches = Math.ceil(prematchData.length / prematchEventBatchSize);\r\n                    let j = 0;\r\n                    for (let i = 1; i <=noOfBatches; i++) {\r\n                        let segmentData = prematchData.slice(j, i*prematchEventBatchSize);\r\n                        j = i*prematchEventBatchSize;\r\n                        dispatch(getSportEventsDesktop_2(segmentData, sportId));\r\n                    }\r\n                } else {\r\n                    dispatch(getSportEventsDesktop_2(prematchData, sportId));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                if (error && error.response && error.response.status && error.response.status === 401) {\r\n                    Util.handleRepeatedLogin(error.response);\r\n                } else {\r\n                    toastr.error('', 'Something went wrong.');\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nconst getSportEventsDesktop_2 = (fixtureArray, sportId = 1) => {\r\n    return (dispatch, getState) => {\r\n        const defaultMkt = MARKET_FOR_OUTER_SLIDER_PREMATCH[+sportId];\r\n        const defaultMktObj = {};\r\n        defaultMkt.map(mkt => defaultMktObj[`id_${mkt.Id}`] = mkt);\r\n        const eventObj = {};\r\n        if (fixtureArray.length > 0) {\r\n            fixtureArray.map((event,i) => eventObj[`:evt${i}`] = { fixture_id: `${event.fixture_id}` });\r\n        }\r\n        dynamoClient.batchGet(getPartialEventsBatch(eventObj), async (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                let { PartialDevent: Items } = data.Responses;\r\n                dispatch({ type: Actions.SET_TODAY_PARTIAL_LOCATIONS, locations: Items });        \r\n                count++;\r\n                if(count === noOfBatches) {\r\n                    dispatch(fetchedAllData());\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n// Get locations list\r\nexport const getPrematchLocations = (nextToken) => {\r\n    return (dispatch, getState) => {\r\n        let language = getState().general.language;\r\n        let dateFilter = getState().today.dateFilter;\r\n        let sportId = getState().today.selectedSport;\r\n        dynamoClient.scan(paramsPrematchLocations(sportId, nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                dispatch({ type: Actions.SET_TODAY_PARTIAL_LOCATIONS, locations: data.Items });\r\n                if(data.LastEvaluatedKey) {\r\n                    dispatch(getPrematchLocations(data.LastEvaluatedKey));\r\n                } else {\r\n                    dispatch(fetchedAllData());\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const clearPartialLocations = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_PARTIAL_LOCATIONS, clear: true });\r\n    };\r\n};\r\n\r\nconst fetchedAllData = () => {\r\n    return (dispatch, getState) => {\r\n        let partialLocations = getState().today.partialLocations;\r\n        let partialEventsArray = getState().today.partialAllEvents;\r\n        let currentMainData = getState().today.mainEvents;\r\n        let locationObj = {};\r\n        let dateFilter = getState().today.dateFilter;\r\n        let selectedLocation = getState().today.selectedLocation;\r\n        let newPartialLocations = partialLocations.filter(event => differenceInMinutes(Util.getFormattedDate(event.start_date),new Date())> 0);\r\n        \r\n        let locationArray = [];\r\n        forEach(!isEmpty(locationObj) && Object.keys(locationObj), (location) => {\r\n            if(location !== 'count')\r\n            locationArray.push({\r\n                location_id: location,\r\n                name: locationObj[location].name,\r\n                fixtures_count: locationObj[location].count,\r\n                name_en: locationObj[location].name_en,\r\n                name_tr: locationObj[location].name_tr,\r\n                name_nl: locationObj[location].name_nl,\r\n                name_de: locationObj[location].name_de,\r\n                name_ru: locationObj[location].name_ru,\r\n            });\r\n        });\r\n        dispatch({ type: Actions.SET_TODAY_PARTIAL_LOCATIONS, sort: true, partialLocations: newPartialLocations });\r\n        dispatch(setLocationObj(locationObj));\r\n        if (dateFilter === 'all' && !partialEventsArray.length) dispatch({ type: Actions.SET_TODAY_SPORT_EVENTS, events: orderBy(newPartialLocations, ['start_date'], ['asc']) });\r\n        if (!currentMainData?.length) dispatch({ type: Actions.SET_TODAY_SPORT_EVENTS, events: [], nextToken: false });\r\n        dispatch(setDateFilter(dateFilter));\r\n    };\r\n};\r\n\r\nexport const setLocationObj = (locationObj) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_TODAY_LOCATIONS_OBJECT, locationObj });\r\n    };\r\n};\r\n\r\n// Get leagues for a particular location\r\nexport const getPrematchLeagueForLocation = (locationId) => {\r\n    return (dispatch, getState) => {\r\n        let locationObj = getState().today.locationObj;\r\n        let dateFilter = getState().today.dateFilter;\r\n        const leaguesArray = [];\r\n        if(format(new Date(), 'yyyy-MM-dd') === dateFilter) {\r\n\r\n            forEach(Object.keys(locationObj[locationId]), (league) => {\r\n                if(!isNaN(league)) {\r\n                    leaguesArray.push({location_id: parseInt(league), name: locationObj[locationId][league].name, fixtures_count: locationObj[locationId][league].count, start_date: locationObj[locationId][league].start_date, ...locationObj[locationId][league]})\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            forEach(Object.keys(locationObj[locationId]), (league) => {\r\n                if(!isNaN(league) && locationObj[locationId][league].start_date[dateFilter])\r\n                leaguesArray.push({location_id: parseInt(league), name: locationObj[locationId][league].name, fixtures_count: locationObj[locationId][league].start_date[dateFilter]})\r\n            });\r\n\r\n        }\r\n        dispatch(setPrematchLeaguesForLocation([{leagues: leaguesArray}]));\r\n\r\n    };\r\n};\r\n\r\n// Set locations list\r\nexport const setPrematchLeaguesForLocation = (leagues) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: Actions.SET_PREMATCH_LEAGUE_FOR_LOCATION, leagues });\r\n    };\r\n};\r\n\r\n// Set selected location\r\nexport const setDateFilter = (value) => {\r\n    return (dispatch, getState) => {\r\n        let locationObj = getState().today.locationObj;\r\n        let locationArray = [];\r\n        if(value !== 'all') {\r\n            forIn(locationObj, (leagueObj, key) => {\r\n            let count = 0;\r\n            forIn(leagueObj, (leagues, key2) => {\r\n                if(typeof leagues === 'object' && leagues.start_date[value]){\r\n                    count = count + leagues.start_date[value];\r\n                }\r\n                }); \r\n                if( count > 0)\r\n                    locationArray.push({Id: key, Name: locationObj[key].name, name: locationObj[key].name, fixtures_count: count});\r\n\t\t\t});\r\n        }      \r\n        else {\r\n            forEach(Object.keys(locationObj), (location) => {\r\n                if(location !== 'count')\r\n                locationArray.push({\r\n                    Id: location,\r\n                    Name: locationObj[location].name,\r\n                    name: locationObj[location].name,\r\n                    fixtures_count: locationObj[location].count,\r\n                    name_en: locationObj[location].name_en,\r\n                    name_tr: locationObj[location].name_tr,\r\n                    name_nl: locationObj[location].name_nl,\r\n                    name_de: locationObj[location].name_de,\r\n                    name_ru: locationObj[location].name_ru,\r\n                });\r\n\t\t\t});\r\n        }\r\n\t\tlocationArray = sortedLocations(locationArray);\r\n        dispatch(setTodayLocations(locationArray));\r\n        dispatch({ type: Actions.SET_TODAY_DATE_FILTER, value });\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nclass Lobby extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {}\r\n\r\n    componentWillUnmount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                 {/* <div className=\"dropiframe-mobile\"></div> */}\r\n                <iframe className=\"casino__iframe\" src={`${this.props.casinoLobbyURL}`} frameBorder=\"0\" allowFullScreen></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lobby;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { Translate } from '../../localization';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#0f673d',\r\n        },\r\n    },\r\n});\r\n\r\nclass ExtraMarketSelector extends Component {\r\n    handleClick = (value) => {\r\n        this.props.selectExtraMarket(value);\r\n    };\r\n\r\n    render() {\r\n        let { extraMarketNames, extraSelectedMarket } = this.props;\r\n        let selectedTab = 0;\r\n\r\n        let marketToSelectList = map(extraMarketNames, (value, index) => {\r\n            if (extraSelectedMarket === value) {\r\n                selectedTab = index;\r\n            }\r\n            return (\r\n                <Tab\r\n                    label={Translate.tabNames[value]}\r\n                    key={index}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.handleClick(value);\r\n                        document.activeElement.blur();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        ref={this.refTabs}\r\n                        value={selectedTab}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        aria-label=\"scrollable auto tabs\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"off\"\r\n                    >\r\n                        {marketToSelectList}\r\n                    </Tabs>\r\n                </AppBar>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nExtraMarketSelector.propTypes = {\r\n    extraMarketNames: PropTypes.array,\r\n    extraSelectedMarket: PropTypes.string,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nexport default ExtraMarketSelector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nlet timeout1;\r\nlet timeout2;\r\nclass MatchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstScoreChanged: false,\r\n            secondScoreChanged: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { livescore } = this.props;\r\n        let results = livescore && livescore.Scoreboard && livescore.Scoreboard.Results ? livescore.Scoreboard.Results : null;\r\n        results = livescore;\r\n        let prevLivescore  = prevProps.livescore;\r\n        let prevResults = prevLivescore;\r\n        // let prevResults = prevLivescore && prevLivescore.Scoreboard && prevLivescore.Scoreboard.Results ? prevLivescore.Scoreboard.Results : null;\r\n        // prevResults = prevResults ? Object.values(prevResults) : [];\r\n\r\n        if( results && prevResults && prevResults.home_score !== results.home_score){\r\n            if(this.state.firstScoreChanged === true && timeout1) {\r\n                clearTimeout(timeout1);\r\n            }\r\n            this.setState({firstScoreChanged: true});\r\n            timeout1 = setTimeout(() => {\r\n                this.setState({firstScoreChanged: false});\r\n            },3500);\r\n        }\r\n        if(results && prevResults && prevResults.away_score !== results.away_score){\r\n            if(this.state.secondScoreChanged === true) {\r\n                clearTimeout(timeout2);\r\n            }\r\n            this.setState({secondScoreChanged: true});\r\n            timeout2 = setTimeout(() => {\r\n                this.setState({secondScoreChanged: false});\r\n            },3500);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.state.firstScoreChanged && timeout1) {\r\n            clearTimeout(timeout1);\r\n        }\r\n        if(this.state.secondScoreChanged && timeout2) {\r\n            clearTimeout(timeout2);\r\n        }\r\n    }\r\n\r\n    render () {\r\n    let { isLive, livescore } = this.props;\r\n    let {firstScoreChanged, secondScoreChanged} = this.state;\r\n    let results = livescore && livescore.Scoreboard && livescore.Scoreboard.Results ? livescore.Scoreboard.Results : null;\r\n    results = results ? Object.values(results) : [];\r\n    return isLive ? (\r\n        <Grid item xs={1} className=\"p-1 d-flex flex-column justify-content-center text-center active\">\r\n            {livescore ? (\r\n                <>\r\n                    <span className={`d-block  border__radius__top ${firstScoreChanged? 'score-flash-effect' : ''}`}>{livescore?.home_score}</span>\r\n                    <span className={`d-block  border__radius__bottom ${secondScoreChanged? 'score-flash-effect' : ''}`}>{livescore?.away_score}</span>\r\n                </>\r\n            ) : null}\r\n        </Grid>\r\n    ) : (\r\n        <Grid item xs={1} className=\"p-2\"></Grid>\r\n    );\r\n    }\r\n}\r\n\r\nMatchResult.propTypes = {\r\n    isLive: PropTypes.bool,\r\n    livescore: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n};\r\n\r\nexport default MatchResult;\r\n"],"sourceRoot":""}