{"version":3,"sources":["Desktop/Home/AMATIC.svg","Desktop/Home/GREENTUBE.svg","Desktop/Home/Nhome/Affiliates.js","Desktop/TopLinks/Filter.jsx","Desktop/TopLinks/InnerLinks.jsx","Desktop/TopLinks/index.jsx","Desktop/TopLeague/index.js","Desktop/Betslip/BetslipMultiBet.js","Desktop/Betslip/KeyPadComponent.js","Desktop/Betslip/Calculator.js","Desktop/Betslip/MiniCalculator.js","Desktop/Betslip/BetslipList.js","Desktop/Betslip/BetslipSingleBet.js","Desktop/Betslip/BetslipSingle.js","Desktop/Shared/Bet.js","Desktop/Shared/Market.js","Desktop/Inplay/Markets.js","Desktop/Shared/Statistics.js","Desktop/Shared/ExtraMarketSelector.js","Desktop/FiveFeaturedMarkets.js/Bet.js","Desktop/FiveFeaturedMarkets.js/Market.js","Desktop/FiveFeaturedMarkets.js/Markets.js","Desktop/FiveFeaturedMarkets.js/index.js","Desktop/Inplay/ExtraOddsModal.js","Desktop/Shared/MarketsPrematch.js","Desktop/Shared/ExtraOddsModal.js","Desktop/Betslip/FastBetPopup.js","Desktop/Betslip/PlaceBetPopup.js","Desktop/Betslip/index.js","Desktop/Shared/MainBet.js","Desktop/Shared/MainMarkets.js","Desktop/Shared/Match/Participant.js","Desktop/Home/Match.js","Desktop/Home/Matches.js","Components/Shared/Statistics.js","Components/Shared/StatisticsModal.js","Desktop/Shared/MarketHeader.js","Desktop/Home/League.js","Desktop/Today/Locations.js","Desktop/Today/Sports.js","Desktop/Today/Match.js","Desktop/Today/Matches.js","Desktop/Today/Events.js","Desktop/Today/index.js","Desktop/Common/Banner/BannerCarousel.js","Desktop/Inplay/Match.js","Desktop/Inplay/Matches.js","Desktop/Inplay/Locations.js","Desktop/Inplay/SportsLive.js","Desktop/Inplay/Events.js","Desktop/Inplay/index.js","Desktop/Home/Sports.js","Desktop/Home/Banner.js","Desktop/Casino/SingleGame.js","Desktop/Home/Nhome/Nhome.js","Desktop/Home/index.jsx","Desktop/Today/home.jsx","Desktop/Today/esports.jsx","Desktop/Today/ksports.jsx","Desktop/Casino/index.js","Desktop/LiveCasino/Categories.js","Desktop/LiveCasino/GameList.js","Desktop/LiveCasino/index.js","Desktop/P-Casino/Banner.js","Desktop/P-Casino/Categories.js","Desktop/P-Casino/Games.js","Desktop/P-Casino/GameList.js","Desktop/P-Casino/index.js","Desktop/Inplay/home.jsx","Components/Home/Bhome/About.js","Desktop/Results/Filter.jsx","Desktop/Results/Sports.js","Desktop/Results/Match.js","Desktop/Shared/LeagueHeader.js","Desktop/Results/Matches.js","Desktop/Results/Events.js","Desktop/Results/Locations.js","Desktop/Results/index.js","Components/LastMinute/Sports.js","Components/LastMinute/Match.js","Components/LastMinute/Matches.js","Components/LastMinute/Events.js","Components/LastMinute/index.js","Desktop/Favorites/Match.js","Desktop/Favorites/Matches.js","Desktop/Favorites/index.js","Desktop/VirtualSports/Games.js","Desktop/VirtualSports/Categories.js","Desktop/VirtualSports/GameList.js","Desktop/VirtualSports/index.js","store/LsportsAMQ.js","store/UserAMQ.js","Desktop/Promotion/PromotionDetails.js","Desktop/Promotion/PromotionBanners.js","Desktop/Promotion/index.js","Desktop/Promotion/PrivacyPolicy.js","Desktop/Promotion/TermsAndConditions.js","Desktop/Promotion/FirstDepositBonus/FirstDepositBonusResult.js","Desktop/Promotion/FirstDepositBonus/index.js","Desktop/Promotion/ChampionsLeagueRules/ChampionsLeagueRulesResult.js","Desktop/Promotion/ChampionsLeagueRules/index.js","Desktop/Promotion/TakeItAll/TakeItAllResult.js","Desktop/Promotion/TakeItAll/index.js","Desktop/CustomerService/CustomerServiceDeatils.js","Desktop/CustomerService/PromotionDetails.js","Desktop/CustomerService/index.js","Desktop/GGSlot/Categories.js","Desktop/GGSlot/GameList.js","Desktop/GGSlot/index.js","Desktop/Casino/Lobby.jsx","Desktop/PragmaticPlay/index.js","Desktop/NewCasino/Categories.js","Desktop/NewCasino/GameList.js","Desktop/NewCasino/index.js","Desktop/Casino/LobbyCasino.js","Routes/desktopRoutes.js"],"names":["module","exports","Affiliates","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","className","href","Component","options","navText","nav","dots","responsive","1200","items","1300","1400","1600","1900","withRouter","connect","state","dateFilter","today","selectedSport","mainEvents","noEvents","language","general","isHomeLeagueActive","home","inplayLoading","inplay","isLoading","dispatch","setDateFilter","selectSportMobile","sportId","setTodaySportsWithDateRangeDesktop","getSportEventsDesktop","setHomeLeaguesActive","getPrematchLocations","clearPartialLocations","getPrematchLocationsDesktop","props","sports","isDisable","location","useLocation","isFavActive","useMemo","pathname","split","isLiveBets","isHomeActive","isExtraOddsActive","match","path","useEffect","lSportsConfig","id","OwlCarousel","Object","values","map","item","sport_id","sportName","name","onClick","e","length","handleChangeSport","alt","src","concat","icon_name","InnerLinks","_useState","useState","_useState2","_slicedToArray","showMyBets","setShowMyBets","_useState3","localStorage","getItem","_useState4","oddType","setOddType","isLoggedIn","Util","NativeSelect","onChange","target","setItem","Translate","decimal","fraction","americanOdds","Link","to","favorites","myBets","MyAccount","onClose","enableMyBets","TopLink","_this","call","prevProps","_this$props","this","Filter","staticPrematchSports","searchPath","type","sort","userData","user","data","setLanguage","setLocationsActive","setPrematchActive","getDeviceLocation","leagues","selectedLeague","loading","fetchAll","selectHomeActiveLeague","leagueId","removeHomeActiveLeague","getHomeActiveLeagueEvents","leagues_list","homePageLeagues","league","league_id","leagueName","league_name_en","isSelected","history","push","setActiveLeague","style","height","width","checked","Fragment","BetslipMultiBet","bet","fixture","market","lan","participants","participant_one_full","name_en","participant_two_full","line","Line","Id","marketIds","handicap","BaseLine","matchInfo","canBeCombinedValue","fixtures","currentFixture","find","fixtureId","fixture_id","FixtureId","currentFixtureMarkets","markets","Markets","bets","canBeCombined","canNotBeCombined","pickCanNotBeCombined","betStatus","Status","betStatusMessage","settled","betSuspended","betSettled","betStatusInfo","active","isLive","undefined","fixture_status","Livescore","Scoreboard","statuses","fixtureStatus","removeBet","provider","participantArray","Fixture","Participants","results","livescore","home_score","away_score","currentDate","convertToLocalTimezone","start_date","StartDate","dateString","timeString","printLive","live","betClassName","diff","isPlaced","Grid","container","xs","preventDefault","stopPropagation","switchBetslipType","count","LiveStreamAvailable","selectedEvents","filter","liveStreamData","matchId","setExtraMarkets","selectExtraMarket","openOddsModal","toFixedDecimal","Price","marketNameFormatter","specifier","tip","outcomeFormatter","propTypes","PropTypes","func","object","index","number","array","string","openExtraOddsModal","betslip","onClickCalAction","Calculator","action","currentTarget","onCloseModal","reset","backspace","onSetValue","setState","result","_value$split","toSetBetAmount","res","slice","substr","startValue","possibleWin","KeyPadComponent","defaultOptions","multiStake","singleStake","setMultiStake","setBetStake","stackAmount","openCalculator","onKeyPress","isNaN","GridList","cols","option1","activeClass","GridListTile","closeModal","handleSetStake","BetslipList","show","prev","isShow","placeBetCheck","isBtnDisabled","setTimeout","keypadRef","createRef","handleClickOutside","bind","_assertThisInitialized","setPlaceBetError","document","addEventListener","event","_this$keypadRef$curre","current","contains","_this$state","totalMultiOdds","placeBetError","showCountdown","placeBetDisabled","placeBetDisableFromAdmin","isDisabled","drawBets","parseFloat","showBonus","bonusMinValue","bonusAmount","bonusPersentage","totalPossibleWin","drawCalculator","error","bootomContainer","ref","MiniCalculator","totalOdds","toFixed","Button","variant","LoadingIcon","theme","disabled","placeBet","BetslipSingleBet","BetslipSingle","setSingleStake","removeEventListener","Bet","_len","args","Array","_key","handleToggle","addBet","_this2","diffType","getElementById","classList","remove","add","_this$props2","isCentered","colClass","span1Class","span2Class","span3Class","gridClassName","isActive","suspended","deactivated","Market","memo","_Bets$0$specifier","_Bets","column","useSelector","Bets","sortBet","activeBet","isShowScore","showScore","indexOf","score","stableMarketOnExtraMarket","isFavorite","activeOutcomes","slicedBets","SortBySecondary","orderBy","TwoColumnMarketIds","Math","ceil","fill","splice","OnlyActiveBets","flex","some","groupedBets","groupBy","every","UnderOverPairMarketIds","betArray","isHandicap","handicapMarkets","isHandicapVisible","b","marketSpecifier","dynamicMarkets","_activeOutcomes$","_props$currentlySelec","currentlySelectedMarket","liveMarkets","setLiveMarkets","sortedMarkets","_Util$getExtraMarketN","order","getExtraMarketName","MarketIdMapping","a","A","B","indA","indB","sortMarkets","Statistics","isStatsAvailable","statisticsEventId","statisticsTemplateType","window","STATSCORE","LSP","Generator","create","account","statscore_live_id","lang","timezone","useMappedId","configuration","showHeader","statscore_prematch_id","mainMenu","mainBoxInitializationTab","err","lsportsGlobal","ExtraMarketSelector","createMuiTheme","palette","primary","main","handleClick","extraMarketNames","extraSelectedMarket","label","tabNames","activeElement","blur","isEuropeanHandicap","status","getExtraMarketNamePrematch","obj","check","isArray","t","mar","FiveFeaturedMarkets","drawMarkets","keys","_regeneratorRuntime","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Context","makeInvokeMethod","tryCatch","arg","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","charAt","stop","rval","handle","complete","finish","catch","delegateYield","marketSubscription","liveMatchSub","liveMatchSubAppSync","extraMarkets","liveMatchSubConnectionAttempts","ExtraOddsModal","setLiveStream","sessionStorage","params","liveStreamAvailable","uniqBy","iframe","streamUrlData","setLiveMatchData","startListener","matchEvent","getSingleMatchMarkets","partialEvents","_objectSpread","setExtraMarketData","getSingleMatchPartialEvent","partialEvent","Items","noEvent","_state","subscribeExtraMarket","handleConnectionChange","navigator","onLine","isDisconnected","webPing","setInterval","fetch","mode","clearInterval","liveMatch","getExtraMarkets","marketsUpdated","_event$Livescore","_event$livescore","statsObj","statistics","_event$league","_event$location","setExtraMarketLeagueName","toLowerCase","setExtraMarketLocationName","toggleLiveStream","streamIndex","showLiveStream","selectedUrl","showStreamDropdown","clearStatistics","showLogin","fetchLiveStreamMatches","_asyncToGenerator","_callee","_context","jwtService","getLiveStreamData","setLiveStreamData","t0","console","log","response","handleRepeatedLogin","toggleDropdown","openStatistics","statsData","setStatistics","closeStatistics","setExtraMarket","marketName","hideLogin","_ref2","_callee2","_context2","dynamoClient","query","getLiveMatchMarkets","toString","promise","mktItems","outcomes","sport_event_status","JSON","parse","mrktData","marketFormatter","_x","_x2","_ref3","_callee3","_context3","getSingleLivePartialEvent","location_id","sport","_x3","marketDifference","prevMarkets","oldMarket","updatedBetsWithDiff","betId","oldBet","oldPriceStr","price","WebSocket","process","REACT_APP_WEBSOCKET_CHANNEL","handleExtraMarketUpdates","warn","maxWebsocketRetryCount","unsubscribeEvents","subscribeExtraMarketAppSync","API","graphql","graphqlOperation","onUpdateMatchMarkets","subscribe","_ref4","_updatedMatch","updatedMatch","onUpdateLiveMarkets","newFixture","match_id","_updatedMatch2","updatedMarket","marketValue","currBets","newBet","marketWithDiff2","_toConsumableArray","close","unsubscribe","liveStreamGameId","_this$props3","extraMarketEvent","pp","prevState","_this$props4","isEqual","clearExtraMarkets","_liveMatch$participan","_liveMatch$participan2","_liveMatch$participan3","_liveMatch$participan4","_this$props5","statisticsType","_this$state2","Results","status_type","Value","drawEventHeader","isEmpty","extraMarketEventsList","fiveExtraMarket","areBetsAllSettled","checkSettledBets","streamingList","ListItem","button","selected","classes","listSection","ListItemText","disableTypography","secondary","Typography","color","padding","Loading","customClass","IconButton","aria-label","MatchDateTime","showDate","extraMarketsLoading","eventId","statsType","statsTemplateType","withStyles","root","position","right","overflow","top","backgroundColor","borderRadius","elevation","boxShadow","zIndex","textAlign","ul","fontSize","prematchMarkets","setPrematchMarkets","timer","prematchEvent","getExtraMarketsPrematch","getSinglePartialEvent","_ref","paramsSinglePrematchDEvent","partialMatchFormatter","getSinglePartialMarket","markets_1","paramsMarketDataIndex","has_live_statistics","has_prematch_statistics","partialMarket","getFormattedDate","Date","intervalTime","_this3","_prematchEvent$league","_prematchEvent$league2","_prematchEvent$league3","extraFiveMarkets","checkSettledBetsPrematch","extraMarketButtons","FastBetPopup","setFastBetOption","Dialog","aria-labelledby","open","scroll","DialogTitle","DialogContent","acceptOddChangesText","turnOffAway","acceptOddChanges","PlaceBetPopup","setPlaceBetOption","setTimer","Betslip","liveFixtureId","liveObj","liveFix","actualFixtureId","_defineProperty","updatedgetSingleMatchMarkets","setLiveScore","startListenerAppSync","fixtureIdArray","unsub","handleFirebaseUpdates","batchGet","updatedgetLiveMatchMarkets","updateBetslipEventsMarket","updateBetslipEventsStatus","updateBetslipEventsLivescore","Responses","LiveMarkets","getLiveScore","handleCounter","counter","getLiveMatches","_callee4","_context4","scan","getLiveMatchIds","checkBetsValidity","isEventLive","prematch","updateBetslipEvent","setUpdatedMatchData","_ref5","openExtraOddsModalLiveMatch","currentEvent","setCurrentEvent","showExtraOddsModal","_ref6","_callee5","_context5","_x4","_x5","getSingleMarketOfMatch","_ref7","_callee6","fixtureMarketId","_context6","getSingleMarketOfEvent","_x6","Name","_ref8","closeExtraOddsModal","setActiveTab","activeTabId","clearBets","setLastBetslipId","onFastBetChange","fastBetChecked","openFastBetModal","showFastBetModal","showPlaceBetModal","fastBetOff","closeFastBetModal","openPlaceBetModal","closePlaceBetModal","showLoginForm","clearCountdown","betType","limits","placeBetWithOutLoader","currency","amount","canNotBePlaced","canNotBePlacedMessage","m","credit","insufficientBalance","Sport","limitValidation","betLimitsValidation","typeId","convertToPlaceBetData","getDiff","setPlaceBetCountdown","latestFixtures","betStatusAfterTime","setPlaceBetDisabled","stakeGreaterThen1","replaceSameBets","getLastBetslip","lastBetId","calculateModalOption","ExtraOddsModalLive","liveMatches","getBetLimits","checkSavedBets","setPlaceBetSuccess","_this$props6","placeBetCountdown","betPlacedMessage","betslipLoading","tabsHeader","single","multiple","repeatBet","for","fastBet","CountdownComponent","Login","placeBetSuccess","events","MainBet","_lSportsConfig$betSta","disableClass","MainMarket","selectedLine","random","aliasObj","orderedBets","countOfBets","total","betsCount","winner","oneTwoInclOvertime","underOverInclOvertime","_loop","includes","filteredBets","teamWinRest","firstHalfTeamWinRest","_orderedBets","_orderedBets2","_toArray","firstBet","secondBet","thirdBet","remainingBets","mainBets","firstHalfTotal","_orderedBets3","_orderedBets4","take","col","mainSelectedMarket","matchSelectedLine","setMatchLine","mainMarkets","MARKET_FOR_OUTER_SLIDER_PREMATCH","mainMarketEvent","sortedMarketsLength","mixedMainMarket","Favorite","mainMarket","_mainMarketEvent","isLineAvailable","isLine","mkt","listofLines","indexOfSelectedLine","lastMarketClass","_mainMarketEvent2","_listofLines$map","_listofLines","Number","openMarketsModal","toastr","info","openStatisticsModal","lastLeagueId","drawMatches","groupInfo","LeagueHeader","showStripe","colSpan","Match","StatisticsModal","sportEventInterval","scope","League","getEventMarkets","startIndex","nextIndex","partialAllEvents","getMarketData","showStatisticsModal","closeStatisticsModal","fetchMoreData","hasNextPage","handleTableExpand","expandTable","fetchedAll","clearHomeActiveLeagueEvents","_this4","selectMainMarket","selectedLeagueData","groupedEvents","matches","group","groupLeagueId","groupSportId","groupMatches","MainMarketSelector","Matches","MarketHeader","noEventsContent","colspan","loadingContent","drawContent","InfiniteScroll","dataLength","hasMore","loader","scrollThreshold","scrollableTarget","marketId","setHomeResetPage","Sports","selectSport","fromLivePage","currentSelectedSport","lastUrl","fromExtraMarket","clearSportEvents","child","ReactDOM","createPortal","sportCountObj","dontFetch","setTodaySports","getStatsData","locations","selectedLocation","searchStarted","locationsLoading","todayLocations","selectedLocationList","todayLocationsObj","locationObj","selectedTodayLocation","selectedTodayLeagues","selectedLeagues","resetSelectedLocations","selectLocation","locationId","getSportEvents","getTodayLocations","selectTodayLeague","selectLeague","isAllActive","locationsList","locationName","leagueArray","leagueDataObj","parseInt","fixtures_count","data-toggle","data-target","country","class","live_count","isLeagueSelected","searchToRender","placeholder","searchHere","handleSearch","childToRender","all","useHistory","endOfToday","yOffset","offsetTop","pageYOffset","removeLeague","toExtraMarket","frmXtraMrkt","Events","refreshEvents","retainSameEvents","openUpcomingExtraModal","search","searchValue","setLocationLoading","clearLocations","currentSelectedMarket","toLiveExtraMrkt","_staticPrematchSports","noSearchResults","searchTodayEvents","filteredTodayEvents","isLivePresent","fromHomeLimit","limit","filteredMainEvents","nothingFound","Locations","assign","setTodayResetPage","val","Today","noSport","noSports","banners","matchBanners","_event$Livescore2","setLiveStreamAvailable","_useState5","_useState6","setStreamingURL","_useState7","_useState8","setStreamUrlData","MARKET_FOR_TABLE_VIEW_LIVEMATCH","MARKET_FOR_OUTER_SLIDER","MarketsCount","isInplay","openLiveStreamModal","selectTodayLocation","_locationsObj$Locatio","_locationsObj$Locatio2","locationsObj","searchVal","selectedTournament","liveLocationsObject","reduce","ac","liveCount","SportsLive","showSearch","sportList","Count","countSpan","liveEventsCount","liveMarketCount","timerAddDel","websocket","liveEvents","livescores","liveMatchesCheck","nextExtraMarkets","sportsCount","getDataFromDB","websocketConnectionAttempts","startTimer","getLiveMatchCount","checkLiveMatches","nextToken","getAllLiveMatches","setSportsAndLocations","LastEvaluatedKey","setLiveMatchesObject","getAllLiveFixtureDevents","liveMatchesObj","getLiveMatchesMarkets","clear","disbleSportsSwitch","onUpdateLiveDeventMarkets","setPartialEvents","sortedSports","sportAndLocationData","checkIsPartialEventEmpty","locationAndSportsObj","runningFetch","sportsCountObj","_i","_Object$values","_sports$event$sport_i","_sports$event$sport_i2","_sports$event$sport_i3","_sports$event$sport_i4","leagueData","getSortedLocations","football","objSize","totalCount","segments","j","arr","fixtureIds","promise_1","_fixtureIds","_promise_","element","getLiveCount","t1","elem","sortLogic","sortingOrder","locationSortingOrder","preSortedList","_loop2","l","compareStrings","groupMatchesByStatus","fixedData","matchesByStatus","_marketId","oldMatches","liveMarketOnMain","marketWithDiff","_oldMarket$Bets","temp","liveScore","newLiveMatches","setLiveMatches","finalMatches","streamURL","liveStreamUrlData","setSelectedLocation","currentSelectedLocation","resetSelectedLeague","currentSelectedLeague","closeLiveStreamModal","groupBySport","sportWiseMatch","renderMarketAndMatches","elems","fixturesLoaded","marketsLoaded","showToday","secondLastUrl","sections","querySelectorAll","removeLiveEvents","upcomingEvents","selectedLeagueList","liveMatchesFilteredBySports","_e$sport","filteredLiveMatches","sessionFixture","stringify","_o$participants$","_o$participants$2","searchParam","groupedLiveEvents","noLiveMatch","totalEventCount","lastIndex","getInplayLocations","setInplayResetPage","setCurrentEventCount","setTotalEventCount","resetLiveMatches","payload","setCurrentSelectedSport","Inplay","useStyles","makeStyles","background","heading","typography","pxToRem","fontWeight","fontWeightRegular","sortBy","Accordion","expanded","AccordionSummary","aria-controls","Banner","heartBeatTimout","Nhome","role","onclick","data-id","title","Home","getBanners","segmentNo","totalSegments","getHomeActiveLeagueEventsDesktop","setHomeActive","extraMarketChild","lastMinuteSports","lastMinute","lastMinCountObj","isLastMinAvailable","setHomeLeagues","getTodaySports","selectPreSport","SportsHome","sportsList","ExtraMarket","TopLinks","BannerCarousel","Upcoming","ESports","e_sport","KSports","k_sport","Casino","getLobbyURL","getUser","setCasinoLobby","casinoLobbyURL","Lobby","casino","SingleGame","postHeartBeat","clearTimeout","currentGameData","game_url","GAME_URL","game","hash","api_id","exiturl","allowFullScreen","Categories","showSearchBar","activeCategoryLive","isSearchOpen","setLiveSearchStarted","setLiveCasinoActiveCategory","hideSearchBar","searchLiveCasino","changeCategory","category","getLiveCasinoGames","clearLiveCasinoGames","liveCasinoCategories","categories","icon","autoFocus","GameList","playGame","getLiveGameData","showAll","showPPL","showEZU","showEVO","reload","liveCasinoGames","filteredLiveCasinoGames","loadingLiveCasinoGames","liveCasinoGamesList","imageUrl","flist","isPPL","isEZU","isEVO","evog","ezug","pplg","startsWith","LazyBackgroundImage","image","imgURL","fallbackImage","gameList","showCategory","LoaderLiveCasino","isShowCasino","LiveCasino","body","autoWidth","searchPCasino","setPCasinoActiveCategory","getpCasinoGames","categoryVal","marginLeft","marginRight","Games","games","rows","list","list_1","list_2","singleGame","LazyImage","getpCasinoGameData","groupedByCategory","Vendor","groupedByCategoryAndCompany","gamesGroup","company","gamesList","About","clearSearch","sportsObj","setResultsActive","_event$sport_event_st","_event$sport_event_st2","periods","period_scores","period_score","drawPeriods","getSportPeriods","dateTime","rightSymbol","cards","getSportCards","stripeClassname","getSportIconByName","clearLocationEvents","isLocationLoading","NewLoading","getResultsLocationEvents","setResultsResetPage","setResultsLocationEvents","_locations$","locationLength","divider","getResultsLocations","handleChange","resultTotalSegments","getResultsLocationsCountMobile","isLocationsActive","isResultsActive","setSearchStarted","getLastMinuteSports","sportInterval","SportsList","isSortedMarkets","MatchResult","ExtraMarkets","allData","setClearData","marketSelector","eventsArray","setLastMinuteResetPage","LastMinute","unsubscribeSingleEvents","liveParticipantProps","removeFavorite","event_id","unSub","Favorites","favoritesLiveMatches","subscribeEvents","subscribeEventsAppSync","_market","showLiveExtraOddsModal","_event$market","liveStatus","showNonLiveExtraOddsModal","showStatisticsModalForLive","showStatisticsModalForNonLive","liveStreamUrl","nonLiveMatches","liveStreamFixtureId","loadingFavorites","getFavorites","preFav","favoritesList","_find","liveFavoritesList","liveMatchesLength","nonLiveMatchesLength","LiveExtraOddsModal","liveMatchURL","LiveStreamModal","liveStreamMatch","drawFavorites","virtualSportsActiveCategory","setVirtualSearchStarted","setVirtualSportsCategory","searchVirtualSports","getVirtualSports","clearVirtualSports","virtualSportsCategories","getVirtualSportsData","is_casino_enabled","virtualSports","filteredVirtualSports","loadingVirtualSports","virtualSportsList","noVirtualSearchResult","VirtualSports","LsportsAMQ","timeout","connectInterval","ws","that","onopen","onclose","min","reason","onerror","message","onmessage","messageType","content","Header","Type","new_events","Body","_that$props","mainEventsInplay","mainFilteredEventsInplay","mainEventsPrematch","mainEventsLastMinute","mainFilteredEventsLastMinute","mainEventsToday","mainFilteredEventsToday","mainEventsHome","betslipEvents","inplayEvents","lastMinuteEvents","todayEvents","changed_fixture","new_markets","old_markets","new_livescore","updateInplayEventsMarket","updateInplayEventsLivescore","updateInplayEventsStatus","updatePrematchEventsMarket","updatePrematchEventsLivescore","updatePrematchEventsStatus","updateLastMinuteEventsMarket","updateLastMinuteEventsStatus","updateTodayEventsMarket","updateTodayEventsStatus","updateHomeEventsMarket","updateHomeEventsStatus","old_markets_flattened","flattenDepth","updateExtraMarketsEventsMarket","updateExtraMarketsEventsLivescore","updateFavoritesEventsMarket","updateFavoritesEventsLivescore","updateFavoritesEventsStatus","readyState","CLOSED","children","UserAMQ","filteredEvents","username","msg","betslip_id","setBetPlacedMessage","setBetslipLoading","updateBets","prevprops","PromotionDetails","bannerImages","promotion","image_url","url","Promotion","PromotionBanners","PrivacyPolicy","TermsAndConditions","FirstDepositBonus","FirstDepositBonusResult","ChampionsLeagueRules","ChampionsLeagueRulesResult","TakeItAllResult","ContactDetails","customerServicePage","buttonList","lg","md","img","aboutUs","contactUs","termsAndConditon","payments","howPlacebet","SportList","CustomerServiceDetails","activeCategory","setCasinoActiveCategory","searchCasino","capitalize","toUpperCase","getGGCasinoGames","casinoCategories","buffer","pragmaticPlay","cursor","clearCasinoGames","getSlotGameData","fetchMore","allCasinoGames","page","casinoGamesList","CASINO_PER_PAGE","casinoGames","filteredCasinoGames","loadingCasinoGames","CASINO_TOP_GAMES","allGames","isFirstLoad","setLoading","onLoad","contentWindow","frameBorder","PragmaticPlay","activeCategoryNew","setNewSearchStarted","setNewCasinoActiveCategory","searchNewCasino","getNewCasinoGames","clearNewCasinoGames","newCasinoCategories","getNewGameData","newCasinoGames","filteredNewCasinoGames","loadingNewCasinoGames","newCasinoGamesList","marginTop","NewCasino","lobbyName","is_ezugi_casino_enabled","is_live_casino_enabled","DesktopRoutes","isMobileOnly","Auth","Switch","PublicRoute","exact","component","headerClass","CasinoGame","pcasino","LobbyCasino","PrivateRoute","MyBets","Transactions","TakeItAll","CustomerService","isExtraMarket","ExtraOddsModalPrematch","Ggslot","DefaultRoute"],"mappings":"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","file":"static/js/5.d9f297ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AMATIC.586ef704.svg\";","module.exports = __webpack_public_path__ + \"static/media/GREENTUBE.b0d4ea75.svg\";","import React, { Component } from 'react'\r\nimport  './affiliates.css';\r\n\r\n\r\nexport class Affiliates extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n<main className=\"main\">\r\n  <div className=\"container\">\r\n    <div className=\"row row-static-page\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row-wrapper static-page-wrapper\">\r\n          <h1 className=\"static-page-header\">Affiliates</h1>\r\n          <div className=\"staic-page-text\">\r\n            <p>\r\n              We wouldn’t be as successful as we are today without you by our\r\n              side. If you want to be our affiliate partner and earn by\r\n              promoting brands that players love, Verbet is the place for\r\n              you.\r\n              <br />\r\n            </p>\r\n            <p>\r\n              As one of the fastest growing sports betting brands, we receive\r\n              trust from thousands of customers daily. Our employees will take\r\n              care of the fast and secure settlement of your affiliate\r\n              application and support you in case you have any questions.\r\n            </p>\r\n            <p>\r\n              We actively seek new partnerships and offer an engaging revenue\r\n              share commission structure as standard but also invite alternative\r\n              commercial proposals from affiliates with unique business plans.\r\n              Through our cutting-edge gaming technology, we bring innovative\r\n              ideas to life.\r\n            </p>\r\n            <p>\r\n              You can connect with <strong>Verbet365, </strong>by joining our\r\n              online or land-based affiliate program. We welcome affiliates on\r\n              the following two basic affiliation schemes:\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                Online Affiliates Program: Drive traffic to our website and\r\n                enjoy a generous commission plan on any new customers you bring\r\n                to our community.\r\n              </li>\r\n              <li>\r\n                Land-based Affiliates Program: Become an official{\" \"}\r\n                <strong>Verbet365 </strong>agent and enjoy our profitable\r\n                commission plan.\r\n              </li>\r\n            </ul>\r\n            <p>\r\n              Do you have another idea of how we could cooperate? Do not\r\n              hesitate to let us know about it, we are always open to out of the\r\n              box models of cooperation, and we will ensure a very cooperative\r\n              response to your proposal.\r\n            </p>\r\n            <p>\r\n              At{\" \"}\r\n              <strong>\r\n                <em>Verbet365</em>\r\n              </strong>{\" \"}\r\n              we believe in the idea of a profitable to all cooperation. We will\r\n              ensure that your affiliation with our brand will be equally\r\n              profitable to you as it is to us.\r\n            </p>\r\n            <p>\r\n              You like what you hear? Reach out to us via email on{\" \"}\r\n              <a href=\"mailto:affiliates@verbet365.com\">\r\n                affiliates@verbet365.com\r\n              </a>{\" \"}\r\n              and let’s start rolling. The future is ours, let’s write it’s\r\n              episodes together.\r\n              <br />\r\n              <br />\r\n            </p>\r\n            <p>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>\r\n\r\n\r\n\r\n      </div>\r\n\r\n     \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default Affiliates\r\n  ","import React, { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPrematchLocations, clearPartialLocations } from '../../store/actions/todayActions';\r\nimport { lSportsConfig } from '../../config';\r\nimport { setTodaySportsWithDateRangeDesktop, getSportEventsDesktop, selectSportMobile, setDateFilter ,getPrematchLocationsDesktop} from '../../store/actions/todayActions';\r\nimport { setHomeLeaguesActive } from '../../store/actions/home.actions';\r\nimport { useLocation } from 'react-router-dom';\r\nimport OwlCarousel from 'react-owl-carousel2';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst options = {\r\n    // items: 10,\r\n    navText: ['<div class=\\'nav-btn prev-slide\\'></div>','<div class=\\'nav-btn next-slide\\'></div>'],\r\n    nav: true,\r\n    dots: false,\r\n    responsive:{\r\n        1200:{\r\n            items:10\r\n        },\r\n        1300:{\r\n            items:11\r\n        },\r\n        1400:{\r\n            items:12\r\n        },\r\n        1600:{\r\n            items:12\r\n        },\r\n        1900:{\r\n            items:14\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\nconst Filter = (props) => {\r\n    const { sports, selectedSport, selectSportMobile, isDisable, mainEvents, isHomeLeagueActive, noEvents } = props;\r\n    const location = useLocation();\r\n    const isFavActive = useMemo(() => location.pathname.split('/')[2] === 'favorites', [ location ]);\r\n    const isLiveBets = useMemo(() => location.pathname.split('/')[2] === 'live-betting', [ location ]);\r\n    const isHomeActive = useMemo(() => !location.pathname.split('/')[2], [ location ]);\r\n    const isExtraOddsActive = useMemo(() => props.match.path == \"/d/extra-market/:sportId/:fixtureId\" || \r\n    props.match.path == \"/d/live-bettingextra-market/:sportId/:fixtureId/:liveStreamAvailable\", [ props.match ]);\r\n    \r\n    useEffect(() => {\r\n        if(!selectedSport) {\r\n            selectSportMobile(lSportsConfig.inplay.selectedSport);\r\n        }\r\n    }, [selectSportMobile, selectedSport]);\r\n\r\n    const handleChangeSport = (sportId) => {\r\n        if (!isHomeLeagueActive && sportId === props.selectedSport) return null;\r\n        if (isLiveBets && !props.inplayLoading) return props.selectSportMobile(sportId);\r\n        if ((mainEvents.length !== 0 || noEvents || isHomeLeagueActive) && !isFavActive) {\r\n            props.selectSportMobile(sportId);\r\n            props.clearPartialLocations();\r\n            props.getPrematchLocationsDesktop();\r\n        }\r\n        else if (isFavActive) {\r\n            props.selectSportMobile(sportId);\r\n        }\r\n        props.setHomeLeaguesActive(false);\r\n        // if (isExtraOddsActive){\r\n        //     selectSportMobile(sportId);\r\n        //     if (isExtraActiveLive) \r\n        //     props.history.push('/d/live-betting');\r\n        //     else if(isExtraActivePre) \r\n        //     props.history.push('/d/sports');\r\n        // }  \r\n    };\r\n\r\n    let dateList = [];\r\n    // for (var i = 0; i < 7; i++) {\r\n    //     let date = new Date();\r\n    //     let day = date.setDate(date.getDate() + i);\r\n    //     let dayFormat = format(day, 'yyyy-MM-dd');        \r\n    //     let dayFormatToShow = format(day, 'dd/MM');\r\n\r\n    //     let preDefinedDay = null;\r\n    //     if (i===0) preDefinedDay = Translate.today;\r\n    //     else if (i===1) preDefinedDay = Translate.tomorrow;\r\n    //     else preDefinedDay = dayFormatToShow;\r\n\r\n    //     dateList.push(\r\n    //         <li key={i} className='date-filter__item pre-match-wrapper' onClick={(e) => handleClick(e, dayFormat)}>\r\n    //             <a href className={`${!isHomeLeagueActive && dateFilter === dayFormat && 'active'}`}>{ preDefinedDay }</a>\r\n    //         </li>,\r\n    //     );\r\n    // }\r\n  return (\r\n      <div className=\"d-flex flex-wrap links-block w-75\">\r\n          { !isHomeActive && !isExtraOddsActive && <div id='sport-filter' className=\"game-block w-100\">\r\n              { <ul className=\"d-flex\">\r\n                  <OwlCarousel\r\n                        id='owl-demo'\r\n                        options={ options }\r\n                    >\r\n                      { Object.values(sports).map(item => {\r\n                      let sportId = item.sport_id;\r\n                      let sportName = item.name;\r\n                      const className = !isHomeLeagueActive && sportId == selectedSport ? 'active' : '';\r\n                      return (\r\n                        \r\n                          <li onClick={ !isDisable ? (e) => handleChangeSport(sportId) : null } key={sportId}>\r\n                              <a href className={ className }>\r\n                                  {/* <div className='sports__counter'> 20 </div> */}\r\n                                  {/* <img alt=\"stream-icon\" className=\"nav-ico-dark\" src={`/images/sports/${item.icon_name}-desktop.svg`}></img> */}\r\n                                  <img alt=\"stream\" className=\"nav-ico-light\" src={`/images/sports/${item.icon_name}-desktop-white.svg`}></img>\r\n                                  <span>{sportName}</span>\r\n                                  <span id={`sport-filter-${ sportId }`} />\r\n                              </a>\r\n                          </li>\r\n                          \r\n                      );\r\n                  })}\r\n                  </OwlCarousel>\r\n              </ul>\r\n            }\r\n          </div>\r\n        }\r\n         <div className=\"sort-links\">\r\n              <ul className=\"d-flex\">\r\n                  { !isLiveBets && dateList}\r\n              </ul>\r\n          </div>\r\n\r\n      </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dateFilter: state.today.dateFilter,\r\n        selectedSport: state.today.selectedSport,\r\n        mainEvents: state.today.mainEvents,\r\n        noEvents: state.today.noEvents,\r\n        language: state.general.language,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        inplayLoading: state.inplay.isLoading,\t\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDateFilter: (value) => dispatch(setDateFilter(value)),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId, true)),\r\n        setTodaySportsWithDateRangeDesktop: () => dispatch(setTodaySportsWithDateRangeDesktop()),\r\n        getSportEventsDesktop: (sportId) => dispatch(getSportEventsDesktop(sportId)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        getPrematchLocations: () => dispatch(getPrematchLocations()),\r\n        clearPartialLocations: () => dispatch(clearPartialLocations()),\r\n        getPrematchLocationsDesktop: () => dispatch(getPrematchLocationsDesktop()),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Filter));","import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MyAccount from '../MyAccount';\r\nimport Util from '../../helper/Util';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Translate } from '../../localization';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst InnerLinks = (props) => {\r\n    const [showMyBets, setShowMyBets ] = useState(false);\r\n    const [oddType, setOddType] = useState(localStorage.getItem('oddType'));\r\n    const isLoggedIn = Util.isLoggedIn();\r\n    const location = useLocation();\r\n\r\n\r\n    const handelOddsTypeChange = (e) => {\r\n        setOddType(e.target.value);\r\n        localStorage.setItem('oddType', e.target.value);\r\n        props.setOddType(e.target.value);\r\n\r\n    };\r\n\r\n    const isFavActive = useMemo(() => location.pathname.split('/')[2] === 'favorites', [ location ]);\r\n\r\n    const openMyBets = () => {\r\n        if (isLoggedIn) setShowMyBets(true);\r\n    };\r\n    return (\r\n        <div className=\"inner-links d-flex align-items-center \">\r\n            <ul className=\"d-flex\">\r\n                <li>\r\n                    <NativeSelect\r\n                        className=\"ml-2\"\r\n                        value={oddType} \r\n                        onChange={handelOddsTypeChange}\r\n                    >\r\n                        <option value=\"decimal\">\r\n                            {Translate.decimal}\r\n                        </option>\r\n                        <option  value=\"fraction\">\r\n                            {Translate.fraction}\r\n                        </option>\r\n                        <option  value=\"american\">\r\n                            {Translate.americanOdds}\r\n                        </option>\r\n                        \r\n                    </NativeSelect>\r\n                    {/* <div className=\"odd_type_menu\">\r\n                        <div className=\"oddTypesDropDown\">\r\n                            <div className=\"oddTypesDropdownItem\">Decimal</div>\r\n                        </div>\r\n                        <div className=\"odd_type_label\" >\r\n                            Odd Type\r\n                        </div>\r\n                    </div> */}\r\n                </li>\r\n                <li>\r\n                    <Link to={ isLoggedIn ? '/d/favorites' : null } className={`${isFavActive && 'active'} ${!isLoggedIn && 'disabled'}` }>\r\n                        <img src=\"/images/star-24px.svg\" alt=\"star-24px\" />\r\n                        { Translate.favorites }\r\n                    </Link>\r\n                </li>\r\n                {<li className=\"my-bets\" onClick={ () => openMyBets()}><a href className={`${showMyBets && 'active'} ${!isLoggedIn && 'disabled'}` }>\r\n                    <img  className=\"dark-theme-icon\" src=\"/images/receipt-24px-white.svg\" />\r\n                    <img className=\"light-theme-icon\" src=\"/images/receipt-24px-white.svg\" /> \r\n                    { Translate.myBets } </a></li>}\r\n            </ul>\r\n            { showMyBets && <MyAccount onClose={ () => setShowMyBets(false)} enableMyBets/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nInnerLinks.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLanguage: PropTypes.func,\r\n    language: PropTypes.string,\r\n    headerClassname: PropTypes.string,\r\n};\r\n\r\nexport default InnerLinks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// import Util from '../../../helper/Util';\r\n// import { Translate } from '../../../localization';\r\nimport { getDeviceLocation, setLanguage } from '../../store/actions/general.actions';\r\nimport { setLocationsActive, setPrematchActive } from '../../store/actions/prematchActions';\r\nimport Filter from './Filter';\r\n// import Banner from './Banner';\r\nimport InnerLinks from './InnerLinks';\r\nimport { staticPrematchSports } from '../../config/sports';\r\nimport { setOddType } from '../../store/actions/user.actions';\r\n\r\n//const options = ['en', 'fr', 'tr', 'de', 'ru'];\r\n\r\nclass TopLink extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n        const { selectedSport, language, setOddType, sports } = this.props;\r\n        return (\r\n            <div className=\"top-links d-flex justify-content-between\">\r\n                <Filter\r\n                    sports={sports || staticPrematchSports()}\r\n                    // sportsObj={sportCountObj}\r\n                    selectedSport={selectedSport}\r\n                    searchPath=\"\"\r\n                    type=\"tomorrow\"\r\n                    language={language}\r\n                    // isDisable={mainEvents.length === 0}\r\n                    sort\r\n                />\r\n                {/* <Banner /> */}\r\n                <InnerLinks  setOddType={setOddType}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTopLink.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLanguage: PropTypes.func,\r\n    language: PropTypes.string,\r\n    headerClassname: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n        language: state.general.language,\r\n        selectedSport: state.today.selectedSport,\r\n        mainEvents: state.today.mainEvents,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLanguage: (value) => dispatch(setLanguage(value)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setPrematchActive: (value) => dispatch(setPrematchActive(value)),\r\n        getDeviceLocation: () => dispatch(getDeviceLocation()),\r\n        setOddType: (type) => dispatch(setOddType(type))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopLink);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { homePageLeagues } from '../../config/sports';\r\nimport { connect } from 'react-redux';\r\nimport { selectHomeActiveLeague, removeHomeActiveLeague, getHomeActiveLeagueEvents } from '../../store/actions/home.actions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst TopLeague = (props) => {\r\n    const { selectedLeague } = props;\r\n    const setActiveLeague = (leagueId) => {\r\n      props.history.push('/d');\r\n    //   if (selectedLeague === leagueId) {\r\n    //       props.removeHomeActiveLeague();\r\n    //   } else {\r\n    //       props.selectHomeActiveLeague(leagueId);\r\n    //       props.getHomeActiveLeagueEvents(leagueId);\r\n    //     //   props.history.push({pathname: '/d', state: {leagueId} });\r\n    //   }\r\n      props.selectHomeActiveLeague(leagueId);\r\n  };\r\n    const leagues_list = homePageLeagues.map((league) => {\r\n      let leagueId = league.league_id;\r\n      let leagueName = league.league_name_en;\r\n      let isSelected = selectedLeague === leagueId ? 'checked' : '';\r\n       const { mainEvents, isHomeLeagueActive, noEvents } = props;\r\n      return (\r\n          <li className={'leagues__item' + isSelected} key={leagueId}>\r\n              <div className='d-flex align-items-center nav-parent' onClick={ ((mainEvents.length !== 0) || noEvents || !isHomeLeagueActive) && (selectedLeague !== leagueId) ? () => setActiveLeague(leagueId) : null}>\r\n                  <a className=\"accordion-heading\">\r\n                      <span className=\"nav-header-primary\">\r\n                          {/* <div className=\"flag\" country=\"flag_uefachampionsleague\"></div> */}\r\n                          <img src={`/images/leagues/${leagueName}.png`} className=\"leagues__img mr-2\" alt={leagueName} style={{ height: '24px', width: '24px'}}/>\r\n                          { leagueName }\r\n                      </span>\r\n                  </a>\r\n                  <div className={`form-group custum-check ${isSelected}`}>\r\n                      <input type=\"checkbox\" id=\"html\" checked={isSelected}/>\r\n                      <label></label>\r\n                  </div>\r\n              </div>\r\n          </li>\r\n      );\r\n  });\r\n  return (\r\n      <React.Fragment>\r\n          <h3 className=\"side-title\">Top Leagues</h3>\r\n          <ul className=\"nav nav-list \">\r\n              { leagues_list }\r\n          </ul>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nTopLeague.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLanguage: PropTypes.func,\r\n    language: PropTypes.string,\r\n    headerClassname: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        leagues: state.home.leagues,\r\n        selectedLeague: state.home.selectedLeague,\r\n        loading: state.general.loading,\r\n        mainEvents: state.home.mainEvents,\r\n        fetchAll: state.home.fetchAll,\r\n        noEvents: state.home.noEvents,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectHomeActiveLeague: (leagueId) => dispatch(selectHomeActiveLeague (leagueId)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        getHomeActiveLeagueEvents: (leagueId) => dispatch(getHomeActiveLeagueEvents(leagueId)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopLeague));\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { removeBet } from '../../store/actions/betslip.actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport filter from 'lodash.filter';\r\nimport { marketIds } from '../../config/markets';\r\n\r\n\r\nfunction BetslipMultiBet(props) {\r\n    const handleClose = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let { bet, fixture, market, switchBetslipType, count } = props;\r\n        props.removeBet(fixture, market, bet, bet.provider);\r\n        if (count < 3) {\r\n            switchBetslipType('1');\r\n        }\r\n    };\r\n\r\n    const canBeCombined = () => {\r\n        let { fixture, fixtures } = props;\r\n        let currentFixture = find(fixtures, { fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId  });\r\n        let currentFixtureMarkets = currentFixture.markets ? currentFixture.markets : currentFixture.Markets;\r\n        return currentFixture && !(currentFixtureMarkets.length > 1 || currentFixtureMarkets[0].bets.length > 1);\r\n    };\r\n\r\n    const openOddsModal = (fixture,isLive) => {\r\n        let LiveStreamAvailable = false;\r\n        if (isLive){\r\n            let selectedEvents = filter(props.liveStreamData, (e) =>  e.matchId === fixture.fixture_id );\r\n         LiveStreamAvailable = selectedEvents.length && selectedEvents[0].live === '1' ? true :false;\r\n        }\r\n    \r\n        \r\n        props.setExtraMarkets(fixture.markets);\r\n        props.selectExtraMarket('All');\r\n        isLive ? props.history.push(`/d/live-bettingextra-market/${fixture.sport_id}/${fixture.fixture_id}/${LiveStreamAvailable}`) :\r\n        props.history.push(`/d/extra-market/${fixture.sport_id}/${fixture.fixture_id}`);\r\n\r\n\r\n    };\r\n\r\n    let { bet, fixture, market, leagueName, language } = props;\r\n    let oddType = localStorage.getItem('oddType')  ? localStorage.getItem('oddType') : '' ;\r\n\r\n    const lan = `name_${ language }`;\r\n    const participants = [ fixture?.participant_one_full[lan] || fixture?.participant_one_full.name_en, fixture?.participant_two_full[lan] || fixture?.participant_two_full.name_en ];\r\n    let line = bet.Line ? '(' + bet.Line + ')' : null;\r\n    if (market.Id === marketIds.handicap) line = `(${bet.BaseLine})`;\r\n    let canBeCombinedValue = canBeCombined();\r\n\r\n    let canNotBeCombined = !canBeCombinedValue ? <div className=\"betslip__error\">{Translate.pickCanNotBeCombined}<span className=\"material-icons icon mr-2 align-middle text-red\"></span>\r\n    </div> : null;\r\n\r\n    let betStatus = bet.Status;\r\n    let betStatusMessage = betStatus !== lSportsConfig.betStatus.settled ? `${Translate.betSuspended} (Bet can not be placed)` : `${Translate.betSettled} (Bet can not be placed)`;\r\n\r\n    let betStatusInfo = canBeCombinedValue && betStatus !== lSportsConfig.betStatus.active ? <div className=\"betslip__error\">{betStatusMessage}</div> : null;\r\n\r\n    let isLive = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status ) === lSportsConfig.statuses.inplay;\r\n    let fixtureStatus = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status);\r\n    let matchInfo;\r\n    if (isLive && fixtureStatus !== lSportsConfig.statuses.inplay) props.removeBet(fixture, market, bet, bet.provider);\r\n    let participantArray = fixture.fixture_status !== undefined ? [fixture.participant_one_full, fixture.participant_two_full] :  fixture.Fixture.Participants;\r\n    if (isLive) {\r\n        let results;\r\n        if (fixture.fixture_status !== undefined && !fixture.Livescore) results = fixture.livescore ? fixture.livescore : null;\r\n        else results = fixture.Livescore ? fixture.Livescore : null;\r\n        if (results) {\r\n            matchInfo = (\r\n                <span>\r\n                    {`${results && results.home_score } : ${results && results.away_score }`}\r\n                </span>\r\n            );\r\n        }\r\n    } else {\r\n        let currentDate = Util.convertToLocalTimezone(fixture.start_date ? fixture.start_date : fixture.Fixture.StartDate);\r\n        let dateString = currentDate.dateString;\r\n        let timeString = currentDate.timeString;\r\n        \r\n        matchInfo = (        \r\n            <span className=\"betslip__table-text-sm text-black\"><span>{dateString}</span><span> {timeString}</span></span>        \r\n        );\r\n    }\r\n    let printLive = isLive ? <span className=\"live-icon px-2 align-middle\">{Translate.live}</span> : matchInfo;\r\n    let betClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) betClassName = 'decreased';\r\n            if (bet.diff < 0)  betClassName = 'increased';\r\n        }\r\n    let drawBet = bet.isPlaced ? (\r\n        <div className=\"mx-auto sectionhead pb-2\">\r\n            <Grid container className=\"mx-auto betslip__placed\">\r\n                <Grid item xs={12} className=\"bg-light p-4 mt-2 text-center \">\r\n                    <span className=\"color-green\">Bet Placed</span>\r\n                    <span className=\"material-icons icon ml-2 mb-2 betslip__placed-icon align-middle color-green\">check</span>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    ) : (\r\n        <React.Fragment>\r\n            <div className=\"d-flex align-items-center\">\r\n                <a href className=\"del-slip\"><i className=\"material-icons betslip__table-close pr-2\" onClick={handleClose}>close</i></a>\r\n                <div className=\"w-100 pl-2 border-left\">\r\n                    <p className=\"d-flex justify-content-between align-items-center\">\r\n                        <span className=\"l-name\">{leagueName}</span>\r\n                        <span className=\"l-name\"> {printLive} </span>\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-between align-items-center\" onClick={() => openOddsModal(fixture,isLive)}>\r\n                        <span className=\"team-name\">\r\n                            {participantArray[0].name_en}\r\n                            <br />\r\n                            {participantArray[1].name_en}\r\n                        </span>\r\n                        <span>\r\n                            {isLive ? matchInfo : ''}\r\n                        </span>\r\n                        <span className={`betslip__odd ${isLive ? 'live__background' : 'prematch__background'} ${(bet.Status !== lSportsConfig.betStatus.active) ? 'betslip__lock': betClassName}`}>\r\n                            { (bet.Status !== lSportsConfig.betStatus.active) ? <i className=\"material-icons fs-14 lock-icon\"> lock </i> : Util.toFixedDecimal(bet.Price, oddType) }\r\n                        </span>\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-between align-items-center\">\r\n                        <span className=\"market-name\"> {Util.marketNameFormatter(market[lan] || market.name_en, bet?.specifier || {}, participants)}։</span>\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-between align-items-center\">\r\n                        <span className=\"pick-result\">\r\n                            {Translate.tip} { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                            {line}\r\n                        </span>\r\n                    </p>\r\n                    {canNotBeCombined}\r\n\r\n                    {betStatusInfo}\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return drawBet;\r\n}\r\n\r\nBetslipMultiBet.propTypes = {\r\n    switchBetslipType: PropTypes.func,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    index: PropTypes.number,\r\n    bet: PropTypes.object,\r\n    count: PropTypes.number,\r\n    fixtures: PropTypes.array,\r\n    removeBet: PropTypes.func,\r\n    leagueName: PropTypes.string,\r\n    language: PropTypes.string,\r\n    openExtraOddsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.betslip.count,\r\n        fixtures: state.betslip.fixtures,\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n        oddType: state.user.oddType\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BetslipMultiBet));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// import Util from '../../helper/Util';\r\n// import { Translate } from '../../localization';\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\nfunction KeyPadComponent(props) {\r\n    let { onClickCalAction } = props;\r\n    return (\r\n        <div className=\"calc-custom\">\r\n            <ul>\r\n                <li id=\"1\" name=\"1\" onClick={onClickCalAction}><a href>1</a></li>\r\n                <li id=\"2\" name=\"2\" onClick={onClickCalAction}><a href>2</a></li>\r\n                <li id=\"3\" name=\"3\" onClick={onClickCalAction}><a href>3</a></li>\r\n                <li id=\"4\" name=\"4\" onClick={onClickCalAction}><a href>4</a></li>\r\n                <li id=\"5\" name=\"5\" onClick={onClickCalAction}><a href>5</a></li>\r\n                <li id=\"6\" name=\"6\" onClick={onClickCalAction}><a href>6</a></li>\r\n                <li id=\"7\" name=\"7\" onClick={onClickCalAction}><a href>7</a></li>\r\n                <li id=\"8\" name=\"8\" onClick={onClickCalAction}><a href>8</a></li>\r\n                <li id=\"9\" name=\"9\" onClick={onClickCalAction}><a href>9</a></li>\r\n                <li id=\".\" name=\".\" onClick={onClickCalAction}><a href>.</a></li>\r\n                <li id=\"0\" name=\"0\" onClick={onClickCalAction}><a href>0</a></li>\r\n                <li id=\"*\" name=\"*\" onClick={onClickCalAction}><a href>\r\n                    <img src=\"/images/cross-white.png\" alt=\"cross-white\" /> \r\n                    <img className=\"hover\" src=\"/images/cross.png\" alt=\"cross\" /></a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nKeyPadComponent.propTypes = {\r\n    result: PropTypes.string,\r\n    onClickCalAction: PropTypes.func,\r\n    possibleWin: PropTypes.string,\r\n    language: PropTypes.string,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n        userData: state.user.data,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(KeyPadComponent);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyPadComponent from './KeyPadComponent';\r\nimport Util from '../../helper/Util';\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            result: props.startValue > 0 ? props.startValue : '',\r\n        };\r\n    }\r\n\r\n    onClickCalAction = (e) => {\r\n        e.preventDefault();\r\n        let action = e.currentTarget.id;\r\n\r\n        if (action === '=') {\r\n            this.props.onCloseModal();\r\n        } else if (action === 'C') {\r\n            this.reset();\r\n        } else if (action === 'CE' || action === '*') {\r\n            this.backspace();\r\n        } else if (action === '10' || action === '20' || action === '50' || action === '100' || action === '200') {\r\n            this.props.onSetValue(action);\r\n            this.setState({\r\n                result: action,\r\n            });\r\n            this.props.onCloseModal();\r\n        } else {\r\n            let value = this.state.result + action;\r\n            value = Util.toSetBetAmount(value);\r\n\r\n            if (action !== '.' && ((value.match(/\\./g) || []).length > 1 || value.split('.')?.[0].length > 6 || value.length > 9)) return null;\r\n\r\n            this.props.onSetValue(this.state.result + action);\r\n            this.setState(\r\n                {\r\n                    result: this.state.result + action,\r\n                },\r\n                () => {\r\n                    if (action === '.') {\r\n                        let res = this.state.result;\r\n\r\n                        if (res.length === 1) {\r\n                            res = '0.';\r\n                            this.setState({ result: res });\r\n                            this.props.onSetValue(res);\r\n                        } else {\r\n                            if (res.slice(-2) === '..' || res.split('.').length - 1 > 1) {\r\n                                this.setState({ result: res.slice(0, -1) });\r\n                                this.props.onSetValue(res.slice(0, -1));\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let res = this.state.result;\r\n                        if (res.substr(res.length - 4)[0] === '.') {\r\n                            this.setState({ result: res.slice(0, -1) });\r\n                            this.props.onSetValue(res.slice(0, -1));\r\n                        }\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    reset = () => {\r\n        this.props.onSetValue(0);\r\n        this.setState({\r\n            result: '',\r\n        });\r\n    };\r\n\r\n    backspace = () => {\r\n        let result = this.state.result.slice(0, -1);\r\n        if (result.slice(-1) === '.') {\r\n            result = result.slice(0, -1);\r\n        }\r\n\r\n        this.props.onSetValue(result === '' ? 0 : result);\r\n        this.setState({\r\n            result: result,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { possibleWin } = this.props;\r\n        let { result } = this.state;\r\n\r\n        return (\r\n            <KeyPadComponent onClickCalAction={this.onClickCalAction} result={result} possibleWin={possibleWin} />\r\n        );\r\n    }\r\n}\r\n\r\nCalculator.propTypes = {\r\n    startValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    possibleWin: PropTypes.string,\r\n    onSetValue: PropTypes.func,\r\n    onCloseModal: PropTypes.func,\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { setMultiStake, setBetStake } from '../../store/actions/betslip.actions';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\nconst defaultOptions = [1, 5, 10, 50, 100, 500];\r\n\r\nfunction MiniCalculator(props) {\r\n    const handleSetStake = (value) => {\r\n        let { type } = props;\r\n        if (type === 'multiple') {\r\n            props.setMultiStake(value);\r\n        } else if (type === 'single') {\r\n            props.setBetStake(value);\r\n        }\r\n    };\r\n\r\n    let { openCalculator, multiStake, singleStake, type } = props;\r\n    let stackAmount;\r\n\r\n    const onInputChange =(e)=>{\r\n        e.preventDefault();\r\n        let { type } = props;\r\n        let value = e.target.value;\r\n        value = Util.toSetBetAmount(value);\r\n        if ((value.match(/\\./g) || []).length > 1 || value.split('.')?.[0].length > 6 || value.length > 9) return null;\r\n        if (type === 'multiple') {\r\n            props.setMultiStake(value);\r\n        } else if (type === 'single') {\r\n            props.setBetStake(value);\r\n        }\r\n    }\r\n\r\n    if (type === 'multiple') {\r\n        stackAmount = Util.toSetBetAmount(multiStake);\r\n    } else if (type === 'single') {\r\n        stackAmount = Util.toSetBetAmount(singleStake);\r\n    }\r\n\r\n    // let options = map(defaultOptions, (option, i) => {\r\n    //     let id = i + 1;\r\n    //     let activeClass = +stackAmount === option ? 'active' : '';\r\n    //     let option1 = +stackAmount === option ? 0 : option;\r\n\r\n    //     return (\r\n    //         <li\r\n    //             key={i}\r\n    //             className={`${activeClass}`}\r\n    //             onClick={(e) => {\r\n    //                 e.preventDefault();\r\n    //                 props.closeModal();\r\n    //                 handleSetStake(option1);\r\n    //             }}\r\n    //         >\r\n    //             <a href id={id}>{option}</a>\r\n    //         </li>\r\n    //     );\r\n    // });\r\n\r\n    return (\r\n        <React.Fragment >\r\n            <div className=\"calc_wrapper\">\r\n                <div className=\"calc_inp\" onClick={openCalculator} >\r\n                    <input type='text' value={ stackAmount} onKeyPress={(e)=>isNaN(e.key) && e.key !== '.' ? e.preventDefault() : e.key} onChange={onInputChange}/>\r\n                </div>\r\n                <GridList cols={6}>\r\n                    {defaultOptions.map((item,id) => {\r\n                        let option1 = +stackAmount === item ? 0 : item;\r\n                        let activeClass = +stackAmount === item ? 'active' : '';\r\n                    return (\r\n                        <GridListTile key={id} className={ `calc_grid ${activeClass}`} \r\n                        onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.closeModal();\r\n                        handleSetStake(option1);\r\n                    }}>\r\n                            <span>{item}</span>\r\n                        </GridListTile>\r\n                    );\r\n                })}\r\n                </GridList>\r\n                {/* <ul>\r\n                    {options}\r\n                    <li onClick={openCalculator}>\r\n                        <input type='text' value={ stackAmount} onKeyPress={(e)=>isNaN(e.key) && e.key !== '.' ? e.preventDefault() : e.key} onChange={onInputChange}/>\r\n                    </li>\r\n                </ul> */}\r\n                {/* <Grid item xs={4} className=\"ml-0 mx-auto d-flex pl-0 pr-0 flex align-items-center justify-content-end betslip__panel-amount\">\r\n                    <div className=\"mr-1\">{currency}</div>\r\n                    <div className=\"btn-cal_white px-1 flex-grow-1\">\r\n                        <div className=\"input-item\" onClick={openCalculator}>\r\n                            {stackAmount}\r\n                        </div>\r\n                    </div>\r\n                </Grid> */}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nMiniCalculator.propTypes = {\r\n    openCalculator: PropTypes.func,\r\n    type: PropTypes.string,\r\n    multiStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    singleStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setMultiStake: PropTypes.func,\r\n    setBetStake: PropTypes.func,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        multiStake: state.betslip.multiStake,\r\n        singleStake: state.betslip.singleStake,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setMultiStake: (value) => dispatch(setMultiStake(value)),\r\n        setBetStake: (value) => dispatch(setBetStake(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniCalculator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button'\r\nimport BetslipMultiBet from './BetslipMultiBet';\r\nimport Calculator from './Calculator';\r\nimport MiniCalculator from './MiniCalculator';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { setMultiStake, setPlaceBetError } from '../../store/actions/betslip.actions';\r\n\r\nclass BetslipList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.keypadRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.state = {\r\n            isShow: false,\r\n            isBtnDisabled: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setPlaceBetError(null);\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setMultiStake(0);\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    \r\n    handleClickOutside(event) {\r\n        if (this.keypadRef && !this.keypadRef.current?.contains(event.target)) {\r\n            this.setState({isShow:false});\r\n        }\r\n    }\r\n\r\n    openCalculator = (show) => {\r\n        this.setState(prev => ({ isShow: !prev.isShow }));\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ isShow: false });\r\n    };\r\n\r\n    setMultiStake = (value) => {\r\n        this.props.setMultiStake(value);\r\n    };\r\n\r\n    placeBetCheck = () => {\r\n        if (!this.state.isBtnDisabled) {\r\n            this.setState({ isBtnDisabled: true });\r\n            this.props.placeBetCheck('multiple');\r\n\r\n            setTimeout(() => {\r\n                this.setState({ isBtnDisabled: false });\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShow, isBtnDisabled } = this.state;\r\n        let { fixtures, totalMultiOdds, multiStake, placeBetError, switchBetslipType, openExtraOddsModal, showCountdown, placeBetDisabled, placeBetDisableFromAdmin, setExtraMarkets, selectExtraMarket } = this.props;\r\n        let isDisabled = isBtnDisabled || placeBetDisabled;\r\n        let index = 0; // numbering in the list of bets\r\n\r\n        let drawBets = map(fixtures, (fixture) => {\r\n            return map(fixture.markets, (market) => {\r\n                return map(market.bets, (bet) => {\r\n                    index++;\r\n                    let  leagueName = fixture.leagueName ? fixture.leagueName : fixture.fixture.league.name_en;\r\n                    return (\r\n                        <li>\r\n                            <BetslipMultiBet\r\n                                setExtraMarkets={setExtraMarkets}\r\n                                selectExtraMarket={selectExtraMarket}\r\n                                switchBetslipType={switchBetslipType}\r\n                                fixture={fixture.fixture}\r\n                                market={market.market}\r\n                                index={index}\r\n                                bet={bet}\r\n                                leagueName={leagueName}\r\n                                openExtraOddsModal={openExtraOddsModal}\r\n                                key={bet.Id}\r\n                            />\r\n                        </li>\r\n                    );\r\n                });\r\n            });\r\n        });\r\n\r\n        let possibleWin = Util.toFixedDecimal(parseFloat(multiStake || 0) * totalMultiOdds + 0.00001);\r\n        let showBonus = totalMultiOdds >= lSportsConfig.betslip.bonusMinValue ? true : false;\r\n        let bonusAmount = showBonus ? Util.toFixedDecimal(possibleWin * (lSportsConfig.betslip.bonusPersentage / 100)) : 0;\r\n        let totalPossibleWin = Util.toFixedDecimal(parseFloat(possibleWin) + parseFloat(bonusAmount));\r\n\r\n        let drawCalculator = isShow ? (\r\n            <Calculator startValue={multiStake} possibleWin={possibleWin} onSetValue={this.setMultiStake} onCloseModal={this.closeModal} />\r\n        ) : null;\r\n\r\n        let error = placeBetError ? (\r\n            <Grid container className=\"mx-auto fs-15\">\r\n                <Grid item xs={12} className=\"p-1 text-center error-bg\">\r\n                    {/* <img src=\"./images/error-icon.png\" className=\"align-middle error-icon\"></img> */}\r\n                    <span className=\"material-icons icon mr-2 align-middle text-red\">error</span>\r\n                    <span className=\"error\">{placeBetError}</span>\r\n                </Grid>\r\n            </Grid>\r\n        ) : null;\r\n\r\n        let bootomContainer =\r\n            fixtures.length > 0 ? (\r\n                <div className=\"foot-bet mt-auto\">\r\n                    {error}\r\n                    <div className=\"bet-amount\" ref={this.keypadRef}>\r\n                        {drawCalculator}\r\n                        <MiniCalculator openCalculator={this.openCalculator} closeModal={this.closeModal} type=\"multiple\" />\r\n                    </div>\r\n                    <Grid container className=\"mx-auto betslip__panel pt-1 text-color\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.totalOdds}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {parseFloat(totalMultiOdds).toFixed(2)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container className=\"mx-auto betslip__panel text-color\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.possibleWin}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {possibleWin}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {showBonus && (\r\n                        <Grid container className=\"mx-auto betslip__panel highlighted py-1 text-color\">\r\n                            <Grid className=\"px-2\" item xs={7}>\r\n                                {`+${lSportsConfig.betslip.bonusPersentage}% Bonus`}\r\n                            </Grid>\r\n                            <Grid item xs={5} className=\"text-right px-2 bonus-win-amount\">\r\n                                {totalPossibleWin}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    <Grid container className=\"mx-auto btn-cont\">\r\n                        {showCountdown ? (\r\n                            <Grid item xs={12} className=\"p-0 text-color\">\r\n                                <Button variant=\"contained\" className=\"place-btn\" type=\"button\">\r\n                                    <LoadingIcon theme=\"my-1 centered\" />\r\n                                </Button>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid item xs={12} className=\"p-0\">\r\n\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    className={`place-btn ${isDisabled ? 'place-btn_disabled' : ''}`}\r\n                                    onClick={this.placeBetCheck}\r\n                                    disabled={placeBetDisableFromAdmin || isDisabled}\r\n                                >\r\n                                    {Translate.placeBet}\r\n                                </Button>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            ) : null;\r\n\r\n        return (\r\n            fixtures &&\r\n            fixtures.length > 0 && (\r\n                <div className=\"betslip-inner-main\">\r\n                    <div className=\"bet-slip mb-120 mt-1\">\r\n                        <ul>\r\n                            {drawBets}\r\n                        </ul>\r\n                    </div>\r\n                    {bootomContainer}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nBetslipList.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    placeBetError: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    multiStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    totalMultiOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setPlaceBetError: PropTypes.func,\r\n    setMultiStake: PropTypes.func,\r\n    placeBetCheck: PropTypes.func,\r\n    switchBetslipType: PropTypes.func,\r\n    openExtraOddsModal: PropTypes.func,\r\n    language: PropTypes.string,\r\n    showCountdown: PropTypes.bool,\r\n    placeBetDisabled: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        placeBetError: state.betslip.placeBetError,\r\n        placeBetDisabled: state.betslip.placeBetDisabled,\r\n        loading: state.general.loading,\r\n        multiStake: state.betslip.multiStake,\r\n        totalMultiOdds: state.betslip.totalMultiOdds,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        setMultiStake: (value) => dispatch(setMultiStake(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BetslipList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { removeBet } from '../../store/actions/betslip.actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport filter from 'lodash.filter';\r\nimport { marketIds } from '../../config/markets';\r\n\r\n\r\nfunction BetslipSingleBet(props) {\r\n    const handleClose = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let { bet, fixture, market } = props;\r\n        props.removeBet(fixture, market, bet, bet.provider);\r\n    };\r\n\r\n    const openOddsModal = (fixture,isLive) => {\r\n        let LiveStreamAvailable = false;\r\n        if (isLive){\r\n            let selectedEvents = filter(props.liveStreamData, (e) =>  e.matchId === fixture.fixture_id );\r\n         LiveStreamAvailable = selectedEvents.length && selectedEvents[0].live === '1' ? true :false;\r\n        }\r\n        props.setExtraMarkets(fixture.markets);\r\n        props.selectExtraMarket('All');\r\n        isLive ? props.history.push(`/d/live-bettingextra-market/${fixture.sport_id}/${fixture.fixture_id}/${LiveStreamAvailable}`) :\r\n        props.history.push(`/d/extra-market/${fixture.sport_id}/${fixture.fixture_id}`);\r\n\r\n\r\n    };\r\n\r\n    let { bet, fixture, market, leagueName, language } = props;\r\n    let oddType = localStorage.getItem('oddType')  ? localStorage.getItem('oddType') : '' ;\r\n\r\n    const lan = `name_${ language }`;\r\n        \r\n    const participants = [ fixture?.participant_one_full[lan] || fixture?.participant_one_full.name_en, fixture?.participant_two_full[lan] || fixture?.participant_two_full.name_en];\r\n    let line = bet.Line ? '(' + bet.Line + ')' : null;\r\n    if (market.Id === marketIds.handicap) line = `(${bet.BaseLine})`;\r\n    let betStatus = bet.Status;\r\n    let betStatusMessage = betStatus !== lSportsConfig.betStatus.settled ? `${Translate.betSuspended} (Bet can not be placed)` : `${Translate.betSettled} (Bet can not be placed)`;\r\n\r\n    let betStatusInfo = betStatus !== lSportsConfig.betStatus.active ? <div className=\"betslip__error fs-14\">{betStatusMessage}<span className=\"material-icons icon mr-2 align-middle text-red\"></span></div> : null;\r\n    let isLive = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status) === lSportsConfig.statuses.inplay;\r\n    let fixtureStatus = (fixture.fixture_status !== undefined ? fixture.fixture_status : fixture.Livescore.Scoreboard.Status);\r\n    let matchInfo;\r\n    if (isLive && fixtureStatus !== lSportsConfig.statuses.inplay ) props.removeBet(fixture, market, bet, bet.provider);\r\n    let participantArray = fixture.fixture_status !== undefined ? [fixture.participant_one_full, fixture.participant_two_full] :  fixture.Fixture.Participants;\r\n    if (isLive) {\r\n        let results;\r\n        if (fixture.fixture_status !== undefined && !fixture.Livescore) results = fixture.livescore ? fixture.livescore : null;\r\n        else results = fixture.Livescore ? fixture.Livescore : null;\r\n        \r\n        if (results) {\r\n            matchInfo = (\r\n                <span>\r\n                    {`${results && results.home_score } : ${results && results.away_score }`}\r\n                </span>\r\n            );\r\n        }\r\n    } else {\r\n        let currentDate = Util.convertToLocalTimezone(fixture.start_date ? fixture.start_date : fixture.Fixture.StartDate );\r\n        let dateString = currentDate.dateString;\r\n        let timeString = currentDate.timeString;\r\n\r\n        matchInfo = (        \r\n            <span className=\"betslip__table-text-sm text-black\"><span>{dateString}</span><span> {timeString}</span></span>        \r\n        );\r\n    }\r\n    let printLive = isLive ? <span className=\"live-icon px-2 align-middle\">{Translate.live}</span> : matchInfo;\r\n    let betClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) betClassName = 'decreased';\r\n            if (bet.diff < 0)  betClassName = 'increased';\r\n        }\r\n    let drawBet = bet.isPlaced ? (\r\n        <div className=\"mx-auto sectionhead pb-2\">\r\n            <Grid container className=\"mx-auto betslip__placed\">\r\n                <Grid item xs={12} className=\"bg-light p-4 mt-2 text-center\">\r\n                    <span className=\"color-green\">Bet Placed</span>\r\n                    <span className=\"material-icons icon ml-2 mb-2 betslip__placed-icon align-middle color-green\">check</span>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    ) : (\r\n        <React.Fragment>\r\n            <div className=\"d-flex align-items-center\">\r\n                <a href className=\"del-slip\"><i className=\"material-icons betslip__table-close pr-2\" onClick={handleClose}>close</i></a>\r\n                <div className=\"w-100 pl-2 border-left\">\r\n                    <p className=\"d-flex justify-content-between align-items-center\">\r\n                        <span className=\"l-name\">{leagueName}</span>\r\n                        <span className=\"l-name\"> {printLive} </span>\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-between align-items-center\" onClick={() => openOddsModal(fixture,isLive)}>\r\n                        <span className=\"team-name\">\r\n                            {participantArray[0].name_en}\r\n                            <br />\r\n                            {participantArray[1].name_en}\r\n                        </span>\r\n                        <span>\r\n                            {isLive ? matchInfo : ''}\r\n                        </span>\r\n                        <span className={`betslip__odd ${isLive ? 'live__background' : 'prematch__background'} ${(bet.Status !== lSportsConfig.betStatus.active) ? 'betslip__lock': betClassName}`}>\r\n                            { (bet.Status !== lSportsConfig.betStatus.active)  ? <i className=\"material-icons fs-14 icon-lock\"> lock </i> : Util.toFixedDecimal(bet.Price, oddType) }\r\n                        </span>\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-between align-items-center\">\r\n                        <span className=\"market-name\"> {Util.marketNameFormatter(market[lan] || market.name_en, bet?.specifier || {}, participants)}։</span>\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-between align-items-center\">\r\n                        <span className=\"pick-result\">\r\n                            {Translate.tip} { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                            {line}\r\n                        </span>\r\n                    </p>\r\n                    {betStatusInfo}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return drawBet;\r\n}\r\n\r\nBetslipSingleBet.propTypes = {\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    index: PropTypes.number,\r\n    bet: PropTypes.object,\r\n    leagueName: PropTypes.string,\r\n    language: PropTypes.string,\r\n    removeBet: PropTypes.func,\r\n    openExtraOddsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n        oddType: state.user.oddType\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BetslipSingleBet));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { Translate } from '../../localization';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button'\r\nimport BetslipSingleBet from './BetslipSingleBet';\r\nimport Calculator from './Calculator';\r\nimport MiniCalculator from './MiniCalculator';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport { setBetStake, setPlaceBetError } from '../../store/actions/betslip.actions';\r\n\r\nclass BetslipSingle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.keypadRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n\r\n        this.state = {\r\n            isShow: false,\r\n            isBtnDisabled: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setPlaceBetError(null);\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n        this.props.setBetStake(0);\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.keypadRef && !this.keypadRef.current?.contains(event.target)) {\r\n            this.setState({isShow:false});\r\n        }\r\n    }\r\n\r\n    openCalculator = (show) => {\r\n        this.setState(prev => ({ isShow: !prev.isShow }));\r\n    };\r\n\r\n    closeModal = (show) => {\r\n        this.setState({ isShow: show });\r\n    };\r\n\r\n    setSingleStake = (value) => {\r\n        this.props.setBetStake(value);\r\n    };\r\n\r\n    placeBetCheck = () => {\r\n        if (!this.state.isBtnDisabled) {\r\n            this.setState({ isBtnDisabled: true });\r\n            this.props.placeBetCheck('single');\r\n\r\n            setTimeout(() => {\r\n                this.setState({ isBtnDisabled: false });\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { isShow, isBtnDisabled } = this.state;\r\n        let { fixtures, totalOdds, singleStake, placeBetError, openExtraOddsModal, showCountdown, placeBetDisabled, placeBetDisableFromAdmin, selectExtraMarket, setExtraMarkets } = this.props;\r\n        let index = 0; // numbering in the list of bets\r\n        let isDisabled = isBtnDisabled || placeBetDisabled;\r\n\r\n        let drawBets = map(fixtures, (fixture) => {\r\n            return map(fixture.markets, (market) => {\r\n                return map(market.bets, (bet) => {\r\n                    let  leagueName = fixture.leagueName ? fixture.leagueName : fixture.fixture.league.name_en;\r\n                    index++;\r\n                    return (\r\n                        <li>\r\n                            <BetslipSingleBet\r\n                                fixture={fixture.fixture}\r\n                                market={market.market}\r\n                                index={index}\r\n                                bet={bet}\r\n                                leagueName={leagueName}\r\n                                openExtraOddsModal={openExtraOddsModal}\r\n                                key={bet.Id}\r\n                                selectExtraMarket = {selectExtraMarket}\r\n                                setExtraMarkets = {setExtraMarkets}\r\n                            />\r\n                        </li>\r\n                    );\r\n                });\r\n            });\r\n        });\r\n\r\n        let possibleWin = Util.toFixedDecimal(parseFloat(singleStake || 0) * totalOdds + 0.00001);\r\n        let showBonus = totalOdds >= lSportsConfig.betslip.bonusMinValue ? true : false;\r\n        let bonusAmount = showBonus ? Util.toFixedDecimal(possibleWin * (lSportsConfig.betslip.bonusPersentage / 100)) : 0;\r\n        let totalPossibleWin = Util.toFixedDecimal(parseFloat(possibleWin) + parseFloat(bonusAmount));\r\n\r\n        let drawCalculator = isShow ? (\r\n            <Calculator startValue={singleStake} possibleWin={possibleWin} onSetValue={this.setSingleStake} onCloseModal={this.closeModal} />\r\n        ) : null;\r\n        let error = placeBetError ? (\r\n            <Grid container className=\"mx-auto fs-15\">\r\n                <Grid item xs={12} className=\"p-1 text-center error-bg\">\r\n                    {/* <img src=\"./images/error-icon.png\" className=\"align-middle error-icon\"></img> */}\r\n                    <span className=\"material-icons icon mr-2 align-middle text-red\">error</span>\r\n                    <span>{placeBetError}</span>\r\n                </Grid>\r\n            </Grid>\r\n        ) : null;\r\n\r\n        let bootomContainer =\r\n            fixtures.length > 0 ? (\r\n                <div className=\"foot-bet mt-auto\">\r\n                    {error}\r\n                    <div className=\"bet-amount\" ref={this.keypadRef}>\r\n                        {drawCalculator}\r\n                        <MiniCalculator openCalculator={this.openCalculator} closeModal= {this.closeModal} type=\"single\" />\r\n                    </div>\r\n                    <Grid container className=\"mx-auto betslip__panel pt-1 text-color\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.totalOdds}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {parseFloat(totalOdds).toFixed(2)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container className=\"mx-auto betslip__panel text-color\">\r\n                        <Grid item xs={7} className=\"px-2\">\r\n                            {Translate.possibleWin}\r\n                        </Grid>\r\n                        <Grid item xs={5} className=\"text-right px-2\">\r\n                            {possibleWin}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {showBonus && (\r\n                        <Grid container className=\"mx-auto betslip__panel highlighted py-1 text-color\">\r\n                            <Grid className=\"px-2\" item xs={7}>\r\n                                {`+${lSportsConfig.betslip.bonusPersentage}% Bonus`}\r\n                            </Grid>\r\n                            <Grid item xs={5} className=\"text-right px-2 bonus-win-amount\">\r\n                                {totalPossibleWin}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    <Grid container className=\"mx-auto btn-cont\">\r\n                        {showCountdown ? (\r\n                            <Grid item xs={12} className=\"p-0 text-color\">\r\n                                <Button variant=\"contained\" className=\"place-btn\" type=\"button\">\r\n                                    <LoadingIcon theme=\"my-1 centered\" />\r\n                                </Button>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid item xs={12} className=\"p-0\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    className={`place-btn ${isDisabled ? 'place-btn_disabled' : ''}`}\r\n                                    onClick={this.placeBetCheck}\r\n                                    disabled={placeBetDisableFromAdmin || isDisabled}\r\n                                >\r\n                                    {Translate.placeBet}\r\n                                </Button>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            ) : null;\r\n\r\n        return (\r\n            fixtures &&\r\n            fixtures.length > 0 && (\r\n                <div className='betslip-inner-main'>\r\n                    <div className=\"bet-slip mb-120 mt-1 pr-2\">\r\n                        <ul>\r\n                            {drawBets}\r\n                        </ul>\r\n                    </div>\r\n                    {bootomContainer}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nBetslipSingle.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    singleStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    placeBetError: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    totalOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setPlaceBetError: PropTypes.func,\r\n    setBetStake: PropTypes.func,\r\n    placeBetCheck: PropTypes.func,\r\n    openExtraOddsModal: PropTypes.func,\r\n    language: PropTypes.string,\r\n    showCountdown: PropTypes.bool,\r\n    placeBetDisabled: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        singleStake: state.betslip.singleStake,\r\n        placeBetError: state.betslip.placeBetError,\r\n        placeBetDisabled: state.betslip.placeBetDisabled,\r\n        loading: state.general.loading,\r\n        totalOdds: state.betslip.totalOdds,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        setBetStake: (value) => dispatch(setBetStake(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BetslipSingle);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addBet, removeBet } from '../../store/actions/betslip.actions';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nclass Bet extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bet.Price !== this.props.bet.Price) {\r\n            let diffType = +this.props.bet.Price - +prevProps.bet.Price > 0 ? 'increased' : +this.props.bet.Price - +prevProps.bet.Price < 0 ? 'decreased' : '' ;\r\n            \r\n            if (diffType === 'increased') {\r\n                if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                        document.getElementById('bet-' + this.props.bet.Id).classList.add('increased');\r\n                    }\r\n                }, 100);\r\n            }\r\n\r\n            if (diffType === 'decreased') {\r\n                if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('bet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('bet-' + this.props.bet.Id)) {\r\n                        document.getElementById('bet-' + this.props.bet.Id).classList.add('decreased');\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { bet, fixture, market, provider, fixtures, leagueName } = this.props;\r\n\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            });\r\n\r\n        if (isActive) {\r\n            this.props.removeBet(fixture, market, bet, provider?.Id);\r\n        } else {\r\n            this.props.addBet(fixture, market, bet, provider?.Id, leagueName);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { bet, isCentered, fixture, market, fixtures, type, language } = this.props;\r\n        let line = bet.Line ? '(' + bet.Line + ')' : null;\r\n        const lan = `name_${ language }`;\r\n        let isEuropeanHandicap = market.Id === 13;\r\n        let colClass = isCentered ? 'mr-1 pr-1 pl-1  mb-1' : 'pr-1 pl-1 mr-1 mb-1';\r\n        let span1Class = isCentered ? 'text-center py-1 odd__left odd__name' : 'text-center odd__left py-1 odd__name';\r\n        let span2Class = isCentered ? 'text-center py-1 odd__right odd__price' : 'text-center  odd__right py-1 odd__price';\r\n\r\n        let span3Class = isEuropeanHandicap ? 'handicap' : '';\r\n        let gridClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) gridClassName = 'decreased';\r\n            if (bet.diff < 0)  gridClassName = 'increased';\r\n        }\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId ,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            })\r\n                ? 'active'\r\n                : '';\r\n        let betStatus = bet.Status;\r\n        let disableClass = '';\r\n\r\n        let oddType = localStorage.getItem('oddType')  ? localStorage.getItem('oddType') : '' ;\r\n\r\n        let drawBet =\r\n            betStatus == lSportsConfig.betStatus.active ? (\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={'bet-' + bet.Id}\r\n                    className={`${colClass}  ${ type === 'live' ? 'live__background' : 'prematch__background'} ripple-bet anim ${isActive} ${gridClassName} ${disableClass} ${span3Class}`}\r\n                    onClick={ betStatus == lSportsConfig.betStatus.active ? this.handleToggle : null}\r\n                >\r\n                    <span className={span1Class}>\r\n                        { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                    </span>\r\n                    <span className={span2Class}>{Util.toFixedDecimal(bet.Price, oddType)}</span>\r\n                </Grid>\r\n            ) : (betStatus === lSportsConfig.betStatus.suspended || betStatus === lSportsConfig.betStatus.deactivated) ?\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={'bet-' + bet.Id}\r\n                    className={`${colClass}  ${ type === 'live' ? 'live__background' : 'prematch__background'} ripple-bet anim justify-content-center ${isActive} ${gridClassName} ${span3Class}`}\r\n                    key={bet.Id}\r\n                >\r\n                    <i className=\"material-icons fs-16 py-2\"> lock </i>\r\n                </Grid>\r\n            : null;\r\n\r\n        return drawBet;\r\n    }\r\n}\r\n\r\nBet.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    addBet: PropTypes.func,\r\n    removeBet: PropTypes.func,\r\n    bet: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    provider: PropTypes.object,\r\n    isCentered: PropTypes.bool,\r\n    count: PropTypes.number,\r\n    // type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        count: state.betslip.count,\r\n        oddType: state.user.oddType,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        addBet: (fixture, market, bet, provider, leagueName) => dispatch(addBet(fixture, market, bet, provider, leagueName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bet);\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport groupBy from 'lodash.groupby';\r\nimport filter from 'lodash.filter';\r\nimport orderBy from 'lodash.orderby';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bet from './Bet';\r\nimport { useSelector } from 'react-redux';\r\nimport { lSportsConfig } from '../../config';\r\nimport { dynamicMarkets, handicapMarkets, OnlyActiveBets, showScore, SortBySecondary, stableMarketOnExtraMarket, TwoColumnMarketIds, UnderOverPairMarketIds } from '../../config/markets';\r\nimport { map } from 'lodash';\r\n\r\n\r\nconst Market = React.memo((props) => {\r\n    let { Market, column, fixture, type, leagueName } = props;\r\n    // if (Market.status !== lSportsConfig.marketStatus.active) return null;\r\n    const lan = `name_${ useSelector((state) => state.general.language) }`;\r\n    const participants = [  fixture?.participants[0][lan] || fixture?.participants[0].name_en, fixture?.participants[1][lan] || fixture?.participants[1].name_en ];\r\n    let Bets = Market ? Market.Bets : null;\r\n    const isLive = fixture.fixture_status == lSportsConfig.statuses.inplay;\r\n    \r\n    Bets = Util.sortBet(Bets, Market.Id, lan);\r\n    const activeBet = lSportsConfig.betStatus.active;\r\n\r\n    let isShowScore = showScore.indexOf(Market.Id) > -1;\r\n    let score = null;\r\n    if (isLive && stableMarketOnExtraMarket.indexOf(+Market.Id) > -1) {\r\n        Bets = Bets.filter((bet) => bet.isFavorite);\r\n    }\r\n    Bets = filter(Bets, (bet) => bet.Status !== lSportsConfig.betStatus.settled);\r\n\r\n    if (isShowScore && Bets.length > 0 && Bets[0].specifier && Bets[0].specifier?.score) {\r\n        const activeOutcomes = Bets.filter(bet => bet.Status === lSportsConfig.betStatus.active);\r\n        if(activeOutcomes.length > 0) score = activeOutcomes[0].specifier.score;\r\n        else score = Bets[Bets.length - 1].specifier.score;\r\n    }\r\n\r\n    let slicedBets = null;\r\n\r\n    //This market id should be included in lSportsConfig sort\r\n    if (SortBySecondary.indexOf(Market.Id) > -1) {\r\n        Bets = orderBy(Bets, ['secondarySort', 'outcome_id'], 'asc');\r\n    }\r\n    \r\n    // showing outcomes in 2 columns\r\n    if (TwoColumnMarketIds.indexOf(Market.Id) > -1) {\r\n        column = 2;\r\n    }\r\n\r\n    slicedBets = new Array(Math.ceil(Bets.length / column)).fill('').map(function () {\r\n        return this.splice(0, column);\r\n    }, Bets.slice());\r\n\r\n    // Only Active bets\r\n    if (OnlyActiveBets.indexOf(Market.Id) > -1) {\r\n        slicedBets = filter(slicedBets, (flex) => {\r\n            return flex.some((bet) => bet.Status == activeBet);\r\n        });\r\n    }\r\n\r\n    // Temp fix for remaining match & next goal markets \r\n    if ([7,8,61,62].indexOf(Market.Id) > -1) {\r\n        let groupedBets = groupBy(slicedBets, 'BaseLine');\r\n        slicedBets = filter(Object.values(groupedBets)[0], (flex) => {\r\n            return flex.every((bet) => bet.Status == activeBet);\r\n        });\r\n    }\r\n\r\n    // under over name sorting.\r\n    if (UnderOverPairMarketIds.indexOf(Market.Id) > -1) {\r\n        slicedBets = map(slicedBets, (betArray) => (\r\n            orderBy(betArray, (bet) => (\r\n                bet.name_en\r\n            ), 'desc')\r\n        ));\r\n    }\r\n    let count = 0;\r\n    const isHandicap = handicapMarkets.indexOf( Market.Id ) > -1 ? true : false;\r\n    \r\n    const drawBets = slicedBets\r\n        ? slicedBets.map((flex) => {\r\n            count++;\r\n            const isHandicapVisible = !isHandicap || (isHandicap && flex.every((b) => b.Status == activeBet)) ? true : false;\r\n            return (\r\n                <React.Fragment>\r\n                    <Grid container className={`mx-0 justify-content-end ${isHandicap && 'handicap'} `} key={count}>\r\n                        {\r\n                            isHandicap && flex.every((b) => b.Status == activeBet) && <Grid item xs className={'ripple-bet anim handicap small-width'} >\r\n                                {`(${flex[0].BaseLine})`}\r\n                            </Grid> \r\n                        }\r\n                        {isHandicapVisible && flex.map((item) => {\r\n                            return (\r\n                                <Bet\r\n                                    fixture={fixture}\r\n                                    market={Market}\r\n                                    bet={item}\r\n                                    provider={Market}\r\n                                    isCentered={flex.length < 3}\r\n                                    type={type}\r\n                                    leagueName={leagueName}\r\n                                    key={item.Id}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </React.Fragment>\r\n\r\n            );\r\n          })\r\n        : null;\r\n\r\n    let line = Market.Line ? <span>{Market.Line}</span> : null;\r\n\r\n    let marketSpecifier = Bets[Bets.length - 1]?.specifier || {};\r\n\r\n    if (dynamicMarkets.indexOf(+Market.Id) > -1) {\r\n        const activeOutcomes = Bets.filter(bet => bet.Status === lSportsConfig.betStatus.active);\r\n        if (activeOutcomes.length) marketSpecifier = activeOutcomes[0]?.specifier;\r\n    }\r\n\r\n    return (\r\n        slicedBets &&\r\n        slicedBets.length > 0 && (\r\n            <div className=\"mx-auto e-mkt-row pt-2\">\r\n                <ul>\r\n                    <li className=\"flex-grow-1\">\r\n                        { Util.marketNameFormatter(Market[lan] || Market.name_en, marketSpecifier || {}, participants)} {line} { isShowScore && `(${score})` }\r\n                    </li>\r\n                </ul>\r\n                <Grid container className=\"justify-content-end\">\r\n                    {drawBets}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    );\r\n});\r\n\r\nMarket.propTypes = {\r\n    column: PropTypes.number,\r\n    fixture: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Market;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Market from '../Shared/Market';\r\nimport Util from '../../helper/Util';\r\nimport {MarketIdMapping} from '../../config/markets'\r\n\r\nfunction Markets(props) {\r\n    let { markets, fixture, type, leagueName, currentlySelectedMarket = 'All'} = props;\r\n    const [liveMarkets, setLiveMarkets] = useState([]);\r\n    useEffect(() => {\r\n        setLiveMarkets(markets);\r\n    },[markets]);\r\n    \r\n    useEffect(() => {\r\n        markets && setLiveMarkets(Object.values(markets));\r\n    },[markets, fixture]);\r\n    \r\n    const sortMarkets = (array, key) => {\r\n\r\n        let sportId = props.fixture.sport_id;\r\n        const order = Util.getExtraMarketName(sportId)?.[MarketIdMapping[currentlySelectedMarket]].marketIds;\r\n        array.sort( (a, b) => {\r\n          var A = a[key],\r\n              B = b[key];\r\n\r\n          let indA = order.indexOf(A);\r\n          let indB = order.indexOf(B);\r\n          if (indA === -1) indA = order.length - 1;\r\n          if (indB === -1) indB = order.length - 1;\r\n\r\n          if (indA < indB) {\r\n              return -1;\r\n          } else if (indA > indB) {\r\n              return 1;\r\n          }\r\n          return 0;\r\n          \r\n        });\r\n        \r\n        return array;\r\n      };\r\n\r\n    const sortedMarkets = sortMarkets(liveMarkets, 'Id');\r\n    //const sortedMarkets = orderBy(liveMarkets, ['Id'], 'asc');\r\n    const drawMarkets = liveMarkets ? (\r\n        <div className=\"match-panel-bottom px-1 pb-4\">\r\n            {sortedMarkets.map((market) => {\r\n                return <Market \r\n                Market={market}\r\n                fixture={fixture}\r\n                column={3} \r\n                key={market.Id} \r\n                type={type} \r\n                leagueName={leagueName} \r\n                />;\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n    );\r\n\r\n    return drawMarkets;\r\n}\r\n\r\nMarkets.propTypes = {\r\n    fixture: PropTypes.object,\r\n    markets: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Markets;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isStatsAvailable: true,\r\n        };\r\n      }\r\n    componentDidMount() {\r\n        let { statisticsEventId, statisticsTemplateType, language } = this.props;\r\n\r\n        if (statisticsTemplateType === 'live') {\r\n            let trackerGenerator = new window.STATSCORE.LSP.Generator();\r\n            trackerGenerator.create('#tracker', 'tracker1', statisticsEventId, lSportsConfig.account.statscore_live_id, {\r\n                lang: language,\r\n                timezone: '',\r\n                useMappedId: '1',\r\n                configuration: {\r\n                    showHeader: false,\r\n                },\r\n            });\r\n        } else if (statisticsTemplateType === 'prematch') {\r\n            let trackerGenerator = new window.STATSCORE.LSP.Generator();\r\n            trackerGenerator.create('#tracker', 'tracker1', statisticsEventId, lSportsConfig.account.statscore_prematch_id, {\r\n                lang: language,\r\n                timezone: '',\r\n                useMappedId: '1',\r\n                configuration: {\r\n                    showHeader: false,\r\n                    mainMenu: ['Standings', 'Tables', 'Comparison'],\r\n                    mainBoxInitializationTab: 'Standings',\r\n                },\r\n            });\r\n        }\r\n        window.addEventListener('statscore.livematchpro.tracker1.ready', () => {\r\n            this.setState({ isStatsAvailable: true });\r\n        });\r\n        window.addEventListener('statscore.livematchpro.tracker1.error', (err) => {\r\n            this.setState({ isStatsAvailable: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isStatsAvailable } = this.state;\r\n        let width = isStatsAvailable ? 'w-50' : 'd-none';\r\n        return <div id=\"tracker\" className={`statistics__wrap ${width}`}></div>;\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsTemplateType: PropTypes.string,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsTemplateType: state.lsportsGlobal.statisticsTemplateType,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { Translate } from '../../localization';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#0f673d',\r\n        },\r\n    },\r\n});\r\n\r\nclass ExtraMarketSelector extends Component {\r\n    handleClick = (value) => {\r\n        this.props.selectExtraMarket(value);\r\n    };\r\n\r\n    render() {\r\n        let { extraMarketNames, extraSelectedMarket } = this.props;\r\n        let selectedTab = 0;\r\n\r\n        let marketToSelectList = map(extraMarketNames, (value, index) => {\r\n            let className = ''\r\n            if (extraSelectedMarket === value) {\r\n                selectedTab = index;\r\n                className='active'\r\n            }\r\n            return (\r\n                <li\r\n                    label={Translate.tabNames[value]}\r\n                    key={index}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.handleClick(value);\r\n                        document.activeElement.blur();\r\n                    }}\r\n                    className={ className }\r\n                >\r\n                    <a href>{Translate.tabNames[value]}</a>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            // <ThemeProvider theme={theme}>\r\n            //     <AppBar position=\"static\" color=\"default\">\r\n            //         <Tabs\r\n            //             ref={this.refTabs}\r\n            //             value={selectedTab}\r\n            //             indicatorColor=\"primary\"\r\n            //             textColor=\"primary\"\r\n            //             aria-label=\"scrollable auto tabs\"\r\n            //             variant=\"scrollable\"\r\n            //             scrollButtons=\"off\"\r\n            //         >\r\n                        marketToSelectList\r\n            //         </Tabs>\r\n            //     </AppBar>\r\n            // </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nExtraMarketSelector.propTypes = {\r\n    extraMarketNames: PropTypes.array,\r\n    extraSelectedMarket: PropTypes.string,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nexport default ExtraMarketSelector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addBet, removeBet } from '../../store/actions/betslip.actions';\r\nimport { lSportsConfig } from '../../config';\r\nimport { handicapMarkets } from '../../config/markets';\r\n\r\nclass Bet extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bet.Price !== this.props.bet.Price) {\r\n            let diffType = +this.props.bet.Price - +prevProps.bet.Price > 0 ? 'increased' : +this.props.bet.Price - +prevProps.bet.Price < 0 ? 'decreased' : '' ;\r\n            \r\n            if (diffType === 'increased') {\r\n                if (document.getElementById('bet-top' + this.props.bet.Id)) {\r\n                    document.getElementById('bet-top' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('bet-top' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('bet-top' + this.props.bet.Id)) {\r\n                        document.getElementById('bet-top' + this.props.bet.Id).classList.add('increased');\r\n                    }\r\n                }, 100);\r\n            }\r\n\r\n            if (diffType === 'decreased') {\r\n                if (document.getElementById('bet-top' + this.props.bet.Id)) {\r\n                    document.getElementById('bet-top' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('bet-top' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('bet-top' + this.props.bet.Id)) {\r\n                        document.getElementById('bet-top' + this.props.bet.Id).classList.add('decreased');\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { bet, fixture, market, provider, fixtures, leagueName } = this.props;\r\n\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            });\r\n\r\n        if (isActive) {\r\n            this.props.removeBet(fixture, market, bet, provider?.Id);\r\n        } else {\r\n            this.props.addBet(fixture, market, bet, provider?.Id, leagueName);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { bet, isCentered, fixture, market, fixtures, type, language } = this.props;\r\n        let line = bet.Line ? '(' + bet.Line + ')' : null;\r\n        let isEuropeanHandicap = handicapMarkets.indexOf(market.Id) > -1 ? true : false;\r\n        let colClass = isCentered ? 'mr-1 pr-1 pl-1  mb-1' : 'pr-1 pl-1 mr-1 mb-1';\r\n        let span1Class = isCentered ? 'text-center py-1 odd__left odd__name' : 'text-center odd__left py-1 odd__name';\r\n        let span2Class = isCentered ? 'text-center py-1 odd__right odd__price' : 'text-center  odd__right py-1 odd__price';\r\n        let lan = `name_${ language }`;\r\n        let span3Class = isEuropeanHandicap ? 'handicap' : '';\r\n        let gridClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n\r\n            if (bet.diff > 0) gridClassName = 'decreased';\r\n            if (bet.diff < 0)  gridClassName = 'increased';\r\n        }\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.fixture_id ? fixture.fixture_id : fixture.FixtureId ,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            })\r\n                ? 'active'\r\n                : '';\r\n        let betStatus = bet.Status;\r\n        let disableClass = '';\r\n\r\n        let oddType = localStorage.getItem('oddType')  ? localStorage.getItem('oddType') : '' ;\r\n\r\n        let drawBet =\r\n            betStatus === lSportsConfig.betStatus.active ? (\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={'bet-top' + bet.Id}\r\n                    className={`${colClass} five_bets ripple-bet anim ${isActive} ${gridClassName} ${disableClass} ${span3Class}`}\r\n                    onClick={ betStatus === 1 ? this.handleToggle : null}\r\n                    key={bet.Id}\r\n                >\r\n                    <span className={span1Class}>\r\n                        { Util.outcomeFormatter(bet[ lan ] || bet.name_en, bet.specifier, bet.Id, lan) }\r\n                        { isEuropeanHandicap ? null : line}\r\n                    </span>\r\n                    <span className={span2Class}>{Util.toFixedDecimal(bet.Price, oddType)}</span>\r\n                </Grid>\r\n            ) :  (betStatus === lSportsConfig.betStatus.suspended || betStatus === lSportsConfig.betStatus.deactivated) ?\r\n                <Grid\r\n                    item\r\n                    xs\r\n                    id={'bet-' + bet.Id}\r\n                    className={`${colClass}  ${ type === 'live' ? 'live__background' : 'prematch__background'} ripple-bet anim justify-content-center ${isActive} ${gridClassName} ${span3Class}`}\r\n                    key={bet.Id}\r\n                >\r\n                    <i className=\"material-icons fs-16 py-2\"> lock </i>\r\n                </Grid>\r\n            : null;\r\n\r\n        return drawBet;\r\n    }\r\n}\r\n\r\nBet.propTypes = {\r\n    fixtures: PropTypes.array,\r\n    addBet: PropTypes.func,\r\n    removeBet: PropTypes.func,\r\n    bet: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    provider: PropTypes.object,\r\n    isCentered: PropTypes.bool,\r\n    count: PropTypes.number,\r\n    // type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        count: state.betslip.count,\r\n        oddType: state.user.oddType,\r\n        language: state.general.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        addBet: (fixture, market, bet, provider, leagueName) => dispatch(addBet(fixture, market, bet, provider, leagueName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bet);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport groupBy from 'lodash.groupby';\r\nimport filter from 'lodash.filter';\r\nimport orderBy from 'lodash.orderby';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bet from './Bet';\r\nimport { useSelector } from 'react-redux';\r\nimport { lSportsConfig } from '../../config';\r\nimport { dynamicMarkets, handicapMarkets, OnlyActiveBets, showScore, SortBySecondary, stableMarketOnExtraMarket, TwoColumnMarketIds, UnderOverPairMarketIds } from '../../config/markets';\r\nimport { map } from 'lodash';\r\n\r\nconst Market = React.memo((props) => {\r\n    let { Market, column, fixture, type, leagueName } = props;\r\n    // if (Market.status !== lSportsConfig.marketStatus.active) return null;\r\n    const lan = `name_${ useSelector((state) => state.general.language) }`;\r\n    const participants = [ fixture?.participants[0][lan] || '', fixture?.participants[1][lan] || '' ];\r\n    let Bets = Market ? Market.Bets : null;\r\n    const isLive = fixture.fixture_status === lSportsConfig.statuses.inplay;\r\n    \r\n    Bets = Util.sortBet(Bets, Market.Id, lan);\r\n    const activeBet = lSportsConfig.betStatus.active;\r\n\r\n    let isShowScore = showScore.indexOf(Market.Id) > -1;\r\n    let score = null;\r\n    if (isLive && stableMarketOnExtraMarket.indexOf(+Market.Id) > -1) {\r\n        Bets = Bets.filter((bet) => bet.isFavorite);\r\n    }\r\n    Bets = filter(Bets, (bet) => bet.Status !== lSportsConfig.betStatus.settled);\r\n\r\n    if (isShowScore && Bets.length > 0 && Bets[0].specifier && Bets[0].specifier?.score) {\r\n        const activeOutcomes = Bets.filter(bet => bet.Status === lSportsConfig.betStatus.active);\r\n        if(activeOutcomes.length > 0) score = activeOutcomes[0].specifier.score;\r\n        else score = Bets[Bets.length - 1].specifier.score;\r\n    }\r\n\r\n    let slicedBets = null;\r\n\r\n    //This market id should be included in lSportsConfig sort\r\n    if (SortBySecondary.indexOf(Market.Id) > -1) {\r\n        Bets = orderBy(Bets, ['secondarySort', 'outcome_id'], 'asc');\r\n    }\r\n    \r\n    // showing outcomes in 2 columns\r\n    if (TwoColumnMarketIds.indexOf(Market.Id) > -1) {\r\n        column = 2;\r\n    }\r\n\r\n    slicedBets = new Array(Math.ceil(Bets.length / column)).fill('').map(function () {\r\n        return this.splice(0, column);\r\n    }, Bets.slice());\r\n\r\n    // Only Active bets\r\n    if (OnlyActiveBets.indexOf(Market.Id) > -1) {\r\n        slicedBets = filter(slicedBets, (flex) => {\r\n            return flex.some((bet) => bet.Status === activeBet);\r\n        });\r\n    }\r\n\r\n    // Temp fix for remaining match & next goal markets \r\n    if ([7,8,61,62].indexOf(Market.Id) > -1) {\r\n        let groupedBets = groupBy(slicedBets, 'BaseLine');\r\n        slicedBets = filter(Object.values(groupedBets)[0], (flex) => {\r\n            return flex.every((bet) => bet.Status === activeBet);\r\n        });\r\n    }\r\n\r\n    // under over name sorting.\r\n    if (UnderOverPairMarketIds.indexOf(Market.Id) > -1) {\r\n        slicedBets = map(slicedBets, (betArray) => (\r\n            orderBy(betArray, (bet) => (\r\n                bet.name_en\r\n            ), 'desc')\r\n        ));\r\n    }\r\n    let count = 0;\r\n    const isHandicap = handicapMarkets.indexOf( Market.Id ) > -1 ? true : false;\r\n    \r\n    \r\n    const drawBets = slicedBets\r\n        ? slicedBets.map((flex) => {\r\n            count++;\r\n            const isHandicapVisible = !isHandicap || (isHandicap && flex.every((b) => b.Status === activeBet)) ? true : false;\r\n            return (\r\n                <React.Fragment>\r\n                    <Grid container className={`mx-0 justify-content-end ${isHandicap && 'handicap'} `} key={count}>\r\n                        {\r\n                            isHandicap && flex.every((b) => b.Status === activeBet) && <Grid item xs className={'ripple-bet anim handicap small-width'} >\r\n                                {`(${flex[0].BaseLine})`}\r\n                            </Grid> \r\n                        }\r\n                        {isHandicapVisible && flex.map((item) => {\r\n                            return (\r\n                                <Bet\r\n                                    fixture={fixture}\r\n                                    market={Market}\r\n                                    bet={item}\r\n                                    provider={Market}\r\n                                    isCentered={flex.length < 3}\r\n                                    type={type}\r\n                                    leagueName={leagueName}\r\n                                    key={item.Id}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </React.Fragment>\r\n\r\n            );\r\n          })\r\n        : null;\r\n\r\n    let line = Market.Line ? <span>{Market.Line}</span> : null;\r\n\r\n    let marketSpecifier = Bets[Bets.length - 1]?.specifier || {};\r\n\r\n    if (dynamicMarkets.indexOf(+Market.Id) > -1) {\r\n        const activeOutcomes = Bets.filter(bet => bet.Status === lSportsConfig.betStatus.active);\r\n        if (activeOutcomes.length) marketSpecifier = activeOutcomes[0]?.specifier;\r\n    }\r\n    return (\r\n        slicedBets &&\r\n        slicedBets.length > 0 && (\r\n            <div className=\"mx-auto five_e-mkt pt-2\">\r\n                <ul>\r\n                    <li >\r\n                        { Util.marketNameFormatter(Market[lan] || Market.name_en, marketSpecifier || {}, participants)} {line} { isShowScore && `(${score})` }\r\n                    </li>\r\n                </ul>\r\n                <Grid container>\r\n                    {drawBets}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    );\r\n});\r\n\r\nMarket.propTypes = {\r\n    column: PropTypes.number,\r\n    fixture: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Market;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Market from './Market';\r\nimport Util from '../../helper/Util';\r\nimport {MarketIdMapping} from '../../config/markets';\r\n\r\nfunction Markets(props) {\r\n    let { markets, fixture, type, leagueName,status} = props;\r\n    const [liveMarkets, setLiveMarkets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setLiveMarkets(markets);\r\n    },[markets,fixture]);\r\n    \r\n    useEffect(() => {\r\n        markets && setLiveMarkets(Object.values(markets));\r\n    },[markets, fixture]);\r\n\r\n     let order ;\r\n     const sortMarkets = (array, key) => {\r\n        let sportId = props.fixture.sport_id;\r\n        if(status === 'Live'){\r\n             order = Util.getExtraMarketName(sportId)?.[MarketIdMapping['All']].marketIds;\r\n        }else{\r\n            order = Util.getExtraMarketNamePrematch(sportId)[MarketIdMapping['All']].marketIds;\r\n        }\r\n        array.sort( (a, b) => {\r\n          var A = a[key],\r\n              B = b[key];\r\n          let indA = order.indexOf(A);\r\n          let indB = order.indexOf(B);\r\n          if (indA === -1) indA = order.length - 1;\r\n          if (indB === -1) indB = order.length - 1;\r\n\r\n          if (indA < indB) {\r\n              return -1;\r\n          } else if (indA > indB) {\r\n              return 1;\r\n          }\r\n          return 0;\r\n          \r\n        });\r\n        \r\n        return array;\r\n      };\r\n\r\n     let sortedMarkets = sortMarkets(liveMarkets, 'Id');\r\n     sortedMarkets = sortedMarkets.filter(obj => {\r\n               let check = true;\r\n                 if( Array.isArray(obj.Bets)){\r\n                   check = obj.Bets.some(bet => bet.Status === 1);\r\n                 }else{\r\n                   let temp = Object.values(obj.Bets);\r\n                   check = temp.some(t => t.Status === 1);\r\n                 }\r\n             return check;\r\n     });\r\n     sortedMarkets = sortedMarkets.filter(mar => mar.Bets);\r\n     sortedMarkets = sortedMarkets.slice(0,5);\r\n    const drawMarkets =\r\n        <div className='w-100 d-flex'>\r\n            <div className=\"match-panel-bottom px-1 pb-4 w-100 justify-content-start\">\r\n                {sortedMarkets.map((market) => {\r\n                    return <Market \r\n                    Market={market}\r\n                    fixture={fixture}\r\n                    column={3} \r\n                    key={market.Id} \r\n                    type={type} \r\n                    leagueName={leagueName} \r\n                    />;\r\n                })}\r\n            </div>;\r\n            {/* <div className='statistic-background w-50 justify-content-end'>\r\n            </div>; */}\r\n        </div>;\r\n\r\n    return drawMarkets;\r\n}\r\n\r\nMarkets.propTypes = {\r\n    fixture: PropTypes.object,\r\n    markets: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Markets;\r\n","import React, { useEffect } from 'react';\r\nimport Markets from './Markets';\r\n\r\nfunction FiveFeaturedMarkets(props) {\r\n    let { markets, fixture, type, leagueName ,status} = props;\r\n\r\n    useEffect(() => {\r\n        if(markets){\r\n        //selectFive(markets, obj_size);\r\n        }\r\n    },[markets,fixture]);\r\n\r\n\r\n    // const selectFive = (items, obj_size) => {\r\n    //     let obj = {};\r\n    //     if(obj_size.length <= 5)\r\n    //     {\r\n    //         for (let key in items) {\r\n    //             obj[key] = items[key];\r\n    //         }\r\n    //         setFinalMarkets(obj);\r\n    //     }\r\n    //     else \r\n    //     {\r\n    //         for(let i =0;i<5;i++){\r\n    //             obj[obj_size[i]] = items[obj_size[i]];\r\n    //         }\r\n    //         setFinalMarkets(obj);\r\n    //     }\r\n    // };\r\n\r\n    let drawMarkets =\r\n    markets && Object.keys(markets).length > 0 ? \r\n        (\r\n            <Markets markets={markets} fixture={fixture} type={type} leagueName={leagueName} status= {status}/>\r\n        ) \r\n        : \r\n        (\r\n            null\r\n        );\r\n    \r\n    return (\r\n        drawMarkets ? \r\n            <div className=\"m-auto w-50\">\r\n                {drawMarkets}   \r\n            </div>\r\n        : null\r\n    );\r\n}\r\n\r\nexport default FiveFeaturedMarkets;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\nimport jwtService from '../../services/jwtService';\r\nimport { Dialog, DialogTitle, DialogContent, IconButton, Typography } from '@material-ui/core';\r\nimport Markets from './Markets';\r\nimport { getExtraMarkets, clearExtraMarkets, selectExtraMarket, setStatistics, clearStatistics, setExtraMarketLocationName, setExtraMarketLeagueName } from '../../store/actions/lsports.global.actions';\r\nimport Statistics from '../Shared/Statistics';\r\nimport ExtraMarketSelector from '../Shared/ExtraMarketSelector';\r\nimport { filter, forEach, isEqual, uniqBy, isEmpty, map } from 'lodash';\r\nimport MatchDateTime from '../../Components/Shared/Match/MatchDateTime';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport FiveFeaturedMarkets from '../FiveFeaturedMarkets.js';\r\nimport Loading from '../../Components/Common/Loading';\r\nimport { dynamoClient } from '../../App';\r\nimport { getSingleLivePartialEvent, getLiveMatchMarkets } from '../../dynamo/inplayParams';\r\nimport find from 'lodash.find';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { onUpdateMatchMarkets } from '../../graphql/subscriptions';\r\nimport { withRouter } from 'react-router-dom';\r\nconst styles = {\r\n    root: {\r\n      position: 'absolute',\r\n      right: '47px',\r\n      overflow: 'auto',\r\n      top: '56px',\r\n      backgroundColor: '#f5f5f5',\r\n      borderRadius: '10%', \r\n      elevation: 'above',\r\n      boxShadow: '0px 0px 10px 3px #333',\r\n      zIndex: '99'\r\n     \r\n    },\r\n    listSection: {\r\n      padding: '0',\r\n      textAlign: 'center',\r\n      backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n      backgroundColor: 'inherit',\r\n      padding: 0,\r\n      fontSize:'5vw',\r\n    },\r\n  };\r\n\r\nlet extraMarkets = {};\r\nlet marketSubscription;\r\nlet liveMatchSub;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\n\r\nclass ExtraOddsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marketsUpdated: null,\r\n            liveStreamGameId: null,\r\n            showLiveStream: false,\r\n            selectedUrl: 0,\r\n            streamUrlData: [],\r\n            showStreamDropdown: false,\r\n            liveMatch: {},\r\n            isLoading: false,\r\n            showLogin: false,\r\n            statsObj: {},\r\n            noEvent: false,\r\n            isDisconnected: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { extraMarketEvent, match, liveStreamData, event, language } = this.props;\r\n        this.props.selectExtraMarket('All');\r\n        let fixtureId = match.params.fixtureId;\r\n        if(extraMarketEvent && false) {\r\n            this.setExtraMarketData(extraMarketEvent);\r\n        } else {\r\n            // in case not from live page i.e. using refresh\r\n            this.setState({isLoading: true});\r\n        }\r\n        \r\n        this.subscribeExtraMarket(fixtureId);\r\n        this.setLiveMatchData();\r\n\r\n        // if(isEmpty(liveStreamData)) {\r\n        //     this.fetchLiveStreamMatches().then(e => this.setLiveStream());\r\n        // } else {\r\n        //     this.setLiveStream();\r\n        // }\r\n        window.addEventListener('online', this.handleConnectionChange);\r\n        window.addEventListener('offline', this.handleConnectionChange);\r\n        \r\n         \r\n        // let fixtureId = extraMarketEvent.FixtureId;\r\n       \r\n        // this.props.setStatistics(fixtureId, 'forPopup', 'live');\r\n    }\r\n\r\n    setLiveStream =  () => {\r\n        let { match, liveStreamData } =this.props;\r\n        let authed = localStorage.getItem('jwt_access_token') || sessionStorage.getItem('jwt_access_token') ? true : false;\r\n        let liveStreamAvailable = match.params.liveStreamAvailable;\r\n        let fixtureId = match.params.fixtureId;\r\n\r\n        let selectedEvents = filter(liveStreamData, (e) =>  e.matchId == fixtureId );\r\n            selectedEvents = uniqBy(selectedEvents, (e) => e.iframe);\r\n            if(selectedEvents.length && selectedEvents[0].live === '1') {\r\n                this.setState({ streamUrlData:  selectedEvents});\r\n            }\r\n        \r\n        // if(liveStreamAvailable === 'true' && authed) {\r\n        //     this.setState({showLiveStream: true});\r\n        // }\r\n    } \r\n\r\n    setLiveMatchData = (startListener) => {\r\n        const { match } = this.props;\r\n        let sportId = match.params.sportId;\r\n        let fixtureId = match.params.fixtureId;\r\n        \r\n        let matchEvent = {};\r\n        this.getSingleMatchMarkets(fixtureId).then(e => {\r\n            if(this.props.partialEvents[sportId] && this.props.partialEvents[sportId][fixtureId]) {\r\n                matchEvent = {...e, ...this.props.partialEvents[sportId][fixtureId]};\r\n                matchEvent.Markets = matchEvent.market;\r\n                matchEvent.Livescore = matchEvent.livescore;\r\n                this.setExtraMarketData(matchEvent);\r\n            } else {\r\n                // genrally in case of refresh\r\n                this.getSingleMatchPartialEvent(fixtureId).then(partialEvent => {\r\n                    if(!e || !partialEvent) {\r\n                        this.setState({ noEvent: true});\r\n                        return;\r\n                    }\r\n                    matchEvent = {...e, ...partialEvent?.Items[0]};\r\n                    matchEvent.Markets = matchEvent.market;\r\n                    matchEvent.Livescore = matchEvent.livescore;\r\n                    this.setExtraMarketData(matchEvent);\r\n                });\r\n            }\r\n            // this.setState({ isLoading: false });\r\n            if(startListener && liveMatchSub._state !== 'ready') {\r\n                this.subscribeExtraMarket(fixtureId);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConnectionChange = () => {\r\n        const condition = navigator.onLine ? 'online' : 'offline';\r\n        if (condition === 'online') {\r\n          const webPing = setInterval(\r\n            () => {\r\n              fetch('//google.com', {\r\n                mode: 'no-cors',\r\n                })\r\n              .then(() => {\r\n                this.setState({ isDisconnected: false }, () => {\r\n                  return clearInterval(webPing);\r\n                });\r\n              }).catch(() => this.setState({ isDisconnected: true }) );\r\n            }, 2000);\r\n          return;\r\n        }\r\n  \r\n        return this.setState({ isDisconnected: true });\r\n      }\r\n\r\n    setExtraMarkets = (event) => {\r\n        let { liveMatch } = this.state;\r\n        let sportId = this.props.match.params.sportId;\r\n        Util.getExtraMarketName(sportId).extraMarketNames.forEach( e => {\r\n            extraMarkets[e] = {};\r\n        });\r\n\r\n        extraMarkets = Util.getExtraMarkets(extraMarkets, event, sportId);\r\n        this.setState({ marketsUpdated: extraMarkets});\r\n    }\r\n\r\n\r\n    setExtraMarketData = (event) => {\r\n        let { language } = this.props;\r\n        this.setState({statsObj: event?.Livescore?.statistics || event?.livescore?.statistics || {}});\r\n        this.setExtraMarkets(event);\r\n\r\n        this.setState({ liveMatch: event, isLoading: false}, () => {\r\n            // this.openStatistics();\r\n\r\n            if(!this.state.noEvent) {\r\n                this.props.setExtraMarketLeagueName(event?.league?.[language === 'en'? 'name_en' : `name_${ language.toLowerCase() }`]);\r\n                this.props.setExtraMarketLocationName(event?.location?.[language === 'en'? 'name_en' : `name_${ language.toLowerCase() }`]);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(pp, prevState) {\r\n        const { extraMarketEvent, userData, match } = this.props;\r\n        let liveStreamAvailable= this.props.match.params.liveStreamAvailable;\r\n        const { liveMatch, isDisconnected } = this.state;\r\n        let fixtureId = match.params.fixtureId;\r\n        let sportId = liveMatch.sport_id;\r\n        if (!isEqual(prevState.liveMatch.Markets, liveMatch.Markets)) {\r\n            extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        }\r\n        \r\n        if(pp.extraMarketEvent !== extraMarketEvent) {\r\n            extraMarkets = Util.getExtraMarkets(extraMarkets, liveMatch, sportId);\r\n            this.setState({ marketsUpdated: extraMarkets});\r\n        }\r\n\r\n        if (prevState.isDisconnected !== isDisconnected) {\r\n            if (isDisconnected) { \r\n                this.unsubscribeEvents();\r\n            }    else if(!isDisconnected){\r\n                this.setLiveMatchData(true);\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        extraMarkets = {}; // Reset extra market category while un-mounting\r\n        this.props.clearExtraMarkets();\r\n        this.props.clearStatistics();\r\n        this.unsubscribeEvents();\r\n        window.removeEventListener('online', this.handleConnectionChange);\r\n        window.removeEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    toggleLiveStream = (streamIndex) => {\r\n        let authed = localStorage.getItem('jwt_access_token') || sessionStorage.getItem('jwt_access_token') ? true : false;\r\n        if(authed){\r\n            this.setState({ showLiveStream: !this.state.showLiveStream});\r\n            if(streamIndex >= 0) \r\n            {\r\n                this.setState({selectedUrl : streamIndex, showStreamDropdown: false, showLiveStream: true});\r\n                this.props.clearStatistics();\r\n            }\r\n        } else {\r\n            this.props.showLogin();\r\n        }\r\n    }\r\n\r\n    fetchLiveStreamMatches = async () => {\r\n        try {\r\n            let liveStreamData = await jwtService.getLiveStreamData();\r\n            this.props.setLiveStreamData(liveStreamData);\r\n            //this.setState({ liveStreamData: liveStreamData });\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                // FIXME: Commenting the error temporarily\r\n                //toastr.error('', 'Something went wrong.');\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        let authed = localStorage.getItem('jwt_access_token') || sessionStorage.getItem('jwt_access_token') ? true : false;\r\n        if(authed){\r\n            this.setState({ showStreamDropdown: !this.state.showStreamDropdown });\r\n        } else {\r\n            this.props.showLogin();\r\n        }\r\n        \r\n    }\r\n\r\n    openStatistics = () => {\r\n        let { match, statsData } = this.props;\r\n        // if(statsData?.[+match.params.fixtureId] && ['live', 'finished'].indexOf(statsData[+match.params.fixtureId].status_type)> -1  ) {\r\n        this.props.setStatistics(match.params.fixtureId, 'forPopup', 'live');\r\n        this.setState({ showLiveStream : false, showStreamDropdown: false });\r\n        // }\r\n    };\r\n\r\n    closeStatistics = () => {\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    setExtraMarket = (marketName) => {\r\n        this.props.selectExtraMarket(marketName);\r\n    }\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false});\r\n    }\r\n    \r\n    showLogin = () => {\r\n        this.setState({ showLogin: true});\r\n    }\r\n\r\n    getSingleMatchMarkets = async (fixtureId , count) => {\r\n        try {\r\n            let event =  dynamoClient.query(getLiveMatchMarkets(fixtureId.toString())).promise();\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        if(item.outcomes) {\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.livescore = livescore;\r\n                            fixture.Livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems, fixtureId);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                }\r\n                return fixture || e.Items[0];\r\n                \r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getSingleMatchPartialEvent = async (fixtureId) => {\r\n            try {\r\n            const language = this.props;\r\n            let event =  dynamoClient.query(getSingleLivePartialEvent(fixtureId)).promise();\r\n            await event.then(e => {\r\n                e.Items[0].participant_one_full = JSON.parse(e.Items[0].participant_one_full);\r\n                e.Items[0].participant_two_full = JSON.parse(e.Items[0].participant_two_full);\r\n                e.Items[0].participants = [e.Items[0].participant_one_full, e.Items[0].participant_two_full];\r\n                if(e.Items[0].location && e.Items[0].location_id) {\r\n                    e.Items[0].location = JSON.parse(e.Items[0].location);\r\n                    e.Items[0].location = { ...e.Items[0].location, Id: e.Items[0].location_id };\r\n                }\r\n                if(e.Items[0].league && e.Items[0].league_id) {\r\n                    e.Items[0].league = JSON.parse(e.Items[0].league);\r\n                    e.Items[0].league = { ...e.Items[0].league, Id: e.Items[0].league_id };\r\n                }\r\n                if(e.Items[0].sport && e.Items[0].sport_id) {\r\n                    e.Items[0].sport = JSON.parse(e.Items[0].sport);\r\n                    e.Items[0].sport = { ...e.Items[0].sport, Id: e.Items[0].sport_id };\r\n                }\r\n            });\r\n            return event;\r\n            \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    marketDifference = (markets, prevMarkets) =>  {\r\n        return map(markets, (market) => {   \r\n            const { Bets, Id } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.unsubscribeEvents();\r\n                this.setLiveMatchData(true);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => {\r\n                this.unsubscribeEvents();\r\n                this.setLiveMatchData(true);\r\n            },\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({value}) => {\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        let {liveMatch} =this.state;\r\n        let newFixture = {};\r\n\r\n        if (!updatedMatch || !liveMatch || liveMatch.fixture_id != updatedMatch?.match_id) return null;\r\n        \r\n        if(updatedMatch.outcomes){\r\n            let updatedMarket = Util.marketFormatter([updatedMatch], updatedMatch?.match_id);\r\n            let marketValue = updatedMarket && Object.values(updatedMarket)[0];\r\n            if (marketValue?.Bets && liveMatch.market[`id_${marketValue.Id}`]) {\r\n                let currBets = liveMatch.market[`id_${marketValue.Id}`];\r\n                let newBet = marketValue.Bets;\r\n                if (currBets?.Bets) newBet = { ...currBets.Bets, ...newBet };\r\n                updatedMarket[Object.keys(updatedMarket)[0]].Bets = newBet;\r\n            }\r\n            newFixture.market = { ...liveMatch.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = liveMatch.market;\r\n        }\r\n        if(updatedMatch.sport_event_status){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.sport_event_status);\r\n        }\r\n        else {\r\n            newFixture.Livescore = liveMatch.Livescore;\r\n        }\r\n\r\n        \r\n        \r\n        //const marketWithDiff1 =  this.marketDifference(newFixture.imp_market, this.state.event.imp_market);\r\n        const marketWithDiff2 =  this.marketDifference(newFixture.market, this.state.liveMatch.market);\r\n        newFixture.Markets = [ ...marketWithDiff2];\r\n        newFixture = {...liveMatch, ...newFixture};\r\n        // this.props.setCurrentEvent(newFixture);\r\n        this.setState({ liveMatch: newFixture}, () => {\r\n            //this.props.setExtraMarkets(newFixture.Markets)\r\n        });\r\n\r\n    }\r\n\r\n\r\n    unsubscribeEvents = () => {\r\n        if (liveMatchSub) liveMatchSub.close();\r\n        if (liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        console.log('***** UnSubscribed all live matches. *****');\r\n    };\r\n    render() {\r\n        const { closeModal, selectExtraMarket, extraSelectedMarket, match, statisticsType, language, statsData } = this.props;\r\n        let liveStreamAvailable = this.props.match.params.liveStreamAvailable;\r\n        liveStreamAvailable = liveStreamAvailable == 'true' ? true :false;\r\n        let { streamUrlData, selectedUrl, statsObj, liveMatch, noEvent, isLoading } = this.state;\r\n        let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n        let sportId = +match.params.sportId;\r\n       // let extraFiveMarkets = extraMarkets['All'];\r\n        const { showLiveStream } = this.state;\r\n        let type = 'live';\r\n            // liveMatch.fixture_status === lSportsConfig.statuses.inplay\r\n            //     ? 'live'\r\n            //     : liveMatch.fixture_status === lSportsConfig.statuses.prematch\r\n            //     ? 'sports'\r\n            //     : 'last-minute';\r\n        let leagueName = liveMatch.league && (liveMatch.league[lang] || liveMatch.league.name_en);\r\n        let results =\r\n            liveMatch.Livescore && liveMatch.Livescore.Scoreboard && liveMatch.Livescore.Scoreboard.Results\r\n                ? liveMatch.Livescore.Scoreboard.Results\r\n                : null;\r\n        results = results && Object.values(results);\r\n        let currentDate = liveMatch.start_date && Util.convertToLocalTimezone(liveMatch.start_date);\r\n        let timeString = currentDate?.timeString;\r\n        let hasStatistics = false;\r\n        if (statsData?.[+liveMatch.fixture_id] && ['live', 'finished'].indexOf(statsData[+liveMatch.fixture_id].status_type) > -1) {\r\n            hasStatistics = true;\r\n        }\r\n        let matchInfo = type === 'live' ? results ? results[0].Value + ' : ' + results[1].Value : '' : <time className=\"d-block lh-18\">{timeString}</time>;\r\n        let disbaledStatClass = !hasStatistics ? 'statistics_disabled' : '';\r\n\r\n        let drawEventHeader = (\r\n            !isEmpty(liveMatch) && !noEvent && <div className=\"team-name\">\r\n                {/* <span>{leagueName}</span> */}\r\n                <div className=\"d-flex justify-content-center team-name-section\">\r\n                    <p className=\"name-one ellipsis text-right\">{liveMatch.participants?.[0][lang] || liveMatch.participants?.[0].name_en}</p>\r\n                    <p className=\"extra-odd__score score\">\r\n                        {matchInfo}\r\n                        {/* <MatchDateTime fixture={liveMatch} showDate={false} /> */}\r\n                    </p>\r\n                    <p className=\"ellipsis name-two\">{liveMatch.participants?.[1][lang] || liveMatch.participants?.[1].name_en}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n        let currentlySelectedMarket = extraSelectedMarket ? extraSelectedMarket : 'All';\r\n        let extraMarketEventsList = extraMarkets[currentlySelectedMarket];\r\n        let fiveExtraMarket = extraMarkets['All'];\r\n        // let sportId = liveMatch.sport_id;\r\n        // check if all bets are settled\r\n        let areBetsAllSettled = Util.checkSettledBets(extraMarketEventsList);\r\n        let drawMarkets =\r\n        extraMarketEventsList && Object.keys(extraMarketEventsList).length > 0 && !this.state.noEvent ? (\r\n                areBetsAllSettled ? (\r\n                    <div className=\"no-data fs-15 pt-3 pb-3\">All the Odds are settled for this event.</div>\r\n                 ) : \r\n                (\r\n                    <Markets markets={extraMarketEventsList} fixture={liveMatch} type={type} leagueName={leagueName} currentlySelectedMarket={currentlySelectedMarket}/>\r\n                )\r\n            ) \r\n             : (\r\n                 <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n             );\r\n\r\n        let streamingList = [];\r\n        forEach(this.state.streamUrlData, (data, i) => \r\n            streamingList.push(<ListItem\r\n                button\r\n                selected={ this.state.selectedUrl  === i }\r\n                onClick = {() => this.toggleLiveStream(i)}\r\n                className={this.props.classes.listSection}\r\n                >\r\n                <ListItemText disableTypography \r\n                    secondary={<Typography type=\"body2\" style={{ color: this.state.selectedUrl === i ? '#16663e' : '#000' ,padding: '0px 8px'}}> {`Stream ${i + 1}`}</Typography>}\r\n                />\r\n            </ListItem>)\r\n        );\r\n    \r\n        return  isLoading ? (\r\n            <Loading customClass='odds-panel w-100'/>\r\n        ) : (\r\n            // <Dialog onClose={closeModal} aria-labelledby=\"extra-odds-dialog-title\" open={true} scroll=\"paper\" maxWidth=\"lg\" className=\"modal fade show d-block\" PaperProps={ { classes: { root: 'paper-root' } }}>\r\n            //     <div className='modal-dialog extra-mkt prematch modal-lg modal-dialog-centered m-0'>\r\n            <div className='extra-mkt'>\r\n                <div className='modal-header'>\r\n                    {/* <DialogTitle id=\"extra-odds-dialog-title\" className=\"modal-header\" disableTypography> */}\r\n                    <div className='head-right justify-content-between'>\r\n                        <IconButton aria-label=\"close\" className=\"close\" onClick={(e)=> this.props.history.push('/d/live-betting')}>\r\n                            <i className=\"material-icons icon-color\"> keyboard_arrow_left </i>\r\n                        </IconButton>\r\n                        {drawEventHeader}\r\n                        <div className = \"'icons_statistics'\">\r\n                            {/* <IconButton className={`data-icon ${disbaledStatClass}`}>\r\n                                    {statisticsEventId > 0 && statisticsType === 'forPopup' ? (\r\n                                        <i className={`icon-statistics text-green ${disbaledStatClass}`} onClick={(e) => this.closeStatistics()} />\r\n                                    ) : (\r\n                                        <i className={`icon-statistics text-grey ${disbaledStatClass}`} onClick={(e) => this.openStatistics()} />\r\n                                        )}\r\n                            </IconButton> */}\r\n                        </div>\r\n                        {/* <div className='button-grp'>\r\n                            {liveStreamAvailable ?\r\n                                <IconButton className='live-stream pr-1 pl-0' onClick={this.toggleDropdown}>\r\n                                    <div className=\"d-flex flex-column\">\r\n                                        <img className=\"stream-icon-extra-market\" alt=\"stream-icon\" src=\"/images/smart-tv-live-new.svg\"></img>\r\n                                        <div className=\"live-stream-triangle\"/>\r\n                                    </div>\r\n                                </IconButton> :\r\n\r\n                                <IconButton className='live-stream stream_disabled' >\r\n                                    <img className=\"stream-icon-extra-market\" alt=\"stream-icon\" src=\"/images/smart-tv-new.svg\"></img> \r\n                                </IconButton>}\r\n                            {this.state.showStreamDropdown  && <List className={this.props.classes.root} component=\"nav\" aria-label=\"Live Streams\">\r\n                                {streamingList}\r\n                            </List>}\r\n                            <IconButton className='data-icon'>\r\n                                { hasStatistics && !showLiveStream && statisticsType === 'forPopup' ? (\r\n                                    <i className={`icon-statistics text-green ${disbaledStatClass}`} onClick={(e) => this.closeStatistics()} />\r\n                                            ) : (\r\n                                                <i className={`icon-statistics text-grey ${disbaledStatClass}`} onClick={(e) => this.openStatistics()} />\r\n                                        )}\r\n                            </IconButton>\r\n                        </div> */}\r\n                    </div>\r\n                    {/* <div className=\"d-flex w-100 text-white ml-50 market-result-section\">\r\n                                <ul className=\"extra-market-ul\">\r\n                                    <li>\r\n                                        <span className=\"hr\">  {statsObj['currentPeriod']} </span><span className={`min ${sportId === '54094' && 'extra-mrkt-tennis'}`}><MatchDateTime fixture={liveMatch} showDate={true} /> </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div> */}\r\n                    <div className = \"d-flex w-100 market-result-section \">\r\n                        <ul className = 'extra-market-ul justify-content-center text-white '>\r\n                            <li>\r\n                                {statsObj['currentPeriod']}\r\n                            </li>\r\n                            <li className = \"ml-3\">\r\n                                {/* {matchInfo} */}\r\n                                <MatchDateTime fixture={liveMatch} showDate={true} />\r\n                            </li>\r\n                                  \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* </DialogTitle>\r\n\r\n                        <DialogContent className=\"modal-body\"> */}\r\n                <div className='modal-body'>\r\n                    <div className='d-flex five_markets'> \r\n                        {/* { this.props.statisticsEventId !== -1 && <Statistics /> } */}\r\n                        <FiveFeaturedMarkets markets={fiveExtraMarket} fixture={liveMatch} type={type} leagueName={leagueName} currentlySelectedMarket={currentlySelectedMarket} areBetsAllSettled={areBetsAllSettled} status = \"Live\"/>\r\n                    </div>\r\n                    {/* {hasStatistics && !showLiveStream && statisticsType === 'forPopup' && <Statistics />} */}\r\n                    {/* {liveStreamAvailable && showLiveStream && streamUrlData.length && <iframe title='Live Stream' width='100%' height='300vw'  style={{ border:'none'}} src={streamUrlData[selectedUrl].iframe}></iframe>} */}\r\n                    <div className=\"main-market-listing-header\">\r\n                        <ul>\r\n                            <ExtraMarketSelector\r\n                                selectExtraMarket={selectExtraMarket}\r\n                                extraSelectedMarket={currentlySelectedMarket}\r\n                                extraMarketNames={Util.getExtraMarketName(sportId).extraMarketNames}\r\n                            />\r\n                        </ul>\r\n                    </div>\r\n                    <div className='modal-content'>\r\n                        {drawMarkets}\r\n                    </div>\r\n                </div>\r\n                {/* </DialogContent> */}\r\n            </div>\r\n            // </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nExtraOddsModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    event: PropTypes.object,\r\n    extraSelectedMarket: PropTypes.string,\r\n    extraMarketsLoading: PropTypes.bool,\r\n    selectExtraMarket: PropTypes.func,\r\n    getExtraMarkets: PropTypes.func,\r\n    clearExtraMarkets: PropTypes.func,\r\n    extraMarketEvent: PropTypes.object,\r\n    setStatistics: PropTypes.func,\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        extraMarketsLoading: state.lsportsGlobal.extraMarketsLoading,\r\n        extraSelectedMarket: state.lsportsGlobal.extraSelectedMarket,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        language: state.general.language,\r\n        statsData: state.general.statsData,\r\n        userData: state.user.data,\r\n        partialEvents: state.inplay.partialEvents,\r\n        liveStreamData: state.inplay.liveStreamData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getExtraMarkets: (eventId) => dispatch(getExtraMarkets(eventId)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        clearExtraMarkets: () => dispatch(clearExtraMarkets()),\r\n        setStatistics: (eventId, statsType, statsTemplateType) => dispatch(setStatistics(eventId, statsType, statsTemplateType)),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setExtraMarketLocationName: (location) => dispatch(setExtraMarketLocationName(location)),\r\n        setExtraMarketLeagueName: (league) => dispatch(setExtraMarketLeagueName(league)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ExtraOddsModal)));\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Market from './Market';\r\nimport Util from '../../helper/Util';\r\nimport {MarketIdMapping} from '../../config/markets';\r\n\r\nfunction Markets(props) {\r\n    let { markets, fixture, type, leagueName, currentlySelectedMarket = 'All'} = props;\r\n    const [prematchMarkets, setPrematchMarkets] = useState([]);\r\n    useEffect(() => {\r\n       setPrematchMarkets(markets);\r\n    },[markets]);\r\n\r\n    useEffect(() => {\r\n        markets && setPrematchMarkets(Object.values(markets));\r\n    },[markets, fixture]);\r\n    \r\n    const sortMarkets = (array, key) => {\r\n        let sportId = props.fixture.sport_id;\r\n        const order = Util.getExtraMarketNamePrematch(sportId)[MarketIdMapping[currentlySelectedMarket]].marketIds;\r\n        array.sort( (a, b) => {\r\n          var A = a[key],\r\n              B = b[key];\r\n          let indA = order.indexOf(A);\r\n          let indB = order.indexOf(B);\r\n          if (indA === -1) indA = order.length - 1;\r\n          if (indB === -1) indB = order.length - 1;\r\n\r\n          if (indA < indB) {\r\n              return -1;\r\n          } else if (indA > indB) {\r\n              return 1;\r\n          }\r\n          return 0;\r\n          \r\n        });\r\n        \r\n        return array;\r\n      };\r\n\r\n    const sortedMarkets = sortMarkets(prematchMarkets, 'Id');\r\n\r\n\r\n    //const sortedMarkets = orderBy(liveMarkets, ['Id'], 'asc');\r\n    const drawMarkets = prematchMarkets ? (\r\n        <div>\r\n            {sortedMarkets.map((market) => {\r\n                return <Market \r\n                Market={market}\r\n                fixture={fixture}\r\n                column={3} \r\n                key={market.Id} \r\n                type={type} \r\n                leagueName={leagueName} \r\n                />;\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div className=\"no-data fs-15 pt-3 pb-3\">No data</div>\r\n    );\r\n\r\n    return drawMarkets;\r\n}\r\n\r\nMarkets.propTypes = {\r\n    fixture: PropTypes.object,\r\n    markets: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default Markets;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Util from '../../helper/Util';\r\nimport { intervalTime, lSportsConfig } from '../../config';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport Markets from '../Shared/MarketsPrematch';\r\nimport ExtraMarketSelector from '../Shared/ExtraMarketSelector';\r\n//import Statistics from '../Shared/Statistics';\r\n//import { getExtraMarkets, clearExtraMarkets, selectExtraMarket, setStatistics, clearStatistics } from '../../store/actions/lsports.global.actions';\r\nimport Statistics from '../Shared/Statistics';\r\nimport { getExtraMarkets, clearExtraMarkets, selectExtraMarket, setStatistics, clearStatistics, setExtraMarketLeagueName, setExtraMarketLocationName } from '../../store/actions/lsports.global.actions';\r\nimport { forEach, isEmpty } from 'lodash';\r\nimport { dynamoClient } from '../../App';\r\nimport { paramsMarketData, paramsMarketDataIndex, paramsSinglePrematchDEvent } from '../../dynamo/params';\r\nimport { Translate } from '../../localization';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FiveFeaturedMarkets from '../FiveFeaturedMarkets.js';\r\n\r\nlet extraMarkets = {};\r\nlet timer;\r\nclass ExtraOddsModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marketsUpdated: {},\r\n            prematchEvent: {},\r\n            noEvent: false,\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { extraMarketEvent, match, language } = this.props;\r\n\r\n        let sportId = match.params.sportId;\r\n        let fixtureId = match.params.fixtureId;\r\n        this.setExtraMarket('All');\r\n        this.getSinglePartialEvent(fixtureId).then(partialEvent => {\r\n            this.getSinglePartialMarket(fixtureId).then(partialMarket => {\r\n                const event = { ...partialEvent[0], ...partialMarket };\r\n                if (!partialMarket || !partialMarket || Util.getFormattedDate(event.start_date) < new Date()) {\r\n                    this.setState({ noEvent: true, isLoading: false });\r\n                    return;\r\n                }\r\n                this.setState({ prematchEvent: event }, () => {\r\n                    this.openStatistics();\r\n                    if (!this.state.noEvent) {\r\n                        this.props.setExtraMarketLeagueName(event.league[language === 'en' ? 'name_en' : `name_${language.toLowerCase()}`]);\r\n                        this.props.setExtraMarketLocationName(event.location[language === 'en' ? 'name_en' : `name_${language.toLowerCase()}`]);\r\n                    }\r\n                    this.setState({ isLoading: false });\r\n                });\r\n            });\r\n        });\r\n\r\n\r\n\r\n        timer = setInterval(() => {\r\n            this.getSinglePartialMarket(fixtureId).then(partialMarket => {\r\n                let { prematchEvent } = this.state;\r\n                const event = { ...prematchEvent, ...partialMarket };\r\n                if (!partialMarket || !event.start_date || Util.getFormattedDate(event.start_date) < new Date()) {\r\n                    this.setState({ noEvent: true, isLoading: false });\r\n                    return;\r\n                }\r\n                this.setState({ prematchEvent: event });\r\n\r\n            });\r\n        }, intervalTime);\r\n\r\n\r\n        // this.props.getExtraMarkets(fixtureId);\r\n\r\n        // if (extraMarketEvent.has_live_statistics || extraMarketEvent.has_prematch_statistics) {\r\n        //     let statsTemplateType = extraMarketEvent.has_live_statistics ? 'live' : extraMarketEvent.has_prematch_statistics ? 'prematch' : '';\r\n        //     let eventId = extraMarketEvent.fixture_id;\r\n        //     this.props.setStatistics(eventId, 'forPopup', statsTemplateType);\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { extraMarketEvent, match } = this.props;\r\n        const { prematchEvent } = this.state;\r\n        if (prevState.prematchEvent !== prematchEvent) {\r\n\r\n            let sportId = match.params.sportId;\r\n            Util.getExtraMarketNamePrematch(sportId).extraMarketNames.forEach(e => {\r\n                extraMarkets[e] = {};\r\n            });\r\n            extraMarkets = Util.getExtraMarketsPrematch(extraMarkets, prematchEvent, +sportId);\r\n\r\n            this.setState({ marketsUpdated: extraMarkets });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearExtraMarkets();\r\n        this.props.clearStatistics();\r\n        clearInterval(timer);\r\n    }\r\n\r\n    setExtraMarkets = () => {\r\n        let { match } = this.props;\r\n        let { prematchEvent } = this.state;\r\n        let sportId = match.params.sportId;\r\n        let fixtureId = match.params.fixtureId;\r\n\r\n        Util.getExtraMarketNamePrematch(sportId).extraMarketNames.forEach(e => {\r\n            extraMarkets[e] = {};\r\n        });\r\n        extraMarkets = Util.getExtraMarketsPrematch(extraMarkets, prematchEvent, sportId);\r\n        this.setState({ marketsUpdated: extraMarkets });\r\n    }\r\n\r\n    setExtraMarket = (marketName) => {\r\n        this.props.selectExtraMarket(marketName);\r\n    }\r\n\r\n    getSinglePartialEvent = async (fixtureId) => {\r\n        let event = dynamoClient.query(paramsSinglePrematchDEvent(fixtureId)).promise();\r\n        return await event.then(res => {\r\n            let { Items } = res;\r\n            return Util.partialMatchFormatter(Items);\r\n        });\r\n    }\r\n\r\n    getSinglePartialMarket = async (fixtureId) => {\r\n        let markets = dynamoClient.query(paramsMarketDataIndex(fixtureId)).promise();\r\n        const res = await markets;\r\n        let markets_1 = {};\r\n        let Items = res?.Items;\r\n        if (Items.length)\r\n            markets_1['market'] = Util.marketFormatter(Items, fixtureId);\r\n        return markets_1;\r\n    }\r\n\r\n    openStatistics = () => {\r\n        let { extraMarketEvent, statsData } = this.props;\r\n        let { prematchEvent } = this.state;\r\n        if (true || statsData?.[+prematchEvent.fixture_id]) {\r\n            let statsTemplateType = prematchEvent.has_live_statistics ? 'live' : prematchEvent.has_prematch_statistics ? 'prematch' : '';\r\n            let eventId = prematchEvent.fixture_id;\r\n            this.props.setStatistics(eventId, 'forPopup', 'prematch');\r\n        }\r\n    };\r\n\r\n    closeStatistics = () => {\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    render() {\r\n        // let fixtureId = this.props.match.params.fixtureId;\r\n\r\n        let {\r\n            closeModal,\r\n            extraMarkets,\r\n            selectExtraMarket,\r\n            extraSelectedMarket,\r\n            extraMarketsLoading,\r\n            extraMarketEvent,\r\n            statisticsEventId,\r\n            statisticsType,\r\n            statsData,\r\n            language,\r\n            match\r\n        } = this.props;\r\n\r\n        let { prematchEvent, noEvent, isLoading } = this.state;\r\n        let extraMarketNames = prematchEvent && Object.keys(prematchEvent);\r\n        extraMarketEvent = {};\r\n        let lang = `name_${ language.toLowerCase() }`;\r\n        let sportId = match.params.sportId;\r\n        let type = 'sports';\r\n        let leagueName;\r\n        if (!isEmpty(prematchEvent)) {\r\n            leagueName = prematchEvent?.league?.[lang] ? prematchEvent?.league?.[lang] : prematchEvent?.league?.name_en;\r\n        }\r\n        let results =\r\n            !isEmpty(prematchEvent) && prematchEvent.livescore && prematchEvent.livescore.Scoreboard && prematchEvent.livescore.Scoreboard.Results\r\n                ? prematchEvent.livescore.Scoreboard.Results\r\n                : null;\r\n\r\n        let currentDate = !isEmpty(prematchEvent) && Util.convertToLocalTimezone(prematchEvent.start_date);\r\n        let timeString = currentDate?.timeString;\r\n\r\n        let matchInfo = type === 'live' ? results ? results[0].Value + ' : ' + results[1].Value : '' :\r\n        <time className = \"d-block text-white time_string\">{currentDate?.dateString} {timeString}</time>;\r\n\r\n        let disbaledStatClass = !(extraMarketEvent.has_live_statistics || statsData?.[+prematchEvent.fixture_id]) ? 'statistics_disabled' : '';\r\n\r\n        let drawEventHeader = (\r\n            !isEmpty(prematchEvent) && !noEvent && <div className=\"team-name \">\r\n                <div className=\" d-flex justify-content-center team-name-section \">\r\n                    <p className=\"name-one ellipsis text-right\">{prematchEvent?.participants[0][lang] || prematchEvent?.participants[0].name_en}</p>\r\n                    <p className=\"extra-odd__score score\">\r\n                        <p className=\"score-num\">-:-</p>\r\n                        {/* {matchInfo} */}\r\n                    </p>\r\n                    <p className=\"ellipsis name-two\">{prematchEvent?.participants[1][lang] || prematchEvent?.participants[1].name_en}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        let extraMarketEventsList = this.state.marketsUpdated[extraSelectedMarket];\r\n        let extraFiveMarkets = this.state.marketsUpdated['All'];\r\n        // check if all bets are settled\r\n        let areBetsAllSettled = Util.checkSettledBetsPrematch(extraMarketEventsList);\r\n        const extraMarketButtons = [];\r\n\r\n        forEach(Util.getExtraMarketName(sportId).extraMarketNames, (market) => {\r\n            extraMarketButtons.push(<li key={market}> <button className={extraSelectedMarket === market && 'active_prematch'} onClick={() => this.setExtraMarket(market)}> {Translate.tabNames[market]} </button></li>);\r\n        });\r\n\r\n        let drawMarkets =\r\n            prematchEvent && Object.keys(prematchEvent).length > 0 && !noEvent ? (\r\n                areBetsAllSettled ? (\r\n                    <div className=\"no-data fs-15 pt-3 pb-3\">All the Odds are settled for this event.</div>\r\n                ) : (\r\n                    <Markets markets={extraMarketEventsList} fixture={prematchEvent} type={type} leagueName={leagueName} />\r\n                    )\r\n            ) : (\r\n                <div className=\"no-data fs-15 pt-3 pb-3 text-center\">No data</div>\r\n                );\r\n\r\n        return isLoading ? (\r\n            <Loading customClass='odds-panel w-100' />\r\n        ) : (\r\n            <div className='extra-mkt prematch '>\r\n                <div className=\"modal-header\" >\r\n                    <div className='head-right justify-content-between'>\r\n                        <IconButton aria-label=\"close\" className=\"close\">\r\n                            <i  className=\"material-icons icon-color\" onClick={(e) => this.props.history.push('/d/sports')}> keyboard_arrow_left </i>\r\n                        </IconButton>\r\n                        {drawEventHeader}\r\n                        <div className = 'icons_statistics'>\r\n                            {/* <IconButton className={`data-icon ${disbaledStatClass}`}>\r\n                                    {statisticsEventId > 0 && statisticsType === 'forPopup' ? (\r\n                                        <i className={`icon-statistics text-green ${disbaledStatClass}`} onClick={(e) => this.closeStatistics()} />\r\n                                    ) : (\r\n                                        <i className={`icon-statistics text-grey ${disbaledStatClass}`} onClick={(e) => this.openStatistics()} />\r\n                                        )}\r\n                            </IconButton> */}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className = \"d-flex w-100 market-result-section \">\r\n                        <ul className = 'extra-market-ul justify-content-center text-white '>\r\n                            <li>\r\n                                {matchInfo}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className='modal-body'>\r\n                    <div className='d-flex five_markets'> \r\n                        {/* <Statistics /> */}\r\n                        <FiveFeaturedMarkets markets={extraFiveMarkets} fixture={prematchEvent} type={type} leagueName={leagueName}  areBetsAllSettled={areBetsAllSettled} status = \"PreMatch\"/>\r\n                    </div>\r\n                    <div className=\"main-market-listing-header\">\r\n                        <ul >\r\n                            {/* {marketButtons} */}\r\n\r\n                            <ExtraMarketSelector\r\n                                selectExtraMarket={selectExtraMarket}\r\n                                extraSelectedMarket={extraSelectedMarket}\r\n                                extraMarketNames={Util.getExtraMarketName(sportId).extraMarketNames}\r\n                            />\r\n                        </ul>\r\n                    </div>\r\n                    <div className='modal-content'>\r\n\r\n                        {drawMarkets}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                    \r\n\r\n            </div>\r\n\r\n\r\n\r\n            );\r\n    }\r\n}\r\n\r\nExtraOddsModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    // event: PropTypes.object,\r\n    extraMarkets: PropTypes.object,\r\n    extraSelectedMarket: PropTypes.string,\r\n    extraMarketsLoading: PropTypes.bool,\r\n    selectExtraMarket: PropTypes.func,\r\n    getExtraMarkets: PropTypes.func,\r\n    clearExtraMarkets: PropTypes.func,\r\n    extraMarketEvent: PropTypes.object,\r\n    setStatistics: PropTypes.func,\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        extraMarkets: state.lsportsGlobal.extraMarkets,\r\n        extraMarketsLoading: state.lsportsGlobal.extraMarketsLoading,\r\n        extraSelectedMarket: state.lsportsGlobal.extraSelectedMarket,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        statsData: state.general.statsData,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getExtraMarkets: (eventId) => dispatch(getExtraMarkets(eventId)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        clearExtraMarkets: () => dispatch(clearExtraMarkets()),\r\n        setStatistics: (eventId, statsType, statsTemplateType) => dispatch(setStatistics(eventId, statsType, statsTemplateType)),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setExtraMarketLocationName: (location) => dispatch(setExtraMarketLocationName(location)),\r\n        setExtraMarketLeagueName: (league) => dispatch(setExtraMarketLeagueName(league)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ExtraOddsModal));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';import { Translate } from '../../localization';\r\n\r\nfunction FastBetPopup(props) {\r\n    const setFastBetOption = (e) => {\r\n        props.setFastBetOption(e);\r\n    };\r\n\r\n    let { closeModal } = props;\r\n\r\n    return (\r\n        <Dialog onClose={closeModal} aria-labelledby=\"fast-bet-dialog-title\" open={true} scroll=\"body\">\r\n            <DialogTitle id=\"fast-bet-dialog-title\" disableTypography>\r\n                <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n                {/* <div className=\"dialog-logo-wrap\">\r\n                    <i className=\"icon-logo-1\"></i>\r\n                    <i className=\"icon-logo-2\"></i>\r\n                </div> */}\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\" material-icons fs-22 text-white\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className=\"pt-0 bg-color\">\r\n                <p className=\"text-center text-white mb-0 mt-2\">{Translate.acceptOddChangesText}</p>\r\n\r\n                <div className=\"fast-bet__btn-wrap\">\r\n                    <button className=\"fast-bet__btn\" id=\"turn-off\" onClick={(e) => setFastBetOption(e.target.id)}>\r\n                        {Translate.turnOffAway}\r\n                    </button>\r\n                    <button className=\"fast-bet__btn\" id=\"accept-changes\" onClick={(e) => setFastBetOption(e.target.id)}>\r\n                        {Translate.acceptOddChanges}\r\n                    </button>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nFastBetPopup.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    setFastBetOption: PropTypes.func,\r\n};\r\n\r\nexport default FastBetPopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Translate } from '../../localization';\r\n\r\nfunction PlaceBetPopup(props) {\r\n    const setPlaceBetOption = (e) => {\r\n        props.setPlaceBetOption(e);\r\n    };\r\n\r\n    let { closeModal } = props;\r\n\r\n    return (\r\n        <Dialog onClose={closeModal} aria-labelledby=\"fast-bet-dialog-title\" open={true} scroll=\"body\">\r\n            <DialogTitle id=\"fast-bet-dialog-title\" disableTypography>\r\n                <img src=\"/images/logo.png\" alt=\"Logo\" />\r\n                {/* <div className=\"dialog-logo-wrap\">\r\n                    <i className=\"icon-logo-1\"></i>\r\n                    <i className=\"icon-logo-2\"></i>\r\n                </div> */}\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\" material-icons fs-22 text-white\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className=\"pt-0 bg-color\">\r\n                <p className=\"text-center text-white mb-0 mt-2\">{Translate.acceptOddChangesText}</p>\r\n\r\n                <div className=\"fast-bet__btn-wrap\">\r\n                    <button className=\"fast-bet__btn\" id=\"accept-changes\" onClick={(e) => setPlaceBetOption(e.target.id)}>\r\n                        Accept \r\n                    </button>\r\n                    <button className=\"fast-bet__btn\" id=\"cancel\" onClick={(e) => setPlaceBetOption(e.target.id)}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nPlaceBetPopup.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    setPlaceBetOption: PropTypes.func,\r\n};\r\n\r\nexport default PlaceBetPopup;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport forEach from 'lodash.foreach';\r\nimport Util from '../../helper/Util';\r\nimport { Translate } from '../../localization';\r\nimport Button from '@material-ui/core/Button';\r\nimport BetslipList from './BetslipList';\r\nimport BetslipSingle from './BetslipSingle';\r\nimport ExtraOddsModalLive from '../Inplay/ExtraOddsModal';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport FastBetPopup from './FastBetPopup';\r\nimport PlaceBetPopup from './PlaceBetPopup';\r\nimport Loading from '../../Components/Common/Loading';\r\nimport { CountdownComponent } from './CountdownComponent';\r\nimport Login from '../../Components/Login';\r\nimport {\r\n    clearBets,\r\n    checkSavedBets,\r\n    getBetLimits,\r\n    placeBet,\r\n    setPlaceBetError,\r\n    setPlaceBetSuccess,\r\n    setPlaceBetCountdown,\r\n    setLastBetslipId,\r\n    getLastBetslip,\r\n    updateBetslipEventsMarket,\r\n    updateBetslipEventsLivescore,\r\n    updateBetslipEventsStatus,\r\n    placeBetWithOutLoader,\r\n    removeBet,\r\n    setPlaceBetDisabled,\r\n    updateBetslipEvent,\r\n} from '../../store/actions/betslip.actions';\r\nimport { selectExtraMarket, setCurrentEvent, setExtraMarkets } from '../../store/actions/lsports.global.actions';\r\nimport { isEqual } from 'lodash';\r\nimport map from 'lodash.map';\r\nimport find from 'lodash.find';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { onUpdateMatchMarkets } from '../../graphql/subscriptions';\r\nimport { dynamoClient } from '../../App';\r\nimport { getLiveMatchMarkets, getSingleMarketOfEvent, getLiveMatchIds, getLiveScore, updatedgetLiveMatchMarkets } from '../../dynamo/inplayParams';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\nimport { paramsMarketDataIndex } from '../../dynamo/params';\r\nimport CasinoGames from './CasinoGames';\r\nimport { setUpdatedMatchData } from '../../store/actions/todayActions';\r\n\r\nlet unsubscribe = {};\r\nlet timer;\r\nlet liveMatchSub;\r\nlet marketSubscription;\r\nlet websocket;\r\nlet websocketConnectionAttempts = 0;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\nlet setTimer;\r\n\r\nclass Betslip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTabId: this.props.count > 1 ? '2' : '1',\r\n            showExtraOddsModal: false,\r\n            currentEvent: {},\r\n            fastBetChecked: localStorage.getItem('fast_bet') ? (localStorage.getItem('fast_bet') === 'on' ? true : false) : true,\r\n            fastBetOff: false, // off the fast bet switch after placing a bet\r\n            betType: null,\r\n            showFastBetModal: false,\r\n            showPlaceBetModal: false,\r\n            showLogin: false,   \r\n            fixtureIdArray: [],\r\n            liveMatches: {},\r\n            counter: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { fixtures, getBetLimits } = this.props;\r\n        this.props.checkSavedBets();\r\n        if (fixtures.length) this.getLiveMatches().then(data => this.checkBetsValidity(fixtures, data));\r\n        if (this.isLoggedIn()) {\r\n            getBetLimits();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { fixtures, count, singleStake, multiStake, canNotBeCombined, userData, setPlaceBetError, getBetLimits, language } = this.props;\r\n        if (prevProps.count !== count) {\r\n            this.setState({ activeTabId: count > 1 ? '2' : '1' });\r\n        }\r\n\r\n        if (prevProps.singleStake !== singleStake || prevProps.multiStake !== multiStake) {\r\n            setPlaceBetError(null);\r\n        }\r\n\r\n        if (prevProps.canNotBeCombined !== canNotBeCombined) {\r\n            if (!canNotBeCombined) {\r\n                setPlaceBetError(null);\r\n            }\r\n        }\r\n\r\n        if (prevProps.userData !== userData) {\r\n            if (this.isLoggedIn()) {\r\n                getBetLimits();\r\n            }\r\n        }\r\n\r\n        if(!isEqual(prevProps.fixtures.length, fixtures.length)) {\r\n            this.getLiveMatches().then(data => this.checkBetsValidity(fixtures, data));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setPlaceBetCountdown(false);\r\n        this.props.setPlaceBetSuccess(false);\r\n        this.props.setLastBetslipId(false);\r\n        this.unsubscribe();\r\n        clearInterval(setTimer);\r\n    }\r\n\r\n    startListener = () => {\r\n        // websocket = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        // websocket.addEventListener('open', () => {\r\n        //     websocketConnectionAttempts = 0;\r\n        // });\r\n\r\n        // websocket.addEventListener('message', (event) => {\r\n        //     this.handleFirebaseUpdates({value: event});\r\n        // });\r\n\r\n        // websocket.addEventListener('error', (error) => {\r\n        //     console.warn(error);\r\n\r\n        //     if (this.state.isDisconnected) return;  // Network is disconnected\r\n        //     else websocketConnectionAttempts++;     // Network is not disconnected\r\n\r\n        //     if (websocketConnectionAttempts < maxWebsocketRetryCount) {\r\n        //         // Retry websocket connection\r\n        //         this.startListener();\r\n        //     } else {\r\n        //         // Open appsync connection\r\n        //         this.startListenerAppSync();\r\n        //     }\r\n        // });\r\n\r\n        const fixtures = this.props.fixtures;\r\n        let liveFixtureId = fixtures.filter((f) => f.fixture.fixture_status == 1);\r\n        let fixtureIdArray = [];\r\n        let obj = {};\r\n        let liveObj = {};\r\n        liveFixtureId.map((liveFix) => {\r\n            liveFix.markets.map((mar) => {\r\n                mar.bets.map((bet) => {\r\n                    let id = bet.actualFixtureId.split('^')[0];\r\n                    obj = { ...obj, [bet.actualFixtureId]: { fixture_id: bet.actualFixtureId.toString() } };\r\n                    liveObj = { ...liveObj, [bet.actualFixtureId]: { fixture_id: id.toString() + '^sport_event_status' } };\r\n                });\r\n            });\r\n        });\r\n        if(liveFixtureId.length){\r\n            setTimer = setInterval(() => {\r\n                this.updatedgetSingleMatchMarkets(obj);\r\n                this.setLiveScore(liveObj);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    startListenerAppSync = () => {\r\n        const { fixtureIdArray } = this.state;\r\n\r\n        forEach(fixtureIdArray, async (fixtureId ) => {\r\n            let marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n            // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below. \r\n            let unsub = marketSubscription.subscribe({\r\n                next: this.handleFirebaseUpdates,\r\n                error: (error) => console.warn(error),\r\n            });\r\n            unsubscribe[fixtureId] = unsub;\r\n\r\n            // Stop receiving data updates from the subscription\r\n            // setTimeout(() => {\r\n            //     unsub.unsubscribe();\r\n            // }, 30000);\r\n        });\r\n    }\r\n\r\n    updatedgetSingleMatchMarkets = async (fixtureId) => {\r\n        try {\r\n            let event;\r\n            event = dynamoClient.batchGet(updatedgetLiveMatchMarkets(fixtureId)).promise();\r\n            return await event.then((e) => {\r\n                const { updateBetslipEventsMarket, updateBetslipEventsLivescore, updateBetslipEventsStatus } = this.props;\r\n                let {\r\n                    Responses: { LiveMarkets },\r\n                } = e;\r\n                LiveMarkets.map((item) => {\r\n                    let { match_id: fixtureId, outcomes: market, fixture_status: status } = item;\r\n                    if (!market && !status) return null;\r\n                    market = market ? Util.marketFormatter([item], fixtureId) : {};\r\n                    updateBetslipEventsMarket({ [fixtureId]: { FixtureId: fixtureId, Market: market } });\r\n                    if (status && status == lSportsConfig.statuses.results) {\r\n                        delete unsubscribe[fixtureId];\r\n                        updateBetslipEventsStatus({ [fixtureId]: { FixtureId: fixtureId, Status: status } });\r\n                    }\r\n                });\r\n                \r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    setLiveScore = async (fixtureId) => {\r\n        try {\r\n            let event;\r\n            event = dynamoClient.batchGet(getLiveScore(fixtureId)).promise();\r\n            return await event.then((e) => {\r\n                const { updateBetslipEventsLivescore } = this.props;\r\n                let {\r\n                    Responses: { LiveMarkets },\r\n                } = e;\r\n                LiveMarkets.map((item) => {\r\n                    let { match_id: fixtureId, sport_event_status: livescore, fixture_status: status } = item;\r\n                    if (livescore) {\r\n                        livescore = JSON.parse(livescore);\r\n                        updateBetslipEventsLivescore({ [fixtureId]: { FixtureId: fixtureId, Livescore: livescore } });\r\n                    }\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    handleCounter = (counter) => {\r\n        this.setState({counter: counter});\r\n    }\r\n\r\n    getLiveMatches = async () => {\r\n        try {\r\n            let event =  dynamoClient.scan(getLiveMatchIds()).promise();\r\n            return await event.then(e => {\r\n                let { Items } = e;\r\n                if (Items.length) return Items.map(item => item.fixture_id);\r\n                return []; \r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    checkBetsValidity = (fixtures, data) => {\r\n        // fixtures = fixtures.filter(f => data.indexOf(f.fixtureId) > -1);\r\n        fixtures = fixtures.filter(f => {\r\n            const { fixture, fixtureId } = f;\r\n            let status = fixture.fixture_status;\r\n            let isEventLive = data && data.indexOf(fixtureId) > -1;\r\n            if ((fixture.fixture_status == lSportsConfig.statuses.inplay && isEventLive) || (fixture.fixture_status != lSportsConfig.statuses.inplay && !isEventLive)) {\r\n                return f;\r\n            }\r\n            status = isEventLive ? lSportsConfig.statuses.inplay : fixture.fixture_status == lSportsConfig.statuses.inplay ? lSportsConfig.statuses.results : lSportsConfig.statuses.prematch;\r\n            this.props.updateBetslipEventsStatus({[f.fixtureId]: {FixtureId: f.fixtureId, Status: status }});\r\n            delete unsubscribe[fixtureId];\r\n        });\r\n        if (fixtures.length > 0) {\r\n            let fixtureIdArray = map(fixtures, (f) => {\r\n                let isLive = f.fixture.fixture_status == lSportsConfig.statuses.inplay;\r\n                this.getSingleMatchMarkets(f.fixtureId, isLive).then(data => {\r\n                    if(data)\r\n                    {\r\n                        let { market, livescore } = data;\r\n                        let participant_one_full = f.fixture.participant_one_full;\r\n                        let participant_two_full = f.fixture.participant_two_full;\r\n                        if (!market && !livescore) return null;\r\n                        if (market) {\r\n                            this.props.updateBetslipEventsMarket({[f.fixtureId]: { FixtureId: f.fixtureId, Market: market }});\r\n                            // update fixture data for prematch bets\r\n                            if(!isLive) {\r\n                                this.props.updateBetslipEvent({ FixtureId: f.fixtureId, Market: market });\r\n                                this.props.setUpdatedMatchData({ ...f.fixture, market, participants: [participant_one_full || {}, participant_two_full || {}] });\r\n                            };\r\n                        }\r\n                        if (livescore) this.props.updateBetslipEventsLivescore({[f.fixtureId]: { FixtureId: f.fixtureId, Livescore: livescore }});\r\n                    }\r\n                });\r\n                if (isLive) return f.fixtureId;\r\n            });\r\n            fixtureIdArray = fixtureIdArray.filter(f => f);\r\n            this.setState({ fixtureIdArray: fixtureIdArray }, () => {\r\n                this.unsubscribe();\r\n                this.startListener();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFirebaseUpdates = ({value}) => {\r\n        if (!value?.data) return null;\r\n\r\n        const { updateBetslipEventsMarket, updateBetslipEventsLivescore, updateBetslipEventsStatus } = this.props;\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n\r\n        let { match_id: fixtureId, outcomes: market, sport_event_status: livescore, fixture_status: status } = updatedMatch;\r\n        if (!market && !livescore && !status) return null;\r\n        market = market ? Util.marketFormatter([updatedMatch], fixtureId) : {};\r\n        updateBetslipEventsMarket({[fixtureId]: { FixtureId: fixtureId, Market: market }});\r\n        if (livescore) {\r\n            livescore = JSON.parse(livescore);\r\n            updateBetslipEventsLivescore({[fixtureId]: { FixtureId: fixtureId, Livescore: livescore }});\r\n        }\r\n        if (livescore && status && status == lSportsConfig.statuses.results) {\r\n            delete unsubscribe[fixtureId];\r\n            updateBetslipEventsStatus({[fixtureId]: {FixtureId: fixtureId, Status: status }});\r\n        }\r\n    }\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.subscribeExtraMarket(fixtureId);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => console.warn(error));\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => console.warn(error),\r\n        });\r\n    }\r\n\r\n    openExtraOddsModalLiveMatch = (fixture, liveStreamAvailable) => {\r\n        this.unsubscribe();\r\n        this.getSingleMatchMarkets(fixture.fixture_id, true).then(data => {\r\n            if(data)\r\n            {\r\n                this.subscribeExtraMarket(fixture.fixture_id);\r\n                const newFixture = {...fixture};\r\n                newFixture.market = data.market;\r\n                newFixture.Markets = {...data.market};\r\n                newFixture.Livescore = data.livescore || {};\r\n                this.setState({ currentEvent: newFixture, liveStreamAvailable: liveStreamAvailable }, () => {\r\n                this.props.setCurrentEvent(newFixture);\r\n                this.setState({ showExtraOddsModal: true });\r\n                });\r\n            }\r\n        });        \r\n    }\r\n\r\n    getSingleMatchMarkets = async (fixtureId, isLive) => {\r\n        try {\r\n            let event;\r\n            if (isLive) {\r\n                event = dynamoClient.query(getLiveMatchMarkets(fixtureId.toString())).promise();\r\n            } else {\r\n                event = dynamoClient.query(paramsMarketDataIndex(fixtureId.toString())).promise();\r\n            }\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        // If match is already over Update the status to 3 so it will be removed from UI\r\n                        if (item.fixture_status == lSportsConfig.statuses.results) {\r\n                            this.props.updateBetslipEventsStatus({[item.fixture_id]: {FixtureId: item.fixture_id, Status: item.fixture_status }});\r\n                            return;\r\n                        }\r\n                        if(item.outcomes) {\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems, fixtureId);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                } else {\r\n                    // If not present in any table consider it as finished event.\r\n                    this.props.updateBetslipEventsStatus({[fixtureId]: {FixtureId: fixtureId, Status: lSportsConfig.statuses.results }});\r\n                    delete unsubscribe[fixtureId];\r\n                }\r\n                return fixture || e.Items[0];\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getSingleMarketOfMatch = async (fixtureMarketId) => {\r\n        try {\r\n            let event =  dynamoClient.query(getSingleMarketOfEvent(fixtureMarketId.toString())).promise();\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    forEach(Items, (item) => {\r\n                        if(item.market) {\r\n                            let mrktData = JSON.parse(item.market);\r\n                            fixture.market = { ...fixture.market, ...mrktData };\r\n                        }\r\n                        if(item.livescore) {\r\n                            let livescore = JSON.parse(item.livescore);\r\n                            fixture.livescore = livescore;\r\n                        }\r\n                    });\r\n                }\r\n                return fixture || e.Items[0];\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    marketDifference = (markets, prevMarkets) =>  {\r\n        return map(markets, (market) => {   \r\n            const { Bets, Id, Name } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({value}) => {\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        if (!updatedMatch) return null;\r\n        this.handleFirebaseUpdates({value});\r\n        let {currentEvent} = this.state;\r\n        let newFixture = {};\r\n\r\n        if (!updatedMatch || !currentEvent || currentEvent.fixture_id != updatedMatch?.match_id) return null;\r\n\r\n        if(updatedMatch.market){\r\n            let updatedMarket = JSON.parse(updatedMatch.market);\r\n            newFixture.market = { ...currentEvent.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = currentEvent.market;\r\n        }\r\n        if(updatedMatch.livescore){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.livescore);\r\n        }\r\n        else {\r\n            newFixture.Livescore = currentEvent.Livescore;\r\n        }\r\n\r\n        // const marketWithDiff1 =  this.marketDifference(newFixture.imp_market, this.state.currentEvent.imp_market);\r\n        const marketWithDiff2 =  this.marketDifference(newFixture.market, this.state.currentEvent.market);\r\n        newFixture.Markets = {...marketWithDiff2};\r\n        newFixture = {...currentEvent, ...newFixture};\r\n        this.props.setCurrentEvent(newFixture);\r\n        this.setState({ currentEvent: newFixture}, () => {this.props.setExtraMarkets(newFixture.Markets);});\r\n\r\n    }\r\n\r\n    unsubscribe =() => {\r\n        console.log(' *******  Unsubscribe live matches **********');\r\n        Object.values(unsubscribe).forEach(e => e.unsubscribe());\r\n        if(websocket) websocket.close();\r\n        if(liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        if(liveMatchSub) liveMatchSub.close();\r\n        unsubscribe = {};\r\n    }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        if(fixture.fixture_status === lSportsConfig.statuses.inplay) {\r\n            this.openExtraOddsModalLiveMatch(fixture);\r\n        }\r\n        else {\r\n            this.setState({ currentEvent: fixture }, () => {\r\n                this.props.setCurrentEvent(fixture);\r\n                this.setState({ showExtraOddsModal: true });\r\n                this.getSingleMatchMarkets(fixture.fixture_id, false).then((data) => {\r\n                    if (data) {\r\n                        const newFixture = { ...fixture };\r\n                        newFixture.market = data.market;\r\n                        newFixture.Markets = { ...data.market };\r\n                        newFixture.Livescore = data.livescore || {};\r\n                        this.setState({ currentEvent: newFixture }, () => {\r\n                            this.props.setCurrentEvent(newFixture);\r\n                            this.setState({ showExtraOddsModal: true });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        if (liveMatchSub) liveMatchSub.close();\r\n        if (liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        this.setState({ showExtraOddsModal: false });\r\n        this.startListener();\r\n    };\r\n\r\n    // Change Single/Multiple tabs\r\n    setActiveTab = (e) => {\r\n        this.setState({ activeTabId: e });\r\n    };\r\n\r\n    // Remove all bets\r\n    clearBets = (e) => {\r\n        this.props.clearBets();\r\n        this.props.setLastBetslipId(false);\r\n        this.setState({ activeTabId: '1' });\r\n        this.unsubscribe();\r\n    };\r\n\r\n    // On Fast bet switch change\r\n    onFastBetChange = (e) => {\r\n        if (this.state.fastBetChecked) {\r\n            this.openFastBetModal();\r\n        } else {\r\n            this.setState({ fastBetChecked: e.target.checked });\r\n            localStorage.setItem('fast_bet', 'on');\r\n        }\r\n    };\r\n\r\n    // Set option choosed from popup\r\n    setFastBetOption = (value) => {\r\n        this.setState({ showFastBetModal: false });\r\n\r\n        if (value === 'turn-off') {\r\n            this.setState({ fastBetChecked: false });\r\n            localStorage.setItem('fast_bet', 'off');\r\n        }\r\n    };\r\n\r\n    // Set option choosed from popup\r\n    setPlaceBetOption = (value) => {\r\n        this.setState({ showPlaceBetModal: false });\r\n\r\n        if (value === 'accept-changes') {\r\n            this.setState({\r\n                fastBetChecked: true,\r\n                fastBetOff: true,\r\n            });\r\n            localStorage.setItem('fast_bet', 'on');\r\n        }\r\n    };\r\n\r\n    openFastBetModal = () => {\r\n        this.setState({ showFastBetModal: true });\r\n    };\r\n\r\n    closeFastBetModal = () => {\r\n        this.setState({ showFastBetModal: false });\r\n    };\r\n\r\n    openPlaceBetModal = () => {\r\n        this.setState({ showPlaceBetModal: true });\r\n    };\r\n\r\n    closePlaceBetModal = () => {\r\n        this.setState({ showPlaceBetModal: false });\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({ showLogin: true });\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n\r\n    clearCountdown = () => {\r\n        if (this.state.fastBetOff) {\r\n            this.setState({ fastBetChecked: false });\r\n            localStorage.setItem('fast_bet', 'off');\r\n        }\r\n    };\r\n\r\n    // Get confirmation if fast bet switch is off after user clicks on Place bet button\r\n    placeBetCheck = (type) => {\r\n        this.setState({ betType: type }, () => {\r\n            // if switch is turned off show popup\r\n            if (!this.state.fastBetChecked) {\r\n                this.openPlaceBetModal();\r\n            } else {\r\n                this.placeBet();\r\n            }\r\n        });\r\n    };\r\n\r\n    // Place a bet\r\n    placeBet = () => {\r\n        let {\r\n            fixtures,\r\n            limits,\r\n            singleStake,\r\n            multiStake,\r\n            count,\r\n            totalOdds,\r\n            totalMultiOdds,\r\n            canNotBeCombined,\r\n            userData,\r\n            setPlaceBetError,\r\n            placeBet,\r\n            placeBetWithOutLoader,\r\n            placeBetError,\r\n            language,\r\n        } = this.props;\r\n        let currency = userData && userData.currency ? userData.currency === 'EUR' ? 'R$' : userData.currency : 'R$';        \r\n        let type = this.state.betType;\r\n        let amount = type === 'single' ? singleStake : multiStake;\r\n        // If user is not logged in\r\n        if (!this.isLoggedIn()) {\r\n            this.setState({ showLogin: true });\r\n            return;\r\n        }\r\n\r\n        // If bet cannot be combined\r\n        if (canNotBeCombined) {\r\n            setPlaceBetError(Translate.canNotBeCombined);\r\n            return;\r\n        }\r\n\r\n        // If bet is settled or suspended\r\n        let canNotBePlaced = false;\r\n        let canNotBePlacedMessage = '';\r\n        forEach(fixtures, (fixture) => {\r\n            forEach(fixture.markets, (m) => {\r\n                forEach(m.bets, (b) => {\r\n                    if (b.Status !== lSportsConfig.betStatus.active) {\r\n                        canNotBePlaced = true;\r\n                        canNotBePlacedMessage = b.Status === lSportsConfig.betStatus.suspended ? `${Translate.betSuspended} (Bet can not be placed)` : `${Translate.betSettled} (Bet can not be placed)`;\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        if (canNotBePlaced) {\r\n            setPlaceBetError(canNotBePlacedMessage);\r\n            return;\r\n        }\r\n\r\n        // If user balance = 0 or user balance < stake amount\r\n        if (userData.credit === 0 || userData.credit < parseFloat(amount)) {\r\n            setPlaceBetError(`${Translate.insufficientBalance}!`);\r\n            return;\r\n        }\r\n\r\n        // If stake amount is 0\r\n        if (!parseFloat(amount)) {\r\n            setPlaceBetError(`${Translate.stakeGreaterThen1} 0.`);\r\n            return;\r\n        }\r\n\r\n        // Need sport Id for single bet sport wise\r\n        let sportId;\r\n        if (type === 'single') {\r\n            sportId = fixtures[0].fixture.sport_id ? fixtures[0].fixture.sport_id : fixtures[0].fixture.Fixture.Sport.Id;\r\n        }\r\n\r\n        // Bet limits\r\n        let limitValidation = Util.betLimitsValidation(limits, type, count, amount, totalOdds, totalMultiOdds, currency, userData, sportId);\r\n        if (limitValidation) {\r\n            setPlaceBetError(limitValidation);\r\n            return;\r\n        }\r\n\r\n        let typeId = type === 'single' ? 1 : 2;\r\n        let data = Util.convertToPlaceBetData(fixtures, typeId, amount, language);\r\n\r\n        // Check if in next 5 second any bet is getting suspended\r\n        let isChanged = false;\r\n        let betStatus = this.getDiff();\r\n        \r\n        let containsLiveEvent = find(fixtures, (fixture) => {\r\n            if (fixture.fixture.fixture_status !== undefined) return fixture.fixture.fixture_status === lSportsConfig.statuses.inplay; \r\n            else return fixture.fixture.Fixture.Status === lSportsConfig.statuses.inplay;\r\n        });\r\n\r\n        if (containsLiveEvent) {\r\n            this.props.setPlaceBetCountdown(true);\r\n            timer = setTimeout(() => {\r\n                let { fixtures: latestFixtures } = this.props;\r\n                let betStatusAfterTime = this.getDiff();\r\n                isChanged = !isEqual(betStatus, betStatusAfterTime);\r\n                if (isChanged) {\r\n                    // stop processing if bet is suspended/settled in 5 seconds\r\n                    this.props.setPlaceBetCountdown(false); \r\n                    this.props.setPlaceBetDisabled(false);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.props.setPlaceBetCountdown(false);\r\n                    data = Util.convertToPlaceBetData(latestFixtures, typeId, amount, language);\r\n                    placeBet(data, this.unsubscribe);\r\n                    \r\n                }\r\n            }, 5000);\r\n        }\r\n\r\n        // Check if repeated Bet\r\n        placeBetWithOutLoader(data, timer);\r\n    };\r\n    \r\n    getDiff = () => {\r\n        const {fixtures} = this.props;\r\n        let status = [];\r\n        forEach(fixtures, (fixture) => {\r\n            forEach(fixture.markets, (market) => {\r\n                forEach(market.bets, (bet) => {\r\n                    status.push(bet.Status);\r\n                });\r\n            });\r\n        });\r\n        return status;\r\n    }\r\n\r\n    replaceSameBets = () => {\r\n        this.props.getLastBetslip(this.props.lastBetId);\r\n    };\r\n\r\n    calculateModalOption = () => {\r\n        const { currentEvent } = this.state;\r\n        let isLive = currentEvent.fixture_status ? (currentEvent.fixture_status === lSportsConfig.statuses.inplay  ? true : false ) : true;\r\n        return (isLive ? <ExtraOddsModalLive event={currentEvent} liveMatch={currentEvent} closeModal={this.closeExtraOddsModal} /> : <ExtraOddsModal event={currentEvent} closeModal={this.closeExtraOddsModal} />);\r\n    }\r\n\r\n    render() {\r\n        let { activeTabId, showExtraOddsModal, currentEvent, fastBetChecked, showFastBetModal, showPlaceBetModal, showLogin, liveMatches, counter } = this.state;\r\n        let { count, placeBetCountdown, betPlacedMessage, lastBetId, betslipLoading, selectExtraMarket, setExtraMarkets, placeBetDisabled } = this.props;\r\n        let tabsHeader =\r\n            count > 0 ? (\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className='bet-swap-button'>\r\n                        <a href className={`${activeTabId === '1' ? 'active' : ''}`}>\r\n                            {Translate.single}\r\n                        </a>\r\n\r\n                        <a href className={`${activeTabId === '2' ? 'active' : ''}`}>\r\n                            {Translate.multiple}\r\n                        </a>\r\n                    </div>\r\n\r\n                    <a href className=\"delete-betslip\" onClick={this.clearBets}>\r\n                        <div id=\"3\" className=\"betslip__tab-link\" >\r\n                            <i className=\"icon-trash-1 trash-icon\"></i>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            ) : (\r\n                <div className=\"betslip__no-bets-wrap\">\r\n                    {lastBetId && (\r\n                        <div className={`betslip__bet-placed ${betPlacedMessage ? 'betslip__bet-placed_active' : ''}`}>\r\n                            <i className=\"material-icons\">check</i>\r\n                            <p>\r\n                                <span className=\"font-weight-bold\">Bet</span> Placed\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className={`betslip__placeholder ${betPlacedMessage ? 'betslip__placeholder_hidden' : ''}`}>\r\n                        <div className=\"no-data__img\">\r\n                            <img src=\"/images/no-odds.png\" alt=\"No data\" className='w-100'/>\r\n                        </div>\r\n                        {lastBetId && (\r\n                            <Button variant=\"contained\" className=\"betslip__same-bet\" type=\"button\" onClick={this.replaceSameBets}>\r\n                                { Translate.repeatBet }\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            // <div className=\"main-container bg-f7\">\r\n            <div className=\"betslip-panel d-flex flex-column\">\r\n                <div className=\"head-bet \">\r\n                    <div className=\"d-flex justify-content-between align-items-center betslip-heading\">\r\n                        <h3>{Translate.betslip}</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <label for=\"checkbox4\" className=\"form-control-label\">{Translate.fastBet}</label>\r\n                            <div className=\"onoffswitch\">\r\n                                <input type=\"checkbox\" name=\"onoffswitch\" className=\"onoffswitch-checkbox\" id=\"myonoffswitch\" checked={fastBetChecked} onChange={this.onFastBetChange} />\r\n                                <label className=\"onoffswitch-label\" for=\"myonoffswitch\">\r\n                                    <div className=\"onoffswitch-inner\"></div>\r\n                                    <div className=\"onoffswitch-switch\"></div>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>                \r\n                    {tabsHeader}\r\n                </div>\r\n                <div>\r\n                    {activeTabId === '1' && (\r\n                        <BetslipSingle setExtraMarkets={setExtraMarkets} selectExtraMarket={selectExtraMarket} openExtraOddsModal={this.openExtraOddsModal} placeBetCheck={this.placeBetCheck} showCountdown={placeBetCountdown} placeBetDisableFromAdmin={placeBetDisabled} />\r\n                    )}\r\n                    {activeTabId === '2' && (\r\n                        <BetslipList\r\n                            setExtraMarkets={setExtraMarkets}\r\n                            selectExtraMarket={selectExtraMarket}\r\n                            switchBetslipType={this.setActiveTab}\r\n                            openExtraOddsModal={this.openExtraOddsModal}\r\n                            placeBetCheck={this.placeBetCheck}\r\n                            showCountdown={placeBetCountdown}\r\n                            placeBetDisableFromAdmin={placeBetDisabled}\r\n                        />\r\n                    )}\r\n                \r\n                    {/* <CasinoGames/> */}\r\n                </div>\r\n\r\n                {showExtraOddsModal && this.calculateModalOption()}\r\n\r\n                {showFastBetModal && <FastBetPopup closeModal={this.closeFastBetModal} setFastBetOption={this.setFastBetOption} />}\r\n\r\n                {showPlaceBetModal && <PlaceBetPopup closeModal={this.closePlaceBetModal} setPlaceBetOption={this.setPlaceBetOption} />}\r\n\r\n                {placeBetCountdown && (\r\n                    <div className=\"betslip__countdown-overlay\">\r\n                        <CountdownComponent clearCountdown={this.clearCountdown} placeBetCountdown={placeBetCountdown} />\r\n                    </div>\r\n                    )}\r\n\r\n                {betslipLoading && <Loading customClass='betslip-loader' />}\r\n\r\n                {showLogin && <Login hideLogin={this.hideLogin} />}\r\n                {/* </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBetslip.propTypes = {\r\n    count: PropTypes.number,\r\n    language: PropTypes.string,\r\n    clearBets: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    checkSavedBets: PropTypes.func,\r\n    placeBet: PropTypes.func,\r\n    placeBetWithOutLoader: PropTypes.func,\r\n    multiStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    singleStake: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    fixtures: PropTypes.array,\r\n    userData: PropTypes.object,\r\n    setPlaceBetError: PropTypes.func,\r\n    setPlaceBetSuccess: PropTypes.func,\r\n    setPlaceBetCountdown: PropTypes.func,\r\n    getBetLimits: PropTypes.func,\r\n    placeBetError: PropTypes.string,\r\n    placeBetSuccess: PropTypes.bool,\r\n    placeBetCountdown: PropTypes.bool,\r\n    betPlacedMessage: PropTypes.bool,\r\n    canNotBeCombined: PropTypes.bool,\r\n    betslipLoading: PropTypes.bool,\r\n    limits: PropTypes.object,\r\n    totalOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    totalMultiOdds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    lastBetId: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        count: state.betslip.count,\r\n        language: state.general.language,\r\n        multiStake: state.betslip.multiStake,\r\n        singleStake: state.betslip.singleStake,\r\n        fixtures: state.betslip.fixtures,\r\n        userData: state.user.data,\r\n        placeBetError: state.betslip.placeBetError,\r\n        placeBetSuccess: state.betslip.placeBetSuccess,\r\n        placeBetCountdown: state.betslip.placeBetCountdown,\r\n        betPlacedMessage: state.betslip.betPlacedMessage,\r\n        canNotBeCombined: state.betslip.canNotBeCombined,\r\n        limits: state.betslip.limits,\r\n        totalOdds: state.betslip.totalOdds,\r\n        totalMultiOdds: state.betslip.totalMultiOdds,\r\n        lastBetId: state.betslip.lastBetId,\r\n        betslipLoading: state.betslip.betslipLoading,\r\n        placeBetDisabled: state.betslip.placeBetDisabled,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearBets: () => dispatch(clearBets()),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        checkSavedBets: () => dispatch(checkSavedBets()),\r\n        placeBet: (data, unsubscribe) => dispatch(placeBet(data, unsubscribe)),\r\n        placeBetWithOutLoader: (data, timer) => dispatch(placeBetWithOutLoader(data, timer)),\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        setPlaceBetSuccess: (value) => dispatch(setPlaceBetSuccess(value)),\r\n        setPlaceBetCountdown: (value) => dispatch(setPlaceBetCountdown(value)),\r\n        setLastBetslipId: (value) => dispatch(setLastBetslipId(value)),\r\n        getBetLimits: () => dispatch(getBetLimits()),\r\n        getLastBetslip: (id) => dispatch(getLastBetslip(id)),\r\n        updateBetslipEventsMarket: (events) => dispatch(updateBetslipEventsMarket(events)),\r\n        updateBetslipEventsLivescore: (events) => dispatch(updateBetslipEventsLivescore(events)),\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        setPlaceBetDisabled: (value) => dispatch(setPlaceBetDisabled(value)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (type) => dispatch(selectExtraMarket(type)),\r\n        updateBetslipEventsStatus: (events) => dispatch(updateBetslipEventsStatus(events)),\r\n        updateBetslipEvent: (event) => dispatch(updateBetslipEvent(event)),\r\n        setUpdatedMatchData: (event) => dispatch(setUpdatedMatchData(event)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Betslip);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addBet, removeBet } from '../../store/actions/betslip.actions';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nclass MainBet extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bet.Price !== this.props.bet.Price) {\r\n            let diffType = +this.props.bet.Price - +prevProps.bet.Price > 0 ? 'increased' : +this.props.bet.Price - +prevProps.bet.Price < 0 ? 'decreased' : '' ;\r\n            if (diffType === 'increased') {\r\n                if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                        document.getElementById('mainbet-' + this.props.bet.Id).classList.add('increased');\r\n                    }\r\n                }, 100);\r\n            }\r\n\r\n            if (diffType === 'decreased') {\r\n                if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('increased');\r\n                    document.getElementById('mainbet-' + this.props.bet.Id).classList.remove('decreased');\r\n                }\r\n                setTimeout(() => {\r\n                    if (document.getElementById('mainbet-' + this.props.bet.Id)) {\r\n                        document.getElementById('mainbet-' + this.props.bet.Id).classList.add('decreased');\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { bet, fixture, market, provider, fixtures, leagueName } = this.props;\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.FixtureId ? fixture.FixtureId : fixture.fixture_id,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            });\r\n\r\n        if (isActive) {\r\n            this.props.removeBet(fixture, market, bet, provider?.Id);\r\n        } else {\r\n            this.props.addBet(fixture, market, bet, provider?.Id, leagueName);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { bet, fixture, market, fixtures, type } = this.props;\r\n        let line = bet.Line ? `(${bet.Line})` : null;\r\n        const { active, suspended, settled, deactivated } = lSportsConfig.betStatus;\r\n        // remove the line for markets remaining match and Next goal\r\n        // TODO: to update as betradar\r\n        if ([59, 238, 247, 338].indexOf(market.Id) !== -1) { \r\n            line = null;\r\n        }\r\n        let isActive =\r\n            fixtures.length > 0 &&\r\n            find(fixtures, {\r\n                fixtureId: fixture.FixtureId ? fixture.FixtureId : fixture.fixture_id,\r\n                markets: [{ Id: market.Id, bets: [{ Id: bet.Id }] }],\r\n            })\r\n                ? 'odd-active'\r\n                : '';\r\n\r\n        let gridClassName = '';\r\n        if (bet.diff !== undefined && bet.diff !== 0) {\r\n            if (bet.diff > 0) gridClassName = 'decreased';\r\n            if (bet.diff < 0)  gridClassName = 'increased';\r\n        }\r\n\r\n        let oddType = localStorage.getItem('oddType')  ? localStorage.getItem('oddType') : '' ;\r\n\r\n        let betStatus = bet.Status;\r\n        let disableClass = betStatus === active ? '' : 'disabled';\r\n\r\n        let drawBet =\r\n        betStatus === undefined ? (\r\n            <li\r\n                item\r\n                xs\r\n                id={'mainbet-' + bet.Id}\r\n                className={`pl-2 pr-2 mx-xs ml-1 text-center ripple-bet d-flex align-items-center justify-content-center ${isActive}`}\r\n                key={bet.Id}\r\n            >\r\n                <i className=\"material-icons\"> lock </i>\r\n            </li>\r\n           ) : betStatus === settled ? (\r\n                <li\r\n                    item\r\n                    xs\r\n                    id={'mainbet-' + bet.Id}\r\n                    className={`pl-2 pr-2 mx-xs text-center ripple-bet d-flex align-items-center justify-content-center ${isActive}`}\r\n                    key={bet.Id}\r\n                >\r\n                    <i className=\"material-icons\"> lock </i>\r\n                </li>\r\n                // null\r\n                // <Grid item xs className={'mx-xs border text-center ripple-bet d-flex align-items-center justify-content-center'}>\r\n                //     <i className=\" material-icons\"> remove </i>\r\n                // </Grid>\r\n            ) : betStatus === suspended || betStatus === deactivated ? (\r\n                <li\r\n                    item\r\n                    xs\r\n                    id={'mainbet-' + bet.Id}\r\n                    className={`pl-2 pr-2 mx-xs ml-1 text-center ripple-bet d-flex align-items-center justify-content-center ${isActive}`}\r\n                    key={bet.Id}\r\n                >\r\n                    <i className=\"material-icons\"> lock </i>\r\n                </li>\r\n            ) :(\r\n                <li\r\n                    item\r\n                    xs\r\n                    id={`mainbet-${bet.Id}`}\r\n                    className={`pl-2 pr-2 mx-xs ml-1 ripple-bet anim  MuiGrid-item ${gridClassName} ${isActive} ${disableClass}`}\r\n                    onClick={ betStatus === active ? this.handleToggle : null}\r\n                    key={bet.Id}\r\n                >\r\n                    {/* <span className=\"odd__left odd__name\">\r\n                        {bet.Name}\r\n                        {line}\r\n                    </span> */}\r\n                    {/* <span className=\"odd__right odd__price\"> */}\r\n                    {Util.toFixedDecimal(bet.Price, oddType)}\r\n                    {/* </span> */}\r\n                </li>\r\n            );\r\n\r\n        return drawBet;\r\n    }\r\n}\r\n\r\nMainBet.propTypes = {\r\n    bet: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    market: PropTypes.object,\r\n    provider: PropTypes.object,\r\n    fixtures: PropTypes.array,\r\n    addBet: PropTypes.func,\r\n    removeBet: PropTypes.func,\r\n    count: PropTypes.number,\r\n    // type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fixtures: state.betslip.fixtures,\r\n        count: state.betslip.count,\r\n        oddType: state.user.oddType\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeBet: (fixture, market, bet, provider) => dispatch(removeBet(fixture, market, bet, provider)),\r\n        addBet: (fixture, market, bet, provider, leagueName) => dispatch(addBet(fixture, market, bet, provider, leagueName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainBet);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport filter from 'lodash.filter';\r\nimport take from 'lodash.take';\r\nimport orderBy from 'lodash.orderby';\r\nimport Util from '../../helper/Util';\r\nimport MainBet from './MainBet';\r\nimport { lSportsConfig } from '../../config';\r\nimport { marketIds } from '../../config/markets';\r\nimport { groupBy } from 'lodash';\r\n\r\nfunction MainMarket(props) {\r\n    let { market, fixture, type, leagueName, areBetsAllSettled, selectedLine, column } = props;\r\n    // let orderedProviders = market.Providers ? Util.orderProviders(market.Providers) : [];\r\n    // let selectedProvider = orderedProviders.length > 0 ? orderedProviders[0] : [];\r\n    let bets = market.Bets;\r\n    \r\n    if (!market.Bets){\r\n        bets = [];\r\n        for(let i =0 ; i < column.length; i++){\r\n            let id = Math.random(16);\r\n            let name = column[i];\r\n            let aliasObj = {Id: `id_t${id}`, Name: name, Status: undefined};\r\n            bets = [ ...bets, aliasObj ];\r\n        }\r\n    }\r\n\r\n    bets = filter(bets, (bet) => bet);\r\n    bets = Util.sortBet(bets, market.Id);\r\n    // let orderedBets = orderBy(bets, ['BaseLine', 'Sort'], 'asc');\r\n    let orderedBets = filter(bets, (bet) => bet.Status !== lSportsConfig.betStatus.settled);\r\n    let countOfBets = 0;\r\n\r\n    // market Under/Over - show started form line 2.5\r\n    if (market.Id == marketIds.total) {\r\n        if (selectedLine) orderedBets = filter(orderedBets, (bet) => +bet.Line == selectedLine);\r\n        else orderedBets = filter(orderedBets, (bet) => +bet.Line > 2);\r\n    }\r\n\r\n    // 18 is 'Total' market id for Betradar\r\n    let betsCount = market.Id == marketIds.total || market.Id == 28 || market.Id == marketIds.winner || market.Id == marketIds.oneTwoInclOvertime || market.Id == marketIds.underOverInclOvertime ? 2 : 3; // For any market with Under/Over we only want 2 fields\r\n    if (orderedBets && orderedBets.length < betsCount){\r\n        let count = betsCount - Object.keys(orderedBets).length;\r\n        for(let i =0 ; i < count; i++){\r\n            let id = Math.random(16);\r\n            let name = orderedBets.map((bet)=>(bet.Name));\r\n            name = column.filter(e => !name.includes(e));\r\n            let aliasObj = {Id: `id_t${id}`,Name: name[0],Status: lSportsConfig.betStatus.suspended};\r\n            orderedBets = [ ...orderedBets, aliasObj ];\r\n        }\r\n    }\r\n  \r\n    // fix to show only active lines for remaining match & next goal market\r\n    if ([7, 8, 61, 62].indexOf(market.Id) > -1 && orderedBets.length) {\r\n        let groupedBets = groupBy(orderedBets, 'BaseLine');\r\n        let filteredBets = filter(Object.values(groupedBets), (flex) => {\r\n            return flex.every((bet) => bet.Status == lSportsConfig.betStatus.active);\r\n        });\r\n        if (filteredBets.length) orderedBets = filteredBets[0];\r\n    }\r\n    \r\n    // FIXME: Temp fix for remaining match market.\r\n    if (market.Id == marketIds.teamWinRest || market.Id == marketIds.handicap || market.Id == marketIds.firstHalfTeamWinRest) {\r\n        orderedBets = orderBy(orderedBets, ['Status', 'BaseLine', 'Sort'], 'asc');\r\n        if(orderedBets.length > 0) {\r\n            const [firstBet, secondBet, thirdBet, ...remainingBets] = orderedBets;\r\n            const mainBets = orderBy([firstBet, secondBet, thirdBet], ['Sort'], 'asc');\r\n            if( mainBets.length > 0 && remainingBets.length > 0 ){\r\n                orderedBets = [...mainBets, ...remainingBets];\r\n            }\r\n            else if(mainBets.length > 0) {\r\n                orderedBets = mainBets;\r\n            }\r\n        }\r\n    } else\r\n    if (market.Id == marketIds.total || market.Id == marketIds.firstHalfTotal || market.Id == marketIds.underOverInclOvertime) {\r\n        if(orderedBets.length > 0) {\r\n            const [firstBet, secondBet, ...remainingBets] = orderedBets;\r\n            let mainBets = orderBy([firstBet, secondBet], ['name_en'], 'desc');\r\n            if( mainBets.length > 0 && remainingBets.length > 0 ){\r\n                orderedBets = [...mainBets, ...remainingBets];\r\n            }\r\n            else if(mainBets.length > 0) {\r\n                orderedBets = mainBets;\r\n            }\r\n        }\r\n    }\r\n\r\n    // let betsCount = market.Id == 2 || market.Id == 28 || market.Id == 21 || market.Id == 52 ? 2 : 3; // For any market with Under/Over we only want 2 fields\r\n    let drawBets =\r\n        orderedBets.length > 0 ? (\r\n            map(take(orderedBets, betsCount), (bet) => {\r\n                if (!bet) {\r\n                    return;\r\n                }\r\n                if (bet.Status !== lSportsConfig.betStatus.settled) {\r\n                    countOfBets++;\r\n                }\r\n                if (countOfBets === 2 && bet.Status === lSportsConfig.betStatus.settled) {\r\n                    return;\r\n                }\r\n\r\n                return <MainBet fixture={fixture} market={market} bet={bet} key={bet.Id} type={type} leagueName={leagueName} />;\r\n            })\r\n        ) : areBetsAllSettled && type === 'live' ? (\r\n            Array(betsCount).fill(1).map(() => (\r\n                <li\r\n                    item\r\n                    xs\r\n                    className={`pl-2 pr-2 mx-xs ${\r\n                        type === 'live' ? 'live__background' : 'prematch__background'\r\n                    } text-center ripple-bet d-flex align-items-center justify-content-center `}\r\n                >\r\n                    <i className=\"material-icons\"> lock </i>\r\n                </li>\r\n            ))\r\n        ) : type !== 'sports' ? null : (\r\n                Array(betsCount).fill(1).map(() => (\r\n                    <li\r\n                        item\r\n                        xs\r\n                        className={`pl-2 pr-2 mx-xs ${\r\n                            type === 'live' ? 'live__background' : 'prematch__background'\r\n                        } text-center ripple-bet d-flex align-items-center justify-content-center `}\r\n                    >\r\n                        <i className=\"material-icons\"> lock </i>\r\n                    </li>\r\n            ))\r\n        );\r\n\r\n    return (\r\n        <React.Fragment>           \r\n            <ul>\r\n                {column.map(col => <ol> { col } </ol>)}\r\n            </ul>\r\n            <ul className=\"\">\r\n                {drawBets}\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nMainMarket.propTypes = {\r\n    market: PropTypes.object,\r\n    fixture: PropTypes.object,\r\n    type: PropTypes.string,\r\n    leagueName: PropTypes.string,\r\n};\r\n\r\nexport default MainMarket;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Participants(props) {\r\n    let { participants, language, onClick } = props;\r\n    let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n    return (\r\n        <div className=\"team-detail\" onClick={onClick}>\r\n            <p>{participants && participants[0] && (participants[0][lang] ? participants[0][lang] : participants[0].name_en) }</p>\r\n            <p> {participants && participants[1] && (participants[1][lang] ? participants[1][lang] : participants[1].name_en)  }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nParticipants.propTypes = {\r\n    participants: PropTypes.array,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport MainMarket from '../Shared/MainMarkets';\r\nimport Participants from '../Shared/Match/Participant';\r\n// import ExtraMarkets from '../../Components/Shared/Match/ExtraMarkets';\r\nimport Favorite from '../../Components/Shared/Match/Favorite';\r\nimport MatchDateTime from '../../Components/Shared/Match/MatchDateTime';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport groupBy from 'lodash.groupby';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            props.openMarketsModal(event);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    const [ matchSelectedLine, setMatchLine ] = useState({});\r\n    let { event, mainSelectedMarket, statsData } = props;\r\n    let mainMarkets = MARKET_FOR_OUTER_SLIDER_PREMATCH[event.sport_id];\r\n    let leagueName = event.league.Name;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = {\r\n            Id: mainSelectedMarket,\r\n            Name: '',\r\n            Bets: null,\r\n        };\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = sortedMarkets.length;\r\n    if (mainMarketEvent === undefined) return null;\r\n    let hasStatistics = event.has_live_statistics || event.has_prematch_statistics;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        hasStatistics = true;\r\n    }\r\n    // let cards =  <Grid item xs={2} className=\"results__cards p-2\"></Grid>;\r\n    let mixedMainMarket = {};\r\n    // Under Over 2\r\n    // Under Over 1st Half 21\r\n    if (mainSelectedMarket === 2)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[21] = find(sortedMarkets, (m) =>  m.Id === 21 );\r\n    }\r\n\r\n    // 1X2 1\r\n    // 1st period winner 41\r\n    if (mainSelectedMarket === 1)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[41] = find(sortedMarkets, (m) =>  m.Id === 41 );\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <td>\r\n                <Favorite fixture={event} />\r\n            </td>\r\n            <td className=\"fav-star\">\r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td>\r\n            {/* <td className=\"time\">\r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td> */}\r\n            <td className=\"team-name\">\r\n                {/* <span>{ event.league.Name }</span> */}\r\n                <div className=\"team-detail\">\r\n                    <Participants participants={ event.participants } />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                <div className=\"score-section\">\r\n                    <p>\r\n                        -\r\n                    </p>\r\n                    <p>\r\n                        -\r\n                    </p>\r\n                </div>                \r\n                {/* <i className=\"icon-statistics\"></i> */}\r\n            </td>\r\n            {mainMarkets.slice(0,3).map((mainMarket, i) => {\r\n                const { Id, col, isLine: isLineAvailable } = mainMarket;\r\n                let mainMarketEvent = Object.values(event.market).find( mkt => mkt.Id === Id);\r\n                let listofLines = [];\r\n                let indexOfSelectedLine = -1;\r\n                let selectedLine = null;\r\n                let lastMarketClass = i === 2 ? 'padd-left' : '';\r\n                if (!mainMarketEvent) {\r\n                    mainMarketEvent = { ...mainMarket };\r\n                    // return <td className=\"odd-box 1 up-down-no\" />;\r\n                }\r\n                if (isLineAvailable && mainMarketEvent?.Bets) {\r\n                    let orderedBets = filter(mainMarketEvent?.Bets, (bet) => +bet.Line > 2 && +bet.Status === 1);\r\n                    listofLines = Object.keys(groupBy(orderedBets, 'Line'));\r\n                    listofLines = listofLines.map(Number)?.sort((a,b) => a-b);\r\n                    selectedLine = matchSelectedLine[event.fixture_id] || listofLines?.[0];\r\n                    indexOfSelectedLine = listofLines.indexOf(selectedLine);\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        { isLineAvailable && (\r\n                        <td className={`up-down-no priority-${i}`}>\r\n                            {!!listofLines.length && (<i className={`material-icons icon-color ${indexOfSelectedLine < listofLines.length -1? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine < listofLines.length -1) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine + 1] }));\r\n                            }}> keyboard_arrow_up </i>)}\r\n                            <span>\r\n                                \r\n                                { selectedLine }\r\n                            </span>\r\n                            { !!listofLines.length && <i className={`material-icons icon-color ${indexOfSelectedLine > 0 ? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine > 0) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine - 1] }))\r\n                            }}> keyboard_arrow_down </i>}\r\n                        </td>\r\n                        )}\r\n                        <td className={`odd-box 1 ${lastMarketClass} priority-${i}`}>\r\n                            <MainMarket market={mainMarketEvent} selectedLine={selectedLine} column={col} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                        </td>\r\n                    </React.Fragment>\r\n                );}\r\n            )}\r\n            <td className=\"next-match-btn\">\r\n                <a href onClick={() => openExtraOddsModal(event, sortedMarketsLength)}>\r\n                    +{ Object.keys(event.market).length }\r\n                </a>\r\n            </td>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../../Components/Shared/LeagueHeader';\r\nimport { removeHomeActiveLeague } from '../../store/actions/home.actions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = () => {\r\n        props.removeHomeActiveLeague();\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, setExtraMarkets, selectExtraMarket } = props;\r\n    let lastLeagueId = null;\r\n\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                let groupInfo = null;\r\n                let divider = null;\r\n                if (lastLeagueId === e.league_id) {\r\n                    divider = <div className=\"match__divider\" />;\r\n                } else {\r\n                    lastLeagueId = e.league_id;\r\n                    divider = null;\r\n                    groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague()} />;\r\n                }\r\n\r\n                return (\r\n                    e && (\r\n                        <>\r\n                            { groupInfo && (\r\n                                <tr className=\"custom-league-header\">\r\n                                    <td colSpan='8' className='px-0 mx-0'>\r\n                                        {groupInfo}\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                            <tr className='live' key={'panel_' + e.fixture_id}>\r\n                            {/* {divider} */}\r\n                            <Match event={e} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                            </tr>\r\n                        </>\r\n                    )\r\n                );\r\n              })\r\n            : null;\r\n\r\n    return <tbody>{drawMatches}</tbody>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nclass Statistics extends Component {\r\n    componentDidMount() {\r\n        let { statisticsEventId, statisticsTemplateType, language } = this.props;\r\n\r\n        if (statisticsTemplateType === 'live') {\r\n            let trackerGenerator = new window.STATSCORE.LSP.Generator();\r\n            trackerGenerator.create('#tracker', 'tracker1', statisticsEventId, lSportsConfig.account.statscore_live_id, {\r\n                lang: language,\r\n                timezone: '',\r\n                useMappedId: '1',\r\n                configuration: {\r\n                    showHeader: false,\r\n                },\r\n            });\r\n        } else if (statisticsTemplateType === 'prematch') {\r\n            let trackerGenerator = new window.STATSCORE.LSP.Generator();\r\n            trackerGenerator.create('#tracker', 'tracker1', statisticsEventId, lSportsConfig.account.statscore_prematch_id, {\r\n                lang: language,\r\n                timezone: '',\r\n                useMappedId: '1',\r\n                configuration: {\r\n                    showHeader: false,\r\n                    mainMenu: ['Standings', 'Tables', 'Comparison'],\r\n                    mainBoxInitializationTab: 'Standings',\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"tracker\" className=\"statistics__wrap\"></div>;\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    statisticsEventId: PropTypes.number,\r\n    statisticsTemplateType: PropTypes.string,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        statisticsEventId: state.lsportsGlobal.statisticsEventId,\r\n        statisticsTemplateType: state.lsportsGlobal.statisticsTemplateType,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Statistics from './Statistics';\r\n\r\nfunction StatisticsModal(props) {\r\n    let { closeModal } = props;\r\n\r\n    return (\r\n        <Dialog onClose={closeModal} aria-labelledby=\"statistics-dialog-title\" open={true} scroll=\"paper\" className=\"statistics__modal\">\r\n            <DialogTitle id=\"statistics-dialog-title\" disableTypography>\r\n                <div className=\"d-flex align-items-center flex-wrap\">\r\n                    <h3 className=\"m-0 mr-3 d-flex align-items-center\">\r\n                        <i className=\"icon-statistics  mr-2\"></i>\r\n                        Statistics\r\n                    </h3>\r\n                </div>\r\n                <IconButton aria-label=\"close\" className=\"close-modal\" onClick={closeModal}>\r\n                    <i className=\"material-icons fs-22\"> close </i>\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className=\"p-0\">\r\n                <Statistics />\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nStatisticsModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n};\r\n\r\nexport default StatisticsModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from '../../localization';\r\n\r\nfunction MarketHeader(props) {\r\n    let { mainMarket } = props;\r\n    // let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n    if (!mainMarket) return null;\r\n    return (\r\n      mainMarket.slice(0,1).map(mkt => {\r\n          const { isLine } = mkt;\r\n          return (\r\n              <React.Fragment>\r\n                  { isLine && (\r\n                      <th scope=\"col fffff\">&nbsp;</th>\r\n                  )}\r\n                  <th className=\"odd-box 1 up-down-no\" scope=\"col\" key={mkt.Id}>\r\n                      <span>{Translate.markets[mkt.Id]}</span>\r\n                      {/* <ul>\r\n                          {mkt.col.map(outcome => <li>{outcome}</li>)}\r\n                          <li>{ mkt.Name }</li>\r\n                      </ul> */}\r\n                  </th>\r\n              </React.Fragment>\r\n          );\r\n      })\r\n    );\r\n}\r\n\r\nMarketHeader.propTypes = {\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MarketHeader);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport { slice } from 'lodash';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../../Components/Shared/MainMarketSelector';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport StatisticsModal from '../../Components/Shared/StatisticsModal';\r\nimport {\r\n    selectMainMarket, getHomeActiveLeagueEvents, setHomeResetPage, clearHomeActiveLeagueEvents,\r\n    getMarketData,\r\n} from '../../store/actions/home.actions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport { intervalTime } from '../../config';\r\nimport find from 'lodash.find';\r\nimport MarketHeader from '../Shared/MarketHeader';\r\nimport { homePageLeagues } from '../../config/sports';\r\n\r\nlet sportEventInterval;\r\nclass League extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n            expandTable: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        sportEventInterval = setInterval(() => {\r\n        let { mainEvents } = this.props;\r\n        this.props.getMarketData(mainEvents, 0, mainEvents.length);\r\n        } , intervalTime);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearHomeActiveLeagueEvents();\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        // let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            let { nextIndex } = this.props;\r\n            const data = slice(this.props.partialAllEvents, nextIndex, nextIndex + 20);\r\n            this.props.getMarketData(data, nextIndex, data.length);\r\n        }\r\n    };\r\n\r\n    handleTableExpand = () => {\r\n        this.setState((prevState) => ({ expandTable: !prevState.expandTable }),\r\n        () => {\r\n            const { expandTable } = this.state;\r\n            if (expandTable) document.getElementById('side-navbar').classList.add('expand-nav');\r\n            else document.getElementById('side-navbar').classList.remove('expand-nav');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event, showStatisticsModal } = this.state;\r\n        let { selectMainMarket, mainSelectedMarket, mainEvents, noEvents, statisticsType, selectedLeague, setExtraMarkets, selectExtraMarket } = this.props;\r\n        let selectedLeagueData = homePageLeagues.find(league => league.league_id === selectedLeague);\r\n        let groupedEvents =\r\n            mainEvents &&\r\n            mainEvents[0] &&\r\n            mainEvents[0].sport_id &&\r\n            groupBy(mainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];        \r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                // let groupMainMarket = Object.values(group[0].market);\r\n                let groupLeagueId = group[0].league_id;\r\n                const groupSportId = group[0].sport_id;\r\n                // Hide MainMarketSelector for NBA and UFC\r\n                let marketSelector =\r\n                    groupLeagueId === 64 || groupLeagueId === 14896 ? null : (\r\n                        <MainMarketSelector selectMainMarket={selectMainMarket} mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[groupSportId]} mainSelectedMarket={mainSelectedMarket} />\r\n                    );\r\n\r\n                let groupMatches = <Matches selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={group} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                matches.push(\r\n                    <table className=\"table\" key={sportId}>\r\n                        {/* {marketSelector} */}\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[groupSportId]} />\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {groupMatches}\r\n                    </table>,\r\n                );\r\n            }\r\n        });\r\n\r\n        const noEventsContent =\r\n        <table className=\"table mb-0\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                    {/* <th scope=\"col\">&nbsp;</th> */}\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                    <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedLeagueData?.sport_id]} />\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td colspan='9'>\r\n                        <div className='no-data fs-15 pt-3 pl-3 pb-3'>\r\n                            Nothing found\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>;\r\n\r\n    const loadingContent =\r\n        <table className=\"table mb-0\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                    {/* <th scope=\"col\">&nbsp;</th> */}\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                    <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedLeagueData?.sport_id]} />\r\n                    <th scope=\"col\">&nbsp;</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td colspan='9' className='p-0'><Loading customClass='odds-panel w-100 pt-0 mx-0'/> </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>;\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <InfiniteScroll\r\n                        dataLength={mainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={this.props.nextIndex < this.props.partialAllEvents.length}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                        scrollThreshold = {0.95}\r\n                        scrollableTarget=\"scrollableDiv\"\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />}\r\n                </div>\r\n            ) : noEvents ? (\r\n                noEventsContent\r\n            ) : loadingContent;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"table-responsive\">\r\n                    <span className=\"drawer\" href=\"#\" >\r\n                        <i className=\"icon-color\" onClick={ this.handleTableExpand }>\r\n                            <img src=\"/images/rounded.svg\" className='w-75'/>\r\n                        </i>\r\n                        <span> { selectedLeagueData?.league_name_en}</span>\r\n                    </span>\r\n                    {drawContent}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nLeague.propTypes = {\r\n    selectedLeague: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    getHomeActiveLeagueEvents: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    language: PropTypes.string,\r\n    hasNextPage: PropTypes.bool,\r\n    setHomeResetPage: PropTypes.func,\r\n    clearHomeActiveLeagueEvents: PropTypes.func,\r\n    noEvents: PropTypes.bool,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.home.selectedLeague,\r\n        mainEvents: state.home.mainEvents,\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        language: state.general.language,\r\n        hasNextPage: state.home.hasNextPage,\r\n        noEvents: state.home.noEvents,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        fetchedAll: state.home.fetchedAll,\r\n        partialAllEvents: state.home.partialAllEvents,\r\n        nextIndex: state.home.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getHomeActiveLeagueEvents: (leagueId) => dispatch(getHomeActiveLeagueEvents(leagueId)),\r\n        setHomeResetPage: () => dispatch(setHomeResetPage()),\r\n        clearHomeActiveLeagueEvents: () => dispatch(clearHomeActiveLeagueEvents()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(League);\r\n","import React, { useEffect , useMemo} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { forEach } from 'lodash';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { Translate } from '../../localization';\r\nimport { resetSelectedLocations, getSportEvents, getTodayLocations, selectLocation, clearPartialLocations, selectLeague, getSportEventsDesktop } from '../../store/actions/todayActions';\r\nimport { getPrematchLocations,getPrematchLocationsDesktop } from '../../store/actions/todayActions/lsports.prematch.location.action';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nlet sportEventInterval;\r\nfunction Locations(props) {\r\n    const resetSelectedLocation = (e) => {\r\n        e.preventDefault();\r\n        props.resetSelectedLocations();\r\n        props.selectTodayLeague();\r\n        props.selectLocation();\r\n    };\r\n\r\n    const location = useLocation();\r\n    const isHomeActive = useMemo(() => !location.pathname.split('/')[2], [ location ]);\r\n\r\n    useEffect(() => {\r\n        props.clearPartialLocations();\r\n       if(isHomeActive ) { \r\n            props.getSportEventsDesktop(); // fetching data on the basis of date filter\r\n        } else {\r\n           props.getPrematchLocationsDesktop(); // fetching all data\r\n         }\r\n        sportEventInterval = setInterval(() => {\r\n            if(isHomeActive ) {\r\n               // do nothing\r\n           } else {\r\n            props.clearPartialLocations();\r\n            props.getPrematchLocationsDesktop();\r\n           }\r\n        }, 300000);\r\n        return () => {\r\n            clearInterval(sportEventInterval);\r\n            \r\n        };\r\n    }, []);\r\n\r\n    \r\n    const getLeaguesByLocation = (locationId) => {\r\n        let leagueDataObj = {};\r\n        let leagueArray = [];\r\n\r\n        if (todayLocationsObj[locationId]) {\r\n            if (dateFilter === 'all') {\r\n                forEach(Object.keys(todayLocationsObj[locationId]), (league) => {\r\n                    if (!isNaN(league)) {\r\n                        leagueDataObj[league] = {\r\n                            location_id: parseInt(league)\r\n                        };\r\n                    };\r\n                });\r\n            }\r\n            else {\r\n                forEach(Object.keys(todayLocationsObj[locationId]), (league) => {\r\n                    if (!isNaN(league) && todayLocationsObj[locationId][league].start_date[dateFilter]) {\r\n                        leagueDataObj[league] = {\r\n                            location_id: parseInt(league)\r\n                        };\r\n                    }\r\n                });\r\n\r\n            }\r\n        }\r\n         leagueArray = Object.values(leagueDataObj);\r\n         return leagueArray.map(league => `${league.location_id}`);\r\n    };\r\n\r\n    const handleClick = (isPartialSelected) => (e) => {\r\n        e.preventDefault();\r\n         let leagues = getLeaguesByLocation(e.currentTarget.id);\r\n       \r\n        if (props.selectedLocationList.indexOf(e.currentTarget.id) > -1 && props.selectedLocationList.length === 1) {\r\n            props.resetSelectedLocations();\r\n        }\r\n        else {\r\n            props.selectLocation(e.currentTarget.id);\r\n        }\r\n        props.selectTodayLocation(e.currentTarget.id,leagues);\r\n    };\r\n\r\n    const handleLeagueClick = (isCountrySelected, location) => (e) => {\r\n        e.preventDefault();\r\n        // let allLeagues = getLeaguesByLocation(location);\r\n        // let selectedLeagues = intersection(props.selectedTodayLeagues, allLeagues);\r\n        // if (selectedLeagues.indexOf(e.currentTarget.id) === -1) selectedLeagues = selectedLeagues.concat(e.currentTarget.id);\r\n        // else selectedLeagues = selectedLeagues.filter(league => league !== e.currentTarget.id);\r\n        // if (selectedLeagues.length === allLeagues.length) {\r\n        //     props.selectTodayLocation(`${location}`);\r\n        // } else {\r\n        //     if (!props.selectedLocationList.length && props.selectedTodayLeagues.indexOf(e.currentTarget.id) > -1 && props.selectedTodayLeagues.length === 1) {\r\n        //         props.resetSelectedLocations();\r\n        //     } else if (isCountrySelected) {\r\n        //         props.selectTodayLocation(`${location}`);\r\n        //     }\r\n        // }\r\n        props.selectTodayLeague(e.currentTarget.id);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n       props.handleSearch(e.target.value);\r\n    };\r\n\r\n    let { locations, selectedLocation, todayLocationsObj, locationsLoading, language, dateFilter, selectedTodayLeagues, selectedLocationList } = props;\r\n    let isAllActive = selectedTodayLeagues.length === 0;\r\n    let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n    const locationsList =\r\n        !locationsLoading ? (\r\n            locations.length > 0 ?\r\n            locations.map((item, i) => {\r\n            let locationId = item.Id;\r\n            let locationName = item[lang] || item.name_en;\r\n            let leagueArray = [];\r\n            let isCountrySelected = selectedLocationList.indexOf(`${locationId}`) > -1;\r\n            let leagueDataObj = {};\r\n            let isAnyLeaguePresent = false;\r\n            if (todayLocationsObj[locationId]) {\r\n                if(dateFilter === 'all') {\r\n                    forEach(Object.keys(todayLocationsObj[locationId]), (league) => {\r\n                        if(!isNaN(league)) {\r\n                            if ([].indexOf(league) > -1) {\r\n                                isAnyLeaguePresent = true;\r\n                            }\r\n                            leagueDataObj[league] = { \r\n                                location_id: parseInt(league),\r\n                                name: todayLocationsObj[locationId][league][lang],\r\n                                fixtures_count: todayLocationsObj[locationId][league].count,\r\n                                start_date: todayLocationsObj[locationId][league].start_date,\r\n                                ...todayLocationsObj[locationId][league]\r\n                            };\r\n                        };\r\n                    });\r\n                }\r\n                else {\r\n                    forEach(Object.keys(todayLocationsObj[locationId]), (league) => {\r\n                        if(!isNaN(league) && todayLocationsObj[locationId][league].start_date[dateFilter]) {\r\n                            if (selectedTodayLeagues.indexOf(league) > -1) {\r\n                                isAnyLeaguePresent = true;\r\n                            }\r\n                            leagueDataObj[league] = {\r\n                                location_id: parseInt(league),\r\n                                name: todayLocationsObj[locationId][league][lang],\r\n                                fixtures_count: todayLocationsObj[locationId][league].start_date[dateFilter],\r\n                                ...todayLocationsObj[locationId][league]\r\n                            };\r\n                        }\r\n                    });\r\n                    \r\n                }\r\n            }\r\n\r\n            let countryChecked = isCountrySelected ? 'checked' : isAnyLeaguePresent ? 'partial checked' : ''\r\n\r\n            leagueArray = Object.values(leagueDataObj);\r\n\r\n            let contains = selectedLocation == locationId;\r\n\r\n            return (\r\n                <li className={`${ contains && 'checked'}`}>\r\n                    <div className=\"d-flex align-items-center nav-parent\" key={locationId}>\r\n                        <a href className=\"accordion-heading\" data-toggle=\"collapse\" data-target={`#submenu-${locationId}`}>\r\n                            <span className=\"nav-header-primary\">\r\n                                <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"live-flag-25 flag\"></div>\r\n                                <span>{locationName}</span>\r\n                            </span>\r\n                        </a>\r\n                        {/* <div className={`form-group custum-check ${countryChecked}`} id={locationId}>\r\n                            <input type=\"checkbox\" id={`input-${locationId}`} checked/>\r\n                            <label></label>\r\n                        </div> */}\r\n                    </div>\r\n                    <ul class=\"nav nav-list collapse\" id={`submenu-${locationId}`}>\r\n                        {leagueArray.map(league => {\r\n                        const { fixtures_count: count, live_count: liveCount } = league;\r\n                        let leagueName = league[lang] || league.name_en;\r\n                        let isLeagueSelected = selectedTodayLeagues.indexOf(`${league.Id}`) > -1;\r\n                        // let isLeagueSelected = selectedTodayLeagues.indexOf(`${league.Id}`) > -1 ;\r\n                        return (\r\n                            <li className={isLeagueSelected && 'show'}>\r\n                                <a href id={ league.Id } className={`accordion-heading`} onClick={handleLeagueClick(isCountrySelected, locationId)}>\r\n                                    <span>\r\n                                        { leagueName }\r\n                                        { ` (${count || 0})`}\r\n                                    </span>\r\n                                    <span class=\"pull-right\"></span>\r\n                                    {/* <div className={`form-group custum-check ${isLeagueSelected && 'checked'}`}>\r\n                                        <input type=\"checkbox\" id=\"html\" />\r\n                                        <label></label>\r\n                                    </div> */}\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                    </ul>\r\n                </li>\r\n            );\r\n            }) : null\r\n        ) : <Loading customClass='w-100'/>;\r\n    const searchToRender =\r\n        <div className=\"sports__content sports__content_sm\">\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"sports__search-input\"\r\n                    // autoFocus\r\n                    placeholder={Translate.searchHere}\r\n                    // value={searchVal}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n        </div>;\r\n    const childToRender =\r\n        <React.Fragment>            \r\n            <div className=\"w-100 d-flex sports disable-select\">\r\n                <ul className='nav nav-list all-league w-100'>\r\n                    {/* <h2></h2> */}\r\n                    <li className={`${ isAllActive && 'checked'}`}>\r\n                        <div className=\"d-flex align-items-center nav-parent\" onClick={resetSelectedLocation} id='all-date'>\r\n                            <a className=\"accordion-heading\" data-toggle=\"collapse\" data-target=\"#submenu8\">\r\n                                <span className=\"nav-header-primary\">\r\n                                    <i className=\"icon-all live-locations__icon mr-2\" />\r\n                                    <span>{Translate.all}</span>\r\n                                </span>\r\n                            </a>\r\n                            {/* <div className={`form-group custum-check ${isAllActive && 'checked' }`}>\r\n                                <input type=\"checkbox\" id=\"html\" checked={isAllActive}/>\r\n                                <label></label>\r\n                            </div> */}\r\n                        </div>\r\n                    </li>\r\n                    {locationsList}\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>;\r\n\r\n    return (\r\n        <>\r\n            {document.getElementById('location-filter') && ReactDOM.createPortal(\r\n                childToRender,\r\n                document.getElementById('location-filter')\r\n            )}\r\n            {document.getElementById('item-search') && ReactDOM.createPortal(\r\n                searchToRender,\r\n                document.getElementById('item-search')\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nLocations.propTypes = {\r\n    locations: PropTypes.array,\r\n    selectedLocation: PropTypes.array,\r\n    resetSelectedLocations: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    getSportEvents: PropTypes.func,\r\n    getTodayLocations: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n    searchStarted: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    locationsLoading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locations: state.today.locations,\r\n        selectedLocation: state.today.selectedLocation,\r\n        selectedSport: state.today.selectedSport,\r\n        searchStarted: state.today.searchStarted,\r\n        language: state.general.language,\r\n        noEvents: state.today.noEvents,\r\n        locationsLoading: state.today.locationsLoading,\r\n        todayLocations: state.today.locations,\r\n        selectedLocationList: state.today.selectedLocationList,\r\n        todayLocationsObj: state.today.locationObj,\r\n        dateFilter: state.today.dateFilter,\r\n        selectedTodayLocation: state.today.selectedLocation,\r\n        selectedTodayLeagues: state.today.selectedLeagues || [],\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resetSelectedLocations: () => dispatch(resetSelectedLocations(true)),\r\n        selectLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        getTodayLocations: (sportId) => dispatch(getTodayLocations(sportId)),\r\n        selectTodayLeague: (leagueId) => dispatch(selectLeague(leagueId)),\r\n        clearPartialLocations: () => dispatch(clearPartialLocations()),\r\n        getPrematchLocations: () => dispatch(getPrematchLocations()),\r\n        getPrematchLocationsDesktop: () => dispatch(getPrematchLocationsDesktop()),\r\n        getSportEventsDesktop: (sportId) =>dispatch(getSportEventsDesktop(sportId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { includes } from 'lodash';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport { selectSportMobile, setTodaySports, clearSportEvents } from '../../store/actions/todayActions';\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        // const { statsData, fromLivePage, currentSelectedSport, mainEvents } = this.props;\r\n        // const lastUrl = localStorage.getItem('lastUrl');\r\n        // const fromExtraMarket =   includes(lastUrl, '/extra-market/'); \r\n        // if (!statsData && !fromLivePage) this.props.getStatsData();\r\n        // if (!this.props.mainEvents.length > 0 && !this.props.fromLivePage) { // DOn't reload data If main events are already present. \r\n        //     //this.props.getTodaySports();\r\n        //     this.props.setTodaySports();\r\n        //     this.props.selectSport(lSportsConfig.today.selectedSport);\r\n        // } else {\r\n        //     // was added for FIX: loading on sport select after top league selection\r\n        //     // this.props.selectSport(this.props.selectedSport);\r\n        // }\r\n        // if (fromLivePage && (!fromExtraMarket || !mainEvents.length)){\r\n        //     this.props.clearSportEvents();\r\n        //     this.props.selectSport(currentSelectedSport);}\r\n         if (!this.props.selectedSport) {\r\n            this.props.selectSportMobile(lSportsConfig.today.selectedSport);\r\n        } else {\r\n            // was added for FIX: loading on sport select after top league selection\r\n            // this.props.selectSport(this.props.selectedSport);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {fromLivePage, currentSelectedSport, mainEvents, selectedSport } = this.props;\r\n        const lastUrl = localStorage.getItem('lastUrl');\r\n        const fromExtraMarket =   includes(lastUrl, '/extra-market/'); \r\n        if (fromLivePage && (!fromExtraMarket || !mainEvents.length)) {\r\n            if (prevProps.currentSelectedSport !== currentSelectedSport) {\r\n                this.props.clearSportEvents();\r\n                this.props.selectSportMobile(selectedSport);\r\n            }\r\n        }\r\n        else if (prevProps.selectedSport && prevProps.selectedSport !== selectedSport) {\r\n            this.props.clearSportEvents();\r\n            this.props.selectSportMobile(selectedSport);\r\n        }\r\n\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.props.getTodaySports();\r\n        // }\r\n    }\r\n    componentWillUnmount(){\r\n         this.props.clearSportEvents();\r\n    }\r\n    selectSport = (sportId) => {\r\n        this.props.selectSportMobile(sportId);\r\n    };\r\n\r\n    render() {\r\n        let sportList = [];\r\n        // const sportList = map(Object.keys(sportCountObj), (sport, i) => {\r\n        //     let sportId = sport;\r\n        //     if (!sportId) return null;\r\n        //     let count = sportCountObj[sport];\r\n        //     const countSpan = <div className='sports__counter'> {count || 0} </div>;\r\n        //     return { id: `sport-filter-${sportId}`, child: countSpan };\r\n        // });\r\n        return (\r\n            <>\r\n                {sportList.map(sport => {\r\n                    const { id, child } = sport;\r\n                    if (!sport || !document.getElementById(id)) return null;\r\n                    return (\r\n                        ReactDOM.createPortal(\r\n                            child,\r\n                            document.getElementById(id)\r\n                        )\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.today.sports,\r\n        selectedSport: state.today.selectedSport,\r\n        language: state.general.language,\r\n        mainEvents: state.today.mainEvents,\r\n        sportCountObj: state.today.sportCountObj,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // getTodaySports: () => dispatch(getTodaySports()),\r\n        selectSportMobile: (sportId, dontFetch) => dispatch(selectSportMobile(sportId, dontFetch)),\r\n        setTodaySports: () => dispatch(setTodaySports()),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        clearSportEvents: () => dispatch(clearSportEvents())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Sports));\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport MainMarket from '../Shared/MainMarkets';\r\nimport Participants from '../Shared/Match/Participant';\r\nimport Favorite from '../../Components/Shared/Match/Favorite';\r\nimport MatchDateTime from '../../Components/Shared/Match/MatchDateTime';\r\nimport { endOfToday } from 'date-fns';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport groupBy from 'lodash.groupby';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Match(props) {\r\n    let history = useHistory();\r\n\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            props.openMarketsModal(event);\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            if(props.fromLivePage) {\r\n                let yOffset = document.getElementById(`${event.fixture_id}`);\r\n                localStorage.setItem('xtraHeight', yOffset.offsetTop - window.pageYOffset);\r\n                localStorage.setItem('eventId', event.fixture_id);\r\n            }\r\n            history.push(`/d/extra-market/${event.sport_id}/${event.fixture_id}`);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    const [ matchSelectedLine, setMatchLine ] = useState({});\r\n\r\n    let { event, mainSelectedMarket, statsData, language } = props;\r\n    let mainMarkets = MARKET_FOR_OUTER_SLIDER_PREMATCH[event.sport_id];\r\n    let lang = `name_${language.toLowerCase()}`;\r\n    let leagueName = event.league[lang] ? event.league[lang] : event.league.name_en;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = {\r\n            Id: mainSelectedMarket,\r\n            Name: '',\r\n            Bets: null,\r\n        };\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = Object.keys(event.market).length;\r\n    if (mainMarketEvent === undefined) return null;\r\n    let hasStatistics = event.has_live_statistics || event.has_prematch_statistics;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        hasStatistics = true;\r\n    }\r\n    let showDate = false;\r\n    if (new Date(event.start_date) > new Date (endOfToday())) {\r\n        showDate = true;\r\n    }\r\n    let mixedMainMarket = {};\r\n    // Under Over 2\r\n    // Under Over 1st Half 21\r\n    if (mainSelectedMarket === 2)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[21] = find(sortedMarkets, (m) =>  m.Id == 21 );\r\n    }\r\n\r\n    // 1X2 1\r\n    // 1st period winner 41\r\n    if (mainSelectedMarket == 1)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[41] = find(sortedMarkets, (m) =>  m.Id == 41 );\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <td>\r\n                <Favorite fixture={event} />\r\n            </td>\r\n            <td className=\"fav-star\">\r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td>\r\n            {/* <td className=\"time\">\r\n            </td> */}\r\n            <td className=\"team-name\">\r\n                {/* <span>{ event.league.Name }</span> */}\r\n                <div className=\"team-detail\">\r\n                    <Participants participants={ event.participants } />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                <div className=\"score-section\">\r\n                    <p>\r\n                        -\r\n                    </p>\r\n                    <p>\r\n                        -\r\n                    </p>\r\n                </div>\r\n                \r\n                {/* <i className=\"icon-statistics\"></i> */}\r\n            </td>\r\n            {mainMarkets.slice(0,1).map((mainMarket, i) => {\r\n                const { Id, col, isLine: isLineAvailable } = mainMarket;\r\n                let mainMarketEvent = Object.values(event.market).find( mkt => mkt.Id == Id);\r\n                let listofLines = [];\r\n                let indexOfSelectedLine = -1;\r\n                let selectedLine = null;\r\n                let lastMarketClass = i === 2 ? 'padd-left' : '';\r\n                if (!mainMarketEvent) {\r\n                    mainMarketEvent = { ...mainMarket };\r\n                    // return <td className=\"odd-box 1 up-down-no\" />;\r\n                }\r\n                if (isLineAvailable && mainMarketEvent?.Bets) {\r\n                    let orderedBets = filter(mainMarketEvent?.Bets, (bet) => +bet.Line > 2 && +bet.Status === 1);\r\n                    listofLines = Object.keys(groupBy(orderedBets, 'Line'));\r\n                    listofLines = listofLines.map(Number)?.sort((a,b) => a-b);\r\n                    selectedLine = matchSelectedLine[event.fixture_id] || listofLines?.[0];\r\n                    indexOfSelectedLine = listofLines.indexOf(selectedLine);\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        { isLineAvailable && (\r\n                        <td className={`up-down-no priority-${i}`}>\r\n                            {!!listofLines.length && (<i className={`material-icons icon-color ${indexOfSelectedLine < listofLines.length -1? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine < listofLines.length -1) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine + 1] }));\r\n                            }}> keyboard_arrow_up </i>)}\r\n                            <span>\r\n                                \r\n                                { selectedLine }\r\n                            </span>\r\n                            { !!listofLines.length && <i className={`material-icons icon-color ${indexOfSelectedLine > 0 ? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine > 0) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine - 1] }))\r\n                            }}> keyboard_arrow_down </i>}\r\n                        </td>\r\n                        )}\r\n                        <td className={`odd-box 1 ${lastMarketClass} priority-${i}`}>\r\n                            <MainMarket market={mainMarketEvent} selectedLine={selectedLine} column={col} fixture={event} type=\"sports\" leagueName={leagueName} />\r\n                        </td>\r\n                    </React.Fragment>\r\n                );}\r\n            )}\r\n            <td className=\"next-match-btn\">\r\n                <a href onClick={() => openExtraOddsModal(event, sortedMarketsLength)}>\r\n                    +{ Object.keys(event.market).length }\r\n                </a>\r\n            </td>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.today.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../../Components/Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/todayActions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, selectExtraMarket, setExtraMarkets } = props;\r\n    let lastLeagueId = null;\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n                  if (!e.league) return null;\r\n\r\n                  if (lastLeagueId === e.league.Id) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = e.league.Id;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && (\r\n                          <>\r\n                            { groupInfo && (\r\n                                <tr className=\"custom-league-header\">\r\n                                    <td colSpan='9' className='px-0 mx-0'>\r\n                                        {groupInfo}\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                            <tr className='live' key={'panel_' + e.fixture_id}>\r\n                                {/* {divider} */}\r\n                                <Match selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} event={e} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                            </tr>\r\n                          </>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <tbody>{drawMatches}</tbody>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { find, slice } from 'lodash';\r\nimport Locations from './Locations';\r\nimport Matches from './Matches';\r\nimport MarketHeader from '../Shared/MarketHeader';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\n// import ExtraOddsModal from '../../Components/Shared/ExtraOddsModal';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport StatisticsModal from '../../Components/Shared/StatisticsModal';\r\nimport {\r\n    selectMainMarket,\r\n    getSportEvents,\r\n    search,\r\n    getTodayLocations,\r\n    setTodayResetPage,\r\n    clearSportEvents,\r\n    clearLocations,\r\n    searchTodayEvents,\r\n    getMarketData,\r\n    setLocationLoading,\r\n    setTodaySportsWithDateRangeDesktop,\r\n    selectSport\r\n} from '../../store/actions/todayActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport { intervalTime } from '../../config';\r\nimport Util from '../../helper/Util';\r\nimport { staticPrematchSports } from '../../config/sports';\r\nimport { Translate } from '../../localization';\r\nimport { Link } from 'react-router-dom';\r\nimport includes from 'lodash.includes';\r\n\r\nlet sportEventInterval;\r\nlet toExtraMarket = false;\r\nlet frmXtraMrkt = false;\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setLocationLoading(true);\r\n        this.props.setTodaySportsWithDateRangeDesktop();\r\n        const { fromLivePage } = this.props;\r\n        const lastUrl = localStorage.getItem('lastUrl');\r\n        const fromExtraMarket = includes(lastUrl, '/extra-market/');\r\n        const secondLastUrl = localStorage.getItem('secondLastUrl');\r\n        if(false && this.props.mainEvents.length && this.props.partialAllEvents && fromExtraMarket) {\r\n        } else {\r\n            this.props.clearSportEvents();\r\n            this.props.clearLocations();\r\n            this.props.setLocationLoading(true);\r\n        }\r\n        sportEventInterval = setInterval(() => {\r\n            this.refreshEvents();\r\n        } , intervalTime);\r\n    }\r\n\r\n    refreshEvents = (retainSameEvents) => {\r\n        let { mainEvents, partialAllEvents } = this.props;\r\n        let toFilter = retainSameEvents ? mainEvents : partialAllEvents;\r\n        partialAllEvents = toFilter.filter(event => Util.getFormattedDate(event.start_date) > new Date());\r\n        \r\n        mainEvents =  partialAllEvents.splice(0, mainEvents.length);\r\n        this.props.getMarketData(mainEvents, 0, mainEvents.length);\r\n        this.props.setTodaySportsWithDateRangeDesktop();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setTodayResetPage();\r\n\r\n            if (!this.props.searchStarted) {\r\n                // let sportId = this.props.selectedSport;\r\n                // this.props.getSportEvents(sportId);\r\n                // this.props.getTodayLocations(sportId);\r\n            } else {\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll && (!frmXtraMrkt || this.props.selectedLocation === '' ) ){\r\n            this.getEventMarkets();            \r\n        } else if (this.props.fetchedAll && frmXtraMrkt) {\r\n            frmXtraMrkt = false;\r\n        }\r\n\r\n       if (this.props.fromLivePage) {\r\n           if (prevProps.currentSelectedMarket !== this.props.currentSelectedMarket) {\r\n               if (this.props.currentSelectedMarket === 59) {\r\n                   this.props.selectMainMarket(16);\r\n               } \r\n               else if (this.props.currentSelectedMarket === 238) {\r\n                   this.props.selectMainMarket(1);\r\n               } \r\n               else this.props.selectMainMarket(this.props.currentSelectedMarket);\r\n           }\r\n       } \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const toLiveExtraMrkt = localStorage.getItem('toLiveExtraMrkt');\r\n\r\n        if(toExtraMarket || toLiveExtraMrkt === 'true') {\r\n            toExtraMarket = false;\r\n            localStorage.setItem('toLiveExtraMrkt', false);\r\n        } else {\r\n            this.props.clearSportEvents();\r\n            this.props.clearLocations();\r\n           // this.props.selectSport(lSportsConfig.today.selectedSport);\r\n        }\r\n        clearInterval(sportEventInterval);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        toExtraMarket  = true;\r\n        if(this.props.fromLivePage){\r\n            this.props.openUpcomingExtraModal();\r\n        }\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            if (!this.props.searchStarted) {\r\n                let { nextIndex } = this.props;\r\n                const data = slice(this.props.partialAllEvents, nextIndex, nextIndex + 20);\r\n                this.props.getMarketData(data, nextIndex, data.length);\r\n            } else {\r\n                // if is in search page\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event, showStatisticsModal } = this.state;\r\n        let {\r\n            searchStarted,\r\n            mainEvents,\r\n            noSearchResults,\r\n            noEvents,\r\n            hasNextPage,\r\n            statisticsType,\r\n            searchTodayEvents,\r\n            filteredTodayEvents,\r\n            locations,\r\n            locationsLoading,\r\n            setExtraMarkets,\r\n            selectExtraMarket,\r\n            isLivePresent,\r\n            selectedSport,\r\n            limit: fromHomeLimit,\r\n        } = this.props;\r\n        \r\n        let filteredMainEvents = noSearchResults ? [] : filteredTodayEvents.length > 0 ? filteredTodayEvents : mainEvents;\r\n        if (fromHomeLimit) filteredMainEvents = filteredMainEvents.slice(0, fromHomeLimit);\r\n        let groupedEvents =\r\n            filteredMainEvents &&\r\n            filteredMainEvents[0] &&\r\n            filteredMainEvents[0].sport_id &&\r\n            groupBy(filteredMainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];\r\n\r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                const groupSportId = group[0].sport_id;\r\n\r\n                let groupMatches = <Matches selectExtraMarket ={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={group} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                matches.push(\r\n                    <table className=\"table mb-0\">\r\n                        {!isLivePresent && (\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[groupSportId]} />\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                            </tr>\r\n                        </thead>\r\n                        )}\r\n                        {groupMatches}\r\n                    </table>,\r\n                );\r\n            }\r\n        });\r\n\r\n        const noEventsContent =\r\n            <table className=\"table mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                        {/* <th scope=\"col\">&nbsp;</th> */}\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                        <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedSport]} />\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td colspan='9'>\r\n                            <div className='no-data fs-15 pt-3 pl-3 pb-3'>\r\n                                { Translate.nothingFound }\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>;\r\n\r\n        const loadingContent =\r\n            <table className=\"table mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                        {/* <th scope=\"col\">&nbsp;</th> */}\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                        <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedSport]} />\r\n                        <th scope=\"col\">&nbsp;</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td colspan='9' className='p-0'><Loading customClass='odds-panel w-100 pt-0 mx-0'/> </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>;\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <React.Fragment>\r\n                    <InfiniteScroll\r\n                        dataLength={filteredMainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={!fromHomeLimit && hasNextPage}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                        scrollThreshold = {0.95}\r\n                        scrollableTarget=\"scrollableDiv\"\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n                    {fromHomeLimit && <Link className='see-more-btn' to='/d/sports'>See more</Link>}\r\n\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />}\r\n                </React.Fragment>\r\n            ) : noSearchResults || noEvents ? (\r\n                noEventsContent\r\n            ) : (\r\n                !searchStarted && loadingContent\r\n            );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`table-responsive position-relative ${ fromHomeLimit && 'mt-4'}`}>\r\n                    <span className=\"drawer\" href>\r\n                        <i className=\"icon-color\">\r\n                            <img src=\"/images/rounded.svg\" alt=\"rounded\" className='w-75'/>\r\n                        </i>\r\n                        { fromHomeLimit ? Translate.sports : \r\n                        <span className='ml-3'>{staticPrematchSports()[selectedSport]?.name}</span>\r\n                        }\r\n                    </span>\r\n                    { <Locations {...this.props} handleSearch={searchTodayEvents} /> }\r\n                    { locations.length > 0 ?\r\n                            drawContent\r\n                            : !locationsLoading ?\r\n                                noEventsContent\r\n                                : loadingContent \r\n                        }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedSport: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    getSportEvents: PropTypes.func,\r\n    getTodayLocations: PropTypes.func,\r\n    setTodayResetPage: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    searchValue: PropTypes.string,\r\n    language: PropTypes.string,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    locationsLoading: PropTypes.bool,\r\n    setExtraMarkets: PropTypes.func,\r\n    selectExtraMarket: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedSport: state.today.selectedSport,\r\n        mainEvents: state.today.mainEvents,\r\n        mainSelectedMarket: state.today.mainSelectedMarket,\r\n        noSearchResults: state.today.noSearchResults,\r\n        noEvents: state.today.noEvents,\r\n        hasNextPage: state.today.hasNextPage,\r\n        searchStarted: state.today.searchStarted,\r\n        searchValue: state.today.searchValue,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        filteredTodayEvents: state.today.filteredTodayEvents,\r\n        locations: state.today.locations,\r\n        locationsLoading: state.today.locationsLoading,\r\n        fetchedAll: state.today.fetchedAll,\r\n        partialAllEvents: state.today.partialAllEvents,\r\n        nextIndex: state.today.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        selectedLeagues: state.today.selectedLeagues,\r\n        selectedLocationList: state.today.selectedLocationList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        selectSport: (sportId) => dispatch(selectSport(sportId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        search: (value) => dispatch(search(value)),\r\n        getTodayLocations: (sportId) => dispatch(getTodayLocations(sportId)),\r\n        setTodayResetPage: () => dispatch(setTodayResetPage()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        searchTodayEvents: (value) => dispatch(searchTodayEvents(value)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n        setTodaySportsWithDateRangeDesktop: () => dispatch(setTodaySportsWithDateRangeDesktop()),\r\n        setLocationLoading: (val) => dispatch(setLocationLoading(val))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React from 'react';\r\nimport Sports from './Sports';\r\nimport Events from './Events';\r\n\r\nfunction Today(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Sports {...props} noSport={props.noSports}/>\r\n            <Events {...props}/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Today;\r\n","import { connect } from 'react-redux';\r\n\r\nconst BannerCarousel = (props) => {\r\n    return null\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        banners: state.general.banners,\r\n        matchBanners: state.general.matchBanners,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BannerCarousel);\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport MainMarket from '../Shared/MainMarkets';\r\n// import Statistics from '../Shared/Match/Statistics';\r\nimport Participants from '../Shared/Match/Participant';\r\nimport Favorite from '../../Components/Shared/Match/Favorite';\r\nimport MatchDateTime from '../../Components/Shared/Match/MatchDateTime';\r\nimport { MARKET_FOR_OUTER_SLIDER, MARKET_FOR_TABLE_VIEW_LIVEMATCH } from '../../config/markets';\r\nimport filter from 'lodash.filter';\r\nimport uniqBy from 'lodash.uniqby';\r\nimport groupBy from 'lodash.groupby';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count) => {\r\n        if (count > 0) {\r\n            localStorage.setItem('toLiveExtraMrkt', true);\r\n            props.openMarketsModal(event, liveStreamAvailable);\r\n            props.history.push(`/d/live-bettingextra-market/${event.sport_id}/${event.fixture_id}/${liveStreamAvailable}`);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n    const [ liveStreamAvailable, setLiveStreamAvailable] = useState(false);\r\n    const [ matchSelectedLine, setMatchLine ] = useState({});\r\n    const [ streamURL, setStreamingURL] = useState(null);\r\n    const [ streamUrlData, setStreamUrlData] = useState([]);\r\n\r\n    let { event, mainSelectedMarket, liveStreamData, statsData } = props;\r\n\r\n    useEffect (() => {\r\n            let selectedEvents = filter(liveStreamData, (e) =>  e.matchId === event.fixture_id );\r\n            selectedEvents = uniqBy(selectedEvents, (e) => e.iframe);\r\n            if(selectedEvents.length && selectedEvents[0].live === '1') {\r\n                setStreamUrlData(selectedEvents);\r\n                setStreamingURL(selectedEvents[0].iframe);\r\n                setLiveStreamAvailable(true);\r\n            }\r\n    }, [liveStreamData, event.fixture_id]);\r\n\r\n    let mainMarkets = MARKET_FOR_TABLE_VIEW_LIVEMATCH[event.sport_id];\r\n    let leagueName = event.league.Name;\r\n    let sortedMarkets = event.Markets ? Object.values(event.Markets) : [];\r\n    let sportId = event.sport.Id;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === (mainSelectedMarket ? mainSelectedMarket : MARKET_FOR_OUTER_SLIDER[sportId][0].Id));\r\n    // Next Goal 59 \r\n    // Next Goal 1st Half 338\r\n\r\n    let mixedMainMarket = {};\r\n    if (mainSelectedMarket === 238)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[247] = find(sortedMarkets, (m) =>  m.Id === 247 );\r\n    }\r\n\r\n    // Remaining Match 238\r\n    // Remaining Match 1st Half 247\r\n    if (mainSelectedMarket === 59) {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[338] = find(sortedMarkets, (m) =>  m.Id === 338 );\r\n    }\r\n    \r\n    // Under Over 2\r\n    // Under Over 1st Half 21\r\n    if (mainSelectedMarket === 2)  {\r\n        mixedMainMarket[mainSelectedMarket] = mainMarketEvent;\r\n        mixedMainMarket[21] = find(sortedMarkets, (m) =>  m.Id === 21 );\r\n    }\r\n\r\n    // if (!mainMarketEvent) {\r\n    //     mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    // }\r\n   // sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let sortedMarketsLength = event.MarketsCount ? event.MarketsCount : (event.Markets ? Object.values(event.Markets).length : 0);\r\n    let hasStatistics = true;\r\n    if (statsData?.[+event.fixture_id] && ['live', 'finished'].indexOf(statsData[+event.fixture_id].status_type) > -1) {\r\n        hasStatistics = true;\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <td>\r\n                <Favorite fixture={event} />\r\n            </td>\r\n            <td className=\"fav-star\">\r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td>\r\n            {/* <td>\r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td> */}\r\n            <td className=\"team-name\">\r\n\r\n                {/* <span>{ `${event.location.Name}/${event.league.Name}` }</span> */}\r\n                <div className=\"team-detail\">\r\n\r\n                    <Participants participants={ event.participants } isInplay score={ event.Livescore }/>\r\n                </div>\r\n            </td>\r\n            {/* <td class='statistics'>\r\n                <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n\r\n\r\n            {/* <i className=\"icon-statistics\"></i> */}\r\n            {/* </td> */}\r\n            <div className=\"score-section\">\r\n                <p>\r\n                    {event.Livescore?.home_score}\r\n                    {/* { score ? score[1].Value : '-' } */}\r\n                </p>\r\n                <p>\r\n                    {event.Livescore?.away_score}\r\n                    {/* { score ? score[2].Value : '-' } */}\r\n                </p>\r\n            </div>\r\n\r\n            {mainMarkets.slice(0,1).map((mainMarket,i) => {\r\n                const { Id, col, isLine: isLineAvailable } = mainMarket;\r\n                let mainMarketEvent = Object.values(event.Markets).find( mkt => mkt.Id === Id);\r\n                let listofLines = [];\r\n                let selectedLine = null;\r\n                let indexOfSelectedLine = -1;\r\n                let lastMarketClass = i === 2 ? 'padd-left' : '';\r\n                if (!mainMarketEvent) {\r\n                    mainMarketEvent = { ...mainMarket };\r\n                    // return <td className=\"odd-box 1\" />;\r\n                }\r\n                if (isLineAvailable && mainMarketEvent?.Bets) {\r\n                    let orderedBets = filter(mainMarketEvent?.Bets, (bet) => +bet.Line > 2 && +bet.Status === 1);\r\n                    listofLines = Object.keys(groupBy(orderedBets, 'Line'));\r\n                    listofLines = listofLines.map(Number)?.sort((a,b) => a-b);\r\n                    selectedLine = matchSelectedLine[event.fixture_id] || listofLines?.[0];\r\n                    indexOfSelectedLine = listofLines.indexOf(selectedLine);\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        { isLineAvailable && (\r\n                        <td className={`up-down-no priority-${i}`}>\r\n                            { !!listofLines.length && <i className={`material-icons icon-color ${indexOfSelectedLine < listofLines.length -1? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine < listofLines.length -1) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine + 1] }));\r\n                            }}> keyboard_arrow_up </i> }\r\n                            <span>\r\n                                {/* <select\r\n                                    className='line-select'\r\n                                    onChange={(e) => {\r\n                                        if(e.target && e.target.value) {\r\n                                            const { value } = e.target;\r\n                                            setMatchLine((prev) => ({ ...prev, [event.fixture_id]: value }));\r\n                                        }} }\r\n                                >\r\n                                    { listofLines.map(line => <option selected={selectedLine === line}> { line }</option>)}\r\n                                </select>  */}\r\n                                { selectedLine }\r\n                            </span>\r\n                            { !!listofLines.length && <i className={`material-icons icon-color ${indexOfSelectedLine > 0 ? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine > 0) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine - 1] }))\r\n                            }}> keyboard_arrow_down </i>}\r\n                        </td>\r\n                        )}\r\n                        <td className={`odd-box 1 ${lastMarketClass} priority-${i}`}>\r\n                            <MainMarket market={mainMarketEvent} selectedLine={selectedLine} column={col} fixture={event} type=\"live\" leagueName={leagueName} />\r\n                        </td>\r\n                    </React.Fragment>\r\n                );}\r\n            )}\r\n            <td className=\"next-match-btn\">\r\n                <a href onClick={() => openExtraOddsModal(event, sortedMarketsLength, liveStreamAvailable)}>\r\n                    +{ Object.keys(event.Markets).length }\r\n                </a>\r\n            </td>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.string,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.inplay.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(React.memo(Match)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../../Components/Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/inplayActions';\r\nimport { orderBy } from 'lodash';\r\n// import { sortLiveEvents } from './../../config/sports'\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, openLiveStreamModal, liveStreamData } = props;\r\n    let lastLeagueId = null;\r\n\r\n\r\n    events = orderBy(events, ['league.Id'], ['desc']);\r\n    // events = sortLiveEvents(events);\r\n    let drawMatches =\r\n        events && Object.keys(events).length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n                 \r\n                  if (lastLeagueId === e.league.Id ) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = leagueId;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader isLive event={e} showStripe={true} remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                     e && (\r\n                        <>\r\n                        { groupInfo && (\r\n                            <tr className=\"custom-league-header\">\r\n                                <td colSpan='9' className='px-0 mx-0'>\r\n                                    {groupInfo}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                         <tr className='' key={`panel_${e.fixture_id}`}>\r\n                              {/* {divider} */}\r\n                              <Match liveStreamData={liveStreamData} openLiveStreamModal={openLiveStreamModal} event={e} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                          </tr>\r\n                      </>\r\n                         \r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <tbody>{drawMatches}</tbody>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Translate } from '../../localization';\r\nimport map from 'lodash.map';\r\nimport { connect } from 'react-redux';\r\nimport { selectLocation } from '../../store/actions/todayActions';\r\nimport forEach from 'lodash.foreach';\r\n\r\nfunction Locations(props) {\r\n    const resetSelectedLocations = (e) => {\r\n        e.preventDefault();\r\n        props.resetSelectedLocations();\r\n    };\r\n\r\n    const handleLeagueClick = (isCountrySelected, location) => (e) => {\r\n        e.preventDefault();\r\n        props.selectLeague(e.currentTarget.id);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        props.handleSearch(e.target.value);\r\n    };\r\n\r\n    let { locationsObj, searchVal, selectedLocationList, language, selectedTodayLeagues } = props;\r\n    let lang = `name_${ language?.toLowerCase()}`;\r\n    let isAllActive = !props.selectedTournament;\r\n    let locations = locationsObj ? Object.values(locationsObj.Locations) : [];\r\n    let liveLocationsObject = {};\r\n    if(locationsObj?.Locations?.length) liveLocationsObject = locationsObj?.Locations?.reduce((ac, a) => ({ ...ac, [ a.Id ]: a }), {});\r\n\r\n    const locationsList =\r\n            map(locations, (item, i) => {\r\n                let locationId = item.Id;\r\n                let locationName = item[lang] || item.name_en || item.name;\r\n                let leagueArray = [];\r\n                let isCountrySelected = selectedLocationList.indexOf(`${locationId}`) > -1;\r\n                let leagueDataObj = {};\r\n                let isAnyLeaguePresent = false;\r\n                if (liveLocationsObject[locationId]) {\r\n                    forEach(Object.keys(liveLocationsObject[locationId]), (league) => {\r\n                        if(!isNaN(league)) {\r\n                            if (selectedTodayLeagues.indexOf(league) > -1) {\r\n                                isAnyLeaguePresent = true;\r\n                            }\r\n                            // if (leagueDataObj[league]) leagueDataObj[league] = { ...leagueDataObj[league], live_count }\r\n                            leagueDataObj[league] = {\r\n                                location_id: parseInt(league),\r\n                                name: liveLocationsObject[locationId][league].Name,\r\n                                ...liveLocationsObject[locationId][league]\r\n                            };\r\n                            // } \r\n                        };\r\n                    });           \r\n                }\r\n    \r\n                let countryChecked = isCountrySelected ? 'checked' : isAnyLeaguePresent ? 'partial checked' : ''\r\n    \r\n                leagueArray = Object.values(leagueDataObj);\r\n    \r\n                // let contains = selectedLocation == locationId;\r\n                let contains = false;\r\n    \r\n\r\n                return (\r\n                    <li className={`${ contains && 'checked'}`}>\r\n                        <div className=\"d-flex align-items-center nav-parent\" key={locationId}>\r\n                            <a href className=\"accordion-heading\" data-toggle=\"collapse\" data-target={`#submenu-${locationId}`}>\r\n                                <span className=\"nav-header-primary\">\r\n                                    <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"live-flag-25 flag\"></div>\r\n                                    <span>{locationName}</span>\r\n                                </span>\r\n                            </a>\r\n                            {/* <div className={`form-group custum-check ${countryChecked}`} id={locationId}>\r\n                                <input type=\"checkbox\" id={`input-${locationId}`} checked/>\r\n                                <label></label>\r\n                            </div> */}\r\n                        </div>\r\n                        <ul class=\"nav nav-list collapse\" id={`submenu-${locationId}`}>\r\n                            {leagueArray.map(league => {\r\n                            const { fixtures_count: count, live_count: liveCount } = league;\r\n                            let leagueName = league[lang] || league.name_en || league.Name;\r\n                            // let isLeagueSelected = false;\r\n                            let isLeagueSelected = props.selectedTournament == league.Id;\r\n                            return (\r\n                                <li className={isLeagueSelected && 'show'}>\r\n                                    <a href id={ league.Id } className={`accordion-heading`} onClick={handleLeagueClick(isCountrySelected, locationId)}>\r\n                                        <span>\r\n                                            { leagueName }\r\n                                            { ` (${ liveCount || 0})`}\r\n                                        </span>\r\n                                        <span class=\"pull-right\"></span>\r\n                                        {/* <div className={`form-group custum-check ${isLeagueSelected && 'checked'}`}>\r\n                                            <input type=\"checkbox\" id=\"html\" />\r\n                                            <label></label>\r\n                                        </div> */}\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        </ul>\r\n                    </li>\r\n                );\r\n            });\r\n\r\n    const searchToRender =\r\n        <div className=\"sports__content sports__content_sm\">\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"sports__search-input\"\r\n                    // autoFocus\r\n                    placeholder={Translate.searchHere}\r\n                    value={searchVal}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n        </div>;\r\n    const childToRender =\r\n        <React.Fragment>            \r\n            <div className=\"w-100 d-flex sports disable-select\">\r\n                <ul className='nav nav-list all-league w-100'>\r\n                    {/* <h2></h2> */}\r\n                    <li className={`${ isAllActive && 'checked'}`}>\r\n                        <div className=\"d-flex align-items-center nav-parent\" onClick={resetSelectedLocations} id='all-date'>\r\n                            <a className=\"accordion-heading\" data-toggle=\"collapse\" data-target=\"#submenu8\">\r\n                                <span className=\"nav-header-primary\">\r\n                                    <i className=\"icon-all live-locations__icon mr-2\" />\r\n                                    <span>{Translate.all}</span>\r\n                                </span>\r\n                            </a>\r\n                            {/* <div className={`form-group custum-check ${isAllActive && 'checked' }`}>\r\n                                <input type=\"checkbox\" id=\"html\" checked={isAllActive}/>\r\n                                <label></label>\r\n                            </div> */}\r\n                        </div>\r\n                    </li>\r\n                    {locationsList}\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>;\r\n\r\n    return (\r\n        <>\r\n            {document.getElementById('location-filter') && ReactDOM.createPortal(\r\n                childToRender,\r\n                document.getElementById('location-filter')\r\n            )}\r\n            {document.getElementById('item-search') && ReactDOM.createPortal(\r\n                searchToRender,\r\n                document.getElementById('item-search')\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nLocations.propTypes = {\r\n    todayLocations: PropTypes.array,\r\n    selectTodayLocation: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todayLocations: state.inplay.locations,\r\n        selectedLocationList: state.today.selectedLocationList,\r\n        dateFilter: state.today.dateFilter,\r\n        selectedTodayLeagues: state.today.selectedLeagues,\r\n        selectedTodayLocation: state.today.selectedLocation,\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectTodayLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport map from 'lodash.map';\r\n\r\nclass SportsLive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSearch : false,\r\n        };\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     let {sports, selectedSport, selectSport} = this.props;\r\n    //     if(prevProps.sports !== sports){\r\n    //         let selectedSportCount = find(sports, (sport) => sport.Id === selectedSport)?.Count;\r\n    //          if(selectedSportCount === 0 && sports[0].Count > 0){\r\n    //              selectSport(sports[0].Id);\r\n    //          }\r\n    //      }\r\n    // }\r\n\r\n    // handleSearchToggle = () => {\r\n    //     this.setState({ showSearch: !this.state.showSearch });\r\n    // }\r\n\r\n    // handleChange = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.props.handleSearch(e.target.value);\r\n    // }\r\n    \r\n    // selectSport = (sportId) => {\r\n    //     this.props.selectSport(sportId);\r\n    //     this.props.resetSelectedLocations(true);\r\n    //     this.props.resetSelectMainMarket(null);\r\n    // }\r\n    \r\n    // grtTranslatedName = (name) => {\r\n    //     switch(name) {\r\n    //         case 'Football':\r\n    //         return Translate.football;\r\n    //         case 'Basketball':\r\n    //         return Translate.basketball;\r\n    //         case 'Ice Hockey':\r\n    //         return Translate.iceHockey;\r\n    //         case 'Tennis':\r\n    //         return Translate.tennis;\r\n    //         case 'Volleyball':\r\n    //         return Translate.volleyball;\r\n    //         case 'Boxing':\r\n    //         return Translate.boxing;\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        let { sports } = this.props;\r\n        // const sportList = [];\r\n        const sportList = map(sports, (item, i) => {\r\n            let sportId = item.Id;\r\n            // let sportName = this.grtTranslatedName(item.Name);\r\n            let count = item.Count;\r\n\t\t\tconst countSpan = <div className='sports__counter'> { count || 0} </div>;\r\n\t\t\treturn { id: `sport-filter-${ sportId }`, child: countSpan };\r\n\t\t});\r\n        return (\r\n            <>\r\n                {sportList.map(sport => {\r\n                const { id, child } = sport;\r\n                if(!sport || !document.getElementById(id)) return null;\r\n\t\t\t\treturn (\r\n\t\t\t\t\tReactDOM.createPortal(\r\n\t\t\t\t\t\tchild,\r\n\t\t\t\t\t\tdocument.getElementById(id)\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t})}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default React.memo(SportsLive);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filter, includes, find, forEach, orderBy, isEmpty, isEqual,  } from 'lodash';\r\nimport Matches from './Matches';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport ExtraOddsModal from './ExtraOddsModal';\r\nimport StatisticsModal from '../../Components/Shared/StatisticsModal';\r\nimport {\r\n    selectMainMarket,\r\n    getSportEvents,\r\n    search,\r\n    getInplayLocations,\r\n    setInplayResetPage,\r\n    clearSportEvents,\r\n    clearLocations,\r\n    setTotalEventCount,\r\n    setCurrentEventCount,\r\n    resetLiveMatches,\r\n    setLiveMatchesObject,\r\n    setCurrentSelectedSport,\r\n    setPartialEvents,\r\n    removeLiveEvents,\r\n    setLiveMatches,\r\n    setSelectedLocation\r\n} from '../../store/actions/inplayActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets } from '../../store/actions/lsports.global.actions';\r\nimport { locationSortingOrder, sportAndLocationData, staticPrematchSports } from '../../config/sports';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH, liveMarketOnMain } from '../../config/markets';\r\nimport map from 'lodash.map';\r\nimport { remove } from 'lodash';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\nimport Util from '../../helper/Util';\r\nimport { resetSelectedLocations, searchTodayEvents } from '../../store/actions/todayActions';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\n// import LiveStreamModal from '../../Components/Shared/LiveStramModal';\r\nimport Locations from './Locations';\r\nimport jwtService from '../../services/jwtService';\r\nimport { onUpdateMatchMarkets, onUpdateLiveDeventMarkets } from '../../graphql/subscriptions';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { dynamoClient } from '../../App';\r\nimport { getSingleLivePartialEvent, getAllLiveMatches, getLiveMatchMarkets, getLiveCount } from '../../dynamo/inplayParams';\r\nimport Login from '../../Components/Login';\r\nimport MarketHeader from '../Shared/MarketHeader';\r\n// import Upcoming from '../Today';\r\n// import { format } from 'date-fns';\r\n// import groupBy from 'lodash.groupby';\r\nimport SportsLive from './SportsLive';\r\nimport { Translate } from '../../localization';\r\nimport { Link } from 'react-router-dom';\r\n// List of fixtures for which firebase events have been subscribed.\r\n// let subscribedFixtures = [];\r\nlet liveMatches = {};\r\nlet liveMatchSub;\r\nlet marketSubscription;\r\nlet liveEvents = {};\r\nlet liveEventsCount;\r\nlet liveMarketCount;\r\nlet liveMarkets = {};\r\nlet livescores = {};\r\nlet liveScoreCount;\r\nlet unsubscribe;\r\nlet timerAddDel;\r\nlet liveMatchesCheck = {};\r\nlet nextExtraMarkets = false;\r\nlet xtraHeight;\r\nlet extraMarketEventId;\r\nlet sportsCount = {};\r\nlet getDataFromDB = false;\r\nlet websocket;\r\nlet websocketConnectionAttempts = 0;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\n\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentSelectedSport: lSportsConfig.inplay.selectedSport,\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n            liveMatches: {},\r\n            fixedData: {},\r\n            isLoading: true,\r\n            locationAndSportsObj: {},\r\n            currentSelectedLeague: null,\r\n            currentSelectedLocation: 'all',\r\n            searchVal: '',\r\n            liveMatchesObj: {},\r\n            liveStreamAvailable: false,\r\n            liveStreamData: [],\r\n            liveStreamUrlData: null,\r\n            showLiveStream: false,\r\n            fixturesLoaded: false,\r\n            marketsLoaded: false,\r\n            isDisconnected: false,\r\n            partialEvents: {},\r\n            showToday: false,\r\n            runningFetch: false,\r\n            disbleSportsSwitch: false,\r\n            showLogin: false,\r\n            expandTable: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: Fetch all the live Matches and there Market data\r\n        //this.loadAllDataForLiveMatches();\r\n        const { getStatsData, statsData, liveMatchesObj, partialEvents } = this.props;\r\n        const lastUrl = localStorage.getItem('lastUrl');\r\n        const fromExtraMarket = includes(lastUrl, '/extra-market/');\r\n        const secondLastUrl = localStorage.getItem('secondLastUrl');\r\n        const checkLive = includes(secondLastUrl, 'live');\r\n        if(false && !isEmpty(liveMatchesObj) && !isEmpty(this.props.partialEvents) && fromExtraMarket){\r\n            this.setSportsAndLocations();\r\n            this.getLiveMatchesMarkets();\r\n            this.setState({ isLoading: false }, () => {\r\n                extraMarketEventId = localStorage.getItem('eventId');\r\n                xtraHeight = localStorage.getItem('xtraHeight');\r\n                const fromExtraMarketLive = includes(lastUrl, '/live/extra-market/');\r\n                if (extraMarketEventId) {\r\n                    let divHeight = document.getElementById('scrollableDivMatch').offsetTop;\r\n                    var yOffset = document.getElementById(extraMarketEventId);\r\n                    if (yOffset) {\r\n                        document.getElementById('scrollableDivMatch').scrollTop = xtraHeight;\r\n                    }\r\n                    xtraHeight = null;\r\n                    extraMarketEventId = null;\r\n                }\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.props.setSelectedLocation('all');\r\n            liveMatches = {};\r\n            this.props.setLiveMatches({});\r\n            this.setState({ disbleSportsSwitch: true });\r\n            this.getLiveMatches();\r\n        }\r\n\r\n        //this.fetchLiveStreamMatches();\r\n\r\n        window.addEventListener('online', this.handleConnectionChange);\r\n        window.addEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { isDisconnected, currentSelectedSport } = this.state;\r\n        if (prevState.isDisconnected !== isDisconnected) {\r\n            if (isDisconnected) {\r\n                this.unsubscribe();\r\n                this.unsubscribeEvents();\r\n            } else if (!isDisconnected) {\r\n                liveMatches = {};\r\n                this.setState({ disbleSportsSwitch: true });\r\n                this.getLiveMatches();\r\n            };\r\n        }\r\n\r\n        if (prevState.currentSelectedSport && prevState.currentSelectedSport !== currentSelectedSport) {\r\n            this.unsubscribe();\r\n            this.unsubscribeEvents();\r\n            this.setState({ isLoading: true, disbleSportsSwitch: true, currentSelectedLeague: 'all', });\r\n            liveMatches = {};\r\n            this.getLiveMatches();\r\n            const sections = document.querySelectorAll('.collapse');\r\n            for (let i = 0; i < sections.length; i++) {\r\n                sections[i].classList.remove('show');\r\n            }\r\n        }\r\n\r\n        if (prevProps.dateFilter !== this.props.dateFilter) {\r\n            const sections = document.querySelectorAll('.collapse');\r\n            for (let i = 0; i < sections.length; i++) {\r\n                sections[i].classList.remove('show');\r\n            }\r\n            this.resetSelectedLocations();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        liveMatches = {};\r\n        sportsCount = {};\r\n        getDataFromDB = false;\r\n        extraMarketEventId = null;\r\n        xtraHeight = null;\r\n        if (!nextExtraMarkets) {\r\n            this.props.clearSportEvents();\r\n            this.props.clearLocations();\r\n            this.props.removeLiveEvents();\r\n            nextExtraMarkets = false;\r\n        }\r\n        this.unsubscribe();\r\n        // this.unsubscribeEvents();\r\n        window.removeEventListener('online', this.handleConnectionChange);\r\n        window.removeEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.selectedSport !== state.currentSelectedSport) {\r\n            return {\r\n                currentSelectedSport: props.selectedSport,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    startTimer = () => {\r\n        timerAddDel = setInterval(() => {\r\n            liveMatchesCheck = {};\r\n            this.getLiveMatchCount();\r\n            this.checkLiveMatches();\r\n        }, 20000);\r\n    }\r\n\r\n    getLiveMatches = (nextToken) => {\r\n        dynamoClient.scan(getAllLiveMatches(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                if (!data.Items.length) {\r\n                    this.setSportsAndLocations();\r\n                }\r\n                forEach(data.Items, (item) => {\r\n                    if (item.fixture_status === lSportsConfig.statuses.inplay) {\r\n                        if (!liveMatches[item.sport_id]) {\r\n                            liveMatches[item.sport_id] = [];\r\n                        }\r\n                        liveMatches[item.sport_id].push(item.fixture_id);\r\n                    }\r\n                });\r\n                if (data.LastEvaluatedKey) {\r\n                    this.getLiveMatches(data.LastEvaluatedKey);\r\n                } else {\r\n                    this.props.setLiveMatchesObject(liveMatches).then(() => {\r\n                        this.getLiveMatchCount();\r\n                        this.getAllLiveFixtureDevents();\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    checkLiveMatches = (nextToken) => {\r\n        dynamoClient.scan(getAllLiveMatches(nextToken), (err, data) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                if (!data.Items.length) {\r\n                    this.setSportsAndLocations();\r\n                }\r\n                forEach(data.Items, (item) => {\r\n                    if (item.fixture_status === lSportsConfig.statuses.inplay) {\r\n                        if (!liveMatchesCheck[item.sport_id]) {\r\n                            liveMatchesCheck[item.sport_id] = [];\r\n                        }\r\n                        liveMatchesCheck[item.sport_id].push(item.fixture_id);\r\n                    }\r\n                });\r\n                if (data.LastEvaluatedKey) {\r\n                    this.checkLiveMatches(data.LastEvaluatedKey);\r\n                } else {\r\n                    if (!isEqual(this.props.liveMatchesObj, liveMatchesCheck)) {\r\n                        this.props.setLiveMatchesObject(liveMatchesCheck).then(() => {\r\n                            this.getAllLiveFixtureDevents();\r\n                            // this.props.getStatsData();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getLiveMatchesMarkets = (clear) => {\r\n        const { currentSelectedSport } = this.state;\r\n        let { partialEvents, liveMatchesObj } = this.props;\r\n        let data = !isEmpty(partialEvents[currentSelectedSport]) && Object.values(partialEvents[currentSelectedSport]);\r\n        liveMarketCount = 0;\r\n        liveScoreCount = 0;\r\n        if (clear) {\r\n            liveMarkets = {};\r\n        }\r\n        // const missingData = difference(liveMatchesObj[currentSelectedSport], Object.keys(partialEvents[currentSelectedSport]));  \r\n        // console.info('>>>>> Missing Match from UI >>>>>>>: ', missingData);\r\n        forEach(data, (e) => {\r\n            liveMarkets[e.fixture_id] = {};\r\n            this.getSingleMatchMarkets(e.fixture_id, data.length);\r\n        });\r\n        return;\r\n\r\n    }\r\n\r\n    unsubscribe = () => {\r\n        console.log(' *******  Unsubscribe live matches **********');\r\n        if(unsubscribe) {\r\n            unsubscribe.unsubscribe();\r\n        }\r\n        if (websocket) {\r\n            websocket.close();\r\n        }\r\n        clearInterval(timerAddDel);\r\n        unsubscribe = null;\r\n    }\r\n\r\n\r\n    startListener = () => {\r\n        this.unsubscribe();\r\n        this.startTimer();\r\n\r\n        websocket = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        websocket.addEventListener('open', () => {\r\n            websocketConnectionAttempts = 0;\r\n        });\r\n\r\n        websocket.addEventListener('message', (event) => {\r\n            this.handleFirebaseUpdates({value: event});\r\n        });\r\n\r\n        websocket.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else websocketConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (websocketConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.unsubscribe();\r\n                liveMatches = {};\r\n                this.setState({disbleSportsSwitch: true});\r\n                this.getLiveMatches();\r\n            } else {\r\n                // Open appsync connection\r\n                this.startListenerAppSync();\r\n            }\r\n        });\r\n    }\r\n\r\n    startListenerAppSync = () => {\r\n        let marketSubscription = API.graphql(graphqlOperation(onUpdateLiveDeventMarkets));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below. \r\n        let unsub = marketSubscription.subscribe({\r\n            next: this.handleFirebaseUpdates,\r\n            error: (error) => {\r\n                this.unsubscribe();\r\n                liveMatches = {};\r\n                this.setState({disbleSportsSwitch: true})\r\n                this.getLiveMatches();\r\n            },\r\n        });\r\n        \r\n        unsubscribe = unsub;\r\n    }\r\n\r\n    handleConnectionChange = () => {\r\n        const condition = navigator.onLine ? 'online' : 'offline';\r\n        if (condition === 'online') {\r\n            const webPing = setInterval(\r\n                () => {\r\n                    fetch('//google.com', {\r\n                        mode: 'no-cors',\r\n                    })\r\n                        .then(() => {\r\n                            this.setState({ isDisconnected: false }, () => {\r\n                                return clearInterval(webPing);\r\n                            });\r\n                        }).catch(() => this.setState({ isDisconnected: true }));\r\n                }, 2000);\r\n            return;\r\n        }\r\n\r\n        return this.setState({ isDisconnected: true });\r\n    }\r\n\r\n    fetchLiveStreamMatches = async () => {\r\n        try {\r\n            let liveStreamData = await jwtService.getLiveStreamData();\r\n            this.props.setLiveStreamData(liveStreamData);\r\n            // this.setState({ liveStreamData: liveStreamData });\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                // FIXME: Commenting the error temporarily\r\n                //toastr.error('', 'Something went wrong.');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getAllLiveFixtureDevents = () => {\r\n        let { currentSelectedSport } = this.state;\r\n        let { liveMatchesObj } = this.props;\r\n        liveEventsCount = 0;\r\n        liveEvents = {};\r\n\r\n        if (!liveMatchesObj[currentSelectedSport] && !isEmpty(liveMatchesObj)) {\r\n            this.setState({ currentSelectedSport: Object.keys(liveMatchesObj)[0], isLoading: false });\r\n            liveMatches = {};\r\n            // this.getLiveMatches();\r\n        } else if (isEmpty(liveMatchesObj)) {\r\n            this.setSportsAndLocations();\r\n        } else {\r\n            forEach(liveMatchesObj[currentSelectedSport], (match) =>\r\n                this.getSingleMatchPartialEvent(match)\r\n            );\r\n        }\r\n    }\r\n\r\n    getSingleMatchPartialEvent = async (fixtureId) => {\r\n        const { currentSelectedSport } = this.state;\r\n        let { liveMatchesObj, partialEvents } = this.props;\r\n        try {\r\n            let event = dynamoClient.query(getSingleLivePartialEvent(fixtureId)).promise();\r\n            return await event.then(e => {\r\n                e.Items[0].participant_one_full = JSON.parse(e.Items[0].participant_one_full);\r\n                e.Items[0].participant_two_full = JSON.parse(e.Items[0].participant_two_full);\r\n                e.Items[0].participants = [e.Items[0].participant_one_full, e.Items[0].participant_two_full];\r\n                if(e.Items[0].location && e.Items[0].location_id) {\r\n                    e.Items[0].location = JSON.parse(e.Items[0].location);\r\n                    e.Items[0].location = { ...e.Items[0].location, Id: e.Items[0].location_id };\r\n                }\r\n                if(e.Items[0].league && e.Items[0].league_id) {\r\n                    e.Items[0].league = JSON.parse(e.Items[0].league);\r\n                    e.Items[0].league = { ...e.Items[0].league, Id: e.Items[0].league_id };\r\n                }\r\n                if(e.Items[0].sport && e.Items[0].sport_id) {\r\n                    e.Items[0].sport = JSON.parse(e.Items[0].sport);\r\n                    e.Items[0].sport = { ...e.Items[0].sport, Id: e.Items[0].sport_id };\r\n                }\r\n\r\n                liveEvents[fixtureId] = e.Items[0];\r\n                liveEventsCount++;\r\n                if (liveEventsCount === liveMatchesObj[currentSelectedSport].length) {\r\n                    partialEvents[currentSelectedSport] = liveEvents;\r\n                    this.props.setPartialEvents(partialEvents);\r\n                    // this.setState({partialEvents: partialEvents}, () => {\r\n                    this.setSportsAndLocations();\r\n                    this.getLiveMatchesMarkets(true);\r\n                    // });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            //reset logic to be added here\r\n            liveEventsCount++;\r\n            if (liveEventsCount === liveMatchesObj[currentSelectedSport].length) {\r\n\r\n                partialEvents[currentSelectedSport] = liveEvents;\r\n                this.props.setPartialEvents(partialEvents);\r\n\r\n                // this.setState({partialEvents: partialEvents}, () => {                       \r\n                this.setSportsAndLocations();\r\n                this.getLiveMatchesMarkets(true);\r\n\r\n                // });\r\n            }\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    setSportsAndLocations = () => {\r\n        // const { currentSelectedSport } = this.state;\r\n        const { partialEvents, liveMatchesObj, selectedSport: currentSelectedSport } = this.props;\r\n        let selectedSport;\r\n        let sports = sportAndLocationData();\r\n        let checkIsPartialEventEmpty = true;\r\n        forEach(Object.values(partialEvents), (e) => {\r\n            if (!isEmpty(e)) {\r\n                checkIsPartialEventEmpty = false;\r\n            }\r\n        });\r\n        if (checkIsPartialEventEmpty) {\r\n            sports = orderBy(sports, ['priority', 'Count'], ['asc', 'desc']);\r\n            this.setState({\r\n                locationAndSportsObj: sports,\r\n                isLoading: false, runningFetch: false\r\n            });\r\n            return;\r\n        }\r\n        for (let id in liveMatchesObj) {\r\n            // let sport = liveMatchesObj[id];\r\n            // sports[id].Count = sport.length;\r\n            if (!getDataFromDB) {\r\n                let sport = liveMatchesObj[id];\r\n                if (sports[id]) sports[id].Count = sport.length;\r\n            }\r\n            else if (getDataFromDB && this.state.sportsCountObj[id]) {\r\n                if (sports[id]) sports[id].Count = this.state.sportsCountObj[id].counter;\r\n            }\r\n        }\r\n        for (let event of Object.values(partialEvents[currentSelectedSport] || {})) {\r\n            let leagueData = {\r\n                live_count: (sports[event.sport_id]?.Locations?.[event.location.Id]?.[event.league.Id]?.live_count || 0) + 1,\r\n                ...event.league,\r\n            };\r\n            sports[event.sport_id].Locations[event.location.Id] = {\r\n                ...sports[event.sport_id].Locations[event.location.Id],\r\n                ...event.location,\r\n                [event.league.Id]: { ...leagueData }\r\n            };\r\n        }\r\n\r\n\r\n        this.getSortedLocations(sports);\r\n        let sortedSports;\r\n        if (sports[lSportsConfig.sports.football.id].Count === 0) {\r\n            // If no football matches present sort by counts\r\n            sortedSports = orderBy(sports, ['Count', 'Id'], ['desc', 'asc']);\r\n        }\r\n        else {\r\n            // If there is football match then priorities it and rest sorted by count\r\n            sortedSports = orderBy(sports, ['priority', 'Count'], ['asc', 'desc']);\r\n        }\r\n        if (!currentSelectedSport) {\r\n            for (let i in sortedSports) {\r\n                selectedSport = sortedSports[i];\r\n                break;\r\n            }\r\n        }\r\n        else selectedSport = find(sortedSports, (e) => e.Id == currentSelectedSport);\r\n        // this.setState({ locationAndSportsObj : sortedSports, currentSelectedSport: selectedSport.Id });\r\n        this.setState({ locationAndSportsObj: sortedSports });\r\n    }\r\n\r\n    getLiveMatchCount = async () => {\r\n        const { liveMatchesObj } = this.props;\r\n        for (let id in liveMatchesObj) {\r\n            if (!sportsCount[id]) {\r\n                sportsCount[id]={counter:0};\r\n            } \r\n        }\r\n        for (let sportId in liveMatchesObj) {\r\n            let fixture = Object.values(liveMatchesObj[sportId]);\r\n            let objSize = fixture.length;\r\n            \r\n            try {\r\n                let totalCount = 0;\r\n                //batchGet can fetch max 100 items at a time, therefore spliting the fixtures in segments\r\n                if (objSize > 100) {\r\n                    let segments =  Math.ceil(objSize/100);\r\n                    let j = 0;\r\n                    for (let i = 1; i <= segments; i++){\r\n                        let arr=[]\r\n                        if(i==segments){\r\n                            arr=fixture.slice(j,objSize);\r\n                        }else{\r\n                            arr =fixture.slice(j,i*100);\r\n                        }\r\n                       \r\n                        let fixtureIds = arr.map((element) => {\r\n                            return element = { fixture_id: element.toString() + '^sport_event_status' };\r\n                        })\r\n\r\n                        const promise_1 = dynamoClient.batchGet(getLiveCount(fixtureIds)).promise();\r\n                        await promise_1.then(res => {\r\n                            let { Responses: { LiveMarkets } } = res;\r\n                            if (LiveMarkets?.length) {\r\n                                totalCount = totalCount + LiveMarkets.length;\r\n                            }\r\n                        }).catch(err => {\r\n                        console.log(err);\r\n                        });\r\n                        j = i * 100;\r\n                    }\r\n                    sportsCount[sportId]={counter:totalCount}\r\n                }//If items are less than 100\r\n                else {\r\n                    let fixtureIds = fixture.map((element) => {\r\n                        return element = { fixture_id:element.toString() + '^sport_event_status' };\r\n                     });\r\n                    const promise_1 = dynamoClient.batchGet(getLiveCount(fixtureIds)).promise();\r\n                    await promise_1.then(res => {\r\n                        let { Responses: { LiveMarkets } } = res;\r\n                        if (LiveMarkets?.length) {\r\n                            sportsCount[sportId] = { counter: LiveMarkets.length };\r\n                        }\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.log('err:' ,error);\r\n            } \r\n        }\r\n        this.setState({ sportsCountObj: sportsCount }, () => {\r\n            getDataFromDB = true;\r\n            this.setSportsAndLocations();\r\n        });\r\n        \r\n    }\r\n\r\n    getSortedLocations = (sports) => {\r\n        forEach(sports, elem => {\r\n            elem.Locations = this.sortLogic(elem.Locations);\r\n        });\r\n    }\r\n\r\n    sortLogic = (locations) => {\r\n        const sortingOrder = locationSortingOrder;\r\n        let preSortedList = [];\r\n        for (let s in sortingOrder) {\r\n            let elem = remove(locations, l => {\r\n                if (l) return l.name_en === sortingOrder[s];\r\n            });\r\n            if (elem.length > 0) preSortedList.push(elem[0]);\r\n        }\r\n        return preSortedList.concat(locations.sort((a, b) => Util.compareStrings(a.name_en, b.name_en)));\r\n\r\n    }\r\n\r\n    groupMatchesByStatus = () => {\r\n        let { fixedData } = this.state;\r\n        if (!fixedData) return;\r\n\r\n        const matchesByStatus = {\r\n            '_2': {},\r\n            '_today': {},\r\n        };\r\n        Object.values(fixedData).forEach((item) => {\r\n            // If Fixture/Markets/Livescore is not available skip that match\r\n            if (item.Fixture && (item.Markets && !isEmpty(item.Markets)) && item.Livescore) {\r\n                if (item.Fixture.Status === lSportsConfig.statuses.inplay && item.Livescore.Scoreboard.Status === lSportsConfig.statuses.inplay) {\r\n                    matchesByStatus['_2'][item.FixtureId] = item;\r\n                }\r\n            }\r\n        });\r\n        return matchesByStatus;\r\n    };\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.unsubscribeEvents();\r\n                this.openExtraOddsModal({fixture_id: fixtureId});\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => {\r\n                this.unsubscribeEvents();\r\n                this.openExtraOddsModal({fixture_id: fixtureId});\r\n            },\r\n        });\r\n    }\r\n\r\n    unsubscribeEvents = () => {\r\n        if (liveMatchSub) liveMatchSub.close();\r\n        if (liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        console.log('***** UnSubscribed all live matches. *****');\r\n    };\r\n\r\n    marketDifference = (markets, prevMarkets) => {\r\n        return map(markets, (market) => {\r\n            const { Bets, Id } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({ value }) => {\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        let { event } = this.state;\r\n        let newFixture = {};\r\n\r\n        if (!updatedMatch || !event || event.fixture_id != updatedMatch?.match_id) return null;\r\n\r\n        if (updatedMatch.market) {\r\n            let updatedMarket = JSON.parse(updatedMatch.market);\r\n            newFixture.market = { ...event.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = event.market;\r\n        }\r\n        if (updatedMatch.livescore) {\r\n            newFixture.Livescore = JSON.parse(updatedMatch.livescore);\r\n        }\r\n        else {\r\n            newFixture.Livescore = event.Livescore;\r\n        }\r\n\r\n\r\n\r\n        //const marketWithDiff1 =  this.marketDifference(newFixture.imp_market, this.state.event.imp_market);\r\n        const marketWithDiff2 = this.marketDifference(newFixture.market, this.state.event.market);\r\n        newFixture.Markets = [...marketWithDiff2];\r\n        newFixture = { ...event, ...newFixture };\r\n        this.props.setCurrentEvent(newFixture);\r\n        this.setState({ event: newFixture }, () => { this.props.setExtraMarkets(newFixture.Markets); });\r\n\r\n    }\r\n\r\n    handleFirebaseUpdates = ({ value }) => {\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        const id = updatedMatch.match_id;\r\n        const { liveMatches: { [id]: oldMatches } } = this.props;\r\n        let marketId = updatedMatch.fixture_id;\r\n        marketId = marketId?.split('^')[1];\r\n        if (!updatedMatch.sport_event_status && marketId && liveMarketOnMain.indexOf(marketId) === -1) return;\r\n\r\n\r\n        if (updatedMatch.outcomes) {\r\n            // if (!updatedMatch.livescore) return;\r\n\r\n            if (!oldMatches) {\r\n                // temp return statement TO fix infinite loader\r\n                return;\r\n            }\r\n\r\n            const marketWithDiff = map(Object.values(Util.marketFormatter([updatedMatch], id)), (market) => {\r\n                let { Bets, Id } = market;\r\n                const oldMarket = find(oldMatches.Markets, (mar) => mar.Id === Id);\r\n                // If market not present previously no updated needed.\r\n                if (!oldMarket) return market;\r\n                if (!Bets) return market;\r\n                if (oldMarket.Bets?.length && Bets) {\r\n                    let temp = {};\r\n                    oldMarket.Bets.map( (bet) => temp[ bet.Id ] = bet );\r\n                    Bets = { ...temp, ...Bets };\r\n                    Bets = Object.values(Bets);\r\n                    // Bets = temp;\r\n                }\r\n                const updatedBetsWithDiff = map(Bets, bet => {\r\n                    const { Price, Id: betId } = bet;\r\n\r\n                    const oldBet = find(oldMarket.Bets, (b) => b?.Id === betId);\r\n                    // If bet not present previously no updated needed.\r\n                    if (!oldBet) return bet;\r\n\r\n                    const { Price: oldPriceStr } = oldBet;\r\n                    const price = parseFloat(Price);\r\n                    const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                    const diff = oldPrice - price;\r\n                    return {\r\n\r\n                        ...bet,\r\n                        diff,\r\n                    };\r\n                });\r\n\r\n                return {\r\n                    ...oldMarket,\r\n                    Bets: updatedBetsWithDiff,\r\n                };\r\n            });\r\n            let liveScore = oldMatches.Livescore;\r\n            if (updatedMatch.sport_event_status) {\r\n                liveScore = JSON.parse(updatedMatch.sport_event_status);\r\n            }\r\n\r\n\r\n\r\n            let newLiveMatches = {\r\n                ...this.props.liveMatches,\r\n                [id]: { ...oldMatches, Livescore: liveScore, Markets: { ...oldMatches.Markets, [`id_${marketWithDiff[0].Id}`]: marketWithDiff[0] } },\r\n            };\r\n            this.props.setLiveMatches(newLiveMatches);\r\n        }\r\n        else if (updatedMatch.sport_event_status) {\r\n            let newLiveMatches = {\r\n                ...this.props.liveMatches,\r\n                [id]: { ...oldMatches, Livescore: JSON.parse(updatedMatch.sport_event_status) },\r\n            };\r\n            this.props.setLiveMatches(newLiveMatches);\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    getSingleMatchMarkets = async (fixtureId, count) => {\r\n        let { partialEvents } = this.props;\r\n        try {\r\n            let event = dynamoClient.query(getLiveMatchMarkets(fixtureId.toString())).promise();\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                let fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    let mktItems = [];\r\n                    forEach(Items, (item) => {\r\n                        if(item.outcomes) {\r\n                            // let mrktData = JSON.parse(item.market);\r\n                            mktItems.push(item);\r\n                        }\r\n                        if(item.sport_event_status) {\r\n                            let livescore = JSON.parse(item.sport_event_status);\r\n                            fixture.livescore = livescore;\r\n                        }\r\n                    });\r\n                    let mrktData = Util.marketFormatter(mktItems, fixtureId);\r\n                    fixture.market = { ...fixture.market, ...mrktData };\r\n                }\r\n\r\n                // FIXME: set false temporarily need to update once Betradar setup\r\n                if (!count && false)\r\n                    return fixture || e.Items[0];\r\n                else {\r\n                    liveMarkets[fixtureId] = fixture.market;\r\n                    livescores[fixtureId] = fixture.livescore;\r\n                    liveMarketCount++;\r\n                    if (liveMarketCount === count) {\r\n                        let finalMatches = {};\r\n                        let { currentSelectedSport } = this.state;\r\n                        // let toReset= [];\r\n\r\n                        // for(let id in liveMatchesObj[currentSelectedSport]) {\r\n                        //     let fixtureId = liveMatchesObj[currentSelectedSport][id];\r\n                        //     if(!partialEvents[currentSelectedSport][fixtureId] || !livescores[fixtureId]){\r\n                        //         toReset.push(+fixtureId);\r\n                        //     }\r\n                        // }\r\n                        // console.log(toReset);\r\n                        // if (toReset.length) this.props.resetLiveMatches(toReset);\r\n\r\n                        for (let id in liveMarkets) {\r\n                            if (liveMarkets[id] && livescores[id] && Object.keys(liveMarkets[id]).length)\r\n                                finalMatches[id] = { ...partialEvents[currentSelectedSport][id], Markets: liveMarkets[id], Livescore: livescores[id] };\r\n                        }\r\n                        this.props.setLiveMatches(finalMatches).then(() => {\r\n                            this.setState({ liveMatches: finalMatches, isLoading: false, runningFetch: false, disbleSportsSwitch: false }, () => this.startListener());\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        } catch (err) {\r\n            liveMarketCount++;\r\n            if (liveMarketCount === count) {\r\n                let finalMatches = {};\r\n                let { currentSelectedSport } = this.state;\r\n                // let toReset= [];\r\n\r\n                // for(let id in liveMatchesObj[currentSelectedSport]) {\r\n                //     let fixtureId = liveMatchesObj[currentSelectedSport][id];\r\n                //     if(!partialEvents[currentSelectedSport][fixtureId] || !livescores[fixtureId]){\r\n                //         toReset.push(+fixtureId);\r\n                //     }\r\n                // }\r\n                // console.log(toReset);\r\n                // if (toReset.length) this.props.resetLiveMatches(toReset);\r\n\r\n                for (let id in liveMarkets) {\r\n                    finalMatches[id] = { ...partialEvents[currentSelectedSport][id], Markets: liveMarkets[id], Livescore: livescores[id] };\r\n                }\r\n                this.props.setLiveMatches(finalMatches).then(() => {\r\n                    this.setState({ liveMatches: finalMatches, isLoading: false, runningFetch: false, disbleSportsSwitch: false }, () => this.startListener());\r\n                });\r\n            }\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    openExtraOddsModal = (fixture, liveStreamAvailable) => {\r\n        this.unsubscribe();\r\n        nextExtraMarkets = true;\r\n        this.getSingleMatchMarkets(fixture.fixture_id).then(e => {\r\n            fixture = { ...fixture, Markets: e?.market || {}, Livescore: e?.livescore || {}};\r\n            this.subscribeExtraMarket(fixture.fixture_id);\r\n\r\n            this.setState({ event: fixture, liveStreamAvailable: liveStreamAvailable }, () => {\r\n                this.props.setCurrentEvent(fixture);\r\n                this.setState({ showExtraOddsModal: true });\r\n            });\r\n            this.props.setStatistics(fixture.fixture_id, 'forPopup', 'live');\r\n            // const collection = this.props.language === `en`? `d_event` : `d_event_${this.props.language}`;\r\n            // unSub.push(firebaseDB.collection(collection).doc(`${fixture.FixtureId}`).onSnapshot(this.handleFirebaseUpdates));\r\n        });\r\n\r\n    };\r\n\r\n    openUpcomingExtraModal = () => {\r\n        // check to detect if xtra market is opened \r\n        nextExtraMarkets = true;\r\n    }\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.unsubscribeEvents();\r\n        // this.getLiveMatchesMarkets();\r\n        // this.getLiveMatches();\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        let statsTemplateType = 'live';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', statsTemplateType);\r\n    };\r\n\r\n    openLiveStreamModal = (streamURL) => {\r\n        this.unsubscribe();\r\n        let authed = localStorage.getItem('jwt_access_token') || sessionStorage.getItem('jwt_access_token') ? true : false;\r\n        if (!authed) {\r\n            this.setState({ showLogin: true });\r\n        }\r\n        else {\r\n            this.setState({ liveStreamUrlData: streamURL }, () => this.setState({ showLiveStream: true }));\r\n        }\r\n    }\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n\r\n    showLogin = () => {\r\n        this.setState({ showLogin: true });\r\n    }\r\n\r\n    selectLocation = (locationId) => {\r\n        this.props.setSelectedLocation(locationId);\r\n        this.setState({ currentSelectedLocation: locationId });\r\n    }\r\n\r\n    resetSelectedLeague = () => {\r\n        this.setState({ currentSelectedLeague: null });\r\n    }\r\n\r\n    resetSelectedLocations = () => {\r\n        this.props.setSelectedLocation('all');\r\n        this.setState({ currentSelectedLeague: 'all' });\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        this.setState({ searchVal: value });\r\n        this.props.searchTodayEvents(value);\r\n    }\r\n\r\n    closeLiveStreamModal = () => {\r\n        this.unsubscribe();\r\n        liveMatches = {};\r\n        this.setState({ disbleSportsSwitch: true });\r\n        this.getLiveMatches();\r\n        this.setState({ liveStreamUrlData: null, showLiveStream: false });\r\n    }\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    groupBySport = (matches) => {\r\n        const sportWiseMatch = {};\r\n\r\n        for (let key in matches) {\r\n            if (!matches.hasOwnProperty(key)) continue;\r\n\r\n            const match = matches[key];\r\n            if (!sportWiseMatch[match.fixture_status]) {\r\n                sportWiseMatch[match.fixture_status] = [];\r\n            }\r\n            sportWiseMatch[match.fixture_status].push(match);\r\n        }\r\n        return sportWiseMatch;\r\n    };\r\n\r\n    selectLeague = (leagueId) => {\r\n        this.setState({ currentSelectedLeague: leagueId });\r\n    }\r\n\r\n\r\n    renderMarketAndMatches = (liveMatches) => {\r\n        const elems = [];\r\n        const { limit: fromHomeLimit } = this.props;\r\n        for (let sportId in liveMatches) {\r\n            if (!liveMatches.hasOwnProperty(sportId)) continue;\r\n\r\n            let matches = liveMatches[sportId];\r\n            if (fromHomeLimit) matches = matches.slice(0,fromHomeLimit);\r\n            if (matches[0].fixture_status === lSportsConfig.statuses.inplay) {\r\n                elems.push(\r\n                    <Matches events={matches} liveStreamData={this.state.liveStreamData} openLiveStreamModal={this.openLiveStreamModal} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />\r\n                );\r\n\r\n            }\r\n        }\r\n        return elems;\r\n    };\r\n\r\n\r\n    handleTableExpand = () => {\r\n        this.setState((prevState) => ({ expandTable: !prevState.expandTable }),\r\n            () => {\r\n                const { expandTable } = this.state;\r\n                if (expandTable) document.getElementById('side-navbar').classList.add('expand-nav');\r\n                else document.getElementById('side-navbar').classList.remove('expand-nav');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            showExtraOddsModal,\r\n            event,\r\n            showStatisticsModal,\r\n\r\n            isLoading,\r\n            currentSelectedLeague,\r\n            searchVal,\r\n            currentSelectedSport,\r\n            showLiveStream,\r\n            liveStreamUrlData,\r\n            liveStreamData,\r\n            showLogin,\r\n            locationAndSportsObj,\r\n            expandTable,\r\n            currentSelectedLocation\r\n        } = this.state;\r\n        let { statisticsType, dateFilter,liveMatches,selectedLocationList, upcomingEvents, limit: fromHomeLimit ,selectedLeagueList, language } = this.props;\r\n        let liveMatchesFilteredBySports = filter(liveMatches, (e => e.sport?.Id === currentSelectedSport));\r\n        let filteredLiveMatches = liveMatchesFilteredBySports;\r\n        let currentLocationObj = find(locationAndSportsObj, { Id: currentSelectedSport });\r\n        const lan = `name_${ language.toLowerCase() }`;\r\n        if (selectedLocationList.length || selectedLeagueList.length) {\r\n            filteredLiveMatches = filter(filteredLiveMatches, function (o) { return (selectedLocationList.indexOf(`${o.location.Id}`) > -1 || selectedLeagueList.indexOf(`${o.league.Id}`) > -1); });\r\n        }\r\n\r\n        if (currentSelectedLeague) {\r\n            filteredLiveMatches = filter(filteredLiveMatches, function (o) { return (currentSelectedLeague == o.league.Id)});\r\n        }\r\n\r\n        \r\n        if ((currentSelectedLeague !== 'all' && !filteredLiveMatches.length) || !liveMatchesFilteredBySports.length) {\r\n            let sessionFixture = sessionStorage.getItem('fixture_list');\r\n            if (sessionFixture) {\r\n                sessionFixture = JSON.parse(sessionFixture);\r\n                sessionFixture = sessionFixture.filter((item) => item.fixtureStatus != lSportsConfig.statuses.inplay);\r\n                sessionStorage.setItem('fixture_list', JSON.stringify(sessionFixture));\r\n            }\r\n        }\r\n\r\n        if (searchVal !== '') {\r\n            filteredLiveMatches = filter(filteredLiveMatches, function (o) {\r\n                let searchParam = `${o.participants[0][ lan ] || o.participants[0]?.name_en} ${o.participants[1][ lan ] || o.participants[1]?.name_en}` ;\r\n                return includes(searchParam.toLowerCase(), searchVal.toLowerCase());\r\n            });\r\n        }\r\n\r\n        const groupedLiveEvents = this.groupBySport(currentSelectedLeague !== 'all' || searchVal !== '' || selectedLeagueList.length ? filteredLiveMatches : liveMatchesFilteredBySports);\r\n\r\n        let matches = this.renderMarketAndMatches(groupedLiveEvents);\r\n\r\n\r\n\r\n        // Filter out the single match for extraOddsModal\r\n        if (showExtraOddsModal) {\r\n            // let items = groupedLiveEvents['2'];\r\n            // for (let sportId in items) {\r\n            //     if (!items.hasOwnProperty(sportId)) continue;\r\n            //     if (event.fixture_id === items[sportId].fixture_id) {\r\n            //         matchForModal = items[sportId];\r\n            //     }\r\n            // }\r\n        }\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <React.Fragment>\r\n\r\n                    {matches}\r\n                    {/* <div className=\"pb-4\" /> */}\r\n                    {showExtraOddsModal &&\r\n                        <ExtraOddsModal\r\n                            showLogin={this.showLogin}\r\n                            event={event}\r\n                            liveStreamAvailable={this.state.liveStreamAvailable}\r\n                            closeModal={this.closeExtraOddsModal}\r\n                            liveMatch={event}\r\n                            liveStreamData={liveStreamData}\r\n                        />}\r\n                    {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />}\r\n                    {/* {showLiveStream  && <LiveStreamModal closeModal={this.closeLiveStreamModal} liveStreamMatch={liveStreamUrlData} />} */}\r\n                    {showLogin && <Login hideLogin={this.hideLogin}/>}\r\n                </React.Fragment>\r\n                \r\n                ) : (\r\n                    null\r\n                    //<div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n                );\r\n        return (\r\n            <React.Fragment>\r\n                {/* <div id=\"scrollableDiv\" className={ `odds-panel ${expandTable ? 'mid-expand' : ''}`}> */}\r\n                { !isLoading && <SportsLive\r\n                        sports={locationAndSportsObj}\r\n                        // selectSport={this.props.selectSportMobile}\r\n                        selectedSport={currentSelectedSport}\r\n                    />}\r\n                {/* <BannerCarousel /> */}\r\n                <div className=\"table-responsive position-relative\">\r\n                    <span className=\"drawer\" href >\r\n                        <i className=\"icon-color\" onClick={ this.handleTableExpand }>\r\n                            <img src=\"/images/rounded.svg\" className='w-75'/>\r\n                        </i>\r\n                        { fromHomeLimit ? Translate.inplay : \r\n                        <span className='ml-3'>{staticPrematchSports()[currentSelectedSport]?.name}</span>\r\n                        }\r\n                    </span>\r\n                    { !isLoading && \r\n                    <Locations\r\n                        fromLivePage={true}\r\n                        locationsObj={find(locationAndSportsObj, { Id : currentSelectedSport })} // send current selected sport from array of objects\r\n                        searchVal={searchVal}\r\n                        handleSearch={this.handleSearch}\r\n                        selectLocation={this.selectLocation}\r\n                        selectLeague={this.selectLeague}\r\n                        currentSelectedLeague={currentSelectedLocation}\r\n                        selectedTournament={currentSelectedLeague}\r\n                        resetSelectedLocations={this.resetSelectedLocations}\r\n                    />\r\n                    }\r\n                    <table className='table mb-0'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[currentSelectedSport]} />\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {isLoading ? \r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colspan='9' className='p-0'><Loading customClass='odds-panel w-100 pt-0 mx-0'/> </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            : matches.length > 0 ?  \r\n                                <>\r\n                                    {drawContent}\r\n                                </>\r\n                            :\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td colspan='9'>\r\n                                            <div className='no-data fs-15 pt-3 pl-3 pb-3'>\r\n                                                { Translate.noLiveMatch }\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            }\r\n                    </table>\r\n                    {fromHomeLimit && matches.length > 5 && <Link className='see-more-btn' to='/d/live-betting'>See more</Link>}\r\n                    {/* <Upcoming\r\n                            fromLivePage={true}\r\n                            noLoading={true}\r\n                            noSports={true}\r\n                            currentSelectedSport={currentSelectedSport}\r\n                            currentSelectedLeague={currentSelectedLocation}\r\n                            isLivePresent={ matches.length > 0 && dateFilter === format(new Date(), 'yyyy-MM-dd')}\r\n                            // currentSelectedMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[currentSelectedSport][0].Id !== mainSelectedMarket ? mainSelectedMarket : MARKET_FOR_OUTER_SLIDER[currentSelectedSport][0].Id }\r\n                        /> */}\r\n                </div>\r\n                {/* </div> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedSport: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.string,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    getSportEvents: PropTypes.func,\r\n    getInplayLocations: PropTypes.func,\r\n    setInplayResetPage: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    clearLocations: PropTypes.func,\r\n    setCurrentEvent: PropTypes.func,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    searchValue: PropTypes.string,\r\n    language: PropTypes.string,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // selectedSport: state.inplay.selectedSport,\r\n        selectedLocationList: state.today.selectedLocationList,\r\n        selectedLeagueList: state.today.selectedLeagues,\r\n        selectedSport: state.today.selectedSport,\r\n        mainEvents: state.inplay.mainEvents,\r\n        mainSelectedMarket: state.inplay.mainSelectedMarket,\r\n        noSearchResults: state.inplay.noSearchResults,\r\n        noEvents: state.inplay.noEvents,\r\n        upcomingEvents: state.today.mainEvents,\r\n        hasNextPage: state.inplay.hasNextPage,\r\n        searchStarted: state.inplay.searchStarted,\r\n        searchValue: state.inplay.searchValue,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,   \r\n        totalEventCount: state.inplay.totalEventCount,\r\n        lastIndex: state.inplay.lastIndex,\r\n        statsData: state.general.statsData,\r\n        dateFilter: state.today.dateFilter,\r\n        liveMatchesObj: state.inplay.liveMatchesObj,\r\n        partialEvents: state.inplay.partialEvents,\r\n        liveStreamData: state.inplay.liveStreamData,\r\n        liveMatches: state.inplay.liveMatches,\r\n        currentSelectedLeague: state.inplay.locationId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getSportEvents: (sportId) => dispatch(getSportEvents(sportId)),\r\n        search: (value) => dispatch(search(value)),\r\n        getInplayLocations: (sportId) => dispatch(getInplayLocations(sportId)),\r\n        setInplayResetPage: () => dispatch(setInplayResetPage()),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        resetSelectedLocations: (locationId) => dispatch(resetSelectedLocations(locationId)), \r\n        // selectTodaySport: (sportId) => dispatch(selectSportMobile(sportId)), \r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        searchTodayEvents: (value) => dispatch(searchTodayEvents(value)),\r\n        setCurrentEventCount: (count) => dispatch(setCurrentEventCount(count)),\r\n        setTotalEventCount: (count) => dispatch(setTotalEventCount(count)),\r\n        resetLiveMatches: (payload) => dispatch(resetLiveMatches(payload)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        // setInplayLoading: (bool) => dispatch(setInplayLoading(bool)),\r\n        setLiveMatchesObject: (liveMatchesObj) => dispatch(setLiveMatchesObject(liveMatchesObj)),\r\n        setCurrentSelectedSport: (sportId) => dispatch(setCurrentSelectedSport(sportId)),\r\n        setPartialEvents: (events) => dispatch(setPartialEvents(events)),\r\n        removeLiveEvents: () => dispatch(removeLiveEvents()),\r\n        setLiveMatches: (liveMatches) => dispatch(setLiveMatches(liveMatches)),\r\n        setSelectedLocation: (locationId) => dispatch(setSelectedLocation(locationId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n    ","import React from 'react';\r\nimport Events from './Events';\r\n\r\nfunction Inplay(props) {\r\n    return (\r\n        <Events limit={props.limit}/>\r\n    );\r\n}\r\n\r\nexport default Inplay;\r\n","import React from 'react';\r\nimport { sortBy } from 'lodash';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { staticPrematchSports } from '../../config/sports';\r\nimport { connect } from 'react-redux';\r\nimport { selectSportMobile } from '../../store/actions/todayActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Translate } from '../../localization';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\twidth: '100%',\r\n\tbackground: 'transparent'\r\n  },\r\n  heading: {\r\n\tfontSize: theme.typography.pxToRem(15),\r\n\tfontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nconst SportsList = (props) => {\r\n  const classes = useStyles();\r\n\tlet sportList = Object.values(staticPrematchSports())\r\n\tsportList = sortBy(sportList, ['sort']);\r\n\tconst { locations } = props;\r\n\t\r\n\tconst onSportClick = (id) => {\r\n\t\tprops.selectSportMobile(id);\r\n\t\tprops.history.push('/d/sports');\r\n\t};\r\n\tconst { selectedSport } = props;\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n          <h3>{Translate.sports}</h3>\r\n          { sportList.map( sport => {\r\n\t\t\t\tconst { name: sportName, sport_id: sportId } = sport;\r\n\t\t\t\tlet activeClass = selectedSport === sportId ? 'active' : '' \r\n\t\t\t  return (\r\n    \t\t\t<Accordion expanded={ false } className={activeClass} onChange={ () => null } onClick={ () => onSportClick(sport.sport_id)}>\r\n        \t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t// expandIcon={<ExpandMoreIcon />}\r\n\t\t\t\t\t\t\t\taria-controls=\"panel1a-content\"\r\n\t\t\t\t\t\t\t\tid=\"panel1a-header\"\r\n\t\t\t\t\t\t\t\t// onClick={ () => onSportClick(sport.sport_id)}\r\n\t\t\t\t\t\t\t>\r\n            <img alt=\"stream\" className=\"nav-ico-light mr-3\" width=\"20\" src={`/images/sports/${sport.icon_name}-desktop-white.svg`}></img>\r\n\r\n            \t\t\t<Typography className={classes.heading}>{sportName}</Typography>\r\n        \t\t\t</AccordionSummary>\r\n        {/* <AccordionDetails>\r\n\t\t\t\t\t\t<ul className='w-100'>\r\n\t\t\t\t\t\t\t{ locations.map(loc => \r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\t\t\t\t\t\t\taria-controls=\"panel1a-content\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"panel1a-header\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>{loc.Name}</Typography>\r\n\t\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t\t<AccordionDetails>Nothing found </AccordionDetails>\r\n\r\n\t\t\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</AccordionDetails> */}\r\n    </Accordion>\r\n\t\t\t  );\r\n\t\t  })}\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\t\t\t\tlocations: state.today.locations,\r\n\t\t\t\tselectedSport: state.today.selectedSport,\r\n\t\t\t\tlanguage: state.general.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tselectSportMobile: (sportId) => dispatch(selectSportMobile(sportId, true)),\r\n\t};\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SportsList));","import React from 'react';\r\nimport BannerCarousel, {CarouselItem} from './BannerCarousel';\r\n\r\nfunction Banner(props) {\r\n    return (\r\n\r\n        <BannerCarousel >\r\n\r\n            <CarouselItem left='0%'><img  src=\"/images/banners/aff1.png\" alt=\"aff1\" /></CarouselItem>\r\n            <CarouselItem  left='100%'><img  src=\"/images/banners/aff2.png\" alt=\"aff2\" /></CarouselItem>\r\n            <CarouselItem  left='200%'><img  src=\"/images/banners/aff3.png\" alt=\"aff3\" /></CarouselItem>\r\n            <CarouselItem  left='300%'><img  src=\"/images/banners/aff4.png\" alt=\"aff4\" /></CarouselItem>\r\n        </BannerCarousel>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Loading from '../../Components/Common/NewLoading';\r\n import { postHeartBeat } from '../../store/actions/casino.actions';\r\n\r\nlet heartBeatTimout;\r\n\r\nclass SingleGame extends Component {\r\n    componentDidMount() {\r\n        heartBeatTimout = setInterval(() => this.props.postHeartBeat(), 10000); \r\n        // let history = this.props.history;\r\n        // let title = this.props.match.params.gameTitle;\r\n        // this.props.initCasinoUser(title, history, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n     clearTimeout(heartBeatTimout);\r\n    };\r\n\r\n    render() {\r\n        let { currentGameData } = this.props;\r\n        let  game_url = `${currentGameData.GAME_URL}?game=${currentGameData.game}&hash=${currentGameData.hash}&api_id=${currentGameData.api_id}&lang=en&exit=${currentGameData.exiturl}>`;\r\n\r\n        return (\r\n            <>\r\n                {currentGameData && currentGameData.GAME_URL ? (\r\n                    <iframe\r\n                        className=\"casino__iframe2\"\r\n                        src={game_url}\r\n                        title=\"Casino Game\"\r\n                        allowFullScreen\r\n                    ></iframe>\r\n                ) : (\r\n                    <Loading />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSingleGame.propTypes = {\r\n    // initCasinoUser: PropTypes.func,\r\n    currentGameData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentGameData: state.casino.currentGameData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        postHeartBeat: () => dispatch(postHeartBeat()),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleGame));\r\n","import React, { Component } from 'react';\r\nimport './tak.css';\r\n\r\nclass Nhome extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <div className=\"container content-main-casino\">\r\n  <div className=\"row\"></div>\r\n  <section id=\"section-games\" className=\"section-games\">\r\n    <nav role=\"navigation\" className=\"nav-game-categories-wrap\">\r\n      <div className=\"container pl-0 pr-0\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mt-2\">\r\n            <ul className=\"nav nav-fill nav-game-categories\">\r\n              <li className=\"nav-item\">\r\n                <a href=\"d/ggslot\" className=\"nav-link nav-link-game-category active\">\r\n                  <img\r\n                    src=\"https://www.starsbet365.com/assets/images/icon-game-category-1.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Top Games</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"d/p-casino\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.starsbet365.com/assets/images/icon-game-category-2.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Slots</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"d/ggslot\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.starsbet365.com/assets/images/icon-game-category-6.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Pragmatic</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"d/casino/lobby/evo\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.starsbet365.com/assets/images/icon-game-category-3.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Table Games</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"d/casino/lobby/ezugi\" className=\"nav-link nav-link-game-category\">\r\n                  <img\r\n                    src=\"https://www.starsbet365.com/assets/images/icon-game-category-7.svg\"\r\n                    alt=\"Casino category\"\r\n                    className=\"nav-game-category-icon\"\r\n                  />\r\n                  <span>Other Games</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    <div className=\"wrap-game-listing\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"game-listing-filters\">\r\n              <div className=\"orderby-container col-12 col-sm-6 col-md-6 col-lg-4\">\r\n                <span className=\"filters-label\">Order by: </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-round btn-primary\"\r\n                >\r\n                  Popularity\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-sm btn-round btn-gray\">\r\n                  Newest\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-sm btn-round btn-gray\">\r\n                  A-Z\r\n                </button>\r\n              </div>\r\n              <div className=\"game-providers-dropdown col-sm-6 col-md-6 col-12 col-lg-5\">\r\n                <span className=\"filterby-label\">Filter by: </span>\r\n                <select id=\"providers-select\" className=\"form-control\">\r\n                  <option selected=\"selected\" value=\"all\">\r\n                    All Game Providers\r\n                  </option>\r\n                  <option >AMATIC</option>\r\n                  <option>NOVOMATIC</option>\r\n                  <option onclick=\"location.href='unit_01.htm'\">WAZDAN</option>\r\n                  <option value={160}>NETENT</option>\r\n                  <option value={160}>BOMBA</option>\r\n                  <option value={160}>ARISTOCRAT</option>\r\n                  <option value={160}>EGT</option>\r\n                  <option value={160}>RACING</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"game-filters-search col-lg-3 col-md-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"form-control form-control-round\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row row-game-listing\">\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={33} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Zeppelin-Thumbnails_500x500.jpg\"\r\n                        alt=\"Zeppelin\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Zeppelin</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={35} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Joker_s-Coins----Hold-and-Win---Playson-Thumbnails_500x500.jpg\"\r\n                        alt=\"Joker's Coins: Hold and Win\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Joker's Coins: Hold and Win</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={37} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Diamond-Fortunator-Hold-and-Win---Playson-Thumbnails_500x500.jpg\"\r\n                        alt=\"Diamond Fortunator Hold and Win\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Diamond Fortunator Hold and Win</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={38} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Burning-Fortunator---Playson-Thumbnails_500x500.jpg\"\r\n                        alt=\"Burning Fortunator\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Burning Fortunator</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={41} className=\"item-game\">\r\n                  <span className=\"item-game-badge item-game-badge-hot\">\r\n    \r\n                  </span>\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Wolf-Power-Megaways---Playson-Thumbnails_500x500.jpg\"\r\n                        alt=\"Wolf Power Megaways\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Wolf Power Megaways</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={42} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Megajack---Aztec-Gold-Thumbnails_500x500.jpg\"\r\n                        alt=\"Aztec Gold\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Aztec Gold</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={43} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Banana-King-HD_thumbnails_500x500.jpg\"\r\n                        alt=\"Banana King HD\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Banana King HD</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={44} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Panda-Joy---Inbet-Thumbnails_500x500.jpg\"\r\n                        alt=\"Panda Joy\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Panda Joy</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={45} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Igrosoft---Crazy-Monkey-2-Thumbnails_500x500.jpg\"\r\n                        alt=\"Crazy Monkey 2\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Crazy Monkey 2</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={46} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Diamond-Blitz-40---Fugaso-Thumbnails_500x500.jpg\"\r\n                        alt=\"Diamond Blitz 40\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Diamond Blitz 40</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={48} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Mining-Madness---Gaming-Corps-Thumbnails_500x500.jpg\"\r\n                        alt=\"Mining Madness\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Mining Madness</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={51} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Magic-Spinners-Thumbnails_500x5001.jpg\"\r\n                        alt=\"Magic Spinners\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Magic Spinners</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={52} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Book-Of-Anime---Fugaso-Thumbnails_500x500.jpg\"\r\n                        alt=\"Book of Anime\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Book of Anime</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={54} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/100-Dragons---Inbet-Thumbnails_500x500.jpg\"\r\n                        alt=\"100 Dragons\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">100 Dragons</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={55} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Aristocrat---50-Dragons-Thumbnails_500x500.jpg\"\r\n                        alt=\"50 Dragons\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">50 Dragons</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={56} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Super-Clue-Thumbnails_500x500.jpg\"\r\n                        alt=\"Super Clue\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Super Clue</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={58} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/Jewel-Sea-Pirate-Riches---Fugaso-Thumbnails_500x500.jpg\"\r\n                        alt=\"Jewel Sea Pirate Riches\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">Jewel Sea Pirate Riches</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-lg-3 col-6\">\r\n                <div data-id={60} className=\"item-game\">\r\n                  {/**/}\r\n                  <figure className=\"item-game-thumb\">\r\n                    <a href=\"d/ggslot\">\r\n                      <img\r\n                        src=\"https://www.mbet216.com/remote-casino-assets/The-Mummy-Win-Hunters---Fugaso-Thumbnails_500x500.jpg\"\r\n                        alt=\"The Mummy Win Hunters\"\r\n                      />\r\n                    </a>\r\n                    <a\r\n                      href=\"d/ggslot\"\r\n                      title=\"Play Now\"\r\n                      className=\"btn btn-primary item-game-launch\"\r\n                    >\r\n                      <span>Play Now</span>\r\n                    </a>\r\n                  </figure>\r\n                  <div className=\"item-game-desc\">\r\n                    <p className=\"item-game-title\">\r\n                      <a href=\"d/ggslot\">The Mummy Win Hunters</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"text-center mt-3\">\r\n              <button type=\"button\" className=\"btn btn-primary\">\r\n                Load More Games\r\n              </button>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  {/* <footer className=\"footer\">\r\n    <div className=\"footer-wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2 flex-first footer-licenses\">\r\n            <img\r\n              src=\"https://www.mbet216.com/assets/images/footer-18plus.png\"\r\n              alt=\"18 Plus\"\r\n              className=\"footer-license-icon footer-license-18\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2 hidden-md-down footer-menu\">\r\n            <h4 className=\"footer-title\">Links</h4>\r\n            <ul className=\"vertical-nav footer-nav-wrapper\">\r\n              <li className=\"footer-nav\">\r\n                <a href=\"https://www.mbet216.com/en/about-us\" title=\"About Us\">\r\n                  About Us\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/promotions\"\r\n                  title=\"Promotions\"\r\n                >\r\n                  Promotions\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/affiliates\"\r\n                  title=\"Affiliates\"\r\n                >\r\n                  Affiliates\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/customer-service\"\r\n                  title=\"Customer Service\"\r\n                >\r\n                  Customer Service\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/terms-conditions\"\r\n                  title=\"Terms & Conditions\"\r\n                >\r\n                  Terms &amp; Conditions\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/terms-of-use\"\r\n                  title=\"Terms of Use\"\r\n                >\r\n                  Terms of Use\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/privacy-policy\"\r\n                  title=\"Privacy Policy\"\r\n                >\r\n                  Privacy Policy\r\n                </a>\r\n              </li>\r\n              <li className=\"footer-nav\">\r\n                <a\r\n                  href=\"https://www.mbet216.com/en/responsible-gaming\"\r\n                  title=\"Responsible Gaming\"\r\n                >\r\n                  Responsible Gaming\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-12 col-lg-4 flex-last footer-copyright\">\r\n            <div className=\"footer-copyright-top\">\r\n              <div\r\n                id=\"ceg-fcefd863-0c3f-459a-8611-fcaaa39c1b75\"\r\n                data-ceg-seal-id=\"fcefd863-0c3f-459a-8611-fcaaa39c1b75\"\r\n                data-ceg-image-size={25}\r\n                data-ceg-image-type=\"basic-large\"\r\n              />\r\n              <b>Copyright 2022 marbouha365. All Rights Reserved 2022</b>\r\n            </div>\r\n            <p>\r\n              All&nbsp;\r\n              <a\r\n                href=\"https://www.mbet216.com/\"\r\n                title=\"Link: http://www.maxbet.tn/\"\r\n              >\r\n                www.marbouha365.tn\r\n              </a>\r\n              &nbsp;products are jointly operated by<b>&nbsp;</b>Goobetpro\r\n              S.A.R.L.&nbsp;registered address Zone Touristique, Mahdia 5111 a\r\n              company licensed and regulated by the law of Tunisia.\r\n              <br />\r\n            </p>\r\n            <div>\r\n              Le gain marbouha365 est 150.000 dinars dans un mois , voir termes et\r\n              conditions\r\n            </div>\r\n            <div>\r\n              <br />\r\n            </div>\r\n            <p />\r\n          </div>\r\n          <div className=\"col-2 hidden-md-down flex-unordered footer-payment\">\r\n            <h4 className=\"footer-title\">Payment methods</h4>\r\n            <img\r\n              alt=\"Footer payment image\"\r\n              className=\"payment-image-footer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2 hidden-md-down flex-last footer-social\">\r\n            <h4 className=\"footer-title\">Social Media</h4>\r\n            <a\r\n              href=\"https://www.facebook.com/MaxBetOfficiel/\"\r\n              title=\"facebook\"\r\n              className=\"footer-like\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.youtube.com/c/MaxbetOfficel\"\r\n              title=\"youtube\"\r\n              className=\"footer-icon\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-youtube-square\" aria-hidden=\"true\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.instagram.com/maxbet.tn/\"\r\n              title=\"instagram\"\r\n              className=\"footer-icon\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer> */}\r\n</div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nhome;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { slice, sortBy } from 'lodash';\r\nimport {\r\n    setHomeLeagues,\r\n    setHomeActive,\r\n    setHomeLeaguesActive,\r\n    removeHomeActiveLeague,\r\n    getMarketData,\r\n    selectHomeActiveLeague,\r\n    getHomeActiveLeagueEventsDesktop,\r\n} from '../../store/actions/home.actions';\r\nimport { getTodaySports, selectSportMobile } from '../../store/actions/todayActions';\r\nimport { getStatsData, getBanners } from '../../store/actions/general.actions';\r\nimport { selectPreSport } from '../../store/actions/prematchActions';\r\nimport TopLinks from '../TopLinks';\r\nimport TopLeague from '../TopLeague';\r\nimport { intervalTime, lSportsConfig, totalSegments } from '../../config';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { setStatistics } from '../../store/actions/lsports.global.actions';\r\nimport Betslip from '../Betslip';\r\nimport League from './League';\r\n// import Inplay from '../Inplay';\r\nimport Upcoming from '../Today';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport BannerCarousel from '../Common/Banner/BannerCarousel';\r\nimport Inplay from '../Inplay';\r\nimport SportList from './Sports';\r\nimport { staticPrematchSports } from '../../config/sports';\r\nimport { CarouselItem } from '../../Components/Home/BannerCarousel';\r\nimport Banner from './Banner';\r\nimport SvgAMATIC from './AMATIC.svg';\r\nimport SvgGREENTUBE from './GREENTUBE.svg';\r\nimport Nhome from './Nhome/Nhome';\r\n\r\nlet sportEventInterval;\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const { selectedLeague } = this.props;\r\n        this.props.getBanners();\r\n        // this.props.selectSportMobile(lSportsConfig.today.selectedSport);\r\n        if (selectedLeague) {\r\n            this.props.selectHomeActiveLeague(selectedLeague);\r\n            for (let segmentNo = 0; segmentNo < totalSegments; segmentNo++) {\r\n                this.props.getHomeActiveLeagueEventsDesktop(selectedLeague, segmentNo);\r\n            }\r\n        }\r\n        // if (!statsData) this.props.getStatsData();\r\n        sportEventInterval = setInterval(() => {\r\n            let { mainEvents } = this.props;\r\n            this.props.getMarketData(mainEvents, 0, mainEvents.length);\r\n        }, intervalTime);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if (prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll) {\r\n            this.getEventMarkets();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setHomeActive(true);\r\n        this.props.setHomeLeaguesActive(false);\r\n        this.props.removeHomeActiveLeague();\r\n        // this.props.clearPartialEvents();\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        // let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    render() {\r\n        //const { isHomeLeagueActive } = this.props;\r\n        //let sportsList = Object.values(staticPrematchSports())\r\n        //sportsList = sortBy(sportsList, ['sort']);\r\n        let { userData } = this.props;\r\n\r\n        const { isHomeLeagueActive, extraMarketChild: ExtraMarket } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Nhome ></Nhome>\r\n                {/* <Banner /> */}\r\n               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    isHomeActive: PropTypes.bool,\r\n    isHomeLeagueActive: PropTypes.bool,\r\n    setHomeActive: PropTypes.func,\r\n    setHomeLeaguesActive: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.home.selectedLeague,\r\n        isHomeActive: state.home.isHomeActive,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        lastMinuteSports: state.lastMinute.sports,\r\n        lastMinCountObj: state.lastMinute.lastMinCountObj,\r\n        isLastMinAvailable: state.lastMinute.isLastMinAvailable,\r\n        statsData: state.general.statsData,\r\n        mainEvents: state.home.mainEvents,\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        language: state.general.language,\r\n        hasNextPage: state.home.hasNextPage,\r\n        noEvents: state.home.noEvents,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        fetchedAll: state.home.fetchedAll,\r\n        partialAllEvents: state.home.partialAllEvents,\r\n        nextIndex: state.home.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectHomeActiveLeague: (leagueId) => dispatch(selectHomeActiveLeague(leagueId)),\r\n        getHomeActiveLeagueEventsDesktop: (leagueId, segmentNo) => dispatch(getHomeActiveLeagueEventsDesktop(leagueId, segmentNo)),\r\n        setHomeLeagues: () => dispatch(setHomeLeagues()),\r\n        setHomeActive: (value) => dispatch(setHomeActive(value)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        getTodaySports: () => dispatch(getTodaySports()),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        selectPreSport: (sportId) => dispatch(selectPreSport(sportId)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        getBanners: () => dispatch(getBanners()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n        // clearPartialEvents: () => dispatch(clearPartialEvents())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { slice, sortBy } from 'lodash';\r\nimport { setHomeLeagues, setHomeActive, setHomeLeaguesActive, removeHomeActiveLeague, getMarketData } from '../../store/actions/home.actions';\r\nimport { selectSport } from '../../store/actions/todayActions';\r\nimport { getStatsData, getBanners } from '../../store/actions/general.actions';\r\nimport TopLinks from '../TopLinks';\r\nimport { setStatistics } from '../../store/actions/lsports.global.actions';\r\nimport Betslip from '../Betslip';\r\nimport Upcoming from './index';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BannerCarousel from '../Common/Banner/BannerCarousel';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass SportsHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.getBanners();\r\n        // let sportsList = Object.values(staticPrematchSports()).filter(sport => sport.k_sport);\r\n        // if (sportsList?.[0]) selectSport(sportsList[0].sport_id);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n       // this.props.selectSport(lSportsConfig.today.selectedSport);\r\n        this.props.setHomeActive(true);\r\n        this.props.setHomeLeaguesActive(false);\r\n        this.props.removeHomeActiveLeague();\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        // let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    render() {\r\n        let sportsList = Object.values(staticPrematchSports());\r\n        sportsList = sortBy(sportsList, ['sort']);\r\n        const { extraMarketChild: ExtraMarket } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TopLinks sports={ sportsList }/>               \r\n                <div className=\"middle-part sport-middle d-flex\">\r\n                    {!ExtraMarket && <div id='side-navbar' className=\"side-navbar fade1\">\r\n                        <nav className=\"side-multilevel\">\r\n                            <div id='item-search' style={{ height: '45px' }}/>\r\n                            {/* <TopLeague /> */}\r\n                            <div id='location-filter' className='' />\r\n                        </nav>\r\n                    </div>}\r\n                    <div id=\"scrollableDiv\" className={ `odds-panel ${ExtraMarket ? 'mid-expand' : ''}`}>\r\n                        { !ExtraMarket ? <BannerCarousel/>: null}\r\n                        {ExtraMarket ? <ExtraMarket match={this.props.match} />:\r\n                        <Upcoming noSports={ true } limit={this.props.limit}/>}\r\n                    </div>\r\n                    <Betslip />\r\n                </div>               \r\n            </React.Fragment>  \r\n        )   \r\n        }\r\n}\r\n\r\nSportsHome.propTypes = {\r\n    isHomeActive: PropTypes.bool,\r\n    setHomeActive: PropTypes.func,\r\n    setHomeLeaguesActive: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.home.selectedLeague,\r\n        isHomeActive: state.home.isHomeActive,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setHomeLeagues: () => dispatch(setHomeLeagues()),\r\n        setHomeActive: (value) => dispatch(setHomeActive(value)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        selectSport: (sportId) => dispatch(selectSport(sportId)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        getBanners: () => dispatch(getBanners()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SportsHome));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { slice, sortBy } from 'lodash';\r\nimport { setHomeLeagues, setHomeActive, setHomeLeaguesActive, removeHomeActiveLeague, getMarketData } from '../../store/actions/home.actions';\r\nimport { selectSportMobile } from '../../store/actions/todayActions';\r\nimport { getStatsData, getBanners } from '../../store/actions/general.actions';\r\nimport TopLinks from '../TopLinks';\r\nimport { lSportsConfig } from '../../config';\r\nimport { setStatistics } from '../../store/actions/lsports.global.actions';\r\nimport Betslip from '../Betslip';\r\nimport Upcoming from './index';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BannerCarousel from '../Common/Banner/BannerCarousel';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass ESports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const { selectSportMobile } = this.props;\r\n        this.props.getBanners();\r\n        let sportsList = Object.values(staticPrematchSports()).filter(sport => sport.e_sport);\r\n        if (sportsList?.[0]) selectSportMobile(sportsList[0].sport_id);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.selectSportMobile(lSportsConfig.today.selectedSport);\r\n        this.props.setHomeActive(true);\r\n        this.props.setHomeLeaguesActive(false);\r\n        this.props.removeHomeActiveLeague();\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        // let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    render() {\r\n        let sportsList = Object.values(staticPrematchSports()).filter(sport => sport.e_sport);\r\n        sportsList = sortBy(sportsList, ['sort']);\r\n        return (\r\n            <React.Fragment>\r\n                <TopLinks sports={ sportsList }/>               \r\n                <div className=\"middle-part sport-middle d-flex\">\r\n                    <div id='side-navbar' className=\"side-navbar fade1\">\r\n                        <nav className=\"side-multilevel\">\r\n                            <div id='item-search' style={{ height: '45px' }}/>\r\n                            {/* <TopLeague /> */}\r\n                            <div id='location-filter' className='' />\r\n                        </nav>\r\n                    </div>\r\n                    <div id=\"scrollableDiv\" className={ `odds-panel ${false ? 'mid-expand' : ''}`}>\r\n                        <BannerCarousel />\r\n                        <Upcoming noSports={ true } limit={this.props.limit}/>\r\n                    </div>\r\n                    <Betslip />\r\n                </div>               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nESports.propTypes = {\r\n    isHomeActive: PropTypes.bool,\r\n    setHomeActive: PropTypes.func,\r\n    setHomeLeaguesActive: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.home.selectedLeague,\r\n        isHomeActive: state.home.isHomeActive,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setHomeLeagues: () => dispatch(setHomeLeagues()),\r\n        setHomeActive: (value) => dispatch(setHomeActive(value)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        getBanners: () => dispatch(getBanners()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ESports));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { slice, sortBy } from 'lodash';\r\nimport { setHomeLeagues, setHomeActive, setHomeLeaguesActive, removeHomeActiveLeague, getMarketData } from '../../store/actions/home.actions';\r\nimport { selectSportMobile } from '../../store/actions/todayActions';\r\nimport { getStatsData, getBanners } from '../../store/actions/general.actions';\r\nimport TopLinks from '../TopLinks';\r\nimport { lSportsConfig } from '../../config';\r\nimport { setStatistics } from '../../store/actions/lsports.global.actions';\r\nimport Betslip from '../Betslip';\r\nimport Upcoming from './index';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BannerCarousel from '../Common/Banner/BannerCarousel';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nclass KSports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const { selectSportMobile } = this.props;\r\n        this.props.getBanners();\r\n        let sportsList = Object.values(staticPrematchSports()).filter(sport => sport.k_sport);\r\n        if (sportsList?.[0]) selectSportMobile(sportsList[0].sport_id);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.selectSportMobile(lSportsConfig.prematch.selectedSport);\r\n        this.props.setHomeActive(true);\r\n        this.props.setHomeLeaguesActive(false);\r\n        this.props.removeHomeActiveLeague();\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        // let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    render() {\r\n        let sportsList = Object.values(staticPrematchSports()).filter(sport => sport.k_sport);\r\n        sportsList = sortBy(sportsList, ['sort']);\r\n        return (\r\n            <React.Fragment>\r\n                <TopLinks sports={ sportsList }/>               \r\n                <div className=\"middle-part sport-middle d-flex\">\r\n                    <div id='side-navbar' className=\"side-navbar fade1\">\r\n                        <nav className=\"side-multilevel\">\r\n                            <div id='item-search' style={{ height: '45px' }}/>\r\n                            {/* <TopLeague /> */}\r\n                            <div id='location-filter' className='' />\r\n                        </nav>\r\n                    </div>\r\n                    <div id=\"scrollableDiv\" className={ `odds-panel ${false ? 'mid-expand' : ''}`}>\r\n                        <BannerCarousel />\r\n                        <Upcoming noSports={ true } limit={this.props.limit}/>\r\n                    </div>\r\n                    <Betslip />\r\n                </div>               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nKSports.propTypes = {\r\n    isHomeActive: PropTypes.bool,\r\n    setHomeActive: PropTypes.func,\r\n    setHomeLeaguesActive: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLeague: state.home.selectedLeague,\r\n        isHomeActive: state.home.isHomeActive,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setHomeLeagues: () => dispatch(setHomeLeagues()),\r\n        setHomeActive: (value) => dispatch(setHomeActive(value)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        getBanners: () => dispatch(getBanners()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(KSports));\r\n","import React, { Component } from 'react';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport LoadingIcon from '../../Components/Common/NewLoading';\r\nimport Lobby from '../../Components/Casino/Lobby';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nclass Casino extends Component {\r\n componentDidMount() {\r\n        if(Util.isLoggedIn())\r\n        this.props.getLobbyURL();\r\n               \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n      this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n      \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <>\r\n                <div id='scrollableDiv' className='casino-body'>\r\n                    {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <LoadingIcon />}\r\n                    <div className=\"casino-bg casino-parent-div casino-width-align\">\r\n                        <div className=\"banner-categories\">\r\n                            {/* <Banner />\r\n                        <Categories /> */}\r\n                        </div>\r\n\r\n                        <div className='d-table w-100'>                        \r\n                            {/* <GameList /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser: () => dispatch(getUser()),\r\n        setCasinoLobby:(value)=>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Casino);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport {\r\n    getLiveCasinoGames,\r\n    setLiveCasinoActiveCategory,\r\n    setLiveSearchStarted,\r\n    searchLiveCasino,\r\n    clearLiveCasinoGames,\r\n} from '../../store/actions/casino.actions';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nlet timer = 0;\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getLiveCasinoGames();\r\n        if (this.props.userData !== null) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearLiveCasinoGames();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let { activeCategoryLive } = this.props;\r\n        this.setState({ isSearchOpen: true });\r\n        this.props.setLiveSearchStarted(true);\r\n\r\n        if (activeCategoryLive !== 'All') {\r\n            this.props.setLiveCasinoActiveCategory('All');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setLiveSearchStarted(false);\r\n        // Reset the search while closing the search bar\r\n        this.props.searchLiveCasino('')\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setLiveCasinoActiveCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchLiveCasino(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    render() {\r\n        let { isSearchOpen, searchVal } = this.state;\r\n        let { activeCategoryLive, liveCasinoCategories } = this.props;\r\n        //if (userData && !userData.is_live_casino_enabled) window.location.href = '/';\r\n\r\n        let categories = map(liveCasinoCategories, (category) => {\r\n            let activeClass = activeCategoryLive === category.value ? 'casino__category_active' : '';\r\n            return (\r\n                <div className={`casino__category ${activeClass}`} onClick={(e) => this.changeCategory(category.value)} key={category.value}>\r\n                    <span>\r\n                        <i className={category.icon}></i>\r\n                        {category.name}\r\n                    </span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"added-category\">\r\n                {isSearchOpen ? (\r\n                    <div className=\"casino__header mb-3 disable-select\">\r\n                        <div className=\"sports__content sports__content_sm\">\r\n                            <div className=\"sports__search-bar\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"ml-2 form-control sports__search-input\"\r\n                                    autoFocus\r\n                                    placeholder={Translate.searchHere}\r\n                                    value={searchVal}\r\n                                    onChange={this.handleSearch}\r\n                                />\r\n                                <i className=\"icon-search\"></i>\r\n                                <div className=\"sports__close-search\">\r\n                                    <i className=\"material-icons casino-close\" onClick={this.hideSearchBar}>\r\n                                        close\r\n                                    </i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"casino__header mb-3\">\r\n                        <div className=\"casino__category casino__category-search\" onClick={this.showSearchBar}>\r\n                            <span>\r\n                                <i className=\"icon-search\"></i>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {categories}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategoryLive: PropTypes.string,\r\n    getLiveCasinoGames: PropTypes.func,\r\n    clearLiveCasinoGames: PropTypes.func,\r\n    setLiveCasinoActiveCategory: PropTypes.func,\r\n    setLiveSearchStarted: PropTypes.func,\r\n    searchLiveCasino: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    liveCasinoCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeCategoryLive: state.casino.activeCategoryLive,\r\n        liveCasinoCategories: state.casino.liveCasinoCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLiveCasinoGames: () => dispatch(getLiveCasinoGames()),\r\n        clearLiveCasinoGames: () => dispatch(clearLiveCasinoGames()),\r\n        setLiveCasinoActiveCategory: (category) => dispatch(setLiveCasinoActiveCategory(category)),\r\n        setLiveSearchStarted: (value) => dispatch(setLiveSearchStarted(value)),\r\n        searchLiveCasino: (value) => dispatch(searchLiveCasino(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport map from 'lodash.map';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport NewLoading from '../../Components/Common/NewLoading';\r\nimport {getLiveGameData} from '../../store/actions/casino.actions';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Login from '../../Components/Login';\r\nimport {connect} from 'react-redux';\r\nimport {LazyBackgroundImage} from '../../Components/Common/ImgLoading';\r\nimport LoaderLiveCasino from '../../Components/Common/LoaderLiveCasino';\r\nimport {LazyImage} from \"../../Components/Common/ImgLoading\";\r\n\r\n\r\n\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n            showAll: true,\r\n            showPPL: true,\r\n            showEZU: true,\r\n            showEVO: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('casino_url') !== '') {\r\n            sessionStorage.setItem('casino_url', '');\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n       /* if (!this.props.isShowCasino) {\r\n            this.props.history.push('/');\r\n        }\r\n        if (this.props.userData && !this.props.userData.is_live_casino_enabled) {\r\n            this.props.history.push('/');\r\n        }*/\r\n    }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    playGame = (game) => {\r\n        if (this.isLoggedIn()) {\r\n            let history = this.props.history;\r\n            this.props.getLiveGameData(game, history);\r\n        } else {\r\n            this.setState({showLogin: true});\r\n        }\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({showLogin: true});\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({showLogin: false});\r\n    };\r\n    // move = (arr, from, to) => {\r\n    //     [arr[from], arr[to]] = [arr[to], arr[from]];\r\n    //     return arr;\r\n    // };\r\n    render() {\r\n        let { showLogin } = this.state;\r\n        let {showAll, showPPL, showEZU, showEVO} = this.state;\r\n        let {liveCasinoGames, filteredLiveCasinoGames, loadingLiveCasinoGames, noSearchResults} = this.props;\r\n        let liveCasinoGamesList = noSearchResults ? [] : filteredLiveCasinoGames.length > 0 ? filteredLiveCasinoGames : liveCasinoGames;\r\n        let imageUrl = \"/images/comming_soon.jpg\";\r\n        let flist = liveCasinoGamesList;\r\n\r\n        let isPPL = !showAll && showPPL;\r\n        let isEZU = !showAll && showEZU;\r\n        let isEVO = !showAll && showEVO;\r\n\r\n\r\n        let evog = [];\r\n        let ezug = [];\r\n        let pplg = [];\r\n        // if(flist && flist.length >0){\r\n        //     if(flist[0]?.name !== 'Monopoly Live') flist = this.move(flist, 113, 0);\r\n        //     if(flist[1]?.name !== 'Crazy Time') flist = this.move(flist, 96, 1);\r\n        //     if(flist[2]?.name !== \"Gonzo's Treasure Hunt\") flist = this.move(flist, 106, 2);\r\n        //     if(flist[3]?.name !== \"Dream Catcher\") flist = this.move(flist, 102, 3);\r\n        //     if(flist[4]?.name !== \"Deal or No Deal\") flist = this.move(flist, 97, 4);\r\n        // }\r\n\r\n        map(flist, (game, index) => {\r\n            console.log(\"game casino name: \"+ game.name +' i: '+index);\r\n            if (game.id.startsWith('EVO') || game.id.startsWith('EZU') || game.id.startsWith('PPL')) {\r\n                if (game.id.startsWith('EVO')) evog.push((\r\n                    <div className=\"casino__item\" key={index} onClick={() => this.playGame(game)}>\r\n                        <LazyBackgroundImage image={game.imgURL || imageUrl} fallbackImage=\"./images/loading-dark.gif\"\r\n                                             className=\"casino__img\"/>\r\n                        <div className=\"game-title\">{game.name} {/*game.id*/} {/*game.category*/}</div>\r\n                    </div>\r\n                ));\r\n                else if (game.id.startsWith('EZU')) ezug.push((\r\n                    <div className=\"casino__item\" key={index} onClick={() => this.playGame(game)}>\r\n                        <LazyBackgroundImage image={game.imgURL || imageUrl} fallbackImage=\"./images/loading-dark.gif\"\r\n                                             className=\"casino__img\"/>\r\n                        <div className=\"game-title\">{game.name}{/*game.id}  {game.category*/}</div>\r\n                    </div>\r\n                ));\r\n                else if (game.id.startsWith('PPL')) pplg.push((\r\n                    <div className=\"casino__item\" key={index} onClick={() => this.playGame(game)}>\r\n                        <LazyBackgroundImage image={game.imgURL || imageUrl} fallbackImage=\"./images/loading-dark.gif\"\r\n                                             className=\"casino__img\"/>\r\n                        <div className=\"game-title\">{game.name}{/*game.id}  {game.category*/}</div>\r\n                    </div>\r\n                ));\r\n\r\n            }\r\n        });\r\n\r\n        let gameList = (<>\r\n            <div className=\"providers-list\">\r\n                <div\r\n                    className={`h2-casino ${showAll && ' active'}`}\r\n                    onClick={() => {\r\n                        this.showCategory('all');\r\n                    }}><span>All</span></div>\r\n                <div className={`h2-casino ${isPPL && ' active'}`} onClick={() => {\r\n                    this.showCategory('ppl');\r\n                }}><span>Pragmatic Play </span></div>\r\n\r\n                <div className={`h2-casino ${isEVO && ' active'}`} onClick={() => {\r\n                    this.showCategory('evo');\r\n                }}><span>Evolution</span></div>\r\n                <div className={`h2-casino ${isEZU && ' active'}`} onClick={() => {\r\n                    this.showCategory('ezu');\r\n                }}><span>Ezugi </span></div>\r\n\r\n            </div>\r\n\r\n            <div className=\"casino-provider\">\r\n                {this.state.showEVO && evog}\r\n                {this.state.showEZU && ezug}\r\n                {this.state.showPPL && pplg}\r\n            </div>\r\n        </>);\r\n\r\n        return loadingLiveCasinoGames ? (\r\n            <Loading/>\r\n        ) : liveCasinoGamesList.length > 0 ? (\r\n            <>\r\n                <div className=\"casino__list pl-40 pr-40 clearfix mb-2\">\r\n                {this.props.loading ? <LoaderLiveCasino /> : <div className=\"casino-box-virtual-sport\">{gameList}</div> }</div>\r\n\r\n{showLogin && <Login hideLogin={this.hideLogin} />}\r\n</>\r\n) : (\r\n<div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n);\r\n}\r\n\r\n\r\n    showCategory(category) {\r\n        if (category === 'evo') {\r\n            this\r\n                .setState({\r\n                        showAll: false,\r\n                        showEVO: true,\r\n                        showEZU: false,\r\n                        showPPL: false,\r\n                    }\r\n                )\r\n            ;\r\n        }\r\n        if (category === 'ezu') {\r\n            this.setState({\r\n                showAll: false,\r\n                showEVO: false,\r\n                showEZU: true,\r\n                showPPL: false,\r\n            });\r\n        }\r\n        if (category === 'ppl') {\r\n            this.setState({\r\n                showAll: false,\r\n                showEVO: false,\r\n                showEZU: false,\r\n                showPPL: true,\r\n            });\r\n        }\r\n        if (category === 'all') {\r\n            this.setState({\r\n                showAll: true,\r\n                showEVO: true,\r\n                showEZU: true,\r\n                showPPL: true,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nGameList.propTypes =\r\n    {\r\n        liveCasinoGames: PropTypes.array,\r\n        filteredLiveCasinoGames: PropTypes.array,\r\n        loadingLiveCasinoGames: PropTypes.bool,\r\n        noSearchResults: PropTypes.bool,\r\n        userData: PropTypes.object,\r\n        getLiveGameData: PropTypes.func,\r\n    }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            liveCasinoGames: state.casino.liveCasinoGames,\r\n            filteredLiveCasinoGames: state.casino.filteredLiveCasinoGames,\r\n            loadingLiveCasinoGames: state.casino.loadingLiveCasinoGames,\r\n            noSearchResults: state.casino.noSearchResults,\r\n            userData: state.user.data,\r\n            loading: state.general.loading,\r\n            isShowCasino: state.general.isShowCasino\r\n        };\r\n    }\r\n;\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            getLiveGameData: (id, history) => dispatch(getLiveGameData(id, history)),\r\n        };\r\n    }\r\n;\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, {Component} from 'react';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\nimport {getLobbyURL, setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Loading from '../../Components/Common/Loading';\r\nimport Util from '../../helper/Util';\r\nimport {connect} from 'react-redux';\r\nimport {getUser} from '../../store/actions/user.actions';\r\nimport Banner from \"../../Components/Ggslot/Banner\";\r\nimport Button from \"react-redux-toastr/lib/Button\";\r\n\r\nclass LiveCasino extends Component {\r\n\r\n    componentDidMount() {\r\n        if (Util.isLoggedIn())\r\n            this.props.getLobbyURL();\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (Util.isLoggedIn())\r\n            this.props.getUser();\r\n        document.body.classList.remove('body_casino');\r\n        this.props.setCasinoLobby('');\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='back_button'>\r\n                    <Button  variant=\"contained\" onClick = {()=>{this.props.history.push('/'); this.props.getUser();}} ><img src=\"/images/home-gray.svg\" alt=\"home-gray\"/></Button>\r\n                </div>\r\n\r\n                {this.props.casinoLobbyURL ?\r\n                    <div className=\"main-container casino-live\">\r\n                        <Banner />\r\n                        <Categories />\r\n                        <GameList/>\r\n                    </div>\r\n                    : <Loading/>}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            getLobbyURL: () => dispatch(getLobbyURL()),\r\n            getUser: () => dispatch(getUser()),\r\n            setCasinoLobby: (value) => dispatch(setCasinoLobby(value))\r\n        };\r\n    }\r\n;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LiveCasino);\r\n","import React from 'react';\r\n\r\nfunction Banner(props) {\r\n    return (\r\n        <div className=\"banner-img\">\r\n            <img src=\"/images/home_casino_banner.jpg\" className='img-responsive w-100' alt=\"Live Casino banner\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport {\r\n   setPCasinoActiveCategory,\r\n    setLiveSearchStarted,\r\n    searchPCasino,\r\n    clearLiveCasinoGames,\r\n    getLiveCasinoGames,\r\n    getpCasinoGames\r\n} from '../../store/actions/casino.actions';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nlet timer = 0;\r\n\r\nconst options = {\r\n    items: 9,\r\n    navText: [\r\n        '<span class=\\'nav-btn prev-slide\\'></span>',\r\n        '<span class=\\'nav-btn next-slide\\'></span>'\r\n    ],\r\n    nav: true,\r\n    dots: false,\r\n    autoWidth: true,\r\n};\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getpCasinoGames();\r\n        if (this.props.userData !== null) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearLiveCasinoGames();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let { activeCategoryLive } = this.props;\r\n        this.setState({ isSearchOpen: true });\r\n        this.props.setLiveSearchStarted(true);\r\n\r\n        if (activeCategoryLive !== 'All') {\r\n            this.props.setLiveCasinoActiveCategory('All');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setLiveSearchStarted(false);\r\n        // Reset the search while closing the search bar\r\n        this.props.searchPCasino('');\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setPCasinoActiveCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchPCasino(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    render() {\r\n        let { isSearchOpen, searchVal } = this.state;\r\n        let { activeCategoryLive, liveCasinoCategories } = this.props;\r\n        // If user is not authorised redirect to home\r\n        //if (userData && !userData.is_live_casino_enabled) window.location.href = '/';\r\n        let categories = liveCasinoCategories?.length > 0 && typeof liveCasinoCategories?.[0] === 'string' && map(liveCasinoCategories, (category) => {\r\n            let categoryVal = category;\r\n            // if (category.company === 'PragmaticLiveCasino') categoryVal = category.id;\r\n            let activeClass = activeCategoryLive === categoryVal ? 'active' : '';\r\n\r\n            return (\r\n                <a href className={ `${category === 'All' ? 'all-' : ''}${activeClass}`} onClick={(e) => this.changeCategory(categoryVal)} key={categoryVal}>\r\n                    <i className={ `${category} pr-1` }  />\r\n                    {category}\r\n                </a>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"categories\">\r\n                {isSearchOpen ? (\r\n                    <div className=\"tab\">\r\n                        <div className=\"sports__search-bar\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"ml-2 sports__search-input w-100\"\r\n                                autoFocus\r\n                                placeholder={Translate.searchHere}\r\n                                value={searchVal}\r\n                                onChange={this.handleSearch}\r\n                            />\r\n                            <i className=\"icon-search\"></i>\r\n                            <div className=\"sports__close-search\">\r\n                                <i className=\"material-icons casino-close\" onClick={this.hideSearchBar}>\r\n                                    close\r\n                                </i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"tab\">\r\n                        <div onClick={this.showSearchBar}>\r\n                            <span>\r\n                                <img src=\"/images/search-icon.png\" alt=\"search-icon\" style={{ marginLeft: '30px', width: '25px', marginRight: '15px'}} />\r\n                            </span>\r\n                        </div>\r\n                        <div className='carousel-parent casino-page'>\r\n                            <div className=\"nav\" id=\"nav-tab\"  role=\"tablist\">\r\n                                { categories.length > 0 && (\r\n                                <div\r\n                                    id='owl-demo'\r\n                                    options={ options }\r\n                                >\r\n                                    {categories}\r\n                                </div>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategoryLive: PropTypes.string,\r\n    setLiveCasinoGames: PropTypes.func,\r\n    clearLiveCasinoGames: PropTypes.func,\r\n    setLiveCasinoActiveCategory: PropTypes.func,\r\n    setLiveSearchStarted: PropTypes.func,\r\n    searchPCasino: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    liveCasinoCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeCategoryLive: state.casino.activeCategoryLive,\r\n        liveCasinoCategories: state.casino.liveCasinoCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getpCasinoGames: () => dispatch(getpCasinoGames()),\r\n\r\n        getLiveCasinoGames: () => dispatch(getLiveCasinoGames()),\r\n        clearLiveCasinoGames: () => dispatch(clearLiveCasinoGames()),\r\n        setPCasinoActiveCategory: (category) => dispatch(setPCasinoActiveCategory(category)),\r\n        setLiveSearchStarted: (value) => dispatch(setLiveSearchStarted(value)),\r\n        searchPCasino: (value) => dispatch(searchPCasino(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport forEach from 'lodash.foreach';\r\nimport { LazyImage } from '../../Components/Common/ImgLoading';\r\n\r\nfunction Games(props) {\r\n    let { games, playGame, rows } = props;\r\n\r\n    let list = [];\r\n    let list_1 = [];\r\n    let list_2 = [];\r\n\r\n    forEach(games, (game, i) => {\r\n        let singleGame = (\r\n            <li key={game.id}>\r\n                <div className=\"hover-parent\">\r\n                    {/* <LazyBackgroundImage image={game.logo} fallbackImage=\"./images/loading-dark.gif\" className=\"casino-img\" /> */}\r\n                    <LazyImage image={game.imgURL} fallbackImage=\"/images/loading-dark.gif\" className=\"casino-img\" />\r\n                    <div className=\"play-btn\" onClick={() => playGame(game)}>\r\n                        <img src=\"/images/playBtn-en.png\" alt=\"playBtn-en\" />\r\n                    </div>                      \r\n                </div>\r\n            </li>\r\n        );\r\n\r\n        if (rows === 1) {\r\n            list.push(singleGame);\r\n        } else {\r\n            if (i % 2 === 0) {\r\n                list_1.push(singleGame);\r\n            } else {\r\n                list_2.push(singleGame);\r\n            }\r\n\r\n            list = (\r\n                <>\r\n                    <div>{list_1}</div>\r\n                    <div>{list_2}</div>\r\n                </>\r\n            );\r\n        }\r\n    });\r\n\r\n    return <>{list}</>;\r\n}\r\n\r\nGames.propTypes = {\r\n    games: PropTypes.array,\r\n    playGame: PropTypes.func,\r\n    rows: PropTypes.number,\r\n};\r\n\r\nexport default Games;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport map from 'lodash.map';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport Login from '../../Components/Login';\r\nimport Games from './Games';\r\nimport { getLiveGameData,getpCasinoGameData} from '../../store/actions/casino.actions';\r\nimport LoaderLiveCasino from '../../Components/Common/LoaderLiveCasino';\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('casino_url') !== '') {\r\n            sessionStorage.setItem('casino_url', '');\r\n            window.location.reload(false)\r\n        }\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     //  if(!this.props.isShowCasino) {\r\n    //     //     this.props.history.push('/d')\r\n    //     // }\r\n    //     if(this.props.userData && !this.props.userData.is_pcasino_enabled) {\r\n    //         this.props.history.push('/d');\r\n    //     }\r\n    // }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    playGame = (game) => {\r\n        if (this.isLoggedIn()) {\r\n            let history = this.props.history;\r\n            this.props.getpCasinoGameData(game, history);\r\n        } else {\r\n            this.setState({ showLogin: true });\r\n        }\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({ showLogin: true });\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n    render() {\r\n        let { showLogin } = this.state;\r\n        let { liveCasinoGames, filteredLiveCasinoGames, loadingLiveCasinoGames, noSearchResults } = this.props;\r\n        let liveCasinoGamesList = noSearchResults ? [] : filteredLiveCasinoGames.length > 0 ? filteredLiveCasinoGames : liveCasinoGames;\r\n\r\n        let groupedByCategory =\r\n            liveCasinoGamesList &&\r\n            liveCasinoGamesList[0] &&\r\n            groupBy(liveCasinoGamesList, function (game) {\r\n                return `${game.Vendor}`;\r\n            });\r\n\r\n        let groupedByCategoryAndCompany = {};\r\n\r\n        forEach(groupedByCategory, (group, category) => {\r\n            let gamesGroup = groupBy(group, function (game) {\r\n                return `${game.Vendor}`;\r\n            });\r\n\r\n            groupedByCategoryAndCompany[category] = gamesGroup;\r\n        });\r\n\r\n        let gameList =\r\n            liveCasinoGamesList && liveCasinoGamesList.length > 0\r\n                ? map(groupedByCategoryAndCompany, (group, index) => {\r\n                      return map(group, (game, company) => {\r\n                          let rowsNumber = 1;\r\n\r\n                          if (company !== 'PragmaticLiveCasino' && game.length > 3) {\r\n                              rowsNumber = 2;\r\n                          }\r\n\r\n                          let gamesList = <Games games={game} playGame={this.playGame} rows={1} />;\r\n\r\n                          return (\r\n                              <div className=\"game-cate-sec\" key={`${index}_${company}`}>\r\n                                  <div className=\"cate-title\">\r\n                                      <p>\r\n                                          {game[0].Vendor}\r\n                                      </p>\r\n                                  </div>\r\n                                  <ul>{gamesList}</ul>\r\n                              </div>\r\n                          );\r\n                      });\r\n                  })\r\n                : [];\r\n\r\n        return loadingLiveCasinoGames ? (\r\n            <Loading customClass='casino-loader'/>\r\n        ) : liveCasinoGamesList.length > 0 ? (\r\n            <>\r\n                <div className=\"casino-game-parent pl-40 pr-40 clearfix mb-2\">\r\n                    {this.props.loading ? <LoaderLiveCasino /> : <div className=\"casino-box\">{gameList}</div> }</div>\r\n\r\n                {showLogin && <Login hideLogin={this.hideLogin} />}\r\n            </>\r\n        ) : (\r\n            <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n        );\r\n    }\r\n}\r\n\r\nGameList.propTypes = {\r\n    liveCasinoGames: PropTypes.array,\r\n    filteredLiveCasinoGames: PropTypes.array,\r\n    loadingLiveCasinoGames: PropTypes.bool,\r\n    noSearchResults: PropTypes.bool,\r\n    userData: PropTypes.object,\r\n    getLiveGameData: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        liveCasinoGames: state.casino.liveCasinoGames,\r\n        filteredLiveCasinoGames: state.casino.filteredLiveCasinoGames,\r\n        loadingLiveCasinoGames: state.casino.loadingLiveCasinoGames,\r\n        noSearchResults: state.casino.noSearchResults,\r\n        userData: state.user.data,\r\n        loading: state.general.loading,\r\n        isShowCasino : state.general.isShowCasino\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLiveGameData: (id, history) => dispatch(getLiveGameData(id, history)),\r\n        getpCasinoGameData: (id, history) => dispatch(getpCasinoGameData(id, history)),\r\n\r\n        \r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, { Component } from 'react';\r\nimport Banner from './Banner';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nclass LiveCasino extends Component {\r\n \r\n    componentDidMount() {\r\n        // if(Util.isLoggedIn())\r\n        // this.props.getLobbyURL();\r\n       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n    //   this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n      \r\n    }\r\n \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='casino-body live-casino'>\r\n                    {/* {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <LoadingIcon />} */}\r\n                    <div className=\"casino-bg live casino-parent-div\">\r\n                        <div className=\"banner-categories\">\r\n                            <Banner />\r\n                            <Categories />\r\n                        </div>\r\n                    \r\n                        <div className='d-table w-100'>                        \r\n                            <GameList />\r\n                        </div>\r\n                    </div>          \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser:() => dispatch(getUser()),\r\n        setCasinoLobby:(value)=>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LiveCasino);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport find from 'lodash.find';\r\nimport { slice, sortBy } from 'lodash';\r\nimport { setHomeLeagues, setHomeActive, setHomeLeaguesActive, removeHomeActiveLeague, getMarketData, selectHomeActiveLeague, getHomeActiveLeagueEvents } from '../../store/actions/home.actions';\r\nimport { getTodaySports, selectSportMobile } from '../../store/actions/todayActions';\r\nimport { getStatsData, getBanners } from '../../store/actions/general.actions';\r\nimport {  selectPreSport } from '../../store/actions/prematchActions';\r\nimport TopLinks from '../TopLinks';\r\nimport TopLeague from '../TopLeague';\r\nimport { intervalTime } from '../../config';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { setStatistics } from '../../store/actions/lsports.global.actions';\r\nimport Betslip from '../Betslip';\r\nimport Inplay from './index';\r\n// import Upcoming from '../Today';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BannerCarousel from '../Common/Banner/BannerCarousel';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nlet sportEventInterval;\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.getBanners();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.mainEvents !== this.props.mainEvents && this.state.showExtraOddsModal) {\r\n            let fixture = find(this.props.mainEvents, (event) => event.fixture_id === this.props.extraMarketEvent.fixture_id);\r\n            this.props.setCurrentEvent(fixture);\r\n            this.setState({ event: fixture });\r\n        }\r\n\r\n        if(prevProps.fetchedAll !== this.props.fetchedAll && this.props.fetchedAll ){\r\n            this.getEventMarkets();            \r\n        }\r\n    }\r\n\r\n    getEventMarkets = () => {\r\n        const startIndex = this.props.nextIndex || 0;\r\n        const data = slice(this.props.partialAllEvents, 0, 20);\r\n        this.props.getMarketData(data, startIndex, data.length);\r\n    }\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        // let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', 'prematch');\r\n    };\r\n\r\n    render() {\r\n        let sportsList = Object.values(staticPrematchSports())\r\n         const { extraMarketChild: ExtraMarket } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <TopLinks sports={sportsList}/> \r\n                <div className=\"middle-part sport-middle d-flex\">\r\n                    { !ExtraMarket && <div id='side-navbar' className=\"side-navbar fade1\">\r\n                        <nav className=\"side-multilevel\">\r\n                            <div id='item-search' style={{ height: '45px' }}/>\r\n                            {/* <TopLeague /> */}\r\n                            <div id='location-filter' className='' />\r\n                        </nav>\r\n                    </div>}\r\n                    <div id=\"scrollableDiv\" className={ `odds-panel ${ExtraMarket ? 'mid-expand' : ''}`}>\r\n                        { !ExtraMarket ? <BannerCarousel/>: null}\r\n                        { ExtraMarket ? <ExtraMarket /> : <Inplay limit={ this.props.limit}/>}\r\n                    </div>\r\n                    <Betslip />\r\n                </div>               \r\n            </React.Fragment>\r\n        )\r\n}\r\n}\r\n\r\nHome.propTypes = {\r\n    isHomeActive: PropTypes.bool,\r\n    isHomeLeagueActive: PropTypes.bool,\r\n    setHomeActive: PropTypes.func,\r\n    setHomeLeaguesActive: PropTypes.func,\r\n    removeHomeActiveLeague: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isHomeActive: state.home.isHomeActive,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n        lastMinuteSports: state.lastMinute.sports,\r\n        lastMinCountObj: state.lastMinute.lastMinCountObj,\r\n        isLastMinAvailable: state.lastMinute.isLastMinAvailable,\r\n        statsData: state.general.statsData,\r\n        mainEvents: state.home.mainEvents,\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        language: state.general.language,\r\n        hasNextPage: state.home.hasNextPage,\r\n        noEvents: state.home.noEvents,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        fetchedAll: state.home.fetchedAll,\r\n        partialAllEvents: state.home.partialAllEvents,\r\n        nextIndex: state.home.nextIndex,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectHomeActiveLeague: (leagueId) => dispatch(selectHomeActiveLeague(leagueId)),\r\n        getHomeActiveLeagueEvents: (leagueId) => dispatch(getHomeActiveLeagueEvents(leagueId)),\r\n        setHomeLeagues: () => dispatch(setHomeLeagues()),\r\n        setHomeActive: (value) => dispatch(setHomeActive(value)),\r\n        setHomeLeaguesActive: (value) => dispatch(setHomeLeaguesActive(value)),\r\n        removeHomeActiveLeague: () => dispatch(removeHomeActiveLeague()),\r\n        getTodaySports: () => dispatch(getTodaySports()),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        selectPreSport: (sportId) => dispatch(selectPreSport(sportId)),\r\n        getStatsData: () => dispatch(getStatsData()),\r\n        getBanners: () => dispatch(getBanners()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getMarketData: (data, startIndex, count) => dispatch(getMarketData(data, startIndex, count)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n","import React, { Component } from 'react'\r\nimport  './about.css';\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       <div className=\"page\">\r\n  <div className=\"page-content about-page\">\r\n    <h1>VerBet</h1>\r\n    <div>\r\n      <p>\r\n        VerBet, an online gaming company that specialize in sports betting\r\n        and casino games, provides the top services for the players to enjoy a\r\n        mesmerising online gaming experience.\r\n      </p>\r\n      <div className=\"about-details\">\r\n        <div className=\"about-item\">\r\n          <div className=\"item-header\">\r\n            <i className=\"fas fa-history\" />\r\n            <h2>24/7 Support</h2>\r\n          </div>\r\n          <div className=\"about-content\">\r\n            <p>\r\n              Our Support team will help you resolve your issues at no time.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-item\">\r\n          <div className=\"item-header\">\r\n            <i className=\"fas fa-dice\" />\r\n            <h2>Top Quality Games</h2>\r\n          </div>\r\n          <div className=\"about-content\">\r\n            <p>\r\n              Besides our large games portfolio, We provide the top quality\r\n              games in the market.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-item\">\r\n          <div className=\"item-header\">\r\n            <i className=\"fas fa-handshake\" />\r\n            <h2>Dedicated Partners</h2>\r\n          </div>\r\n          <div className=\"about-content\">\r\n            <p>\r\n              Our partners are dedicated to you, they're available for your\r\n              assistance at any time.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"about-item\">\r\n          <div className=\"item-header\">\r\n            <i className=\"fas fa-user-secret\" />\r\n            <h2>Privacy</h2>\r\n          </div>\r\n          <div className=\"about-content\">\r\n            <p>\r\n              Your privacy is our topmost concern, play comfortably and calmly.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { clearSearch } from '../../store/actions/resultsActions';\r\n\r\nconst Filter = (props) => {\r\n    const { sports, selectedSport, selectSport, clearSearch, mainEvents, isHomeLeagueActive, sportsObj, noSearchResults } = props;\r\n\r\n    const handleChangeSport = (sportId) => {\r\n        if (sportId === props.selectedSport) return null;\r\n        selectSport(sportId);\r\n        clearSearch();\r\n    };\r\n\r\n  return (\r\n      <div className=\"d-flex flex-wrap links-block\">\r\n          <div id='sport-filter' className=\"game-block\">\r\n              { <ul className=\"d-flex\">\r\n                  { Object.values(sports).map(item => {\r\n                      let sportId = item.sport_id;\r\n                      let sportName = item.name;\r\n                      const className = !isHomeLeagueActive && sportId === selectedSport ? 'active' : ''\r\n                      return (\r\n                          <li onClick={ mainEvents.length > 0 || noSearchResults ? (e) => handleChangeSport(sportId) : null } key={sportId} className='counter_position'>\r\n                              <a href className={ className }>\r\n                                  {/* <div className='sports__counter'> 20 </div> */}\r\n                                  {/* <img alt=\"stream-icon\" className=\"nav-ico-dark\" src={`/images/sports/${item.icon_name}-desktop.svg`}></img> */}\r\n                                  <img alt=\"stream\" className=\"nav-ico-light\" src={`/images/sports/${item.icon_name}-desktop-white.svg`}></img>\r\n                                  <span>{sportName}</span>\r\n                                  <span className='counter'>{ sportsObj[ sportId ] }</span>\r\n                              </a>\r\n                          </li>\r\n                      );\r\n                  })}\r\n              </ul>\r\n            }\r\n          </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    userData: PropTypes.object,\r\n    setLanguage: PropTypes.func,\r\n    language: PropTypes.string,\r\n    headerClassname: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dateFilter: state.today.dateFilter,\r\n        selectedSport: state.results.selectedSport,\r\n        mainEvents: state.results.mainEvents,\r\n        noSearchResults: state.results.noSearchResults,\r\n        language: state.general.language,\r\n        isHomeLeagueActive: state.home.isHomeLeagueActive,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearSearch: () => dispatch(clearSearch()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport Filter from './Filter';\r\nimport { selectSportMobile, setLocationsActive, setResultsActive, selectLocation } from '../../store/actions/resultsActions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\nimport InnerLinks from '../TopLinks/InnerLinks';\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        // this.props.getResultsSports();\r\n        this.props.selectSportMobile(lSportsConfig.results.selectedSport);\r\n        this.props.setLocationsActive(true);\r\n        this.props.setResultsActive(false);\r\n        this.props.selectLocation(null);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.props.getResultsSports();\r\n        // }\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        this.props.setLocationsActive(true);\r\n        this.props.setResultsActive(false);\r\n\r\n        let selectedSport = this.props.selectedSport;\r\n\r\n        if (selectedSport !== sportId) {\r\n            this.props.selectLocation(null);\r\n            this.props.selectSportMobile(sportId);\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        let { sports, selectedSport, language } = this.props;\r\n\r\n        return (\r\n            <div className={'top-links d-flex justify-content-between'}>\r\n                <Filter\r\n                    sportsObj = {this.props.sportsCountObj}\r\n                    sports={staticPrematchSports()}\r\n                    selectedSport={selectedSport}\r\n                    selectSport={this.selectSport}\r\n                    searchPath=\"/results/search\"\r\n                    type=\"seven_days_finished\"\r\n                    language={language}\r\n                />\r\n                <InnerLinks />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    selectSport: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setResultsActive: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.results.sports,\r\n        selectedSport: state.results.selectedSport,\r\n        language: state.general.language,\r\n        sportsCountObj: state.results.sportsCountObj\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setResultsActive: (value) => dispatch(setResultsActive(value)),\r\n        selectLocation: (value) => dispatch(selectLocation(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Util from '../../helper/Util';\r\nimport { lSportsConfig } from '../../config';\r\nimport { useSelector } from 'react-redux';\r\nfunction Match(props) {\r\n    let { event } = props;\r\n    const language = useSelector((state) => state.general.language);\r\n    const lan =    `name_${ language }`;\r\n    let results = event.sport_event_status && event.sport_event_status.home_score  ? [ event.sport_event_status.home_score, event.sport_event_status.away_score ] : ['', ''];\r\n    let sportId = event.sport_id;\r\n\r\n    let periods = event?.sport_event_status?.period_scores?.period_score ? event.sport_event_status.period_scores.period_score : null;\r\n    let drawPeriods = Util.getSportPeriods(periods, sportId);\r\n    let currentDate = Util.convertToLocalTimezone(event.start_date);\r\n    let dateString = currentDate.dateString;\r\n    let timeString = currentDate.timeString;\r\n\r\n    let dateTime = (\r\n        // <div className=\"text-center text-light py-2 px-1\">\r\n        <div>\r\n            <time className=\"d-block\">{dateString}</time>\r\n            <time className=\"d-block\">{timeString}</time>\r\n        </div>\r\n        // </div>\r\n    );\r\n    let rightSymbol = <span className='right_tick'>&#10003;</span>\r\n    let participants = (\r\n        // <div className=\"results__participants text-light p-2\">\r\n        <div className=\"team-detail\">\r\n            <span className=\"d-block ellipsis ls-0\">{event.participant_one_full[lan] || event.participant_one_full.name_en}{ (results[0] > results[1]) ? rightSymbol : null}</span>\r\n            <span className=\"d-block ellipsis ls-0\">{event.participant_two_full[lan] || event.participant_two_full.name_en}{ (results[0] < results[1]) ? rightSymbol : null}</span>\r\n        </div>\r\n        // </div>\r\n    );\r\n\r\n    let statistics = event.sport_event_status && event.sport_event_status.statistics ? event.sport_event_status.statistics : null;\r\n    let cards = sportId === lSportsConfig.sports.football.id ? Util.getSportCards(statistics, true) : null;\r\n    let score = (\r\n        <div className=\"results__score min_width result-scrore-wrap\">\r\n            {drawPeriods}\r\n            {results && (\r\n                // <div className={`text-green font-weight-bold ${periodWidth}`}>\r\n                <div>   \r\n                    <span className=\"d-block text-success font-weight-bold\">{results[0]}</span>\r\n                    <span className=\"d-block text-success last_span\">{results[1]}</span>\r\n                </div>\r\n                // </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n\r\n            <td className=\"fav-star\">\r\n                {dateTime}\r\n            </td>\r\n            <td className=\"team-name\">\r\n                {participants}\r\n            </td>\r\n            <td  className=\"score-section\">\r\n                <div className=\"d-flex  justify-content-end\">\r\n                    {cards}\r\n                    {score}\r\n                </div>\r\n            </td>\r\n        </>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n};\r\n\r\nexport default Match;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Util from '../../helper/Util';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport { sportAndLocationData } from '../../config/sports';\r\n\r\nfunction LeagueHeader(props) {\r\n    let { event, showStripe, language } = props;\r\n    let iconName, locationId, leagueName, stripeClassname;\r\n        let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n        iconName = Util.getSportIconByName(sportAndLocationData()[event.sport_id].Name);\r\n        locationId = event.location.Id;\r\n        leagueName = event.league[lang] ? event.league[lang] : event.league.Name;\r\n        stripeClassname = showStripe ? (event.fixture_status === 2 ? 'stripe_green' : 'stripe_blue') : '';\r\n\r\n    return (\r\n        <div className={`country ${stripeClassname}`}>\r\n            <Grid container className='bg-gray-league-header mx-0 px-0 justify-content-between align-items-center flex-nowrap country__content'>\r\n                <Grid item xs={11} className=\"pl-2 text-overflow d-flex align-items-center\">\r\n                    {/* <i className={iconName + ' pr-1 align-middle'}></i> */}\r\n                    <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"flag live-flag-25\"></div>\r\n                    <span className=\"pl-league-header text-light text-bold\">{leagueName}</span>\r\n                </Grid>\r\n\r\n                {/* <Grid item xs={1} className=\"d-flex justify-content-end\">\r\n                    <i className=\"header__close-btn material-icons\" onClick={remove}>\r\n                        close\r\n                    </i>\r\n                </Grid> */}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nLeagueHeader.propTypes = {\r\n    event: PropTypes.object,\r\n    showStripe: PropTypes.bool,\r\n    remove: PropTypes.func,\r\n    isLive: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeagueHeader);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/resultsActions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events } = props;\r\n    let lastLeagueId = null;\r\n\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n\r\n                  if (lastLeagueId === e.league_id) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else {\r\n                      let leagueId = e.league_id;\r\n                      lastLeagueId = leagueId;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && (\r\n                          <>\r\n                              {groupInfo && (\r\n                              <tr className=\"table-middile-header\"  style={{ background: 'linear-gradient(179deg, #19a5b8 -4.89%, rgb(25 165 184 / 26%) 100%)' }}>\r\n                                  <td colSpan='8' className='px-0 mx-0 td-border-none'>\r\n                                      {groupInfo}\r\n                                  </td>\r\n                              </tr>\r\n                            )}\r\n                              <tr className='live result_border' key={'panel_' + e.fixture_id}>\r\n                                  {/* {divider} */}\r\n                                  <Match event={e} />\r\n                              </tr>\r\n                          </>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <tbody>{drawMatches}</tbody>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    searchStarted: PropTypes.bool,\r\n    openMarketsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchStarted: state.results.searchStarted,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Matches from './Matches';\r\nimport Loading from '../../Components/Common/NewLoading';\r\n// import LoadingIcon from '../Common/LoadingIcon';\r\nimport { getResultsLocationEvents, search, setResultsResetPage, clearLocationEvents } from '../../store/actions/resultsActions';\r\nimport NewLoading from '../../Components/Common/NewLoading';\r\nimport { Translate } from '../../localization';\r\n\r\nclass Events extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.setResultsResetPage();\r\n\r\n            if (!this.props.searchStarted) {\r\n                // this.props.getResultsLocationEvents(this.props.selectedLocation);\r\n            } else {\r\n                this.props.search(this.props.searchValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearLocationEvents();\r\n    }\r\n\r\n    // fetchMoreData = () => {\r\n    //     if (this.props.hasNextPage) {\r\n    //         if (!this.props.searchStarted) {\r\n    //             // if is in main page\r\n    //             this.props.getResultsLocationEvents(this.props.selectedLocation);\r\n    //         } else {\r\n    //             // if is in search page\r\n    //             this.props.search(this.props.searchValue);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    render() {\r\n        let { searchStarted, mainEvents, noSearchResults, noEvents, hasNextPage, locations, isLocationLoading } = this.props;\r\n        let groupedEvents =\r\n            mainEvents &&\r\n            mainEvents[0] &&\r\n            mainEvents[0].sport_id &&\r\n            groupBy(mainEvents, function (event) {\r\n                return `_${event.sport_id}`;\r\n            });\r\n\r\n        let matches = [];\r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                let groupMatches = <Matches events={group} />;\r\n\r\n                matches.push(\r\n                    <table className=\"table mb-0 result-table-wrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                                <th scope=\"col\">&nbsp;</th>\r\n                               \r\n                            </tr>\r\n                        </thead>\r\n                        {groupMatches}\r\n                    </table>,);\r\n            }\r\n        });\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    {matches}   \r\n                    <div className=\"pb-4\" />\r\n                </div>\r\n            ) : noSearchResults || noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">{ Translate.nothingFound}</div>\r\n            ) : (\r\n                !searchStarted && <Loading />\r\n            );\r\n\r\n        return <div id=\"scrollableDiv\" className={ 'odds-panel' }>\r\n            { locations.length > 0 ? <div className=\"table-responsive\">{drawContent}</div> : !isLocationLoading ? <div className=\"no-data fs-15 pt-3 pb-3\" >{ Translate.nothingFound }</div> :<NewLoading />}\r\n        </div>;\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedLocation: PropTypes.number,\r\n    searchValue: PropTypes.string,\r\n    mainEvents: PropTypes.array,\r\n    searchStarted: PropTypes.bool,\r\n    getResultsLocationEvents: PropTypes.func,\r\n    noSearchResults: PropTypes.bool,\r\n    noEvents: PropTypes.bool,\r\n    language: PropTypes.string,\r\n    hasNextPage: PropTypes.bool,\r\n    search: PropTypes.func,\r\n    setResultsResetPage: PropTypes.func,\r\n    clearLocationEvents: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedLocation: state.results.selectedLocation,\r\n        searchValue: state.results.searchValue,\r\n        mainEvents: state.results.mainEvents,\r\n        searchStarted: state.results.searchStarted,\r\n        noSearchResults: state.results.noSearchResults,\r\n        noEvents: state.results.noEvents,\r\n        language: state.general.language,\r\n        hasNextPage: state.results.hasNextPage,\r\n        locations: state.results.locations,\r\n        isLocationLoading: state.results.isLocationLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getResultsLocationEvents: (locationId) => dispatch(getResultsLocationEvents(locationId)),\r\n        search: (value) => dispatch(search(value)),\r\n        setResultsResetPage: () => dispatch(setResultsResetPage()),\r\n        clearLocationEvents: () => dispatch(clearLocationEvents()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { getResultsLocations, selectLocation, setResultsLocationEvents, setLocationsActive, setResultsActive } from '../../store/actions/resultsActions';\r\n\r\nclass Locations extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // let sportId = this.props.selectedSport;\r\n            // this.props.getResultsLocations(sportId);\r\n        }\r\n        const { locations } = this.props;\r\n        if (prevProps.locations !== locations && locations.length > 0){\r\n            const locationId = locations[ 0 ]?.location_id;\r\n            this.props.selectLocation(locationId);\r\n            this.props.setLocationsActive(false);\r\n            this.props.setResultsActive(true);\r\n            this.props.setResultsLocationEvents(locationId);\r\n        }\r\n    }\r\n\r\n    handleClick = (e, locationId) => {\r\n        e.preventDefault();\r\n        // let { selectedLocation } = this.props;\r\n        // let locState = selectedLocation === locationId || locationId === null ? false : true;\r\n        // locationId = locState ? locationId : null;\r\n        this.props.selectLocation(locationId);\r\n        this.props.setLocationsActive(false);\r\n        this.props.setResultsActive(true);\r\n        this.props.setResultsLocationEvents(locationId);\r\n    };\r\n\r\n    render() {\r\n        let { locations, isLocationLoading, language} = this.props;\r\n        let lang = `name_${ language?.toLowerCase() || 'en' }`;\r\n        let locationLength = locations ? locations.length : 0;\r\n        let locationsList =\r\n            !isLocationLoading ? locations.length > 0 ? (\r\n                locations.map((item, i) => {\r\n                    let locationId = item.location_id;\r\n                    let locationName = item[lang] || item.name_en;\r\n                    let count = item.fixtures_count;\r\n                    let divider = locationLength - 1 > i ? <div className=\"location__divider\"> </div> : null;\r\n                    let isSelected = this.props.selectedLocation === locationId ? 'checked' : '';\r\n\r\n                    return (\r\n                        <div className='location location_hover' key={locationId}>\r\n                            <Grid\r\n                                container\r\n                                className='justify-content-md-center location__item mx-auto py-3 pb-2'\r\n                                onClick={(e) => this.handleClick(e, locationId)}\r\n                            >\r\n                                <Grid item xs={8} className=\"d-flex align-items-center p-0\">\r\n                                    <div country={'flag_' + (locationId === 250 ? 248 : locationId)} className=\"flag\"></div>\r\n                                    <span className=\"ellipsis pr-3 text-light allow_cursor\">{locationName}</span>\r\n                                </Grid>\r\n                                <Grid item xs={2} className=\"p-0 text-light event_count\">\r\n                                    {count}\r\n                                </Grid>\r\n                                <Grid item xs={ 1 } className='pt-1'>\r\n                                    <div className={`form-group custum-check ${isSelected}`}>\r\n                                        <input type=\"checkbox\" id=\"html\" checked={isSelected}/>\r\n                                        <label></label>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {divider}\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : null\r\n            : (\r\n                <Loading />\r\n            );\r\n\r\n        return <div className=\"disable-select pt-3\">{locationsList}</div>;\r\n    }\r\n}\r\n\r\nLocations.propTypes = {\r\n    locations: PropTypes.array,\r\n    selectedLocation: PropTypes.number,\r\n    getResultsLocations: PropTypes.func,\r\n    selectLocation: PropTypes.func,\r\n    getResultsLocationEvents: PropTypes.func,\r\n    setLocationsActive: PropTypes.func,\r\n    setResultsActive: PropTypes.func,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locations: state.results.locations,\r\n        selectedLocation: state.results.selectedLocation,\r\n        selectedSport: state.results.selectedSport,\r\n        language: state.general.language,\r\n        isLocationLoading: state.results.isLocationLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getResultsLocations: (sportId) => dispatch(getResultsLocations(sportId)),\r\n        selectLocation: (locationId) => dispatch(selectLocation(locationId)),\r\n        setResultsLocationEvents: (locationId) => dispatch(setResultsLocationEvents(locationId)),\r\n        setLocationsActive: (value) => dispatch(setLocationsActive(value)),\r\n        setResultsActive: (value) => dispatch(setResultsActive(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Sports from './Sports';\r\nimport Events from './Events';\r\nimport Locations from './Locations';\r\nimport { clearLocations, getResultsLocationsCountMobile} from '../../store/actions/resultsActions';\r\nimport { resultTotalSegments } from '../../config';\r\nimport Betslip from '../Betslip';\r\nimport { Translate } from '../../localization';\r\nimport { search, clearSearch, setSearchStarted, clearLocationEvents } from '../../store/actions/resultsActions';\r\n// import TopLinks from '../TopLinks';\r\n\r\nlet timer = 0;\r\nclass Results extends Component {\r\n    componentDidMount() {\r\n        for(let i=0; i< resultTotalSegments; i++) {\r\n            this.props.getResultsLocationsCountMobile(true, null, i);\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearLocations();\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.search(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    searchToRender =\r\n        <div className=\"sports__content sports__content_sm\">\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"sports__search-input text-light\"\r\n                    placeholder={Translate.searchHere}\r\n                    onChange={this.handleChange}       \r\n                />\r\n            </div>\r\n        </div>;\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Sports />               \r\n                <div className=\"middle-part sport-middle d-flex results-page\">\r\n                    <div id='side-navbar' className=\"side-navbar fade1\">\r\n                        <nav className=\"side-multilevel\">\r\n                            <div id='item-search' style={{ height: '45px' }}/>\r\n                            {document.getElementById('item-search') && ReactDOM.createPortal(\r\n                                this.searchToRender,\r\n                             document.getElementById('item-search')\r\n                            )}\r\n                            <Locations />\r\n                            <div id='location-filter' className='' />\r\n                        </nav>\r\n                    </div>\r\n                    <Events />\r\n                    <Betslip />\r\n                </div>               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nResults.propTypes = {\r\n    isLocationsActive: PropTypes.bool,\r\n    isResultsActive: PropTypes.bool,\r\n    clearLocations: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLocationsActive: state.results.isLocationsActive,\r\n        isResultsActive: state.results.isResultsActive,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearLocations: () => dispatch(clearLocations()),\r\n        getResultsLocationsCountMobile: (val, nextToken, i ) => dispatch(getResultsLocationsCountMobile(val, nextToken, i)),\r\n       clearSearch: () => dispatch(clearSearch()),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        clearLocationEvents: () => dispatch(clearLocationEvents()),\r\n        search: (value) => dispatch(search(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { lSportsConfig } from '../../config/lsports.config';\r\nimport SportsList from '../Shared/SportsList';\r\nimport { getLastMinuteSports, selectSport } from '../../store/actions/lastMinuteActions';\r\nimport { staticPrematchSports } from '../../config/sports';\r\n\r\nlet sportInterval;\r\n\r\nclass Sports extends Component {\r\n    componentDidMount() {\r\n        this.props.getLastMinuteSports(); \r\n       \r\n            // this.props.getLastMinuteSports(); \r\n                       \r\n        this.props.selectSport(lSportsConfig.lastMinute.selectedSport);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            // this.props.getLastMinuteSports();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(sportInterval);\r\n    }\r\n\r\n    selectSport = (sportId) => {\r\n        if(sportId !== this.props.selectedSport)\r\n        this.props.selectSport(sportId);\r\n    };\r\n\r\n    render() {\r\n        let { lastMinCountObj, selectedSport, language, mainEvents } = this.props;\r\n        return (\r\n            <div className={`pre-match-wrapper`}>\r\n                <SportsList\r\n                    sports={staticPrematchSports()}\r\n                    sportsObj={lastMinCountObj}\r\n                    selectedSport={selectedSport}\r\n                    selectSport={this.selectSport}\r\n                    searchPath=\"\"\r\n                    type=\"last_minute\"\r\n                    language={language}\r\n                    isDisable={mainEvents.length === 0}\r\n                    sort\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSports.propTypes = {\r\n    getLastMinuteSports: PropTypes.func,\r\n    selectSport: PropTypes.func,\r\n    sports: PropTypes.array,\r\n    selectedSport: PropTypes.number,\r\n    language: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sports: state.lastMinute.sports,\r\n        selectedSport: state.lastMinute.selectedSport,\r\n        language: state.general.language,\r\n        mainEvents: state.lastMinute.mainEvents,\r\n        lastMinCountObj: state.lastMinute.lastMinCountObj\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLastMinuteSports: () => dispatch(getLastMinuteSports()),\r\n        selectSport: (sportId) => dispatch(selectSport(sportId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sports);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport find from 'lodash.find';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMarket from '../Shared/MainMarket';\r\nimport Participants from '../Shared/Match/Participants';\r\nimport ExtraMarkets from '../Shared/Match/ExtraMarkets';\r\nimport MatchResult from '../Shared/Match/MatchResult';\r\nimport Favorite from '../Shared/Match/Favorite';\r\nimport MatchDateTime from '../Shared/Match/MatchDateTime';\r\nimport { isEmpty } from 'lodash';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, isSortedMarkets) => {\r\n        if (isSortedMarkets) {\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            props.openMarketsModal(event);\r\n            console.log(event);\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n\r\n\r\n    let { event, mainSelectedMarket } = props;\r\n    let leagueName = event.league.Name;\r\n    let sortedMarkets = event.market;\r\n    let mainMarketEvent = find(sortedMarkets, (m) => m.Id === mainSelectedMarket);\r\n    if (!mainMarketEvent) {\r\n        mainMarketEvent = Object.values(sortedMarkets)[0];\r\n    }\r\n    sortedMarkets = filter(sortedMarkets, (m) => m.Id !== mainMarketEvent.Id);\r\n    let isSortedMarkets = !isEmpty(event.market);\r\n    if (mainMarketEvent === undefined) return null;\r\n    let cards =  <Grid item xs={2} className=\"results__cards p-2\"></Grid>;\r\n    return (\r\n        <div className=\"match__panel hybrid-tomorrow\">\r\n            <div className=\"width-95 mx-auto match__wrap\">\r\n                <div className=\"match__left\">\r\n                    <Favorite fixture={event} />\r\n                    <MatchDateTime fixture={event} showDate={false} />\r\n                </div>\r\n\r\n                <div className=\"match__right\">\r\n                    <Grid container className=\"pl-xs mx-auto match__info\">\r\n                        <Participants participants={[ event.participant_one_full,event.participant_two_full]} />\r\n                        {cards}\r\n                        <MatchResult isLive={false} livescore={false} />\r\n                        {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                        <ExtraMarkets onClick={(e) => openExtraOddsModal(event, isSortedMarkets)} />\r\n                    </Grid>\r\n\r\n                    <MainMarket market={mainMarketEvent} fixture={event} type=\"last-minute\" leagueName={leagueName} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    mainSelectedMarket: PropTypes.number,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.lastMinute.mainSelectedMarket,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Match);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { isEmpty } from 'lodash';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../Shared/LeagueHeader';\r\nimport { removeLeague } from '../../store/actions/lastMinuteActions';\r\n\r\nfunction Matches(props) {\r\n    const removeLeague = (leagueId) => {\r\n        props.removeLeague(leagueId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal,setExtraMarkets, selectExtraMarket } = props;\r\n    let lastLeagueId = null;\r\n    let drawMatches =\r\n        events && events.length > 0\r\n            ? map(events, (e, i) => {\r\n                  let groupInfo = null;\r\n                  let divider = null;\r\n                  if (!isEmpty(e.league) && lastLeagueId === e.league) {\r\n                      divider = <div className=\"match__divider\" />;\r\n                  } else if(!isEmpty(e.league)) {\r\n                      let leagueId = e.league.Id;\r\n                      lastLeagueId = leagueId;\r\n                      divider = null;\r\n                      groupInfo = <LeagueHeader event={e} showStripe remove={(e) => removeLeague(leagueId)} />;\r\n                  }\r\n\r\n                  return (\r\n                      e && !isEmpty(e.market) && (\r\n                          <div className='my-2' key={'panel_' + e.fixture_id}>\r\n                              {groupInfo}\r\n                              {divider}\r\n                              <Match event={e}  selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} />\r\n                          </div>\r\n                      )\r\n                  );\r\n              })\r\n            : null;\r\n\r\n    return <div>{drawMatches}</div>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeLeague: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeLeague: (leagueId) => dispatch(removeLeague(leagueId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport {slice} from 'lodash';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Matches from './Matches';\r\nimport MainMarketSelector from '../Shared/MainMarketSelector';\r\nimport Loading from '../Common/Loading';\r\nimport LoadingIcon from '../Common/LoadingIcon';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport { selectMainMarket, getSportEvents, setLastMinuteResetPage, clearSportEvents, setClearData } from '../../store/actions/lastMinuteActions';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\n\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModal: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // sportEventInterval = setInterval(() => {\r\n        // let sportId = this.props.selectedSport;\r\n        // // this.props.getSportEvents(sportId);\r\n        // } , 60000);\r\n        // if(this.props.fetchedAll) {\r\n        // }\r\n        this.props.setClearData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let sportId = this.props.selectedSport;\r\n        // if (prevProps.language !== this.props.language) {\r\n        //     this.props.setLastMinuteResetPage();\r\n\r\n        //     let sportId = this.props.selectedSport;\r\n        //     this.props.getSportEvents(sportId);\r\n        // }\r\n        if(prevProps.allData !== this.props.allData && this.props.fetchedAll ){\r\n            // const data = this.props.allData[sportId].slice(20);\r\n            const data = slice(this.props.allData[sportId], 0, 20);\r\n            this.props.getSportEvents(data, 0, data.length);\r\n        }\r\n        if( prevProps.selectedSport !== sportId) {\r\n            const data = slice(this.props.allData[sportId], 0, 20);\r\n            this.props.getSportEvents(data, 0, data.length);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setClearData();\r\n        // this.props.clearSportEvents();\r\n        // this.props.setLastMinuteResetPage();\r\n        // clearInterval(sportEventInterval);\r\n    }\r\n\r\n    openExtraOddsModal = (fixture) => {\r\n        this.setState({ event: fixture }, () => {\r\n            this.setState({ showExtraOddsModal: true });\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        this.setState({ showExtraOddsModal: false });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        let statsTemplateType = fixture.has_prematch_statistics ? 'prematch' : fixture.has_live_statistics ? 'live' : '';\r\n        this.setState({ showStatisticsModal: true });\r\n        this.props.setStatistics(fixture.fixture_id, 'forMatch', statsTemplateType);\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModal: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        if (this.props.hasNextPage) {\r\n            let { nextIndex, selectedSport } = this.props;\r\n            const data = slice(this.props.allData[selectedSport], nextIndex, nextIndex + 20);\r\n            this.props.getSportEvents(data, nextIndex, data.length);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showExtraOddsModal, event } = this.state;\r\n        let { mainEvents, selectMainMarket, mainSelectedMarket, noEvents, hasNextPage, selectedSport, setExtraMarkets, selectExtraMarket } = this.props;\r\n\r\n        let groupedEvents =\r\n            mainEvents &&\r\n            mainEvents[0] &&\r\n            mainEvents[0].sport_id &&\r\n            groupBy(mainEvents, function (event) {\r\n                return `_${event?.sport_id}`;\r\n            });\r\n        let matches = [];\r\n\r\n        forEach(groupedEvents, (group, sportId) => {\r\n            if (group.length > 0) {\r\n                let marketSelector = (\r\n                    <MainMarketSelector selectMainMarket={selectMainMarket} mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedSport]} mainSelectedMarket={mainSelectedMarket} />\r\n                );\r\n\r\n                let groupMatches = <Matches selectExtraMarket ={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={group} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />;\r\n\r\n                matches.push(\r\n                    <div key={sportId}>\r\n                        {marketSelector}\r\n                        {groupMatches}\r\n                    </div>,\r\n                );\r\n            }\r\n        });\r\n\r\n        let drawContent =\r\n            matches.length > 0 ? (\r\n                <div>\r\n                    <InfiniteScroll\r\n                        dataLength={mainEvents.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={hasNextPage}\r\n                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                        scrollThreshold = {0.95}\r\n                    >\r\n                        {matches}\r\n                    </InfiniteScroll>\r\n\r\n                    <div className=\"pb-4\" />\r\n\r\n                    {showExtraOddsModal && <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} />}\r\n\r\n                    {/* {showStatisticsModal && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />} */}\r\n                </div>\r\n            ) : noEvents ? (\r\n                <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n            ) : (\r\n                <Loading />\r\n            );\r\n\r\n        return <div className=\"events__wrap pre-match-wrapper\">{drawContent}</div>;\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    selectedSport: PropTypes.number,\r\n    mainEvents: PropTypes.array,\r\n    selectMainMarket: PropTypes.func,\r\n    mainSelectedMarket: PropTypes.number,\r\n    noEvents: PropTypes.bool,\r\n    setCurrentEvent: PropTypes.func,\r\n    clearSportEvents: PropTypes.func,\r\n    getSportEvents: PropTypes.func,\r\n    setLastMinuteResetPage: PropTypes.func,\r\n    hasNextPage: PropTypes.bool,\r\n    language: PropTypes.string,\r\n    statisticsType: PropTypes.string,\r\n    clearStatistics: PropTypes.func,\r\n    setStatistics: PropTypes.func,\r\n    fetchedAll: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedSport: state.lastMinute.selectedSport,\r\n        mainEvents: state.lastMinute.mainEvents,\r\n        mainSelectedMarket: state.lastMinute.mainSelectedMarket,\r\n        noEvents: state.lastMinute.noEvents,\r\n        hasNextPage: state.lastMinute.hasNextPage,\r\n        language: state.general.language,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        fetchedAll: state.lastMinute.fetchedAll,\r\n        allData: state.lastMinute.allData,\r\n        nextIndex: state.lastMinute.nextIndex,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectMainMarket: (marketId) => dispatch(selectMainMarket(marketId)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        clearSportEvents: () => dispatch(clearSportEvents()),\r\n        getSportEvents: (eventsArray, startIndex, count) => dispatch(getSportEvents(eventsArray, startIndex, count)),\r\n        setLastMinuteResetPage: () => dispatch(setLastMinuteResetPage()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        setClearData: () => dispatch(setClearData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React from 'react';\r\nimport Sports from './Sports';\r\nimport Events from './Events';\r\n\r\nfunction LastMinute(props) {\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Sports />\r\n            <Events />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LastMinute;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { lSportsConfig } from '../../config';\r\nimport MainMarket from '../Shared/MainMarkets';\r\nimport Participants from '../Shared/Match/Participant';\r\nimport Favorite from '../../Components/Shared/Match/Favorite';\r\nimport MatchDateTime from '../../Components/Shared/Match/MatchDateTime';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport uniqBy from 'lodash.uniqby';\r\nimport filter from 'lodash.filter';\r\nimport groupBy from 'lodash.groupby';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Match(props) {\r\n    const openExtraOddsModal = (event, count, isLive) => {\r\n        if (count > 0) {\r\n            props.setExtraMarkets(event.market);\r\n            props.selectExtraMarket('All');\r\n            isLive ? props.history.push(`/d/live-bettingextra-market/${event.sport_id}/${event.fixture_id}/${liveStreamAvailable}`) :\r\n        props.history.push(`/d/extra-market/${event.sport_id}/${event.fixture_id}`);\r\n\r\n        } else {\r\n            toastr.info('', 'There are no extra odds to show.');\r\n        }\r\n    };\r\n    \r\n    let { event, unsubscribeSingleEvents, liveStreamData, statsData} = props;\r\n    const [ liveStreamAvailable, setLiveStreamAvailable] = useState(false);\r\n    const [ streamURL, setStreamingURL] = useState(null);\r\n    const [ streamUrlData, setStreamUrlData] = useState([]);\r\n    const [ matchSelectedLine, setMatchLine ] = useState({});\r\n    \r\n    useEffect(() => {\r\n        let selectedEvents = filter(liveStreamData, (e) => e.matchId == event.fixture_id);\r\n        selectedEvents = uniqBy(selectedEvents, (e) => e.iframe);\r\n        if (selectedEvents[0] && selectedEvents[0].live === '1') {\r\n            setStreamUrlData(selectedEvents);\r\n            setStreamingURL(selectedEvents.iframe);\r\n            setLiveStreamAvailable(true);\r\n        }\r\n    }, [liveStreamData, event.fixture_id]); \r\n\r\n    let fixtureStatus = event.fixture_status;\r\n    let isLive = fixtureStatus === lSportsConfig.statuses.inplay;\r\n    let leagueName = event.league?.Name;\r\n    let mainMarkets = MARKET_FOR_OUTER_SLIDER_PREMATCH[event.sport_id];\r\n\r\n    let sortedMarketsLength = event.market ? Object.values(event.market).length : event.Market ? Object.values(event.Market) : null;\r\n    let hasStatistics = event.Livescore?.Statistics ? true : false;\r\n    if (statsData?.[+event.fixture_id]) {\r\n        if (fixtureStatus == 2 && ['live', 'finished'].indexOf(statsData[+event.fixture_id].status_type) > -1) {\r\n            hasStatistics = true;\r\n        }\r\n        if (fixtureStatus != 2 ) hasStatistics = true;\r\n    }\r\n\r\n    let score = event?.livescore;\r\n    let liveParticipantProps = isLive ? { isInplay: true, score: score} : {};\r\n    return (\r\n        <React.Fragment>\r\n            <td>\r\n                <Favorite fixture={event} unsubscribeSingleEvents={unsubscribeSingleEvents} />\r\n            </td>\r\n            <td className=\"fav-star\">                \r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td>\r\n            {/* <td className=\"time\">\r\n                <MatchDateTime fixture={ event } showDate />\r\n            </td> */}\r\n            <td className=\"team-name\">\r\n                <div className=\"team-detail\">\r\n                    <Participants participants={ event.participants } { ...liveParticipantProps }/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            <div className=\"score-section\">\r\n                    <p>\r\n                        { score ? score.home_score : '-' }\r\n                    </p>\r\n                    <p>\r\n                        { score ? score.away_score : '-' }\r\n                    </p>\r\n                </div>\r\n                {/* <Statistics isDisabled={!hasStatistics} onClick={(e) => openStatisticsModal(event)} /> */}\r\n                {/* {   isLive && liveStreamAvailable &&\r\n                    <IconButton onClick={() => openLiveStreamModal(streamUrlData)}>\r\n                        <img className=\"stream-icon\" alt=\"stream-icon\" src=\"./images/smart-tv-live-new.svg\"></img> \r\n                    </IconButton> \r\n                } */}\r\n                {/* <i className=\"icon-statistics\"></i> */}\r\n            </td>\r\n            {mainMarkets.slice(0,1).map((mainMarket,i) => {\r\n                const { Id, col, isLine: isLineAvailable } = mainMarket;\r\n                let mainMarketEvent = Object.values(event.market).find( mkt => mkt.Id == Id);\r\n                let listofLines = [];\r\n                let selectedLine = null;\r\n                let indexOfSelectedLine = -1;\r\n                let lastMarketClass = i === 2 ? 'padd-left' : '';\r\n                if (!mainMarketEvent) {\r\n                    mainMarketEvent = { ...mainMarket };\r\n                    // return <td className=\"odd-box 1\" />;\r\n                }\r\n                if (isLineAvailable && mainMarketEvent?.Bets) {\r\n                    let orderedBets = filter(mainMarketEvent?.Bets, (bet) => +bet.Line > 2 && +bet.Status === 1);\r\n                    listofLines = Object.keys(groupBy(orderedBets, 'Line'));\r\n                    listofLines = listofLines.map(Number)?.sort((a,b) => a-b);\r\n                    selectedLine = matchSelectedLine[event.fixture_id] || listofLines?.[0];\r\n                    indexOfSelectedLine = listofLines.indexOf(selectedLine);\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        { isLineAvailable && (\r\n                        <td className={`up-down-no priority-${i}`}>\r\n                            { !!listofLines.length && <i className={`material-icons icon-color ${indexOfSelectedLine < listofLines.length -1? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine < listofLines.length -1) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine + 1] }));\r\n                            }}> keyboard_arrow_up </i> }\r\n                            <span>\r\n                                {/* <select\r\n                                    className='line-select'\r\n                                    onChange={(e) => {\r\n                                        if(e.target && e.target.value) {\r\n                                            const { value } = e.target;\r\n                                            setMatchLine((prev) => ({ ...prev, [event.fixture_id]: value }));\r\n                                        }} }\r\n                                >\r\n                                    { listofLines.map(line => <option selected={selectedLine === line}> { line }</option>)}\r\n                                </select>  */}\r\n                                { selectedLine }\r\n                            </span>\r\n                            { !!listofLines.length && <i className={`material-icons icon-color ${indexOfSelectedLine > 0 ? 'visible' : 'invisible'}`} onClick={ () => {\r\n                                if (indexOfSelectedLine > 0) setMatchLine((prev) => ({ ...prev, [event.fixture_id]: listofLines[indexOfSelectedLine - 1] }))\r\n                            }}> keyboard_arrow_down </i>}\r\n                        </td>\r\n                        )}\r\n                        <td className={`odd-box 1 ${lastMarketClass} priority-${i}`}>\r\n                            <MainMarket market={mainMarketEvent} selectedLine={selectedLine} column={col} fixture={event} type=\"live\" leagueName={leagueName} />\r\n                        </td>\r\n                    </React.Fragment>\r\n                );}\r\n            )}\r\n            <td className=\"next-match-btn\">\r\n                <a href onClick={() => openExtraOddsModal(event, sortedMarketsLength,isLive)}>\r\n                    +{ Object.keys(event.market).length }\r\n                </a>\r\n            </td>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nMatch.propTypes = {\r\n    event: PropTypes.object,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainSelectedMarket: state.home.mainSelectedMarket,\r\n        statsData: state.general.statsData,\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Match));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport Match from './Match';\r\nimport LeagueHeader from '../../Components/Shared/LeagueHeader';\r\nimport { removeFavorite } from '../../store/actions/favorites.actions';\r\nimport { lSportsConfig } from '../../config';\r\n\r\nfunction Matches(props) {\r\n    const removeFavorite = (id, fixtureId) => {\r\n        props.removeFavorite(id, fixtureId);\r\n    };\r\n\r\n    let { events, openMarketsModal, openStatisticsModal, unsubscribeSingleEvents, selectExtraMarket, setExtraMarkets, openLiveStreamModal, liveStreamData} = props;\r\n\r\n    let drawMatches =        \r\n            map(events, (e, i) => {\r\n                  let eventId = e.event_id ? e.event_id : '' ;\r\n                    let isLive = e.fixture_status === lSportsConfig.statuses.inplay;\r\n                  \r\n                  let fixtureId = e.fixture_id ? e.fixture_id : e.FixtureId;\r\n                  let groupInfo = <LeagueHeader event={e} isLive={e.Fixture  && e.Fixture.Status === lSportsConfig.statuses.inplay } showStripe remove={(e) => removeFavorite(eventId, fixtureId)} />;\r\n\r\n                  return (\r\n                     e && (\r\n                        <>\r\n                        { groupInfo && (\r\n                            <tr className=\"custom-league-header\">\r\n                                <td colSpan='9' className='px-0 mx-0'>\r\n                                    {groupInfo}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                         <tr key={`panel_ ${e.fixture_id ? e.fixture_id : e.FixtureId}`} className={ !isLive && 'live'}>\r\n                              {/* {groupInfo} */}\r\n                              <Match liveStreamData={liveStreamData} openLiveStreamModal={openLiveStreamModal} event={e} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} openMarketsModal={openMarketsModal} openStatisticsModal={openStatisticsModal} unsubscribeSingleEvents={unsubscribeSingleEvents}/>\r\n                          </tr>\r\n                      </>\r\n                          \r\n                      )\r\n                  );\r\n              })\r\n\r\n    return <tbody>{drawMatches}</tbody>;\r\n}\r\n\r\nMatches.propTypes = {\r\n    events: PropTypes.array,\r\n    removeFavorite: PropTypes.func,\r\n    openMarketsModal: PropTypes.func,\r\n    openStatisticsModal: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeFavorite: (id, fixtureId) => dispatch(removeFavorite(id, fixtureId)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Matches);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport filter from 'lodash.filter';\r\nimport Matches from './Matches';\r\nimport ExtraOddsModal from '../Shared/ExtraOddsModal';\r\nimport LiveExtraOddsModal from '../Inplay/ExtraOddsModal';\r\nimport StatisticsModal from '../../Components/Shared/StatisticsModal';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { setCurrentEvent, clearStatistics, setStatistics, setExtraMarkets, selectExtraMarket } from '../../store/actions/lsports.global.actions';\r\nimport { getFavorites } from '../../store/actions/favorites.actions';\r\nimport { getStatsData } from '../../store/actions/general.actions';\r\nimport { find, forEach, isEmpty, isEqual } from 'lodash';\r\nimport { map, sortBy } from 'lodash';\r\nimport LiveStreamModal from '../../Components/Shared/LiveStramModal';\r\nimport jwtService from '../../services/jwtService';\r\nimport Util from '../../helper/Util';\r\nimport { onUpdateMatchMarkets } from '../../graphql/subscriptions';\r\nimport API, { graphqlOperation } from '@aws-amplify/api';\r\nimport { dynamoClient } from '../../App';\r\nimport { getLiveMatchMarkets } from '../../dynamo/inplayParams';\r\nimport { lSportsConfig, maxWebsocketRetryCount } from '../../config';\r\nimport { MARKET_FOR_OUTER_SLIDER_PREMATCH } from '../../config/markets';\r\nimport MarketHeader from '../Shared/MarketHeader';\r\nimport TopLinks from '../TopLinks';\r\nimport Betslip from '../Betslip';\r\nimport { staticPrematchSports } from '../../config/sports';\r\nimport { setDateFilter, selectSportMobile } from '../../store/actions/todayActions';\r\n\r\n\r\nlet unSub = {};\r\nlet liveMatchSub;\r\nlet marketSubscription;\r\nlet websocket;\r\nlet websocketConnectionAttempts = 0;\r\nlet liveMatchSubConnectionAttempts = 0;\r\nlet liveMatchSubAppSync;\r\n\r\nclass Favorites extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showNonLiveExtraOddsModal: false,\r\n            showLiveExtraOddsModal: false,\r\n            event: {},\r\n            showStatisticsModalForNonLive: false,\r\n            showStatisticsModalForLive: false,\r\n            loading: false,\r\n            liveMatches: {},\r\n            nonLiveMatches: {},\r\n            showLiveStream: false,\r\n            liveStreamFixtureId : null,\r\n            liveStreamData: [],\r\n            liveStreamUrl: null,\r\n            expandTable: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        if (!this.props.loadingFavorites) this.props.getFavorites();\r\n       // this.fetchLiveStreamMatches();\r\n        // if (!this.props.statsData) this.props.getStatsData();\r\n        const matchesByStatus = this.groupMatchesByStatus();\r\n        if (!matchesByStatus) return;\r\n        this.setState({\r\n            liveMatches: matchesByStatus['live'],\r\n            nonLiveMatches: matchesByStatus['nonLive'],\r\n            loading: false,\r\n        }, () => {\r\n            this.subscribeEvents(matchesByStatus['live']);\r\n        });\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        let { favorites, favoritesLiveMatches, dateFilter, selectedSport} = this.props;\r\n        favorites = [...favorites , ...favoritesLiveMatches];\r\n        let preFav = [ ...prevProps.favorites, ...prevProps.favoritesLiveMatches];\r\n        if (!isEqual(preFav, favorites) || !isEqual(prevProps.dateFilter, dateFilter) || !isEqual(prevProps.selectedSport, selectedSport)) {\r\n            const matchesByStatus = this.groupMatchesByStatus();\r\n            if (!matchesByStatus) return;\r\n            this.setState({\r\n                liveMatches: matchesByStatus['live'],\r\n                nonLiveMatches: matchesByStatus['nonLive'],\r\n                loading: false,\r\n            }, () => {\r\n                this.subscribeEvents(matchesByStatus['live']);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeEvents();\r\n        this.props.selectSportMobile(1);\r\n        //this.props.setDateFilter(format(new Date(), 'yyyy-MM-dd'));\r\n    }\r\n    \r\n    groupMatchesByStatus = () => {\r\n        let { favorites, favoritesLiveMatches, selectedSport, dateFilter } = this.props;\r\n        favorites = [...favorites , ...favoritesLiveMatches];\r\n        if(!favorites) return;\r\n        // const events = favorites;\r\n        \r\n        // if (!events) return;\r\n        \r\n        const matchesByStatus = {\r\n            'live': {},\r\n            'nonLive': {},\r\n        };\r\n        if (dateFilter && false) { }\r\n        else favorites = favorites.filter(fixture => fixture.sport_id == selectedSport);\r\n        favorites.forEach((item) => {\r\n            if (item.fixture_status === 1) {\r\n                matchesByStatus['live'][item.fixture_id] = item;\r\n            } \r\n            else {\r\n                matchesByStatus['nonLive'][item.fixture_id] = item;\r\n            }\r\n        });\r\n        return matchesByStatus;\r\n    };\r\n\r\n    subscribeEvents = (liveMatches) => {\r\n        websocket = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        websocket.addEventListener('open', () => {\r\n            websocketConnectionAttempts = 0;\r\n        });\r\n\r\n        websocket.addEventListener('message', (event) => {\r\n            this.handleFirebaseUpdates({value: event});\r\n        });\r\n\r\n        websocket.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else websocketConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (websocketConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.subscribeEvents(liveMatches);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeEventsAppSync(liveMatches);\r\n            }\r\n        });\r\n    };\r\n\r\n    subscribeEventsAppSync = (liveMatches) => {\r\n        if (isEmpty(liveMatches)) return;\r\n        this.unsubscribeEvents();\r\n        forEach( liveMatches, item => {\r\n            let marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(item.fixture_id))); \r\n    \r\n            unSub[item.fixture_id] = marketSubscription.subscribe({\r\n                next: this.handleFirebaseUpdates,\r\n                error: (error) => console.warn(error),\r\n            });\r\n        });\r\n    }\r\n\r\n    handleFirebaseUpdates = ({value}) => {\r\n        if (!value?.data) return null;\r\n\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        if (!updatedMatch) return null;\r\n\r\n        let { liveMatches } = this.state;\r\n        if (!liveMatches[updatedMatch.match_id]) return null;\r\n\r\n        let { match_id: fixtureId, outcomes: market, sport_event_status: livescore, fixture_status: status } = updatedMatch;\r\n        if (!market && !livescore && !status) return null;\r\n\r\n        const id = fixtureId;\r\n        if (status == lSportsConfig.statuses.results && liveMatches[id]) {\r\n            delete unSub[id];\r\n            delete liveMatches[id];\r\n            return this.setState({liveMatches});\r\n        }\r\n\r\n        const { liveMatches: { [id]: oldMatches } } = this.state;\r\n         if (!oldMatches) {\r\n        // TODO: Add the match in the list\r\n            return;\r\n        };\r\n\r\n        market = market && Util.marketFormatter([updatedMatch], fixtureId);\r\n        if (livescore) {\r\n            livescore = JSON.parse(livescore);\r\n            this.setState({\r\n                liveMatches: {\r\n                    ...this.state.liveMatches,\r\n                    [id]: { ...oldMatches, Livescore: livescore, fixture_status: +status },\r\n                },\r\n            });\r\n            return;\r\n        }\r\n        \r\n        if (!market) {\r\n            this.setState({\r\n                liveMatches: {\r\n                    ...this.state.liveMatches,\r\n                    [id]: {...oldMatches},\r\n                },\r\n            });\r\n            return;\r\n        };\r\n\r\n        const marketWithDiff = (() => {   \r\n            const { Bets, Id } = market;\r\n            //console.log(Bets);  \r\n            const oldMarket = find(oldMatches.Markets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    \r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...oldMatches,\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        })();\r\n        this.setState({\r\n            liveMatches: {\r\n                ...this.state.liveMatches,\r\n                [id]: { ...oldMatches, market: { ...oldMatches.market, ...marketWithDiff} },\r\n            },\r\n        });\r\n}\r\n\r\n    unsubscribeEvents = () => {\r\n        Object.values(unSub).forEach(element => element.unsubscribe());\r\n        // (let e in Object.values(unSub)) {\r\n        //     unSub[e].unsubscribe();\r\n        // }\r\n        if(websocket) websocket.close();\r\n    };\r\n\r\n    unsubscribeSingleEvents = (id) => {\r\n        //     unSub[id]();\r\n        // console.log(`***** UnSubscribed fixture Id: ${id} *****`);\r\n        \r\n        //liveMatchSub && liveMatchSub();\r\n        //console.log(\"***** UnSubscribed all live matches. *****\");\r\n    };\r\n\r\n    fetchLiveStreamMatches = async () => {\r\n        try {\r\n            let liveStreamData = await jwtService.getLiveStreamData();\r\n            this.setState({ liveStreamData: liveStreamData });\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                Util.handleRepeatedLogin(error.response);\r\n            } else {\r\n                // FIXME: Commenting the error temporarily\r\n                //toastr.error('', 'Something went wrong.');\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribeExtraMarket = (fixtureId) => {\r\n        liveMatchSub = new WebSocket(`wss://socket.igamingbook.com/${process.env.REACT_APP_WEBSOCKET_CHANNEL}`);\r\n\r\n        liveMatchSub.addEventListener('open', () => {\r\n            liveMatchSubConnectionAttempts = 0;\r\n        });\r\n\r\n        liveMatchSub.addEventListener('message', (event) => {\r\n            this.handleExtraMarketUpdates({value: event});\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => {\r\n            console.warn(error);\r\n\r\n            if (this.state.isDisconnected) return;  // Network is disconnected\r\n            else liveMatchSubConnectionAttempts++;     // Network is not disconnected\r\n\r\n            if (liveMatchSubConnectionAttempts < maxWebsocketRetryCount) {\r\n                // Retry websocket connection\r\n                this.subscribeExtraMarket(fixtureId);\r\n            } else {\r\n                // Open appsync connection\r\n                this.subscribeExtraMarketAppSync(fixtureId);\r\n            }\r\n        });\r\n\r\n        liveMatchSub.addEventListener('error', (error) => console.warn(error));\r\n\r\n    }\r\n\r\n    subscribeExtraMarketAppSync = (fixtureId) => {\r\n        marketSubscription = API.graphql(graphqlOperation(onUpdateMatchMarkets(fixtureId)));\r\n\r\n        // Now whenever we need to subscribe just call: marketSubscription.subscribe as mentioned below.\r\n        liveMatchSubAppSync = marketSubscription.subscribe({\r\n            next: this.handleExtraMarketUpdates,\r\n            error: (error) => console.warn(error),\r\n        });\r\n    }\r\n\r\n    openExtraOddsModalLiveMatch = (fixture, liveStreamAvailable) => {\r\n        this.unsubscribeEvents();\r\n        let newFixture = fixture;\r\n        this.getSingleMatchMarkets(fixture.fixture_id).then(data => {\r\n            if(data)\r\n            {\r\n                this.subscribeExtraMarket(fixture.fixture_id);\r\n                newFixture.market = data.market;\r\n                newFixture.Markets = { ...data.market};\r\n                newFixture.Livescore = data.Livescore;\r\n                \r\n                this.setState({ event: newFixture, liveStreamAvailable: liveStreamAvailable }, () => {\r\n                this.props.setCurrentEvent(newFixture);\r\n                this.setState({ showLiveExtraOddsModal: true });\r\n                \r\n                \r\n                // const collection = this.props.language === `en`? `d_event` : `d_event_${this.props.language}`;\r\n                // unSub.push(firebaseDB.collection(collection).doc(`${fixture.FixtureId}`).onSnapshot(this.handleFirebaseUpdates));\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getSingleMatchMarkets = async (fixtureId, nextToken, fixture) => {\r\n        try {\r\n            let event =  dynamoClient.query(getLiveMatchMarkets(fixtureId.toString(), nextToken)).promise();\r\n            return await event.then(e => {\r\n                const { Items } = e;\r\n                if (!fixture) fixture = { market: null, livescore: null, fixture_status: null };\r\n                if (Items.length > 0) {\r\n                    forEach(Items, (item) => {\r\n                        if(item.market) {\r\n                            let mrktData = JSON.parse(item.market);\r\n                            fixture.market = { ...fixture.market, ...mrktData };\r\n                        }\r\n                        if(item.livescore) {\r\n                            let livescore = JSON.parse(item.livescore);\r\n                            fixture.Livescore = livescore;\r\n                        }\r\n                    });\r\n                }\r\n                return fixture || e.Items[0];\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    marketDifference = (markets, prevMarkets) =>  {\r\n        return map(markets, (market) => {   \r\n            const { Bets, Id } = market;\r\n\r\n            const oldMarket = find(prevMarkets, (mar) => mar.Id === Id);\r\n            // If market not present previously no updated needed.\r\n            if (!oldMarket) return market;\r\n            if (!Bets) return market;\r\n            const updatedBetsWithDiff = map(Bets, bet => {\r\n                const { Price, Id: betId } = bet;\r\n\r\n                const oldBet = find(oldMarket.Bets, (b) => b.Id === betId);\r\n                // If bet not present previously no updated needed.\r\n                if (!oldBet) return bet;\r\n\r\n                const { Price: oldPriceStr } = oldBet;\r\n                const price = parseFloat(Price);\r\n                const oldPrice = parseFloat(oldPriceStr);\r\n\r\n                const diff = oldPrice - price;\r\n                return {\r\n                    ...bet,\r\n                    diff,\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...market,\r\n                Bets: updatedBetsWithDiff,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleExtraMarketUpdates = ({value}) => {\r\n        if (!value?.data) return null;\r\n\r\n        let updatedMatch = value.data.onUpdateLiveMarkets || value.data;\r\n        if (typeof(updatedMatch) == 'string') updatedMatch = JSON.parse(updatedMatch);\r\n        if (!updatedMatch) return null;\r\n        let { event } = this.state;\r\n        let newFixture = {};\r\n        if (!updatedMatch || !event || event.fixture_id != updatedMatch.match_id) return null;\r\n\r\n        if(updatedMatch.outcomes){\r\n            let updatedMarket = Util.marketFormatter([updatedMatch], updatedMatch?.match_id);\r\n            let marketValue = updatedMarket && Object.values(updatedMarket)[0];\r\n            if (marketValue?.Bets && event?.market?.[`id_${marketValue.Id}`]) {\r\n                let currBets = event.market[`id_${marketValue.Id}`];\r\n                let newBet = marketValue.Bets;\r\n                if (currBets?.Bets) newBet = { ...currBets.Bets, ...newBet };\r\n                updatedMarket[Object.keys(updatedMarket)[0]].Bets = newBet;\r\n            }\r\n            newFixture.market = { ...event.market, ...updatedMarket };\r\n        }\r\n        else {\r\n            newFixture.market = event.market;\r\n        }\r\n        if(updatedMatch.sport_event_status){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.sport_event_status);\r\n        }\r\n        else if(updatedMatch.livescore){\r\n            newFixture.Livescore = JSON.parse(updatedMatch.livescore);\r\n        }\r\n        else {\r\n            newFixture.Livescore = event.Livescore;\r\n        }\r\n\r\n        const marketWithDiff2 =  this.marketDifference(newFixture.market, this.state.event.market);\r\n\r\n        newFixture.Markets = { ...marketWithDiff2 };\r\n        newFixture = {...event, ...newFixture};\r\n        this.props.setCurrentEvent(newFixture);\r\n        this.setState({ event: newFixture}, () => {this.props.setExtraMarkets(newFixture.Markets);});\r\n\r\n    }\r\n\r\n    openExtraOddsModal = (fixture, liveStreamAvailable) => {\r\n        // TODO: add the same logic from the Live Page\r\n        \r\n        let liveStatus = fixture.fixture_status;\r\n        this.setState({ event: fixture }, () => {\r\n            if (liveStatus === 2) {\r\n                // this.unsubscribeEvents();\r\n                // this.setState({  });\r\n                this.openExtraOddsModalLiveMatch(fixture, liveStreamAvailable);\r\n                // const collection = this.props.language === `en` ? `d_event` : `d_event_${this.props.language}`;\r\n                // unSub[fixture.FixtureId] = (firebaseDB.collection(collection).doc(`${fixture.FixtureId}`).onSnapshot(this.handleFirebaseUpdates));\r\n\r\n            } else {\r\n                this.setState({ showNonLiveExtraOddsModal: true });\r\n            }\r\n            this.props.setCurrentEvent(fixture);\r\n        });\r\n    };\r\n\r\n    closeExtraOddsModal = () => {\r\n        const matchesByStatus = this.groupMatchesByStatus();\r\n        if(liveMatchSub) liveMatchSub.close();\r\n        if(liveMatchSubAppSync) liveMatchSubAppSync.unsubscribe();\r\n        this.setState({ showNonLiveExtraOddsModal: false, showLiveExtraOddsModal: false  }, () => {\r\n            this.subscribeEvents(matchesByStatus['live']);\r\n        });\r\n    };\r\n\r\n    openStatisticsModal = (fixture) => {\r\n        let isLive = fixture.fixture_status === 2 ? true : false;\r\n        let id = fixture.fixture_id;\r\n        //let statsTemplateType = !isLive ? 'prematch' : 'live';\r\n        if (isLive) this.setState({ showStatisticsModalForLive: true });\r\n        else this.setState({ showStatisticsModalForNonLive: true }); \r\n        this.props.setStatistics(id, 'forMatch', (isLive ? 'live' : 'prematch'));\r\n    };\r\n\r\n    closeStatisticsModal = () => {\r\n        this.setState({ showStatisticsModalForNonLive: false, showStatisticsModalForLive: false });\r\n        this.props.clearStatistics();\r\n    };\r\n\r\n    openLiveStreamModal = (streamURL) => {\r\n        this.unsubscribeEvents();\r\n        this.setState({ liveStreamUrl : streamURL }, () => this.setState({ showLiveStream: true }));\r\n    }\r\n\r\n    closeLiveStreamModal = () => {\r\n        const matchesByStatus = this.groupMatchesByStatus();\r\n        this.unsubscribeEvents();\r\n        this.subscribeEvents(matchesByStatus['live']);\r\n        this.setState({ liveStreamUrl : null, showLiveStream: false });\r\n    }\r\n\r\n    handleTableExpand = () => {\r\n        this.setState((prevState) => ({ expandTable: !prevState.expandTable }),\r\n        () => {\r\n            const { expandTable } = this.state;\r\n            if (expandTable) document.getElementById('side-navbar').classList.add('expand-nav');\r\n            else document.getElementById('side-navbar').classList.remove('expand-nav');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            showNonLiveExtraOddsModal,\r\n            showLiveExtraOddsModal,\r\n            event,\r\n            showStatisticsModalForNonLive,\r\n            loading,\r\n            liveMatches,\r\n            nonLiveMatches,\r\n            showStatisticsModalForLive,\r\n            showLiveStream,\r\n            liveStreamUrl,\r\n            liveStreamData,\r\n        } = this.state;\r\n        let { favorites, loadingFavorites, statisticsType, selectExtraMarket, setExtraMarkets, favoritesLiveMatches, selectedSport } = this.props;\r\n        favorites = [ ...favorites , ...favoritesLiveMatches];\r\n        let favoritesList, liveFavoritesList = null;\r\n        let matchForModal = {};\r\n        let liveMatchesLength = Object.keys(liveMatches).length;\r\n        let nonLiveMatchesLength = Object.keys(nonLiveMatches).length;\r\n        let filteredLiveMatches = filter(liveMatches, (match) => { return !!match.fixture_id; });\r\n        // Filter out the single match for extraOddsModal\r\n        if (showLiveExtraOddsModal) {\r\n            let items = filteredLiveMatches;\r\n            for (let sportId in items) {\r\n                if (!items.hasOwnProperty(sportId)) continue;\r\n                \r\n                if (event.FixtureId === items[sportId].FixtureId) {\r\n                    matchForModal = items[sportId];\r\n                }\r\n            }\r\n        }\r\n        if (favorites && favorites.length > 0) {\r\n            let incompleteList = filter(favorites, (f) => !f.fixture_id);\r\n           // console.log(\">>>>>>>>>>> Incomlete length >>>\", filteredLiveMatches)\r\n            if (incompleteList.length === 0) {\r\n                //loading = false;\r\n                favoritesList =\r\n                    nonLiveMatchesLength > 0 ? (\r\n                        <React.Fragment>\r\n                            <Matches liveStreamData={this.state.liveStreamData} selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={nonLiveMatches} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />\r\n\r\n                            {showNonLiveExtraOddsModal && (\r\n                                <ExtraOddsModal event={event} closeModal={this.closeExtraOddsModal} openStatisticsModal={this.openStatisticsModal} />\r\n                            )}\r\n\r\n                            {showStatisticsModalForNonLive && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />}\r\n                        </React.Fragment>\r\n                    ) : null;\r\n               liveFavoritesList = \r\n                    liveMatchesLength > 0 ? (\r\n                        <React.Fragment>\r\n                            <Matches liveStreamData={this.state.liveStreamData}  selectExtraMarket={selectExtraMarket} setExtraMarkets={setExtraMarkets} events={filteredLiveMatches} openMarketsModal={this.openExtraOddsModal} openStatisticsModal={this.openStatisticsModal} unsubscribeSingleEvents={this.unsubscribeSingleEvents} openLiveStreamModal={this.openLiveStreamModal} />\r\n                        \r\n                            {showLiveExtraOddsModal && (\r\n                                <LiveExtraOddsModal liveMatchURL= {find(this.state.liveStreamData,(e) => e.matchId == event.fixture_id)?.iframe} liveStreamAvailable={this.state.liveStreamAvailable} event={event} closeModal={this.closeExtraOddsModal} openStatisticsModal={this.openStatisticsModal} liveMatch={event} liveStreamData={liveStreamData}/>\r\n                            )}\r\n                            {showLiveStream  && <LiveStreamModal closeModal={this.closeLiveStreamModal} liveStreamMatch={liveStreamUrl} />}\r\n                            {showStatisticsModalForLive && statisticsType === 'forMatch' && <StatisticsModal closeModal={this.closeStatisticsModal} />}\r\n                        </React.Fragment>\r\n                    ) : null;                \r\n            }\r\n        }\r\n\r\n        let drawFavorites =\r\n            loadingFavorites || loading ? <Loading customClass='odds-panel w-100'/> :\r\n            favorites && favorites.length > 0 && (liveMatchesLength > 0 || nonLiveMatchesLength > 0) ? (\r\n                <>\r\n                    {liveFavoritesList}\r\n                    {favoritesList}\r\n                </>\r\n            ) : (\r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan='9'>\r\n                            <div className='no-data fs-15 pt-3 pl-3 pb-3'>\r\n                                No favorites added\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            );\r\n        \r\n        let sportsList = Object.values(staticPrematchSports()).filter(sport => !sport.k_sport && !sport.e_sport);\r\n        sportsList = sortBy(sportsList, ['sort']);\r\n        return <React.Fragment>\r\n            <TopLinks sports={ sportsList }/>            \r\n            <div className=\"middle-part sport-middle d-flex\">\r\n                <div id='side-navbar' className=\"side-navbar fade1 expand-nav\">\r\n                    <nav className=\"side-multilevel\">\r\n                        <div id='item-search' style={{ height: '45px' }}/>\r\n                        {/* <TopLeague /> */}\r\n                        <div id='location-filter' className='' />\r\n                    </nav>\r\n                </div>\r\n                <div id=\"scrollableDiv\" className = \"odds-panel mid-expand\" >\r\n                    <div className=\"table-responsive\">\r\n                        <a className='drawer' href>\r\n                            <i className=\"icon-color\" >\r\n                                <img src=\"/images/rounded.svg\" className='w-75' alt=\"rounded\" />\r\n                            </i>\r\n                            {<span className='ml-3'>{staticPrematchSports()[selectedSport]?.name}</span>}\r\n                        </a>\r\n                        <table className='table mb-0'>\r\n                            <thead>\r\n                                <tr >\r\n                                    <th scope=\"col\">&nbsp;</th>\r\n                                    <th scope=\"col\">&nbsp;</th>\r\n                                    <th scope=\"col\">&nbsp;</th>\r\n                                    <th scope=\"col\">&nbsp;</th>\r\n                                    <MarketHeader mainMarket={MARKET_FOR_OUTER_SLIDER_PREMATCH[selectedSport]} />\r\n                                    <th scope=\"col\">&nbsp;</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {drawFavorites}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <Betslip />\r\n            </div>\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favorites: state.favorites.favorites,\r\n        favoritesLiveMatches: state.favorites.favoritesLiveMatches,\r\n        loadingFavorites: state.favorites.loadingFavorites,\r\n        statisticsType: state.lsportsGlobal.statisticsType,\r\n        language: state.general.language,\r\n        statsData: state.general.statsData,\r\n        selectedSport: state.today.selectedSport,\r\n        dateFilter: state.today.dateFilter,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDateFilter: (value) => dispatch(setDateFilter(value)),\r\n        selectSportMobile: (sportId) => dispatch(selectSportMobile(sportId, true)),\r\n        setCurrentEvent: (event) => dispatch(setCurrentEvent(event)),\r\n        getFavorites: () => dispatch(getFavorites()),\r\n        clearStatistics: () => dispatch(clearStatistics()),\r\n        setExtraMarkets: (market) => dispatch(setExtraMarkets(market)),\r\n        selectExtraMarket: (marketName) => dispatch(selectExtraMarket(marketName)),\r\n        setStatistics: (fixtureId, statsType, statsTemplateType) => dispatch(setStatistics(fixtureId, statsType, statsTemplateType)),\r\n        getStatsData: () => dispatch(getStatsData())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport forEach from 'lodash.foreach';\r\nimport { LazyImage } from '../../Components/Common/ImgLoading';\r\n\r\nfunction Games(props) {\r\n    let { games, playGame, rows } = props;\r\n\r\n    let list = [];\r\n    let list_1 = [];\r\n    let list_2 = [];\r\n     let imageUrl = \"/images/comming_soon.jpg\"\r\n    forEach(games, (game, i) => {\r\n        let singleGame = (\r\n            <li key={game.id}>\r\n                <div className=\"hover-parent\">\r\n                    {/* <LazyBackgroundImage image={game.logo} fallbackImage=\"./images/loading-dark.gif\" className=\"casino-img\" /> */}\r\n                    <LazyImage image={game.imgURL||imageUrl} fallbackImage=\"/images/loading-dark.gif\" className=\"casino-img\" />\r\n                    <div className=\"play-btn\" onClick={() => playGame(game)}>\r\n                        <img src=\"/images/playBtn-en.png\" alt=\"playBtn-en\" />\r\n                    </div>                      \r\n                </div>\r\n            </li>\r\n        );\r\n\r\n        if (rows === 1) {\r\n            list.push(singleGame);\r\n        } else {\r\n            if (i % 2 === 0) {\r\n                list_1.push(singleGame);\r\n            } else {\r\n                list_2.push(singleGame);\r\n            }\r\n\r\n            list = (\r\n                <>\r\n                    <div>{list_1}</div>\r\n                    <div>{list_2}</div>\r\n                </>\r\n            );\r\n        }\r\n    });\r\n\r\n    return <>{list}</>;\r\n}\r\n\r\nGames.propTypes = {\r\n    games: PropTypes.array,\r\n    playGame: PropTypes.func,\r\n    rows: PropTypes.number,\r\n};\r\n\r\nexport default Games;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport {\r\n    setVirtualSportsCategory,\r\n    setVirtualSearchStarted,\r\n    searchVirtualSports,\r\n    clearVirtualSports,\r\n    getVirtualSports,\r\n} from '../../store/actions/casino.actions';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nimport Games from \"./Games\";\r\n\r\nlet timer = 0;\r\n\r\nconst options = {\r\n    items: 9,\r\n    navText: [\r\n        '<span class=\\'nav-btn prev-slide\\'></span>',\r\n        '<span class=\\'nav-btn next-slide\\'></span>'\r\n    ],\r\n    nav: true,\r\n    dots: false,\r\n    autoWidth: true,\r\n};\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getVirtualSports();\r\n        if (this.props.userData !== null) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearVirtualSports();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let { virtualSportsActiveCategory } = this.props;\r\n        this.setState({ isSearchOpen: true });\r\n        this.props.setVirtualSearchStarted(true);\r\n\r\n        if (virtualSportsActiveCategory !== 'All') {\r\n            this.props.setVirtualSportsCategory('All');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setVirtualSearchStarted(false);\r\n        // Reset the search while closing the search bar\r\n        this.props.searchVirtualSports('');\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setVirtualSportsCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchVirtualSports(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    render() {\r\n        let { isSearchOpen, searchVal } = this.state;\r\n        let { virtualSportsActiveCategory, virtualSportsCategories } = this.props;\r\n        // If user is not authorised redirect to home\r\n\r\n        let categories = map(virtualSportsCategories, (category) => {\r\n            let categoryVal = category.value;\r\n            let activeClass = virtualSportsActiveCategory === categoryVal ? 'active' : '';\r\n\r\n            return (\r\n                <a href className={ `${category.value === 'All' ? 'all-' : ''}${activeClass}`} onClick={(e) => this.changeCategory(categoryVal)} key={categoryVal}>\r\n                    <i className={ `${category.icon} pr-1` }  />\r\n                    {category.name}\r\n                </a>\r\n            );\r\n        });\r\n        return null\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    virtualSportsActiveCategory: PropTypes.string,\r\n    setVirtualCasinoGames: PropTypes.func,\r\n    clearVirtualSports: PropTypes.func,\r\n    setVirtualSportsCategory: PropTypes.func,\r\n    setVirtualSearchStarted: PropTypes.func,\r\n    searchVirtualSports: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    virtualSportsCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        virtualSportsActiveCategory: state.casino.virtualSportsActiveCategory,\r\n        virtualSportsCategories: state.casino.virtualSportsCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getVirtualSports: () => dispatch(getVirtualSports()),\r\n        clearVirtualSports: () => dispatch(clearVirtualSports()),\r\n        setVirtualSportsCategory: (category) => dispatch(setVirtualSportsCategory(category)),\r\n        setVirtualSearchStarted: (value) => dispatch(setVirtualSearchStarted(value)),\r\n        searchVirtualSports: (value) => dispatch(searchVirtualSports(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport map from 'lodash.map';\r\nimport groupBy from 'lodash.groupby';\r\nimport forEach from 'lodash.foreach';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport Login from '../../Components/Login';\r\nimport { getVirtualSportsData } from '../../store/actions/casino.actions';\r\nimport LoaderLiveCasino from '../../Components/Common/LoaderLiveCasino';\r\nimport {LazyImage} from \"../../Components/Common/ImgLoading\";\r\n\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('casino_url') !== '') {\r\n            sessionStorage.setItem('casino_url', '');\r\n            window.location.reload(false)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        if(!this.props.isShowCasino  ) {\r\n            this.props.history.push('/d')\r\n        }\r\n        if(this.props.userData && !this.props.userData.is_casino_enabled) {\r\n            this.props.history.push('/d')\r\n        }\r\n    }\r\n\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    playGame = (game) => {\r\n        if (this.isLoggedIn()) {\r\n            let history = this.props.history;\r\n            this.props.getVirtualSportsData(game, history);\r\n        } else {\r\n            this.setState({ showLogin: true });\r\n        }\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({ showLogin: true });\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n    render() {\r\n        let { showLogin } = this.state;\r\n        let { virtualSports, filteredVirtualSports, loadingVirtualSports, noVirtualSearchResult } = this.props;\r\n        let virtualSportsList = noVirtualSearchResult ? [] : filteredVirtualSports.length > 0 ? filteredVirtualSports : virtualSports;\r\n        let groupedByCategory =\r\n            virtualSportsList &&\r\n            virtualSportsList[0] &&\r\n            groupBy(virtualSportsList, function (game) {\r\n                return `${game.category}`;\r\n            });\r\n\r\n        let groupedByCategoryAndCompany = {};\r\n\r\n        forEach(groupedByCategory, (group, category) => {\r\n            let gamesGroup = groupBy(group, function (game) {\r\n                return `${game.provider}`;\r\n            });\r\n\r\n            groupedByCategoryAndCompany[category] = gamesGroup;\r\n        });\r\n\r\n\r\n         let imageUrl = \"/images/comming_soon.jpg\"\r\n        let gameList =\r\n\r\n                       map(virtualSportsList, (game, company) => {\r\n\r\n                          return (\r\n\r\n                                  <li className=\"virtual-list-li\" key={game.id}>\r\n                                      <div className=\"hover-parent virtual-sport-list\">\r\n                                          {/* <LazyBackgroundImage image={game.logo} fallbackImage=\"./images/loading-dark.gif\" className=\"casino-img\" /> */}\r\n                                          <div className=\"play-btn\" onClick={() => this.playGame(game)}>\r\n                                              <LazyImage image={game.imgURL||imageUrl} fallbackImage=\"/images/loading-dark.gif\"  className=\"casino-img\"/>\r\n                                              {/*<img src=\"/images/playBtn-en.png\" />*/}\r\n                                          </div>\r\n                                      </div>\r\n                                  </li>\r\n\r\n                              \r\n                          );\r\n                      });\r\n\r\n        return loadingVirtualSports ? (\r\n            <Loading customClass='casino-loader'/>\r\n        ) : virtualSportsList.length > 0 ? (\r\n            <>\r\n                <div className=\"casino-game-parent pl-40 pr-40 clearfix mb-2\">\r\n                    {this.props.loading ? <LoaderLiveCasino /> : <div className=\"casino-box-virtual-sport\">{gameList}</div> }</div>\r\n\r\n                {showLogin && <Login hideLogin={this.hideLogin} />}\r\n            </>\r\n        ) : (\r\n            <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n        );\r\n    }\r\n}\r\n\r\nGameList.propTypes = {\r\n    virtualSports: PropTypes.array,\r\n    filteredVirtualSports: PropTypes.array,\r\n    loadingVirtualSports: PropTypes.bool,\r\n    noVirtualSearchResult: PropTypes.bool,\r\n    userData: PropTypes.object,\r\n    getVirtualSportsData: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        virtualSports: state.casino.virtualSports,\r\n        filteredVirtualSports: state.casino.filteredVirtualSports,\r\n        loadingVirtualSports: state.casino.loadingVirtualSports,\r\n        noVirtualSearchResult: state.casino.noVirtualSearchResult,\r\n        userData: state.user.data,\r\n        loading: state.general.loading,\r\n        isShowCasino : state.general.isShowCasino\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getVirtualSportsData: (id, history) => dispatch(getVirtualSportsData(id, history)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, { Component } from 'react';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nclass VirtualSports extends Component {\r\n\r\n    componentDidMount() {\r\n        if(Util.isLoggedIn())\r\n        this.props.getLobbyURL();\r\n        }\r\n\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n      this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='casino-body live-casino'>\r\n                    {/*{this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <LoadingIcon />}*/}\r\n                    <div className=\"casino-bg live casino-parent-div\">\r\n                        <div className=\"banner-categories\">\r\n                            {/*<Banner />*/}\r\n\r\n                        </div>\r\n                        <div className=\"virtual-sports-category\">\r\n                            <Categories />\r\n                        </div>\r\n\r\n                        <div className='d-table w-100'>\r\n                            <GameList />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser: () =>dispatch(getUser()),\r\n        setCasinoLobby:(value)=>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VirtualSports);\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport forEach from 'lodash.foreach';\r\nimport find from 'lodash.find';\r\nimport flattenDepth from 'lodash.flattendepth';\r\nimport { connect } from 'react-redux';\r\nimport { updateInplayEventsMarket, updateInplayEventsLivescore, updateInplayEventsStatus } from '../store/actions/inplayActions';\r\nimport { updatePrematchEventsMarket, updatePrematchEventsLivescore, updatePrematchEventsStatus } from '../store/actions/prematchActions';\r\nimport { updateLastMinuteEventsMarket, updateLastMinuteEventsStatus } from '../store/actions/lastMinuteActions';\r\nimport { updateTodayEventsMarket, updateTodayEventsStatus } from '../store/actions/todayActions';\r\nimport { updateHomeEventsMarket, updateHomeEventsStatus } from '../store/actions/home.actions';\r\nimport { updateExtraMarketsEventsMarket, updateExtraMarketsEventsLivescore } from '../store/actions/lsports.global.actions';\r\nimport { updateBetslipEventsMarket, updateBetslipEventsLivescore, updateBetslipEventsStatus } from '../store/actions/betslip.actions';\r\nimport { updateFavoritesEventsMarket, updateFavoritesEventsLivescore, updateFavoritesEventsStatus } from '../store/actions/favorites.actions';\r\n\r\nclass LsportsAMQ extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ws: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connect();\r\n    }\r\n\r\n    timeout = 250;\r\n\r\n    connect = () => {\r\n        var ws = new WebSocket('wss://shop.turksbet.com/ws/socket.io/');\r\n        // cache the this\r\n        let that = this;\r\n        var connectInterval;\r\n\r\n        // websocket onopen event listener\r\n        ws.onopen = () => {\r\n            console.log('******CONNECTED LSPORTS SOCKET******');\r\n            this.setState({ ws: ws });\r\n            // reset timer to 250 on open of websocket connection\r\n            that.timeout = 250;\r\n            // clear Interval on on open of websocket connection\r\n            clearTimeout(connectInterval);\r\n        };\r\n\r\n        // websocket onclose event listener\r\n        ws.onclose = (e) => {\r\n            console.log(\r\n                `******CLOSED LSPORTS SOCKET******. Reconnect will be attempted in ${Math.min(10000 / 1000, (that.timeout + that.timeout) / 1000)} second.`,\r\n                e.reason,\r\n            );\r\n            //increment retry interval\r\n            that.timeout = that.timeout + that.timeout;\r\n            //call check function after timeout\r\n            connectInterval = setTimeout(this.check, Math.min(10000, that.timeout));\r\n            ws.close();\r\n        };\r\n\r\n        // websocket onerror event listener\r\n        ws.onerror = (err) => {\r\n            console.error('******ERROR LSPORTS SOCKET******', err.message);\r\n            ws.close();\r\n        };\r\n\r\n        ws.onmessage = function (e) {\r\n            const data = JSON.parse(e.data);\r\n            if (data.type === 'market.delta') {\r\n                let messageType = JSON.parse(data.content).Header.Type;\r\n                if (messageType === 2) {\r\n                    // Livescore update\r\n                } else if (messageType === 3) {\r\n                    // Market update\r\n                } else if (messageType === 1) {\r\n                    // Fixture metadata update\r\n                } else if (messageType === 7) {\r\n                    // Markets\r\n                } else if (messageType === 0) {\r\n                    // Full event\r\n                }\r\n\r\n                let new_events = JSON.parse(data.content).Body.Events;\r\n                let {\r\n                    mainEventsInplay,\r\n                    mainFilteredEventsInplay,\r\n                    mainEventsPrematch,\r\n                    mainEventsLastMinute,\r\n                    mainFilteredEventsLastMinute,\r\n                    mainEventsToday,\r\n                    mainFilteredEventsToday,\r\n                    mainEventsHome,\r\n                    extraMarkets,\r\n                    extraMarketEvent,\r\n                    betslipEvents,\r\n                    favorites,\r\n                } = that.props;\r\n                let inplayEvents = mainFilteredEventsInplay.length > 0 ? mainFilteredEventsInplay : mainEventsInplay;\r\n                let lastMinuteEvents = mainFilteredEventsLastMinute.length > 0 ? mainFilteredEventsLastMinute : mainEventsLastMinute;\r\n                let todayEvents = mainFilteredEventsToday.length > 0 ? mainFilteredEventsToday : mainEventsToday;\r\n\r\n                // update Betslip events\r\n                if (betslipEvents.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(betslipEvents, { fixtureId: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.markets);\r\n\r\n                            let new_livescore = event.Livescore;\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateBetslipEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Livescore update\r\n                            if (new_livescore) {\r\n                                that.props.updateBetslipEventsLivescore(new_events);\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updateBetslipEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Inplay events\r\n                if (inplayEvents.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(inplayEvents, { fixture_id: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.market);\r\n\r\n                            let new_livescore = event.Livescore;\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateInplayEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Livescore update\r\n                            if (new_livescore) {\r\n                                that.props.updateInplayEventsLivescore(new_events);\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updateInplayEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Prematch events\r\n                if (mainEventsPrematch.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(mainEventsPrematch, { fixture_id: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.market);\r\n\r\n                            let new_livescore = event.Livescore;\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updatePrematchEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Livescore update\r\n                            if (new_livescore) {\r\n                                that.props.updatePrematchEventsLivescore(new_events);\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updatePrematchEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Last Minute events\r\n                if (lastMinuteEvents.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(lastMinuteEvents, { fixture_id: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.market);\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateLastMinuteEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updateLastMinuteEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Today events\r\n                if (todayEvents.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(todayEvents, { fixture_id: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.market);\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateTodayEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updateTodayEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Home events\r\n                if (mainEventsHome.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(mainEventsHome, { fixture_id: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.market);\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateHomeEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updateHomeEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Extra markets\r\n                if (Object.keys(extraMarkets).length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = extraMarketEvent.fixture_id === event.FixtureId ? true : false;\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(extraMarkets);\r\n                            let old_markets_flattened = flattenDepth(old_markets, 2);\r\n\r\n                            let new_livescore = event.Livescore;\r\n\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets_flattened, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateExtraMarketsEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            if (new_livescore) {\r\n                                that.props.updateExtraMarketsEventsLivescore(new_events);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // update Favorites events\r\n                if (favorites.length > 0) {\r\n                    forEach(new_events, (event) => {\r\n                        let changed_fixture = find(favorites, { fixture_id: event.FixtureId });\r\n\r\n                        if (changed_fixture) {\r\n                            let new_markets = event.Markets;\r\n                            let old_markets = Object.values(changed_fixture.market);\r\n\r\n                            let new_livescore = event.Livescore;\r\n\r\n                            // Market update\r\n                            if (new_markets) {\r\n                                forEach(new_markets, (market) => {\r\n                                    let changed_market = find(old_markets, { Id: market.Id });\r\n\r\n                                    if (changed_market) {\r\n                                        that.props.updateFavoritesEventsMarket(new_events);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            // Livescore update\r\n                            if (new_livescore) {\r\n                                that.props.updateFavoritesEventsLivescore(new_events);\r\n                            }\r\n\r\n                            // Fixture metadata update\r\n                            if (messageType === 1) {\r\n                                let new_status = event.Fixture && event.Fixture.Status;\r\n                                if (new_status) {\r\n                                    that.props.updateFavoritesEventsStatus(new_events);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    // utilited by the function connect to check if the connection is close, if so attempts to reconnect\r\n    check = () => {\r\n        const { ws } = this.state;\r\n        // check if websocket instance is closed, if so call `connect` function.\r\n        if (!ws || ws.readyState === WebSocket.CLOSED) {\r\n            this.connect();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment children={this.props.children} />;\r\n    }\r\n}\r\n\r\nLsportsAMQ.propTypes = {\r\n    updateInplayEventsMarket: PropTypes.func,\r\n    updateInplayEventsLivescore: PropTypes.func,\r\n    updateInplayEventsStatus: PropTypes.func,\r\n    updatePrematchEventsMarket: PropTypes.func,\r\n    updatePrematchEventsLivescore: PropTypes.func,\r\n    updatePrematchEventsStatus: PropTypes.func,\r\n    updateLastMinuteEventsMarket: PropTypes.func,\r\n    updateLastMinuteEventsStatus: PropTypes.func,\r\n    updateTodayEventsMarket: PropTypes.func,\r\n    updateTodayEventsStatus: PropTypes.func,\r\n    updateHomeEventsMarket: PropTypes.func,\r\n    updateHomeEventsStatus: PropTypes.func,\r\n    updateExtraMarketsEventsMarket: PropTypes.func,\r\n    updateExtraMarketsEventsLivescore: PropTypes.func,\r\n    updateBetslipEventsMarket: PropTypes.func,\r\n    updateBetslipEventsLivescore: PropTypes.func,\r\n    updateBetslipEventsStatus: PropTypes.func,\r\n    updateFavoritesEventsMarket: PropTypes.func,\r\n    updateFavoritesEventsLivescore: PropTypes.func,\r\n    updateFavoritesEventsStatus: PropTypes.func,\r\n    mainEventsInplay: PropTypes.array,\r\n    mainFilteredEventsInplay: PropTypes.array,\r\n    mainEventsPrematch: PropTypes.array,\r\n    mainEventsLastMinute: PropTypes.array,\r\n    mainFilteredEventsLastMinute: PropTypes.array,\r\n    mainEventsToday: PropTypes.array,\r\n    mainFilteredEventsToday: PropTypes.array,\r\n    mainEventsHome: PropTypes.array,\r\n    extraMarkets: PropTypes.object,\r\n    extraMarketEvent: PropTypes.object,\r\n    betslipEvents: PropTypes.array,\r\n    favorites: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainEventsInplay: state.inplay.mainEvents,\r\n        mainFilteredEventsInplay: state.inplay.filteredEvents,\r\n        mainEventsPrematch: state.prematch.mainEvents,\r\n        mainEventsLastMinute: state.lastMinute.mainEvents,\r\n        mainFilteredEventsLastMinute: state.lastMinute.filteredEvents,\r\n        mainEventsToday: state.today.mainEvents,\r\n        mainFilteredEventsToday: state.today.filteredEvents,\r\n        mainEventsHome: state.home.mainEvents,\r\n        extraMarkets: state.lsportsGlobal.extraMarkets,\r\n        extraMarketEvent: state.lsportsGlobal.extraMarketEvent,\r\n        betslipEvents: state.betslip.fixtures,\r\n        favorites: state.favorites.favorites,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateInplayEventsMarket: (events) => dispatch(updateInplayEventsMarket(events)),\r\n        updateInplayEventsLivescore: (events) => dispatch(updateInplayEventsLivescore(events)),\r\n        updateInplayEventsStatus: (events) => dispatch(updateInplayEventsStatus(events)),\r\n        updatePrematchEventsMarket: (events) => dispatch(updatePrematchEventsMarket(events)),\r\n        updatePrematchEventsLivescore: (events) => dispatch(updatePrematchEventsLivescore(events)),\r\n        updatePrematchEventsStatus: (events) => dispatch(updatePrematchEventsStatus(events)),\r\n        updateLastMinuteEventsMarket: (events) => dispatch(updateLastMinuteEventsMarket(events)),\r\n        updateLastMinuteEventsStatus: (events) => dispatch(updateLastMinuteEventsStatus(events)),\r\n        updateTodayEventsMarket: (events) => dispatch(updateTodayEventsMarket(events)),\r\n        updateTodayEventsStatus: (events) => dispatch(updateTodayEventsStatus(events)),\r\n        updateHomeEventsMarket: (events) => dispatch(updateHomeEventsMarket(events)),\r\n        updateHomeEventsStatus: (events) => dispatch(updateHomeEventsStatus(events)),\r\n        updateExtraMarketsEventsMarket: (events) => dispatch(updateExtraMarketsEventsMarket(events)),\r\n        updateExtraMarketsEventsLivescore: (events) => dispatch(updateExtraMarketsEventsLivescore(events)),\r\n        updateBetslipEventsMarket: (events) => dispatch(updateBetslipEventsMarket(events)),\r\n        updateBetslipEventsLivescore: (events) => dispatch(updateBetslipEventsLivescore(events)),\r\n        updateBetslipEventsStatus: (events) => dispatch(updateBetslipEventsStatus(events)),\r\n        updateFavoritesEventsMarket: (events) => dispatch(updateFavoritesEventsMarket(events)),\r\n        updateFavoritesEventsLivescore: (events) => dispatch(updateFavoritesEventsLivescore(events)),\r\n        updateFavoritesEventsStatus: (events) => dispatch(updateFavoritesEventsStatus(events)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LsportsAMQ);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from './actions/user.actions';\r\nimport {\r\n    updateBets,\r\n    clearBets,\r\n    setPlaceBetError,\r\n    setBetPlacedMessage,\r\n    setLastBetslipId,\r\n    setPlaceBetSuccess,\r\n    setPlaceBetCountdown,\r\n    setBetslipLoading,\r\n} from './actions/betslip.actions';\r\n\r\nclass UserAMQ extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ws: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connect();\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (prevprops.userData !== this.props.userData) {\r\n            this.connect();\r\n        }\r\n    }\r\n\r\n    timeout = 250;\r\n\r\n    connect = () => {\r\n        let username = this.props.userData && this.props.userData.username;\r\n\r\n        if (username) {\r\n            var ws = new WebSocket(`wss://shop.turksbet.com/ws/${username}/`);\r\n            // cache the this\r\n            let that = this;\r\n            var connectInterval;\r\n\r\n            // websocket onopen event listener\r\n            ws.onopen = () => {\r\n                console.log('******CONNECTED USER SOCKET******');\r\n                this.setState({ ws: ws });\r\n                // reset timer to 250 on open of websocket connection\r\n                that.timeout = 250;\r\n                // clear Interval on on open of websocket connection\r\n                clearTimeout(connectInterval);\r\n            };\r\n\r\n            // websocket onclose event listener\r\n            ws.onclose = (e) => {\r\n                console.log(\r\n                    `******CLOSED USER SOCKET******. Reconnect will be attempted in ${Math.min(10000 / 1000, (that.timeout + that.timeout) / 1000)} second.`,\r\n                    e.reason,\r\n                );\r\n                //increment retry interval\r\n                that.timeout = that.timeout + that.timeout;\r\n                //call check function after timeout\r\n                connectInterval = setTimeout(this.check, Math.min(10000, that.timeout));\r\n                ws.close();\r\n            };\r\n\r\n            // websocket onerror event listener\r\n            ws.onerror = (err) => {\r\n                console.error('******ERROR USER SOCKET******', err.message);\r\n                ws.close();\r\n            };\r\n\r\n            ws.onmessage = function (e) {\r\n                const data = JSON.parse(e.data);\r\n\r\n                if (data.type === 'player.message') {\r\n                    let msg = JSON.parse(data.content);\r\n\r\n                    if (msg.status === 200) {\r\n                        let id = msg.betslip_id[0];\r\n                        that.props.setLastBetslipId(id); // Set last placed betslip id\r\n                        that.props.setPlaceBetSuccess(false);\r\n                        that.props.setPlaceBetCountdown(false);\r\n                        that.props.setBetPlacedMessage(true); // Bet placed\r\n                        that.props.setBetslipLoading(false);\r\n                        that.props.clearBets();\r\n                        that.props.getUser();\r\n\r\n                        setTimeout(() => {\r\n                            that.props.setBetPlacedMessage(false); // Hide bet placed message\r\n                        }, 3000);\r\n                    } else if (msg.status === 406) {\r\n                        that.props.setPlaceBetError(msg.message); // Show balance error\r\n                        that.props.setPlaceBetCountdown(false);\r\n                        that.props.setBetslipLoading(false);\r\n                    } else if (msg.status === 423) {\r\n                        let bets = msg.body;\r\n                        if (bets.length > 0) {\r\n                            that.props.setPlaceBetCountdown(false);\r\n                            that.props.updateBets(bets); // Bet error list\r\n                            that.props.setBetslipLoading(false);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    };\r\n\r\n    // utilited by the function connect to check if the connection is close, if so attempts to reconnect\r\n    check = () => {\r\n        const { ws } = this.state;\r\n        // check if websocket instance is closed, if so call `connect` function.\r\n        if (!ws || ws.readyState === WebSocket.CLOSED) {\r\n            this.connect();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment children={this.props.children} />;\r\n    }\r\n}\r\n\r\nUserAMQ.propTypes = {\r\n    userData: PropTypes.object,\r\n    updateBets: PropTypes.func,\r\n    setPlaceBetError: PropTypes.func,\r\n    clearBets: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    setBetPlacedMessage: PropTypes.func,\r\n    setLastBetId: PropTypes.func,\r\n    setPlaceBetCountdown: PropTypes.func,\r\n    setPlaceBetSuccess: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateBets: (bets) => dispatch(updateBets(bets)),\r\n        setPlaceBetError: (error) => dispatch(setPlaceBetError(error)),\r\n        clearBets: () => dispatch(clearBets()),\r\n        getUser: () => dispatch(getUser()),\r\n        setBetPlacedMessage: (value) => dispatch(setBetPlacedMessage(value)),\r\n        setLastBetslipId: (value) => dispatch(setLastBetslipId(value)),\r\n        setPlaceBetSuccess: (value) => dispatch(setPlaceBetSuccess(value)),\r\n        setPlaceBetCountdown: (value) => dispatch(setPlaceBetCountdown(value)),\r\n        setBetslipLoading: (value) => dispatch(setBetslipLoading(false)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAMQ);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PromotionDetails() {\r\n    return (\r\n        <div className=\"promotion_details\">\r\n            <ul>\r\n                <li>\r\n                    <Link to='/d/privacy-policy'>\r\n                        <img src='/images/promotion/about-icon.svg' alt=\"about-icon\" />\r\n                        <span><b>About us</b></span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <a href=\"mailto:info@w3docs.com?cc=secondemail@example.com\">\r\n                    <img src='/images/promotion/contact-icon.svg' alt=\"contact-icon\" />\r\n                    <span><b>Contact us</b></span>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <Link to='/d/terms-and-conditions'>\r\n                        <img src='/images/promotion/terms-icon.svg' alt=\"terms-icon\" />\r\n                        <span><b>Terms and Conditions</b></span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <img src='/images/promotion/payment-icon.svg' alt=\"payment-icon\" />\r\n                    <span><b>Payments</b></span>\r\n                </li>\r\n                <li>\r\n                    <Link to='/d/privacy-policy'>\r\n                        <img src='/images/promotion/how-icon.svg' alt=\"how-icon\" />\r\n                        <span><b>How to place bet</b></span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PromotionDetails;\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nfunction PromotionBanners(props) {\r\n    return (\r\n        <div className='odds-panel_promotion'>\r\n            {props.bannerImages.map((data) => {\r\n            return(\r\n                <>\r\n                    <img src={data.image_url} alt=\"promotion-banner\" className=\"Promotion_banner\" />\r\n                   <Link to ={`/d/promotion/${data.url}`}> <Button className=\"find-more_btn\"><b>FIND OUT MORE</b></Button></Link>\r\n                </>\r\n            );\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        bannerImages: state.promotion.bannerImages,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,null)(PromotionBanners);\r\n","import React from 'react';\r\nimport PromotionDetails from './PromotionDetails';\r\nimport PromotionBanners from './PromotionBanners';\r\nimport Sports from '../Home/Sports';\r\n\r\nfunction Promotion() {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <TopLinks />                */}\r\n            <div className=\"middle-part sport-middle d-flex\">\r\n                <div id='side-navbar' className=\"side-navbar fade1\">\r\n                    <nav className=\"side-multilevel\">\r\n                        <Sports />\r\n                    </nav>\r\n                </div>\r\n                <PromotionBanners/>\r\n                <PromotionDetails />\r\n            </div>               \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default Promotion\r\n","import React from 'react'\r\n\r\nfunction PrivacyPolicy() {\r\n    return (\r\n        <div className=\"privacy text-center mt-3\">\r\n            <h3><b>Privacy Policy</b></h3>\r\n            <p>\r\n               Dummy Text.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrivacyPolicy\r\n","import React from 'react'\r\n\r\nfunction TermsAndConditions() {\r\n    return (\r\n        <div className=\"privacy text-center mt-3\">\r\n            <h3><b>Terms of Use</b></h3>\r\n            <p>\r\n               Dummy Text.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsAndConditions\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst FirstDepositBonus = () => {\r\n  \r\n  return (\r\n    \r\n      <div className='result-content'>\r\n        <h1 className='breadcrumb mb-0 pt-0'>\r\n          <Link to='/d/promotion'>\r\n            Promotion\r\n          </Link>\r\n          <label>\r\n            First Deposit Bonus\r\n          </label>\r\n        </h1>\r\n        <div className='banner-card-wrap'>\r\n          <div className='banner-card'>\r\n            <img src='/images/promotion/banner-8.png' alt=\"banner-8\" />\r\n          </div>\r\n        </div>\r\n        <div className='heading-wrap d-flex align-items-center justify-content-between'>\r\n          <h2>First Deposit Bonus!</h2>\r\n        </div>\r\n        <section className='theme-card mt-3'>\r\n          <div style={ { color: 'white', textAlign: 'left' } }>\r\n          Dummy Text.\r\n          </div>\r\n        </section>\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default FirstDepositBonus","import React from 'react';\r\nimport FirstDepositBonusResult from './FirstDepositBonusResult';\r\nimport TopLinks from '../../TopLinks';\r\nimport TopLeague from '../../TopLeague';\r\nimport PromotionDetails from '../PromotionDetails';\r\nimport Sports from '../../Home/Sports';\r\n\r\nfunction FirstDepositBonus() {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <TopLinks />                */}\r\n            <div className=\"middle-part sport-middle d-flex\">\r\n                <div id='side-navbar' className=\"side-navbar fade1\">\r\n                    <nav className=\"side-multilevel\">\r\n                        <Sports />\r\n                    </nav>\r\n                </div>\r\n                <FirstDepositBonusResult/>\r\n                <PromotionDetails />\r\n            </div>               \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default FirstDepositBonus;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ChampionsLeagueRules = () => {\r\n  return (\r\n    \r\n      <div className='result-content'>\r\n        <h1 className='breadcrumb mb-0 pt-0'>\r\n          <Link to='/d/promotion'>\r\n            Promotion\r\n          </Link>\r\n          <label>\r\n            Champions League\r\n          </label>\r\n        </h1>\r\n        <div className='banner-card-wrap'>\r\n          <div className='banner-card'>\r\n            <img src='/images/promotion/banner-7.png' alt=\"banner-7\" />\r\n          </div>\r\n        </div>\r\n        <div className='heading-wrap d-flex align-items-center justify-content-between'>\r\n          <h2>Champion Bet</h2>\r\n        </div>\r\n        <section className='theme-card mt-3'>\r\n          <div style={ { color: 'white', textAlign: 'left' } }>\r\n            <p style={ { fontSize: '20px' } }><b>How to take part</b></p>\r\n           Dummy Text\r\n          </div>\r\n        </section>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ChampionsLeagueRules","import React from 'react';\r\nimport PromotionDetails from '../PromotionDetails';\r\nimport ChampionsLeagueRulesResult from './ChampionsLeagueRulesResult';\r\nimport Sports from '../../Home/Sports';\r\nfunction ChampionsLeagueRules() {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <TopLinks />           */}\r\n            <div className=\"middle-part sport-middle d-flex\">\r\n                <div id='side-navbar' className=\"side-navbar fade1\">\r\n                    <nav className=\"side-multilevel\">\r\n                        <Sports />\r\n                    </nav>\r\n                </div>\r\n                <ChampionsLeagueRulesResult/>\r\n                <PromotionDetails />\r\n            </div>               \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ChampionsLeagueRules;\r\n","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst TakeItAllResult = () => {\r\n  const history = useHistory()\r\n  return (\r\n      <div className='result-content'>\r\n        <h1 className='breadcrumb mb-0 pt-0'>\r\n          <Link to='/d/promotion'>\r\n            Promotion\r\n          </Link>\r\n          <label>\r\n            Take it All\r\n          </label>\r\n        </h1>\r\n        <div className='banner-card-wrap'>\r\n          <div className='banner-card'>\r\n            <img src='/images/promotion/banner-9.png' alt=\"banner-9\" />\r\n          </div>\r\n        </div>\r\n        <div className='heading-wrap d-flex align-items-center justify-content-between'>\r\n          <h2>BE A WINNER AND TAKE IT ALL</h2>\r\n        </div>\r\n        <section className='theme-card mt-3'>\r\n          <div style={ { color: 'white', textAlign: 'left' } }>\r\n            <p style={ { fontSize: '20px' } }><b>TO BE WON</b></p>\r\n            Dummy Text.\r\n            <a href='javascript:void(0);' className='btn btn-primary text-uppercase' onClick={ () => history.push('/d') }>Place a Bet</a>\r\n\r\n          </div>\r\n        </section>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TakeItAllResult","import React from 'react';\r\nimport PromotionDetails from '../PromotionDetails';\r\nimport TakeItAllResult from './TakeItAllResult';\r\nimport Sports from '../../Home/Sports';\r\n\r\nfunction FirstDepositBonus() {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <TopLinks />     */}\r\n            <div className=\"middle-part sport-middle d-flex\">\r\n                <div id='side-navbar' className=\"side-navbar fade1\">\r\n                    <nav className=\"side-multilevel\">\r\n                        <Sports />\r\n                    </nav>\r\n                </div>\r\n                <TakeItAllResult/>\r\n                <PromotionDetails />\r\n            </div>               \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default FirstDepositBonus;\r\n","import React from 'react';\r\nimport { buttonList } from './data.json';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Translate } from '../../localization/index.js';\r\n\r\nconst ContactDetails = () => {\r\n\r\n  return (\r\n      <div className='result-content'>\r\n          <div className='heading-wrap d-flex align-items-center justify-content-between mb-2 mt-2'>\r\n              <h2>{ Translate.customerServicePage }</h2>\r\n          </div>\r\n          <section className='theme-card mt-3'>\r\n              <div>\r\n                  <Grid container className='contact-cards-gap d-md-flex flex-wrap p-5'>\r\n                      {buttonList.map((button) => (\r\n                          <Grid item lg={ 3 } md={ 4 }className='px-2'>\r\n                              <a key={ button.key } href='javascript:void(0);' className={ `left-content ${ button.className }` }>\r\n                                  <div className='sub-icon-wrap'>\r\n                                      <img src={ button.img } />\r\n                                  </div>\r\n                                  <div>{button.label}</div>\r\n                              </a>\r\n                          </Grid>\r\n            ))}\r\n                  </Grid>\r\n              </div>\r\n\r\n          </section>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n","import React from 'react';\r\nimport { Translate } from '../../localization';\r\n\r\nconst  PromotionDetails= () =>{\r\n    return (\r\n        <div className=\"promotion_details\">\r\n            <ul>\r\n                <li>\r\n                    <img src='/images/about-icon.svg' alt=\"about-icon\" />\r\n                    <span><b>{ Translate.aboutUs }</b></span>\r\n                </li>\r\n                <li>\r\n                    <a href=\"mailto:info@w3docs.com?cc=secondemail@example.com\">\r\n                        <img src='/images/contact-icon.svg' alt=\"contact-icon\" />\r\n                        <span><b>{ Translate.contactUs }</b></span>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <img src='/images/terms-icon.svg' alt=\"terms-icon\" />\r\n                    <span><b>{ Translate.termsAndConditon}</b></span>\r\n                </li>\r\n                <li>\r\n                    <img src='/images/payment-icon.svg' alt=\"payment-icon\" />\r\n                    <span><b>{ Translate.payments}</b></span>\r\n                </li>\r\n                <li>\r\n                    <img src='/images/today-img.svg' alt=\"how-icon\" />\r\n                    <span><b>{ Translate.howPlacebet}</b></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromotionDetails;\r\n","import React  from 'react';\r\nimport TopLinks from '../TopLinks';\r\nimport SportList from '../Home/Sports.js';\r\nimport CustomerServiceDetails from './CustomerServiceDeatils.js';\r\nimport PromotionDetails from './PromotionDetails.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CustomerService = () =>{\r\n     return (\r\n         <React.Fragment>\r\n             <TopLinks />               \r\n             <div className=\"middle-part sport-middle d-flex\">\r\n                 <div id='side-navbar' className=\"side-navbar fade1\">\r\n                     <nav className=\"side-multilevel\">\r\n                         <SportList />\r\n                     </nav>\r\n                 </div>\r\n                 <CustomerServiceDetails/>\r\n                 <PromotionDetails/>\r\n             </div>               \r\n         </React.Fragment>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.general.language,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerService);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport { getGGCasinoGames, setCasinoActiveCategory, setSearchStarted, searchCasino, clearCasinoGames } from '../../store/actions/casino.actions';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nlet timer = 0;\r\n\r\nconst options = {\r\n    items: 4,\r\n    navText: ['<div className=\\'nav-btn prev-slide\\'></div>','<div className=\\'nav-btn next-slide\\'></div>'],\r\n    nav: true,\r\n    dots: false\r\n};\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getGGCasinoGames();\r\n        if (this.props.userData !== null) {\r\n            this.props.getUser();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.clearCasinoGames();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let { activeCategory } = this.props;\r\n        this.setState({ isSearchOpen: true });\r\n        this.props.setSearchStarted(true);\r\n\r\n        if (activeCategory !== 'all') {\r\n            this.props.setCasinoActiveCategory('all');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setSearchStarted(false);\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setCasinoActiveCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchCasino(value);\r\n        }, requestDelay);\r\n    };\r\n    capitalize = (string) =>{\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n  };\r\n\r\n    render() {\r\n        let { isSearchOpen, searchVal } = this.state;\r\n        let { activeCategory, casinoCategories } = this.props;\r\n\r\n        let categories = map(casinoCategories, (category, i) => {\r\n            // let activeClass = activeCategory === category.value ? 'active' : '';\r\n            let activeClass = activeCategory.toLowerCase() === category.value.toLowerCase() ? 'active' : '';\r\n\r\n\r\n            let buffer = [];\r\n\r\n            if (category.value === 'netent') {\r\n                buffer.push(\r\n\r\n                    <a href=\"/d/new-casino\" className={ `w-100 ${category.value === 'All' ? 'all-' : ''}${activeClass}`} onClick={(e) => this.changeCategory(category.value)} key={category.value}>\r\n                        {category.value === 'All' && <i className=\"icon-all pr-2\"  />}\r\n                        {this.capitalize(Translate.pragmaticPlay)}\r\n                    </a>\r\n                );\r\n            }\r\n\r\n            buffer.push(\r\n\r\n                <a href className={ `w-100 ${category.value === 'All' ? 'all-' : ''}${activeClass}`} onClick={(e) => this.changeCategory(category.value)} key={category.value}>\r\n                    {category.value === 'All' && <i className=\"icon-all pr-2\"  />}\r\n                    {this.capitalize(category.value)}\r\n                </a>\r\n            );\r\n\r\n            return (<>{buffer}</>);\r\n\r\n        });\r\n        return (\r\n            <div className=\"categories\">\r\n                {isSearchOpen ? (\r\n                    <div className=\"tab\">\r\n                        <div className=\"sports__search-bar\">\r\n                            <input\r\n                                    type=\"text\"\r\n                                    className=\"ml-2 sports__search-input w-100\"\r\n                                    autoFocus\r\n                                    placeholder={Translate.searchHere}\r\n                                    value={searchVal}\r\n                                    onChange={this.handleSearch}\r\n                                />\r\n                            <i className=\"icon-search\"></i>\r\n                            <div className=\"sports__close-search\">\r\n                                <i className=\"material-icons casino-close\" onClick={this.hideSearchBar}>\r\n                                    close\r\n                                </i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"tab\">\r\n                        <div onClick={this.showSearchBar}>\r\n                            <span>\r\n                                <img src=\"/images/search-icon.png\" alt=\"search-icon\" style={{ marginRight: '30px', width: '25px', cursor: 'pointer'}} />\r\n                            </span>\r\n                        </div>\r\n                        <div className='carousel-parent casino-page'>\r\n                            <div className=\"nav\" id=\"nav-tab\"  role=\"tablist\">\r\n                                { categories.length > 0 && (\r\n                                <div\r\n                                    id='owl-demo'\r\n                                    options={ options }\r\n                                >\r\n                                    {categories}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategory: PropTypes.string,\r\n    getCasinoGames: PropTypes.func,\r\n    clearCasinoGames: PropTypes.func,\r\n    setCasinoActiveCategory: PropTypes.func,\r\n    setSearchStarted: PropTypes.func,\r\n    searchCasino: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    casinoCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeCategory: state.casino.activeCategory,\r\n        casinoCategories: state.casino.casinoCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getGGCasinoGames: () => dispatch(getGGCasinoGames()),\r\n        clearCasinoGames: () => dispatch(clearCasinoGames()),\r\n        setCasinoActiveCategory: (category) => dispatch(setCasinoActiveCategory(category)),\r\n        setSearchStarted: (value) => dispatch(setSearchStarted(value)),\r\n        searchCasino: (value) => dispatch(searchCasino(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport map from 'lodash.map';\r\nimport includes from 'lodash.includes';\r\nimport { CASINO_TOP_GAMES, CASINO_PER_PAGE } from '../../config';\r\nimport Loading from '../../Components/Common/NewLoading';\r\nimport { LazyImage } from '../../Components/Common/ImgLoading';\r\nimport Login from '../../Components/Login';\r\nimport { getSlotGameData } from '../../store/actions/casino.actions';\r\nimport { Translate } from '../../localization';\r\nimport { setLoading } from '../../store/actions/general.actions';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport LoadingIcon from '../../Components/Common/LoadingIcon';\r\n\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogin: false,\r\n            casinoGamesList: [],\r\n            page: 1,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('casino_url') !== '') {\r\n            sessionStorage.setItem('casino_url', '');\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { casinoGames, filteredCasinoGames, loadingCasinoGames, activeCategory, noSearchResults } = this.props;\r\n        let allCasinoGames = noSearchResults ? [] : filteredCasinoGames.length > 0 ? filteredCasinoGames : casinoGames;\r\n        if( prevProps.casinoGames !== casinoGames\r\n            || prevProps.filteredCasinoGames !== filteredCasinoGames\r\n            || prevProps.noSearchResults !== noSearchResults\r\n            || prevProps.loadingCasinoGames !== loadingCasinoGames\r\n            || prevProps.activeCategory !== activeCategory\r\n        ){\r\n            this.setState({\r\n                casinoGamesList: allCasinoGames.slice(0, CASINO_PER_PAGE),\r\n                page: 1,\r\n            });\r\n        }\r\n\r\n        // if(!this.props.isShowCasino) {\r\n        //     this.props.history.push('/');\r\n\r\n        // }\r\n        if(this.props.userData && !this.props.userData.is_casino_enabled) {\r\n            this.props.history.push('/');\r\n\r\n        }\r\n\r\n        if(this.props.currentGameData !== prevProps.currentGameData) {\r\n            this.props.history.push(`/d/casino/game/${this.props.currentGameData.game}`);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ casinoGamesList: [] });\r\n    }\r\n\r\n    isLoggedIn = () => {\r\n        return this.props.userData !== null;\r\n    };\r\n\r\n    playGame = (game) => {\r\n        if (this.isLoggedIn()) {\r\n            let history = this.props.history;\r\n            this.props.getSlotGameData(game, history);\r\n        } else {\r\n            this.setState({ showLogin: true });\r\n        }\r\n    };\r\n\r\n    showLoginForm = (e) => {\r\n        this.setState({ showLogin: true });\r\n    };\r\n\r\n    hideLogin = () => {\r\n        this.setState({ showLogin: false });\r\n    };\r\n\r\n    fetchMore = (allCasinoGames) => {\r\n        const { page } = this.state;\r\n        this.setState({...this.state, page: page + 1, casinoGamesList: [ ...this.state.casinoGamesList, ...allCasinoGames.slice( page*CASINO_PER_PAGE, ( page + 1 )*CASINO_PER_PAGE)]});\r\n    }\r\n\r\n    render() {\r\n        let { showLogin, casinoGamesList, page } = this.state;\r\n        let { casinoGames, filteredCasinoGames, loadingCasinoGames, activeCategory, noSearchResults, searchStarted, loading } = this.props;\r\n        let allCasinoGames = noSearchResults ? [] : filteredCasinoGames.length > 0 ? filteredCasinoGames : casinoGames;\r\n\r\n        let hasMore = allCasinoGames.length > page*CASINO_PER_PAGE;\r\n        let gameList =\r\n            casinoGamesList && casinoGamesList.length > 0\r\n                ? map(casinoGamesList, (game) => {\r\n                    if (activeCategory === 'All' && !searchStarted) {\r\n                        if (includes(CASINO_TOP_GAMES, game.id)) {\r\n                            return false;\r\n                        } else if (game.id === 610) {\r\n                            // game \"narcos\" is not working\r\n                            return false;\r\n                        } else {\r\n                            return (\r\n                                <li key={game.id}>\r\n                                    <div className=\"hover-parent\">\r\n                                        <LazyImage image={game.image} fallbackImage=\"/images/loading-dark.gif\" className=\"casino-img\" />\r\n                                        <div className=\"play-btn\" onClick={() => this.playGame(game)}>\r\n                                            <img src=\"/images/playBtn-en.png\" alt=\"playBtn-en\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    } else {\r\n                        if (game.id === 610) {\r\n                            // game \"narcos\" is not working\r\n                            return false;\r\n                        } else {\r\n                            return (\r\n                                <li key={game.id}>\r\n                                    <div className=\"hover-parent\">\r\n                                        <LazyImage image={game.image} fallbackImage=\"/images/loading-dark.gif\" className=\"casino-img\" />\r\n                                        <div className=\"play-btn\" onClick={() => this.playGame(game)}>\r\n                                            <img src=\"/images/playBtn-en.png\" alt=\"playBtn-en\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    }\r\n                })\r\n                : [];\r\n\r\n        return loadingCasinoGames ? (\r\n            <Loading customClass='casino-loader'/>\r\n        ) : allCasinoGames.length > 0 ? (\r\n            <>\r\n                {/* {activeCategory === 'All' && !searchStarted && (\r\n                    <TopGames />\r\n                )} */}\r\n                <div className=\"casino-game-parent pl-40 pr-40 clearfix mb-2\">\r\n                    <div className='match-heading'>\r\n                        <span> <img src=\"../images/all-icon-yellow.svg\" alt=\"img\" className=\"top-game-icon\"/> { activeCategory === 'All' ? Translate.allGames : activeCategory }</span>\r\n                    </div>\r\n                    {loading ? (\r\n                        <div className={'loading-modal'}>\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                            <div className=\"tab-pane fade show active casino-box\">\r\n                                {/* <ul> */}\r\n                                {casinoGamesList.length > 0 ? (\r\n                                    <InfiniteScroll\r\n                                        dataLength={ casinoGamesList.length }\r\n                                        next={ () => this.fetchMore(allCasinoGames) }\r\n                                        hasMore={ hasMore }\r\n                                        loader={<LoadingIcon theme=\"dark centered\" />}\r\n                                        scrollThreshold = {0.95}\r\n                                        scrollableTarget=\"scrollableDiv\"\r\n                                    >\r\n                                        <ul>{ gameList }</ul>\r\n                                    </InfiniteScroll>) : (\r\n                                    <div className=\"no-data fs-15 pt-3 pb-3\">No More Result Found</div>\r\n                                )}\r\n                                {/* </ul> */}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {showLogin && <Login hideLogin={this.hideLogin} />}\r\n            </>\r\n        ) : (\r\n            <div className=\"no-data fs-15 pt-3 pb-3\">Nothing Found</div>\r\n        );\r\n    }\r\n}\r\n\r\nGameList.propTypes = {\r\n    casinoGames: PropTypes.array,\r\n    filteredCasinoGames: PropTypes.array,\r\n    loadingCasinoGames: PropTypes.bool,\r\n    activeCategory: PropTypes.string,\r\n    noSearchResults: PropTypes.bool,\r\n    searchStarted: PropTypes.bool,\r\n    userData: PropTypes.object,\r\n    getSlotGameData: PropTypes.func,\r\n    setLoading: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoGames: state.casino.casinoGames,\r\n        filteredCasinoGames: state.casino.filteredCasinoGames,\r\n        loadingCasinoGames: state.casino.loadingCasinoGames,\r\n        activeCategory: state.casino.activeCategory,\r\n        noSearchResults: state.casino.noSearchResults,\r\n        searchStarted: state.casino.searchStarted,\r\n        userData: state.user.data,\r\n        loading: state.general.loading,\r\n        language: state.general.language,\r\n        isShowCasino:state.general.isShowCasino,\r\n        currentGameData: state.casino.currentGameData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSlotGameData: (title, history, isFirstLoad) => dispatch(getSlotGameData(title, history)),\r\n        setLoading: (value) => dispatch(setLoading(value)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, { Component } from 'react';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\n\r\nclass Casino extends Component {\r\n    componentDidMount() {\r\n        document.body.classList.add('casino-body');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.classList.remove('casino-body');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='scrollableDiv' className='casino-body'>\r\n                <div className=\"casino-bg casino-parent-div casino-width-align\">\r\n                    <div className=\"banner-categories\">\r\n                        {/* <Banner /> */}\r\n                        <Categories />\r\n                    </div>\r\n                    <div className='d-table w-100'>                        \r\n                        <GameList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Casino;\r\n","import React, { Component } from 'react';\r\nclass Lobby extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {}\r\n\r\n    componentWillUnmount() {}\r\n    onLoad = () => {\r\n        try {\r\n            // eslint-disable-next-line no-unused-vars\r\n            let iframeLocation = document.getElementById('casino_lobby_iframe').contentWindow.location.href;\r\n            this.props.history.push('/');\r\n        } catch (e) {}\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                 {/* <div className=\"dropiframe\"></div> */}\r\n                <iframe\r\n                    id=\"casino_lobby_iframe\"\r\n                    onLoad={this.onLoad}\r\n                    className=\"casino__iframe\"\r\n                    src={`${this.props.casinoLobbyURL}`}\r\n                    frameBorder=\"0\"\r\n                    allowFullScreen\r\n                ></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lobby;\r\n","import React, { Component } from 'react';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Lobby from '../Casino/Lobby';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport LoadingIcon from '../../Components/Common/NewLoading';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nclass PragmaticPlay extends Component {\r\n \r\n    componentDidMount() {\r\n        if(Util.isLoggedIn())\r\n        this.props.getLobbyURL('pragmatic-play');\r\n       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n      this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n      \r\n    }\r\n \r\n\r\n    render() {\r\n        return (\r\n            <div className='casino-body live-casino'>\r\n                {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <LoadingIcon />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: (type) => dispatch(getLobbyURL(type)),\r\n        getUser:() => dispatch(getUser()),\r\n        setCasinoLobby:(value)=>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PragmaticPlay);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport map from 'lodash.map';\r\nimport { Translate } from '../../localization';\r\nimport {\r\n    getNewCasinoGames,\r\n    setNewCasinoActiveCategory,\r\n    setNewSearchStarted,\r\n    searchNewCasino,\r\n    clearNewCasinoGames,\r\n} from '../../store/actions/casino.actions';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nlet timer = 0;\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getNewCasinoGames();\r\n        // if (this.props.userData !== null) {\r\n        //     this.props.getUser();\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearNewCasinoGames();\r\n    }\r\n\r\n    showSearchBar = (e) => {\r\n        let { activeCategoryNew } = this.props;\r\n        this.setState({ isSearchOpen: true });\r\n        this.props.setNewSearchStarted(true);\r\n\r\n        if (activeCategoryNew !== 'All') {\r\n            this.props.setNewCasinoActiveCategory('All');\r\n        }\r\n    };\r\n\r\n    hideSearchBar = (e) => {\r\n        this.setState({\r\n            isSearchOpen: false,\r\n            searchVal: '',\r\n        });\r\n\r\n        this.props.setNewSearchStarted(false);\r\n        // Reset the search while closing the search bar\r\n        this.props.searchNewCasino('');\r\n    };\r\n\r\n    changeCategory = (category) => {\r\n        this.props.setNewCasinoActiveCategory(category);\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        const requestDelay = 300;\r\n        this.setState({ searchVal: value });\r\n\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(() => {\r\n            this.props.searchNewCasino(value);\r\n        }, requestDelay);\r\n    };\r\n\r\n    render() {\r\n        let { isSearchOpen, searchVal } = this.state;\r\n        let { activeCategoryNew, newCasinoCategories } = this.props;\r\n        //if (userData && !userData.is_new_casino_enabled) window.location.href = '/';\r\n\r\n        let categories = map(newCasinoCategories, (category) => {\r\n            let activeClass = activeCategoryNew === category.value ? 'casino__category_active' : '';\r\n\r\n            return (\r\n                <div className={`casino__category ${activeClass}`} onClick={(e) => this.changeCategory(category.value)} key={category.value}>\r\n                    <span>\r\n                        <i className={category.icon}></i>\r\n                        {category.name}\r\n                    </span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return null\r\n\r\n        return (\r\n            <div className=\"casino-cat-div\">\r\n                {isSearchOpen ? (\r\n                    <div className=\"casino__header mb-3 disable-select\">\r\n                        <div className=\"sports__content sports__content_sm\">\r\n                            <div className=\"sports__search-bar\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"ml-2 form-control sports__search-input\"\r\n                                    autoFocus\r\n                                    placeholder={Translate.searchHere}\r\n                                    value={searchVal}\r\n                                    onChange={this.handleSearch}\r\n                                />\r\n                                <i className=\"icon-search\"></i>\r\n                                <div className=\"sports__close-search\">\r\n                                    <i className=\"material-icons casino-close\" onClick={this.hideSearchBar}>\r\n                                        close\r\n                                    </i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"casino__header mb-3\">\r\n                        <div className=\"casino__category casino__category-search\" onClick={this.showSearchBar}>\r\n                            <span>\r\n                                <i className=\"icon-search\"></i>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {categories}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    activeCategoryNew: PropTypes.string,\r\n    getNewCasinoGames: PropTypes.func,\r\n    clearNewCasinoGames: PropTypes.func,\r\n    setNewCasinoActiveCategory: PropTypes.func,\r\n    setNewSearchStarted: PropTypes.func,\r\n    searchNewCasino: PropTypes.func,\r\n    getUser: PropTypes.func,\r\n    newCasinoCategories: PropTypes.array,\r\n    userData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeCategoryNew: state.casino.activeCategoryNew,\r\n        newCasinoCategories: state.casino.newCasinoCategories,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getNewCasinoGames: () => dispatch(getNewCasinoGames()),\r\n        clearNewCasinoGames: () => dispatch(clearNewCasinoGames()),\r\n        setNewCasinoActiveCategory: (category) => dispatch(setNewCasinoActiveCategory(category)),\r\n        setNewSearchStarted: (value) => dispatch(setNewSearchStarted(value)),\r\n        searchNewCasino: (value) => dispatch(searchNewCasino(value)),\r\n        getUser: () => dispatch(getUser()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import map                   from 'lodash.map';\r\nimport PropTypes             from 'prop-types';\r\nimport React, {Component}    from 'react';\r\nimport {connect}             from 'react-redux';\r\nimport {withRouter}          from 'react-router-dom';\r\nimport {getNewGameData}      from '../../store/actions/casino.actions';\r\nimport {LazyBackgroundImage} from '../../Components/Common/ImgLoading';\r\nimport LoaderLiveCasino      from '../../Components/Common/LoaderLiveCasino';\r\nimport Loading               from '../../Components/Common/NewLoading';\r\nimport Login                 from '../Login';\r\n\r\nclass GameList extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowLogin: false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tif(sessionStorage.getItem('casino_url') !== ''){\r\n\t\t\tsessionStorage.setItem('casino_url', '');\r\n\t\t\twindow.location.reload(false);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\t/* if(!this.props.isShowCasino) {\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}*/\r\n\t}\r\n\r\n\tisLoggedIn = () => {\r\n\t\treturn this.props.userData !== null;\r\n\t};\r\n\r\n\tplayGame = (game) => {\r\n\t\tif(this.isLoggedIn()){\r\n\t\t\tlet history = this.props.history;\r\n\t\t\tthis.props.getNewGameData(game, history);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({showLogin: true});\r\n\t\t}\r\n\t};\r\n\r\n\tshowLoginForm = (e) => {\r\n\t\tthis.setState({showLogin: true});\r\n\t};\r\n\r\n\thideLogin = () => {\r\n\t\tthis.setState({showLogin: false});\r\n\t};\r\n\r\n\trender(){\r\n\t\tlet {showLogin}                                                      = this.state;\r\n\t\tlet {newCasinoGames, filteredNewCasinoGames, loadingNewCasinoGames, noSearchResults} = this.props;\r\n\t\tif(filteredNewCasinoGames === undefined){\r\n\t\t\tfilteredNewCasinoGames = [];\r\n\t\t}\r\n\t\tlet newCasinoGamesList = noSearchResults ? [] : filteredNewCasinoGames.length > 0 ? filteredNewCasinoGames : newCasinoGames;\r\n\t\tlet imageUrl = \"/images/comming_soon.jpg\"\r\n\r\n\t\tlet gameList = map(newCasinoGamesList, (game, company) => {\r\n\r\n\r\n\t\t\treturn (<div className=\"casino__item\" onClick={() => this.playGame(game)} key={`${company}`}>\r\n    <LazyBackgroundImage image={game.imgURL || imageUrl} fallbackImage=\"./images/loading-dark.gif\" className=\"casino__img\"/>\r\n\t\t\t</div>);\r\n\t\t});\r\n\t\tif(newCasinoGamesList === undefined){\r\n\t\t\tnewCasinoGamesList = [];\r\n\t\t}\r\n\r\n\t\treturn loadingNewCasinoGames ? (<Loading/>) : newCasinoGamesList.length > 0 ? (<>\r\n\t\t\t<div className='match-heading text-white' style={{marginLeft:'40px', marginTop:\"20px\"}}>\r\n\t\t\t\t<span> <img src=\"../images/all-icon-yellow.svg\" alt=\"img\" className=\"top-game-icon\"/> Pragmatic Play</span>\r\n\t\t\t</div>\r\n    <div className=\"casino__list pl-40 pr-40 clearfix mb-2\">\r\n\r\n\t\t{this.props.loading ? <LoaderLiveCasino/> :\r\n\r\n    <>{gameList}</>}</div>\r\n\r\n    {showLogin && <Login hideLogin={this.hideLogin}/>}\r\n\t\t</>) : (<div className=\"no-data fs-15 pt-3 pb-3\"><img className=\"loading-img\" src=\"/images/unnamed.jpg\" alt=\"unnamed\" /></div>);\r\n\t}\r\n}\r\n\r\nGameList.propTypes = {\r\n\tnewCasinoGames        : PropTypes.array,\r\n\tfilteredNewCasinoGames: PropTypes.array,\r\n\tloadingNewCasinoGames : PropTypes.bool,\r\n\tnoSearchResults       : PropTypes.bool,\r\n\tuserData              : PropTypes.object,\r\n\tgetNewGameData        : PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tnewCasinoGames        : state.casino.newCasinoGames,\r\n\t\tfilteredNewCasinoGames: state.casino.filteredNewCasinoGames,\r\n\t\tloadingNewCasinoGames : state.casino.loadingNewCasinoGames,\r\n\t\tnoSearchResults       : state.casino.noSearchResults,\r\n\t\tuserData              : state.user.data,\r\n\t\tloading               : state.general.loading,\r\n\t\tisShowCasino          : state.general.isShowCasino,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetNewGameData: (id, history) => dispatch(getNewGameData(id, history)),\r\n\t};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameList));\r\n","import React, { Component } from 'react';\r\nimport Categories from './Categories';\r\nimport GameList from './GameList';\r\nimport { getLobbyURL ,setCasinoLobby} from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../../store/actions/user.actions';\r\nclass NewCasino extends Component {\r\n\r\n    componentDidMount() {\r\n        if(Util.isLoggedIn())\r\n        this.props.getLobbyURL();\r\n       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if(Util.isLoggedIn())\r\n      this.props.getUser();\r\n       // document.body.classList.remove('body_casino');\r\n       this.props.setCasinoLobby('');\r\n\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"main-container \" id=\"eeee\">\r\n                    {/*{this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <Loading />}*/}\r\n                    {/* <Banner />*/}\r\n                <Categories />\r\n                <GameList />\r\n                </div>\r\n               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: () => dispatch(getLobbyURL()),\r\n        getUser: () =>dispatch(getUser()),\r\n        setCasinoLobby: (value)=>dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCasino);\r\n","import React, { Component } from 'react';\r\nimport { getLobbyURL, setCasinoLobby } from '../../store/actions/casino.actions';\r\nimport Util from '../../helper/Util';\r\nimport { connect } from 'react-redux';\r\nimport LoadingIcon from '../../Components/Common/NewLoading';\r\nimport Lobby from './Lobby';\r\nimport { getUser } from '../../store/actions/user.actions';\r\n\r\nclass Casino extends Component {\r\n    componentDidMount() {\r\n        const { match, getLobbyURL } = this.props;\r\n\r\n        if (Util.isLoggedIn()) {\r\n            getLobbyURL(match.params.lobbyName);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { match, getLobbyURL } = this.props;\r\n\r\n        if (prevProps.match.params.lobbyName !== match.params.lobbyName && Util.isLoggedIn()) {\r\n            getLobbyURL(match.params.lobbyName);\r\n        }\r\n\r\n        if (this.props.userData && (!this.props.userData.is_ezugi_casino_enabled || !this.props.userData.is_live_casino_enabled)) {\r\n            if (match.params.lobbyName === 'evo' || match.params.lobbyName === 'ezugi') return;\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (Util.isLoggedIn())\r\n            this.props.getUser();\r\n        // document.body.classList.remove('body_casino');\r\n        this.props.setCasinoLobby('');\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id='scrollableDiv' className='casino-body'>\r\n                    {this.props.casinoLobbyURL ? <Lobby casinoLobbyURL={this.props.casinoLobbyURL} /> : <LoadingIcon />}\r\n                    <div className=\"casino-bg casino-parent-div casino-width-align\">\r\n                        <div className=\"banner-categories\">\r\n                            {/* <Banner />\r\n                        <Categories /> */}\r\n                        </div>\r\n\r\n                        <div className='d-table w-100'>\r\n                            {/* <GameList /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        casinoLobbyURL: state.casino.casinoLobbyURL,\r\n        userData: state.user.data,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getLobbyURL: (type) => dispatch(getLobbyURL(type)),\r\n        getUser: () => dispatch(getUser()),\r\n        setCasinoLobby: (value) => dispatch(setCasinoLobby(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Casino);\r\n","import React, { useEffect } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../helper/PrivateRoute';\r\nimport PublicRoute from '../helper/PublicRoute';\r\nimport FullLayoutRoute from '../helper/FullLayoutRoute';\r\nimport DefaultRoute from '../helper/DefaultRoute';\r\nimport Affiliates from'../Desktop/Home/Nhome/Affiliates';\r\n\r\nimport Home from '../Desktop/Home';\r\nimport Upcoming from '../Desktop/Today/home';\r\nimport ESports from '../Desktop/Today/esports';\r\nimport KSports from '../Desktop/Today/ksports';\r\n\r\nimport Casino from '../Desktop/Casino';\r\nimport CasinoGame from '../Desktop/Casino/SingleGame';\r\nimport LiveCasino from '../Desktop/LiveCasino';\r\nimport pcasino from '../Desktop/P-Casino';\r\n\r\n\r\nimport MyAccount from '../Components/MyAccount';\r\nimport MyBets from '../Components/MyBets';\r\nimport Betslip from '../Components/Betslip';\r\nimport Transactions from '../Components/Transactions';\r\n\r\nimport Inplay from '../Desktop/Inplay/home';\r\nimport About from '../Components/Home/Bhome/About';\r\nimport Prematch from '../Components/Prematch';\r\nimport Results from '../Desktop/Results';\r\nimport Today from '../Desktop/Today/home';\r\nimport LastMinute from '../Components/LastMinute';\r\nimport Favorites from '../Desktop/Favorites';\r\nimport VirtualSports from '../Desktop/VirtualSports';\r\n\r\nimport ExtraOddsModal from '../Desktop/Inplay/ExtraOddsModal';\r\nimport ExtraOddsModalPrematch from '../Desktop/Shared/ExtraOddsModal';\r\n\r\nimport Auth from '../store/Auth';\r\nimport LsportsAMQ from '../store/LsportsAMQ';\r\nimport UserAMQ from '../store/UserAMQ';\r\nimport '../assets/style/Desktop/index.css';\r\nimport Promotion from '../Desktop/Promotion';\r\nimport PrivacyPolicy from '../Desktop/Promotion/PrivacyPolicy';\r\nimport TermsAndConditions from '../Desktop/Promotion/TermsAndConditions';\r\nimport FirstDepositBonus from '../Desktop/Promotion/FirstDepositBonus/index.js';\r\nimport ChampionsLeagueRules from '../Desktop/Promotion/ChampionsLeagueRules/index.js';\r\nimport TakeItAll from '../Desktop/Promotion/TakeItAll/index.js';\r\nimport CustomerService from '../Desktop/CustomerService/index.js';\r\n\r\nimport Ggslot from '../Desktop/GGSlot';\r\nimport PragmaticPlay from '../Desktop/PragmaticPlay';\r\nimport NewCasino from '../Desktop/NewCasino';\r\nimport LobbyCasino from '../Desktop/Casino/LobbyCasino';\r\n\r\nfunction DesktopRoutes(props) {\r\n\r\n  useEffect(() => {\r\n      if (!props.isMobileOnly && props.history.location.pathname.split('/')[1] !== 'd') props.history.push('/d');\r\n      if (props.isMobileOnly && props.history.location.pathname.split('/')[1] === 'd') props.history.push('/');\r\n  });\r\n\r\n    return (\r\n        <>\r\n            <Auth>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/d\" component={Home} />\r\n                    <PublicRoute exact path=\"/d/sports\" component={Upcoming} />\r\n                    <PublicRoute exact path=\"/d/about\" component={About} />\r\n                    <PublicRoute exact path=\"/d/affiliates\" component={Affiliates} />\r\n\r\n\r\n                    {/* <PublicRoute exact path=\"/d/ksports\" component={KSports} />\r\n                    <PublicRoute exact path=\"/d/esports\" component={ESports} /> */}\r\n                    <PublicRoute exact path=\"/d/live-betting\" component={Inplay} />\r\n\r\n                    <PublicRoute exact path=\"/d/casino\" component={Casino} headerClass=\"header_transparent\" title=\"casino\" />\r\n                    <PublicRoute exact path=\"/d/casino/game/:gameTitle\" component={CasinoGame} />\r\n                    {/* <PrivateRoute exact path=\"/d/live-casino\" component={LiveCasino} headerClass=\"header_transparent\" title=\"liveCasino\" /> */}\r\n                    {/* <PrivateRoute exact path=\"/d/pragmatic-play\" component={PragmaticPlay}\r\n                                  headerClass=\"header_transparent\" title=\"pragmaticPlay\"/> */}\r\n                    <PublicRoute exact path=\"/d/p-casino\" component={pcasino} headerClass=\"header_transparent\" title=\"p-Casino\" />\r\n                    {/* <PrivateRoute exact path=\"/d/virtual-sports\" component={VirtualSports} headerClass=\"header_transparent\" title=\"VirtualSports\" /> */}\r\n\r\n                    <PublicRoute exact path=\"/d/casino/lobby\" component={LobbyCasino} headerClass=\"header_transparent\" title=\"casino\" />\r\n                    <PublicRoute exact path=\"/d/casino/lobby/:lobbyName\" component={LobbyCasino} headerClass=\"header_transparent\" title=\"casino\" />\r\n                    <PrivateRoute exact path=\"/d/my-account\" component={MyAccount} headerClass=\"header_white\" title=\"myAccount\" />\r\n                    <PrivateRoute exact path=\"/d/my-bets\" component={MyBets} headerClass=\"header_white\" title=\"myBets\" />\r\n                    <PublicRoute exact path=\"/d/betslip\" component={Betslip} headerClass=\"header_white\" title=\"betslip\" />\r\n                    <PrivateRoute exact path=\"/d/my-account/transactions\" component={Transactions} headerClass=\"header_white\" title=\"transaction\" />\r\n                    <PublicRoute exact path=\"/d/results\" component={Results} headerClass=\"header_white\" title=\"results\" />\r\n                    <PublicRoute exact path=\"/d/today\" component={Today} headerClass=\"header_white\" title=\"today\" />\r\n                    <PublicRoute exact path=\"/d/last-minute\" component={LastMinute} headerClass=\"header_white\" title=\"lastMinute\" />\r\n                    <PrivateRoute exact path=\"/d/favorites\" component={Favorites} headerClass=\"header_white\" title=\"favorites\" />\r\n                    <PublicRoute exact path=\"/d/promotion\" component={Promotion} headerClass=\"header_white\" title=\"promotion\" />\r\n                    <PublicRoute exact path=\"/d/privacy-policy\" component={PrivacyPolicy} headerClass=\"header_white\" title=\"privacy-policy\" />\r\n                    <PublicRoute exact path=\"/d/terms-and-conditions\" component={TermsAndConditions} headerClass=\"header_white\" title=\"terms-and-conditions\" />\r\n                    <PublicRoute exact path=\"/d/promotion/first-deposit-bonus\" component={FirstDepositBonus} headerClass=\"header_white\" title=\"first-deposit-bonus\" />\r\n                    <PublicRoute exact path=\"/d/promotion/champions-league-rules\" component={ChampionsLeagueRules} headerClass=\"header_white\" title=\"Champions-league-rules\" />\r\n                    <PublicRoute exact path=\"/d/promotion/take-it-all\" component={TakeItAll} headerClass=\"header_white\" title=\"take-it-all\" />\r\n                    <PublicRoute exact path=\"/d/customerServices\" component={CustomerService} headerClass=\"header_white\" title=\"customerService\" />\r\n                    {/* <PublicRoute exact path=\"/d/live-bettingextra-market/:sportId/:fixtureId/:liveStreamAvailable\" component={Home} isMobileOnly={ props.isMobileOnly } isExtraMarket={true} headerClass=\"header_white\" extraMarketChild={ExtraOddsModal} title=\"ExtraOddsModal\" />\r\n                    <PublicRoute exact path=\"/d/extra-market/:sportId/:fixtureId\" component={Home} isMobileOnly={ props.isMobileOnly } isExtraMarket={true} headerClass=\"header_white\" extraMarketChild={ExtraOddsModalPrematch} title=\"ExtraOddsModal\" /> */}\r\n                    <PublicRoute exact path=\"/d/live-bettingextra-market/:sportId/:fixtureId/:liveStreamAvailable\" component={Inplay} isMobileOnly={ props.isMobileOnly } isExtraMarket={true} headerClass=\"header_white\" extraMarketChild={ExtraOddsModal} title=\"ExtraOddsModal\" />\r\n                    <PublicRoute exact path=\"/d/extra-market/:sportId/:fixtureId\" component={Today} isMobileOnly={ props.isMobileOnly } isExtraMarket={true} headerClass=\"header_white\" extraMarketChild={ExtraOddsModalPrematch} title=\"ExtraOddsModal\" />\r\n                    <PublicRoute exact path=\"/d/ggslot\" component={Ggslot} headerClass=\"header_white\" title=\"casino\" />\r\n                    {/* <PrivateRoute exact path=\"/d/new-casino\" component={NewCasino} headerClass=\"header_white\" title=\"casino\" /> */}\r\n                    <DefaultRoute />\r\n                </Switch>\r\n            </Auth>\r\n        </>       \r\n    );\r\n}\r\n\r\nexport default DesktopRoutes;\r\n"],"sourceRoot":""}